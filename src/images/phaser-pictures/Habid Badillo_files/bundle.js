/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/images/logos/bootstrap.svg":
/*!****************************************!*\
  !*** ./src/images/logos/bootstrap.svg ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "ReactComponent": () => (/* binding */ ForwardRef)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _g;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }



function SvgBootstrap(_ref, svgRef) {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    width: "256px",
    height: "256px",
    viewBox: "0 0 256 256",
    xmlns: "http://www.w3.org/2000/svg",
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    preserveAspectRatio: "xMidYMid",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("title", {
    id: titleId
  }, title) : null, _g || (_g = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M0,222.991225 C0,241.223474 14.7785318,256 33.0087747,256 L222.991225,256 C241.223474,256 256,241.221468 256,222.991225 L256,33.0087747 C256,14.7765263 241.221468,0 222.991225,0 L33.0087747,0 C14.7765263,0 0,14.7785318 0,33.0087747 L0,222.991225 Z",
    fill: "#563D7C"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M106.157563,113.238095 L106.157563,76.9845938 L138.069328,76.9845938 C141.108559,76.9845938 144.039202,77.2378593 146.861345,77.7443978 C149.683488,78.2509362 152.179961,79.1554557 154.35084,80.4579832 C156.52172,81.7605107 158.258397,83.5695496 159.560924,85.8851541 C160.863452,88.2007585 161.514706,91.1675823 161.514706,94.7857143 C161.514706,101.298352 159.560944,106.001853 155.653361,108.896359 C151.745779,111.790864 146.752832,113.238095 140.67437,113.238095 L106.157563,113.238095 L106.157563,113.238095 Z M72.07493,50.5 L72.07493,205.5 L147.186975,205.5 C154.133788,205.5 160.899594,204.631661 167.484594,202.894958 C174.069594,201.158255 179.93088,198.480877 185.068627,194.862745 C190.206375,191.244613 194.294803,186.577293 197.334034,180.860644 C200.373264,175.143996 201.892857,168.37819 201.892857,160.563025 C201.892857,150.866431 199.541107,142.581033 194.837535,135.706583 C190.133963,128.832132 183.00635,124.020088 173.454482,121.270308 C180.401295,117.941627 185.647508,113.672295 189.193277,108.462185 C192.739047,103.252075 194.511905,96.7395349 194.511905,88.9243697 C194.511905,81.6881057 193.317939,75.6097352 190.929972,70.6890756 C188.542005,65.7684161 185.177193,61.8247114 180.835434,58.8578431 C176.493676,55.8909749 171.283644,53.756309 165.205182,52.4537815 C159.12672,51.151254 152.397096,50.5 145.016106,50.5 L72.07493,50.5 L72.07493,50.5 Z M106.157563,179.015406 L106.157563,136.466387 L143.279412,136.466387 C150.660401,136.466387 156.594049,138.166883 161.080532,141.567927 C165.567016,144.968971 167.810224,150.649353 167.810224,158.609244 C167.810224,162.661552 167.122789,165.990183 165.747899,168.595238 C164.373009,171.200293 162.527789,173.262597 160.212185,174.782213 C157.89658,176.301828 155.219203,177.387252 152.179972,178.038515 C149.140741,178.689779 145.956833,179.015406 142.628151,179.015406 L106.157563,179.015406 L106.157563,179.015406 Z",
    fill: "#FFFFFF"
  }))));
}

const ForwardRef = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(SvgBootstrap);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "static/media/bootstrap.527d0fc09fb3280153c26f0046a517a9.svg");


/***/ }),

/***/ "./src/images/logos/cloudinary.svg":
/*!*****************************************!*\
  !*** ./src/images/logos/cloudinary.svg ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "ReactComponent": () => (/* binding */ ForwardRef)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _g;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }



function SvgCloudinary(_ref, svgRef) {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    width: "256px",
    height: "256px",
    viewBox: "0 -44 256 256",
    xmlns: "http://www.w3.org/2000/svg",
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    preserveAspectRatio: "xMidYMid",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("title", {
    id: titleId
  }, title) : null, _g || (_g = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M218.621451,161.618939 C215.360833,161.618939 212.325156,159.543784 211.255171,156.275009 C209.923769,152.205759 212.142772,147.826451 216.213984,146.495028 C230.962755,141.66786 240.491296,128.740696 240.491296,113.560042 C240.491296,94.3344571 224.850871,78.6917573 205.625591,78.6917573 C204.290136,78.6917573 202.853357,78.7971363 201.104499,79.0241064 L193.523411,80.0069681 L192.435188,72.4379198 C187.776295,39.9811923 159.502751,15.5048965 126.667585,15.5048965 C99.522794,15.5048965 75.3569387,31.7555519 65.1089949,56.9066786 L63.1797795,61.6386003 L58.0730327,61.7318202 C34.6042889,62.1634687 15.5107301,81.599812 15.5107301,105.056769 C15.5107301,122.180854 25.4526744,137.797209 40.8377623,144.839362 C44.7306435,146.622699 46.4430248,151.222897 44.6597165,155.11584 C42.8764081,159.008783 38.2783095,160.717138 34.3854283,158.939881 C13.4964022,149.378765 0,128.230013 0,105.056769 C0,74.9021669 23.2336713,49.6416082 52.7453988,46.5390077 C66.3431254,18.1069468 94.8416095,1.42108547e-14 126.665558,1.42108547e-14 C164.755405,1.42108547e-14 197.866173,26.7054667 206.452397,63.1949669 C233.848473,63.6387745 256,86.0622067 256,113.562069 C256,135.231636 241.94834,154.38832 221.037023,161.231874 C220.236561,161.493295 219.421913,161.618939 218.621451,161.618939 Z",
    fill: "#0071CE"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M100.01656,164.973281 C100.014536,164.971257 100.014536,164.971257 100.012512,164.971257 C100.010489,164.971257 100.008465,164.969233 100.006441,164.969233 L100.004418,164.969233 L100.002394,164.967209 L100.00037,164.965186 C100.00037,164.965186 99.9983464,164.965186 99.9983464,164.963162 L99.9963227,164.963162 L99.994299,164.961138 C99.9963227,164.959115 99.9922752,164.959115 99.9922752,164.959115 L99.9902515,164.957091 L99.9882278,164.957091 L99.9862041,164.955067 C99.9882278,164.957091 99.9841804,164.953043 99.9841804,164.953043 C99.9841804,164.953043 99.9801329,164.95102 99.9781092,164.95102 L99.9760855,164.948996 L99.9760855,164.948996 L99.9740618,164.946972 L99.9720381,164.944949 C99.9659669,164.942925 99.9679907,164.942925 99.9659669,164.942925 C99.9639432,164.944949 99.9639432,164.940901 99.9619195,164.940901 L99.9598958,164.938877 C99.9598958,164.938877 99.9578721,164.936854 99.9558484,164.936854 L99.9538246,164.93483 C99.9518009,164.932806 99.9477535,164.932806 99.9457298,164.932806 C99.9437061,164.932806 99.9396586,164.930783 99.9376349,164.930783 C99.9356112,164.928759 99.9356112,164.928759 99.9335875,164.928759 L99.9315638,164.928759 C99.9295401,164.926735 99.9275163,164.926735 99.9254926,164.926735 C99.9234689,164.924711 99.9194215,164.924711 99.9194215,164.924711 L99.9173978,164.924711 L99.9133503,164.922688 C99.9113266,164.922688 99.9113266,164.920664 99.9113266,164.920664 L99.9093029,164.920664 C99.7899037,164.878166 99.6624096,164.851858 99.5288444,164.845787 L99.524797,164.845787 L99.5207495,164.845787 L99.5167021,164.845787 C99.5167021,164.845787 99.5167021,164.845787 99.5146784,164.845787 L99.5126547,164.845787 L99.510631,164.845787 L99.5086073,164.843763 L99.5045598,164.843763 L99.5005124,164.843763 L99.4984887,164.843763 L99.496465,164.843763 L99.4944412,164.843763 L99.4903938,164.843763 L99.4883701,164.843763 L99.4903938,164.843763 L99.4883701,164.843763 L99.4863464,164.843763 L99.4843227,164.843763 L99.482299,164.843763 L99.4802752,164.843763 L99.4782515,164.843763 L99.4762278,164.843763 L99.4742041,164.843763 C96.1229314,164.843763 93.380797,162.115794 93.3605598,158.772617 L93.3605598,90.6422134 L98.5554373,90.6422134 L98.5817456,90.6422134 C99.3770658,90.6766166 99.9194215,90.0654545 99.9194215,89.3308458 C99.9194215,88.782419 99.5834847,88.312917 99.1058879,88.1166166 L74.0543148,70.8259921 C73.6050499,70.5163636 73.0121013,70.5163636 72.5628365,70.8259921 L47.314963,88.2522055 C46.8414136,88.5780237 46.6370183,89.1750198 46.8070104,89.7234466 C46.9790262,90.2718735 47.4849551,90.6442372 48.0596903,90.6442372 L53.280876,90.6442372 L53.2849235,158.79083 C53.3112318,163.50204 57.0955796,167.347099 61.9099986,167.468522 C61.9646389,167.474593 62.0172555,167.47864 62.0718958,167.47864 L99.4721804,167.47864 L99.4944412,167.47864 C99.8384729,167.472569 100.150125,167.334957 100.380829,167.114372 C100.380829,167.114372 100.380829,167.114372 100.382852,167.112348 C100.3869,167.1083 100.390947,167.104253 100.392971,167.102229 C100.394995,167.100206 100.397018,167.100206 100.399042,167.096158 L100.401066,167.094134 L100.403089,167.092111 L100.405113,167.090087 L100.407137,167.088063 L100.409161,167.08604 L100.411184,167.084016 C100.415232,167.081992 100.413208,167.081992 100.415232,167.079968 C100.415232,167.079968 100.415232,167.079968 100.417255,167.077945 L100.419279,167.075921 C100.419279,167.075921 100.419279,167.075921 100.421303,167.073897 C100.647959,166.839146 100.789619,166.521423 100.791643,166.169296 L100.791643,166.165249 L100.791643,166.163225 L100.791643,166.161202 L100.791643,166.159178 L100.791643,166.157154 L100.791643,166.15513 L100.791643,166.153107 L100.791643,166.149059 C100.781524,165.630988 100.467848,165.177676 100.01656,164.973281 Z",
    fill: "#DC8327"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M154.124635,164.973281 C154.124635,164.973281 154.122611,164.971257 154.120588,164.971257 C154.118564,164.971257 154.11654,164.969233 154.114516,164.969233 L154.112493,164.969233 L154.110469,164.967209 L154.108445,164.965186 L154.106422,164.965186 L154.104398,164.963162 L154.102374,164.961138 C154.104398,164.959115 154.10035,164.959115 154.098327,164.959115 L154.096303,164.957091 L154.094279,164.957091 C154.092256,164.957091 154.092256,164.955067 154.092256,164.955067 C154.088208,164.957091 154.088208,164.953043 154.088208,164.953043 L154.084161,164.95102 L154.082137,164.948996 L154.080113,164.948996 L154.07809,164.946972 L154.076066,164.944949 C154.074042,164.942925 154.072018,164.942925 154.072018,164.942925 C154.069995,164.944949 154.069995,164.940901 154.065947,164.940901 L154.063924,164.938877 L154.0619,164.936854 C154.0619,164.936854 154.059876,164.936854 154.057852,164.93483 C154.055829,164.932806 154.051781,164.932806 154.049758,164.932806 C154.047734,164.932806 154.043686,164.930783 154.041663,164.930783 C154.039639,164.928759 154.039639,164.928759 154.037615,164.928759 C154.035592,164.928759 154.035592,164.928759 154.033568,164.926735 C154.033568,164.926735 154.031544,164.926735 154.02952,164.924711 C154.023449,164.922688 154.027497,164.922688 154.025473,164.922688 C154.019402,164.922688 154.023449,164.922688 154.021426,164.920664 C154.021426,164.920664 154.019402,164.91864 154.017378,164.91864 L154.015354,164.916617 L154.013331,164.916617 C153.893931,164.874119 153.766437,164.84781 153.632872,164.841739 L153.628825,164.841739 L153.626801,164.841739 L153.622754,164.841739 L153.62073,164.841739 L153.618706,164.841739 L153.616682,164.841739 L153.614659,164.839715 L153.610611,164.839715 L153.606564,164.839715 L153.60454,164.839715 L153.602516,164.839715 L153.600493,164.839715 L153.596445,164.839715 L153.592398,164.839715 L153.590374,164.839715 L153.58835,164.839715 L153.586327,164.839715 L153.584303,164.839715 L153.582279,164.839715 L153.580256,164.839715 L153.578232,164.839715 L153.576208,164.839715 L153.574184,164.839715 C150.224935,164.839715 147.482801,162.111747 147.462564,158.768569 L147.462564,105.899004 L152.681726,105.899004 C152.699939,105.89698 152.714105,105.89698 152.734343,105.899004 C153.458833,105.899004 154.04571,105.312126 154.04571,104.587636 C154.04571,104.039209 153.709773,103.569708 153.232177,103.373407 L128.17858,86.0827826 C127.729315,85.7731542 127.136366,85.7731542 126.687101,86.0827826 L101.449346,103.506972 C100.975797,103.832791 100.771402,104.429787 100.941394,104.978213 C101.11341,105.52664 101.619339,105.899004 102.194074,105.899004 L107.390975,105.899004 L107.395022,158.788806 C107.417283,163.50204 111.207702,167.349123 116.024145,167.468522 C116.076761,167.474593 116.129378,167.476617 116.181995,167.476617 L153.582279,167.476617 L153.60454,167.476617 C153.948572,167.470545 154.260224,167.332933 154.490928,167.112348 C154.490928,167.112348 154.490928,167.112348 154.492951,167.110324 C154.496999,167.106277 154.505094,167.102229 154.50307,167.100206 C154.505094,167.098182 154.507117,167.098182 154.509141,167.094134 L154.511165,167.092111 L154.513188,167.090087 L154.515212,167.088063 C154.515212,167.088063 154.517236,167.088063 154.517236,167.08604 L154.51926,167.084016 C154.521283,167.084016 154.521283,167.081992 154.521283,167.081992 C154.527354,167.079968 154.525331,167.079968 154.525331,167.077945 C154.525331,167.077945 154.525331,167.077945 154.527354,167.075921 C154.527354,167.075921 154.527354,167.075921 154.529378,167.073897 C154.529378,167.073897 154.529378,167.073897 154.531402,167.071874 C154.758058,166.837123 154.899718,166.519399 154.901742,166.167273 L154.901742,166.163225 L154.901742,166.161202 L154.901742,166.159178 L154.901742,166.157154 L154.901742,166.15513 L154.901742,166.153107 L154.901742,166.151083 L154.901742,166.147036 C154.889599,165.630988 154.575924,165.177676 154.124635,164.973281 Z",
    fill: "#F4B21B"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M208.37438,164.973281 L208.370333,164.971257 C208.368309,164.971257 208.366285,164.969233 208.364262,164.969233 L208.362238,164.969233 L208.360214,164.967209 L208.358191,164.965186 C208.356167,164.965186 208.356167,164.965186 208.356167,164.963162 L208.354143,164.963162 L208.352119,164.961138 L208.350096,164.959115 C208.350096,164.959115 208.348072,164.959115 208.348072,164.957091 L208.346048,164.957091 L208.344025,164.955067 C208.342001,164.957091 208.342001,164.953043 208.339977,164.953043 C208.342001,164.95102 208.337953,164.95102 208.33593,164.95102 L208.333906,164.948996 L208.331882,164.948996 L208.329859,164.946972 L208.327835,164.944949 C208.321764,164.942925 208.323787,164.942925 208.323787,164.942925 C208.321764,164.944949 208.321764,164.940901 208.317716,164.940901 L208.315693,164.938877 C208.317716,164.936854 208.313669,164.936854 208.311645,164.936854 C208.311645,164.936854 208.309621,164.936854 208.309621,164.93483 C208.307598,164.932806 208.30355,164.932806 208.301527,164.932806 C208.299503,164.932806 208.295455,164.930783 208.293432,164.930783 L208.289384,164.928759 C208.289384,164.928759 208.287361,164.928759 208.285337,164.926735 L208.281289,164.924711 C208.275218,164.922688 208.275218,164.922688 208.277242,164.922688 C208.271171,164.922688 208.271171,164.922688 208.273195,164.920664 C208.271171,164.920664 208.271171,164.91864 208.271171,164.91864 C208.269147,164.91864 208.267123,164.916617 208.267123,164.916617 L208.2651,164.916617 C208.1457,164.874119 208.018206,164.84781 207.884641,164.841739 L207.882617,164.841739 L207.87857,164.841739 L207.872499,164.841739 L207.870475,164.841739 L207.868451,164.841739 L207.866428,164.841739 C207.864404,164.839715 207.864404,164.839715 207.86238,164.839715 L207.858333,164.839715 L207.854285,164.839715 L207.852262,164.839715 L207.850238,164.839715 L207.848214,164.839715 L207.844167,164.839715 L207.840119,164.839715 C207.840119,164.839715 207.840119,164.839715 207.838096,164.839715 L207.836072,164.839715 L207.834048,164.839715 L207.832025,164.839715 L207.830001,164.839715 L207.827977,164.839715 L207.825953,164.839715 L207.834048,164.839715 L207.832025,164.839715 C204.482776,164.839715 201.740641,162.111747 201.720404,158.768569 L201.720404,121.149723 L206.927424,121.149723 L206.953732,121.149723 C207.692388,121.13151 208.291408,120.572964 208.291408,119.838356 C208.291408,119.289929 207.955471,118.820427 207.477874,118.624126 L182.424278,101.333502 C181.977036,101.023874 181.382064,101.023874 180.932799,101.333502 L155.684926,118.757692 C155.211376,119.08351 155.006981,119.680506 155.176973,120.228933 C155.348989,120.77736 155.854918,121.149723 156.429653,121.149723 L161.636673,121.149723 L161.64072,158.788806 C161.667029,163.50204 165.455424,167.351146 170.269843,167.468522 C170.322459,167.474593 170.375076,167.476617 170.427693,167.476617 L207.827977,167.476617 L207.850238,167.476617 C208.19427,167.470545 208.505922,167.332933 208.736625,167.112348 L208.738649,167.110324 C208.742697,167.106277 208.748768,167.102229 208.748768,167.100206 C208.750791,167.098182 208.752815,167.098182 208.754839,167.094134 L208.756863,167.092111 L208.758886,167.090087 L208.76091,167.088063 L208.762934,167.08604 L208.764957,167.084016 L208.766981,167.081992 C208.773052,167.079968 208.769005,167.079968 208.771029,167.077945 C208.771029,167.077945 208.771029,167.077945 208.773052,167.075921 L208.775076,167.073897 C208.775076,167.073897 208.775076,167.073897 208.7771,167.071874 C209.003756,166.837123 209.145416,166.519399 209.14744,166.167273 L209.14744,166.163225 L209.14744,166.161202 L209.14744,166.159178 L209.14744,166.157154 L209.14744,166.15513 L209.14744,166.153107 L209.14744,166.151083 L209.14744,166.147036 C209.139345,165.630988 208.823645,165.177676 208.37438,164.973281 Z",
    fill: "#F2D864"
  }))));
}

const ForwardRef = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(SvgCloudinary);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "static/media/cloudinary.accffd3d47531465e7be36d98b7c9708.svg");


/***/ }),

/***/ "./src/images/logos/css3.svg":
/*!***********************************!*\
  !*** ./src/images/logos/css3.svg ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "ReactComponent": () => (/* binding */ ForwardRef)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _path, _path2, _path3, _path4;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }



function SvgCss3(_ref, svgRef) {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    xmlns: "http://www.w3.org/2000/svg",
    "aria-label": "CSS3",
    role: "img",
    viewBox: "0 0 512 512",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("title", {
    id: titleId
  }, title) : null, _path || (_path = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fill: "#264de4",
    d: "M72 460L30 0h451l-41 460-184 52"
  })), _path2 || (_path2 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fill: "#2965f1",
    d: "M256 37V472l149-41 35-394"
  })), _path3 || (_path3 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fill: "#ebebeb",
    d: "m114 94h142v56H119m5 58h132v57H129m3 28h56l4 45 64 17v59L139 382"
  })), _path4 || (_path4 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fill: "#fff",
    d: "m256 208v57h69l-7 73-62 17v59l115-32 26-288H256v56h80l-5.5 58Z"
  })));
}

const ForwardRef = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(SvgCss3);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "static/media/css3.9882e252f3baf8b8d57642a1384d8ba3.svg");


/***/ }),

/***/ "./src/images/logos/error-server.svg":
/*!*******************************************!*\
  !*** ./src/images/logos/error-server.svg ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "ReactComponent": () => (/* binding */ ForwardRef)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _g, _g2, _g3, _g4, _g5, _g6, _g7, _g8, _g9, _g10, _g11, _g12, _g13, _g14, _g15;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }



function SvgErrorServer(_ref, svgRef) {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    xmlns: "http://www.w3.org/2000/svg",
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    x: "0px",
    y: "0px",
    viewBox: "0 0 600 600",
    enableBackground: "new 0 0 600 600",
    xmlSpace: "preserve",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("title", {
    id: titleId
  }, title) : null, _g || (_g = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "FLOOR"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_131_",
    fill: "#99ADF9",
    d: "M405.2,534.3H172.9c-1.7,0-3.1-1.4-3.1-3.1v-0.6c0-1.7,1.4-3.1,3.1-3.1h232.2 c1.7,0,3.1,1.4,3.1,3.1v0.6C408.3,532.9,406.9,534.3,405.2,534.3z"
  }))), _g2 || (_g2 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "RAIN_1"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_743_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_787_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_792_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_793_",
    fill: "#C5DFFF",
    d: "M161.3,180.8c-0.5,0-0.9-0.4-0.9-0.9v-4.7c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9 v4.7C162.1,180.4,161.7,180.8,161.3,180.8z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_788_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_789_",
    fill: "#C5DFFF",
    d: "M161.3,222.8c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9 c0.5,0,0.9,0.4,0.9,0.9v10.5C162.1,222.4,161.7,222.8,161.3,222.8z M161.3,201.8c-0.5,0-0.9-0.4-0.9-0.9v-10.5 c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9v10.5C162.1,201.4,161.7,201.8,161.3,201.8z"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_780_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_785_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_786_",
    fill: "#C5DFFF",
    d: "M173,180.8c-0.5,0-0.9-0.4-0.9-0.9v-4.7c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9 v4.7C173.9,180.4,173.5,180.8,173,180.8z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_781_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_782_",
    fill: "#C5DFFF",
    d: "M173,222.8c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9 v10.5C173.9,222.4,173.5,222.8,173,222.8z M173,201.8c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9 c0.5,0,0.9,0.4,0.9,0.9v10.5C173.9,201.4,173.5,201.8,173,201.8z"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_772_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_778_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_779_",
    fill: "#C5DFFF",
    d: "M184.7,180.8c-0.5,0-0.9-0.4-0.9-0.9v-4.7c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9 v4.7C185.6,180.4,185.2,180.8,184.7,180.8z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_773_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_774_",
    fill: "#C5DFFF",
    d: "M184.7,243.7c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9 c0.5,0,0.9,0.4,0.9,0.9v10.5C185.6,243.4,185.2,243.7,184.7,243.7z M184.7,222.8c-0.5,0-0.9-0.4-0.9-0.9v-10.5 c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9v10.5C185.6,222.4,185.2,222.8,184.7,222.8z M184.7,201.8c-0.5,0-0.9-0.4-0.9-0.9 v-10.5c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9v10.5C185.6,201.4,185.2,201.8,184.7,201.8z"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_764_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_770_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_771_",
    fill: "#C5DFFF",
    d: "M196.5,180.8c-0.5,0-0.9-0.4-0.9-0.9v-4.7c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9 v4.7C197.3,180.4,196.9,180.8,196.5,180.8z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_765_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_766_",
    fill: "#C5DFFF",
    d: "M196.5,243.7c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9 c0.5,0,0.9,0.4,0.9,0.9v10.5C197.3,243.4,196.9,243.7,196.5,243.7z M196.5,222.8c-0.5,0-0.9-0.4-0.9-0.9v-10.5 c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9v10.5C197.3,222.4,196.9,222.8,196.5,222.8z M196.5,201.8c-0.5,0-0.9-0.4-0.9-0.9 v-10.5c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9v10.5C197.3,201.4,196.9,201.8,196.5,201.8z"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_754_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_762_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_763_",
    fill: "#C5DFFF",
    d: "M208.2,180.8c-0.5,0-0.9-0.4-0.9-0.9v-4.7c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9 v4.7C209.1,180.4,208.7,180.8,208.2,180.8z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_757_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_758_",
    fill: "#C5DFFF",
    d: "M208.2,243.7c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9 c0.5,0,0.9,0.4,0.9,0.9v10.5C209.1,243.4,208.7,243.7,208.2,243.7z M208.2,222.8c-0.5,0-0.9-0.4-0.9-0.9v-10.5 c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9v10.5C209.1,222.4,208.7,222.8,208.2,222.8z M208.2,201.8c-0.5,0-0.9-0.4-0.9-0.9 v-10.5c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9v10.5C209.1,201.4,208.7,201.8,208.2,201.8z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_755_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_756_",
    fill: "#C5DFFF",
    d: "M208.2,259c-0.5,0-0.9-0.4-0.9-0.9v-4.7c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9 v4.7C209.1,258.6,208.7,259,208.2,259z"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_744_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_752_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_753_",
    fill: "#C5DFFF",
    d: "M219.9,180.8c-0.5,0-0.9-0.4-0.9-0.9v-4.7c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9 v4.7C220.8,180.4,220.4,180.8,219.9,180.8z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_747_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_748_",
    fill: "#C5DFFF",
    d: "M219.9,243.7c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9 c0.5,0,0.9,0.4,0.9,0.9v10.5C220.8,243.4,220.4,243.7,219.9,243.7z M219.9,222.8c-0.5,0-0.9-0.4-0.9-0.9v-10.5 c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9v10.5C220.8,222.4,220.4,222.8,219.9,222.8z M219.9,201.8c-0.5,0-0.9-0.4-0.9-0.9 v-10.5c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9v10.5C220.8,201.4,220.4,201.8,219.9,201.8z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_745_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_746_",
    fill: "#C5DFFF",
    d: "M219.9,259c-0.5,0-0.9-0.4-0.9-0.9v-4.7c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9 v4.7C220.8,258.6,220.4,259,219.9,259z"
  })))))), _g3 || (_g3 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "RAIN_2"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_152_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_132_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_216_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_229_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_596_",
    fill: "#C5DFFF",
    d: "M249.2,153.2c-0.5,0-0.9-0.4-0.9-0.9v-4.7c0-0.5,0.4-0.9,0.9-0.9 c0.5,0,0.9,0.4,0.9,0.9v4.7C250.1,152.8,249.7,153.2,249.2,153.2z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_227_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_592_",
    fill: "#C5DFFF",
    d: "M249.2,195.1c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9 c0.5,0,0.9,0.4,0.9,0.9v10.5C250.1,194.8,249.7,195.1,249.2,195.1z M249.2,174.2c-0.5,0-0.9-0.4-0.9-0.9v-10.5 c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9v10.5C250.1,173.8,249.7,174.2,249.2,174.2z"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_210_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_225_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_590_",
    fill: "#C5DFFF",
    d: "M260.9,153.2c-0.5,0-0.9-0.4-0.9-0.9v-4.7c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v4.7 C261.8,152.8,261.4,153.2,260.9,153.2z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_224_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_586_",
    fill: "#C5DFFF",
    d: "M260.9,195.1c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9 v10.5C261.8,194.8,261.4,195.1,260.9,195.1z M260.9,174.2c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9 v10.5C261.8,173.8,261.4,174.2,260.9,174.2z"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_204_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_221_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_584_",
    fill: "#C5DFFF",
    d: "M272.7,153.2c-0.5,0-0.9-0.4-0.9-0.9v-4.7c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v4.7 C273.5,152.8,273.1,153.2,272.7,153.2z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_220_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_580_",
    fill: "#C5DFFF",
    d: "M272.7,216.1c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9 v10.5C273.5,215.8,273.1,216.1,272.7,216.1z M272.7,195.1c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9 v10.5C273.5,194.8,273.1,195.1,272.7,195.1z M272.7,174.2c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9 v10.5C273.5,173.8,273.1,174.2,272.7,174.2z"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_145_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_218_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_578_",
    fill: "#C5DFFF",
    d: "M307.8,153.2c-0.5,0-0.9-0.4-0.9-0.9v-4.7c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v4.7 C308.7,152.8,308.3,153.2,307.8,153.2z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_217_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_574_",
    fill: "#C5DFFF",
    d: "M307.8,216.1c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9 v10.5C308.7,215.8,308.3,216.1,307.8,216.1z M307.8,195.1c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9 v10.5C308.7,194.8,308.3,195.1,307.8,195.1z M307.8,174.2c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9 v10.5C308.7,173.8,308.3,174.2,307.8,174.2z"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_252_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_214_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_572_",
    fill: "#C5DFFF",
    d: "M319.3,153.2c-0.5,0-0.9-0.4-0.9-0.9v-4.7c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v4.7 C320.1,152.8,319.7,153.2,319.3,153.2z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_213_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_568_",
    fill: "#C5DFFF",
    d: "M319.3,216.1c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9 v10.5C320.1,215.8,319.7,216.1,319.3,216.1z M319.3,195.1c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9 v10.5C320.1,194.8,319.7,195.1,319.3,195.1z M319.3,174.2c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9 v10.5C320.1,173.8,319.7,174.2,319.3,174.2z"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_246_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_211_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_566_",
    fill: "#C5DFFF",
    d: "M331,153.2c-0.5,0-0.9-0.4-0.9-0.9v-4.7c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v4.7 C331.9,152.8,331.5,153.2,331,153.2z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_209_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_562_",
    fill: "#C5DFFF",
    d: "M331,216.1c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v10.5 C331.9,215.8,331.5,216.1,331,216.1z M331,195.1c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v10.5 C331.9,194.8,331.5,195.1,331,195.1z M331,174.2c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v10.5 C331.9,173.8,331.5,174.2,331,174.2z"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_240_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_207_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_560_",
    fill: "#C5DFFF",
    d: "M342.7,153.2c-0.5,0-0.9-0.4-0.9-0.9v-4.7c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v4.7 C343.6,152.8,343.2,153.2,342.7,153.2z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_206_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_556_",
    fill: "#C5DFFF",
    d: "M342.7,216.1c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9 v10.5C343.6,215.8,343.2,216.1,342.7,216.1z M342.7,195.1c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9 v10.5C343.6,194.8,343.2,195.1,342.7,195.1z M342.7,174.2c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9 v10.5C343.6,173.8,343.2,174.2,342.7,174.2z"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_282_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_199_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_544_",
    fill: "#C5DFFF",
    d: "M296.1,234.9c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9 c0.5,0,0.9,0.4,0.9,0.9v10.5C297,234.5,296.6,234.9,296.1,234.9z"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_276_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_195_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_538_",
    fill: "#C5DFFF",
    d: "M307.8,234.9c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9 v10.5C308.7,234.5,308.3,234.9,307.8,234.9z"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_270_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_192_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_531_",
    fill: "#C5DFFF",
    d: "M319.3,234.9c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9 v10.5C320.1,234.5,319.7,234.9,319.3,234.9z"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_242_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_189_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_485_",
    fill: "#C5DFFF",
    d: "M331,255.9c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9V255 C331.9,255.5,331.5,255.9,331,255.9z M331,234.9c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v10.5 C331.9,234.5,331.5,234.9,331,234.9z"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_146_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_186_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_266_",
    fill: "#C5DFFF",
    d: "M342.7,276.9c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9V276 C343.6,276.5,343.2,276.9,342.7,276.9z M342.7,255.9c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9V255 C343.6,255.5,343.2,255.9,342.7,255.9z M342.7,234.9c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v10.5 C343.6,234.5,343.2,234.9,342.7,234.9z"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_237_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_259_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_370_",
    fill: "#C5DFFF",
    d: "M354.5,276.9c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9V276 C355.3,276.5,354.9,276.9,354.5,276.9z M354.5,255.9c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9V255 C355.3,255.5,354.9,255.9,354.5,255.9z M354.5,234.9c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v10.5 C355.3,234.5,354.9,234.9,354.5,234.9z"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_205_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_215_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_219_",
    fill: "#C5DFFF",
    d: "M366.2,276.9c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9 c0.5,0,0.9,0.4,0.9,0.9V276C367,276.5,366.7,276.9,366.2,276.9z M366.2,255.9c-0.5,0-0.9-0.4-0.9-0.9v-10.5 c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9V255C367,255.5,366.7,255.9,366.2,255.9z M366.2,234.9c-0.5,0-0.9-0.4-0.9-0.9 v-10.5c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9v10.5C367,234.5,366.7,234.9,366.2,234.9z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_208_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_212_",
    fill: "#C5DFFF",
    d: "M366.2,292.1c-0.5,0-0.9-0.4-0.9-0.9v-4.7c0-0.5,0.4-0.9,0.9-0.9 c0.5,0,0.9,0.4,0.9,0.9v4.7C367,291.7,366.7,292.1,366.2,292.1z"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_178_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_190_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_193_",
    fill: "#C5DFFF",
    d: "M377.9,276.9c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9V276 C378.8,276.5,378.4,276.9,377.9,276.9z M377.9,255.9c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9V255 C378.8,255.5,378.4,255.9,377.9,255.9z M377.9,234.9c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v10.5 C378.8,234.5,378.4,234.9,377.9,234.9z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_182_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_187_",
    fill: "#C5DFFF",
    d: "M377.9,292.1c-0.5,0-0.9-0.4-0.9-0.9v-4.7c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v4.7 C378.8,291.7,378.4,292.1,377.9,292.1z"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_234_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_184_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_264_",
    fill: "#C5DFFF",
    d: "M354.5,153.2c-0.5,0-0.9-0.4-0.9-0.9v-4.7c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v4.7 C355.3,152.8,354.9,153.2,354.5,153.2z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_183_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_260_",
    fill: "#C5DFFF",
    d: "M354.5,216.1c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9 v10.5C355.3,215.8,354.9,216.1,354.5,216.1z M354.5,195.1c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9 v10.5C355.3,194.8,354.9,195.1,354.5,195.1z M354.5,174.2c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9 v10.5C355.3,173.8,354.9,174.2,354.5,174.2z"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_228_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_181_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_258_",
    fill: "#C5DFFF",
    d: "M366.2,153.2c-0.5,0-0.9-0.4-0.9-0.9v-4.7c0-0.5,0.4-0.9,0.9-0.9 c0.5,0,0.9,0.4,0.9,0.9v4.7C367,152.8,366.7,153.2,366.2,153.2z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_179_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_254_",
    fill: "#C5DFFF",
    d: "M366.2,216.1c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9 c0.5,0,0.9,0.4,0.9,0.9v10.5C367,215.8,366.7,216.1,366.2,216.1z M366.2,195.1c-0.5,0-0.9-0.4-0.9-0.9v-10.5 c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9v10.5C367,194.8,366.7,195.1,366.2,195.1z M366.2,174.2c-0.5,0-0.9-0.4-0.9-0.9 v-10.5c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9v10.5C367,173.8,366.7,174.2,366.2,174.2z"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_222_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_480_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_251_",
    fill: "#C5DFFF",
    d: "M377.9,153.2c-0.5,0-0.9-0.4-0.9-0.9v-4.7c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v4.7 C378.8,152.8,378.4,153.2,377.9,153.2z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_479_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_247_",
    fill: "#C5DFFF",
    d: "M377.9,216.1c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9 v10.5C378.8,215.8,378.4,216.1,377.9,216.1z M377.9,195.1c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9 v10.5C378.8,194.8,378.4,195.1,377.9,195.1z M377.9,174.2c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9 v10.5C378.8,173.8,378.4,174.2,377.9,174.2z"
  })))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_198_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_483_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_244_",
    fill: "#C5DFFF",
    d: "M284.4,153.2c-0.5,0-0.9-0.4-0.9-0.9v-4.7c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v4.7 C285.2,152.8,284.9,153.2,284.4,153.2z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_380_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_238_",
    fill: "#C5DFFF",
    d: "M284.4,216.1c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v10.5 C285.2,215.8,284.9,216.1,284.4,216.1z M284.4,195.1c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v10.5 C285.2,194.8,284.9,195.1,284.4,195.1z M284.4,174.2c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v10.5 C285.2,173.8,284.9,174.2,284.4,174.2z"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_159_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_377_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_236_",
    fill: "#C5DFFF",
    d: "M296.1,153.2c-0.5,0-0.9-0.4-0.9-0.9v-4.7c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9 v4.7C297,152.8,296.6,153.2,296.1,153.2z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_376_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_231_",
    fill: "#C5DFFF",
    d: "M296.1,216.1c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9 c0.5,0,0.9,0.4,0.9,0.9v10.5C297,215.8,296.6,216.1,296.1,216.1z M296.1,195.1c-0.5,0-0.9-0.4-0.9-0.9v-10.5 c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9v10.5C297,194.8,296.6,195.1,296.1,195.1z M296.1,174.2c-0.5,0-0.9-0.4-0.9-0.9 v-10.5c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9v10.5C297,173.8,296.6,174.2,296.1,174.2z"
  })))))), _g4 || (_g4 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "RAIN_3"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_425_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_465_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_473_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_474_",
    fill: "#C5DFFF",
    d: "M403.6,234.6c-0.5,0-0.9-0.4-0.9-0.9V229c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v4.7 C404.4,234.2,404,234.6,403.6,234.6z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_468_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_469_",
    fill: "#C5DFFF",
    d: "M403.6,297.5c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v10.5 C404.4,297.1,404,297.5,403.6,297.5z M403.6,276.5c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v10.5 C404.4,276.1,404,276.5,403.6,276.5z M403.6,255.5c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v10.5 C404.4,255.2,404,255.5,403.6,255.5z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_466_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_467_",
    fill: "#C5DFFF",
    d: "M403.6,312.7c-0.5,0-0.9-0.4-0.9-0.9v-4.7c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v4.7 C404.4,312.4,404,312.7,403.6,312.7z"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_455_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_463_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_464_",
    fill: "#C5DFFF",
    d: "M415.3,234.6c-0.5,0-0.9-0.4-0.9-0.9V229c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9 v4.7C416.1,234.2,415.8,234.6,415.3,234.6z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_458_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_459_",
    fill: "#C5DFFF",
    d: "M415.3,297.5c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9 c0.5,0,0.9,0.4,0.9,0.9v10.5C416.1,297.1,415.8,297.5,415.3,297.5z M415.3,276.5c-0.5,0-0.9-0.4-0.9-0.9v-10.5 c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9v10.5C416.1,276.1,415.8,276.5,415.3,276.5z M415.3,255.5c-0.5,0-0.9-0.4-0.9-0.9 v-10.5c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9v10.5C416.1,255.2,415.8,255.5,415.3,255.5z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_456_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_457_",
    fill: "#C5DFFF",
    d: "M415.3,312.7c-0.5,0-0.9-0.4-0.9-0.9v-4.7c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9 v4.7C416.1,312.4,415.8,312.7,415.3,312.7z"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_447_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_453_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_454_",
    fill: "#C5DFFF",
    d: "M427,234.6c-0.5,0-0.9-0.4-0.9-0.9V229c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v4.7 C427.9,234.2,427.5,234.6,427,234.6z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_448_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_449_",
    fill: "#C5DFFF",
    d: "M427,297.5c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v10.5 C427.9,297.1,427.5,297.5,427,297.5z M427,276.5c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v10.5 C427.9,276.1,427.5,276.5,427,276.5z M427,255.5c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v10.5 C427.9,255.2,427.5,255.5,427,255.5z"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_439_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_445_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_446_",
    fill: "#C5DFFF",
    d: "M438.8,234.6c-0.5,0-0.9-0.4-0.9-0.9V229c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v4.7 C439.6,234.2,439.2,234.6,438.8,234.6z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_440_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_441_",
    fill: "#C5DFFF",
    d: "M438.8,297.5c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v10.5 C439.6,297.1,439.2,297.5,438.8,297.5z M438.8,276.5c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v10.5 C439.6,276.1,439.2,276.5,438.8,276.5z M438.8,255.5c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v10.5 C439.6,255.2,439.2,255.5,438.8,255.5z"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_432_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_437_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_438_",
    fill: "#C5DFFF",
    d: "M450.5,234.6c-0.5,0-0.9-0.4-0.9-0.9V229c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v4.7 C451.3,234.2,451,234.6,450.5,234.6z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_433_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_434_",
    fill: "#C5DFFF",
    d: "M450.5,276.5c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v10.5 C451.3,276.1,451,276.5,450.5,276.5z M450.5,255.5c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9s0.9,0.4,0.9,0.9v10.5 C451.3,255.2,451,255.5,450.5,255.5z"
  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_426_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_430_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_431_",
    fill: "#C5DFFF",
    d: "M462.2,234.6c-0.5,0-0.9-0.4-0.9-0.9V229c0-0.5,0.4-0.9,0.9-0.9c0.5,0,0.9,0.4,0.9,0.9 v4.7C463.1,234.2,462.7,234.6,462.2,234.6z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_427_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_428_",
    fill: "#C5DFFF",
    d: "M462.2,255.5c-0.5,0-0.9-0.4-0.9-0.9v-10.5c0-0.5,0.4-0.9,0.9-0.9 c0.5,0,0.9,0.4,0.9,0.9v10.5C463.1,255.2,462.7,255.5,462.2,255.5z"
  })))))), _g5 || (_g5 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "CLOUDS_1_1_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_128_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_143_",
    fill: "#273D7A",
    d: "M390.8,136.8c0,3.8-37.6,7.9-78.3,7.9s-71.5,2.8-75.8-3.1c-0.6-0.8-0.6-1.6,0-2.3 c3-3.7,20.5-4.9,23.5-5.1h0c0.3,0,0.4,0,0.4,0s-12-13.2-2.8-23.9c9.2-10.7,19.1-1.3,19.1-1.3s-3.9-20.5,7.2-25.6c0,0,0,0,0,0 c0.3-0.1,0.6-0.3,0.9-0.4c11.9-4.2,16.5,11.1,16.8,11.9c0,0,0,0,0,0c0,0,0.3-20.6,18.6-22.4c3.1-0.3,5.9,0.3,8.3,1.6 c11.5,6.1,14.6,26.6,14.6,26.6s0,0,0,0l0,0c0.8-0.8,9.8-9.3,19.5-3.8c10,5.7,4.5,20.4,4.3,20.8c0.3-0.1,7.4-1.7,9.7,2.3 c2.3,4.1,0,10.4,0,10.4s5.3,0.9,9.3,2.4c2.3,0.9,4.3,2,4.6,3.3C390.8,136.5,390.8,136.6,390.8,136.8z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_138_",
    fill: "#072359",
    d: "M264.4,130.3c2.2,4.1,3.7,5.6,3.7,5.6s-3.4,0.1-8-1.7c0.3,0,0.4,0,0.4,0 s-12-13.2-2.8-23.9c9.2-10.7,19.1-1.3,19.1-1.3s-3.9-20.5,7.2-25.6c-1.2,2.4-2.5,6.4-2.4,11.4c0.2,8.8,3.1,21.4,3.1,21.4 s-12-6.9-19.7-4.2C257.5,114.7,262.2,126.3,264.4,130.3z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_137_",
    fill: "#072359",
    d: "M390.8,136.8c0,3.8-37.6,7.9-78.3,7.9s-71.5,2.8-75.8-3.1c-0.6-0.8-0.6-1.6,0-2.3 c5,1.6,15.2,3.5,35.1,2.8c33.3-1.3,100.2-1.5,116.5-5.1c0.9-0.2,1.7-0.4,2.5-0.6C390.8,136.5,390.8,136.6,390.8,136.8z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_140_",
    fill: "#506893",
    d: "M328.7,74.3c-4.2,0.4-10,1.8-15.3,5.9c-9.5,7.4-10.4,21.4-10.4,21.4l-1.1-6.5 c0,0,0.3-20.6,18.6-22.4C323.5,72.4,326.3,73,328.7,74.3z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_142_",
    fill: "#506893",
    d: "M373.4,132.2c0,0,1.4-4.6-1.5-8.4c-2.9-3.8-10.7-0.8-10.7-0.8s6.2-15.5-1.3-22.1 c-7.3-6.4-16.2-0.3-16.6,0l0,0c0.8-0.8,9.8-9.3,19.5-3.8c10,5.7,4.5,20.4,4.3,20.8c0.3-0.1,7.4-1.7,9.7,2.3c2.3,4.1,0,10.4,0,10.4 s5.3,0.9,9.3,2.4C382,132.6,373.4,132.2,373.4,132.2z"
  })))), _g6 || (_g6 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "CLOUDS_1"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_415_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_418_",
    fill: "#273D7A",
    d: "M228.1,169.3c-2.8,3-14.3,4.7-36.4,7c-17.8,1.9-39.9,2.6-41.5-1.4 c-1.6-4,12.7-5.6,12.7-5.6s-4.7-5.6,1.9-12.4c4.8-5,12.6-0.2,12.9,0c-0.1-0.3-7-14.5-0.4-21.9c1.1-1.2,2.5-2.3,4.4-3 c0.1,0,0.2-0.1,0.3-0.1c13.4-4.8,20.8,23.1,20.8,23.1s12.7-6.6,16.9-0.7c4,5.5,1.7,11.2,1.4,11.9c0,0,0,0.1,0,0.1s5.5,0,7.1,1.3 C228.7,168,228.8,168.6,228.1,169.3z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_417_",
    fill: "#072359",
    d: "M228.1,169.3c-2.8,3-14.3,4.7-36.4,7c-17.8,1.9-39.9,2.6-41.5-1.4 c-1.6-4,12.7-5.6,12.7-5.6s-4.7-5.6,1.9-12.4c4.8-5,12.6-0.2,12.9,0c-0.1-0.3-7-14.5-0.4-21.9c-0.5,2.3-0.6,5.6,0.5,9.9 c2.8,11.3,7.5,17.8,7.5,17.8s-12-7-17.8-3.4c-5.8,3.6,0.6,11.1,0.6,11.1s-11.9,0.9-12,3.8c-0.2,2.8,33.5-1.1,49.7-2.7 c13.9-1.3,19.7-2.5,22.5-4C228.7,168,228.8,168.6,228.1,169.3z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_416_",
    fill: "#506893",
    d: "M221.1,166.2l-1.2,0.6c0,0,1-9.1-3.8-11.5c-4.9-2.4-15.5,4.9-15.5,4.9s-0.9-9.6-7-18.8 c-3.9-5.9-8.7-8.4-11.6-9.5c13.4-4.8,20.8,23.1,20.8,23.1s12.7-6.6,16.9-0.7C223.7,159.8,221.4,165.6,221.1,166.2z"
  })))), _g7 || (_g7 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "LIGHTNING_3"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_609_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_615_",
    fill: "#FEC272",
    d: "M202.9,186.9l-15.3,19.2c-0.5,0.7-1.6,0.1-1.3-0.7l0.1-0.1l4.6-11.7c0-0.1,0.1-0.2,0-0.3 c0-0.4-0.3-0.6-0.7-0.6l-6,0.7c-1.4,0.2-2.4-1.2-1.8-2.5l0.1-0.3l5-10.7l0.1-0.2c0.3-0.7-0.2-1.4-0.9-1.4l-6,0.1 c-2,0-3.2-2.1-2.2-3.8l0.2-0.4l14-23.4c0.3-0.4,0.7-0.6,1.1-0.5c0.5,0.1,0.9,0.6,0.8,1.2l-2.6,14.8c-0.1,0.8,0.6,1.5,1.3,1.3 l6.6-1.4c0.5-0.1,1,0,1.4,0.2c0.7,0.5,1.1,1.5,0.7,2.4l-6.6,13.5c-0.3,0.6,0.1,1.3,0.8,1.4h0c0,0,0,0,0.1,0l5.2,0.1 c0.3,0,0.6,0.1,0.8,0.2C203.3,184.6,203.7,185.9,202.9,186.9z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_614_",
    fill: "#FF8D76",
    d: "M187.6,180L187.6,180l0-0.2c0.3-0.7-0.2-1.4-0.9-1.4l-6,0.1c-2,0-3.2-2.1-2.2-3.8l0.2-0.4 c0.3,0.4,0.8,0.7,1.8,0.8c1.8,0.1,6.7,0,8.2,0C190.1,175.3,187.6,180,187.6,180z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_613_",
    fill: "#FF8D76",
    d: "M191,193.2c0-0.4-0.3-0.6-0.7-0.6l-6,0.7c-1.4,0.2-2.4-1.2-1.8-2.5l0.1-0.3 c0.5,0.1,1.4,0.3,2.8,0.1c2.5-0.3,6.1-1,6.4-0.7C192,190.4,191.2,192.7,191,193.2z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_612_",
    fill: "#FF8D76",
    d: "M192,166.4c-0.1,0.8,0.6,1.5,1.3,1.3c-1.9,0.7-3.8,0.9-3.5-1c0.3-1.7,3.4-14,3.9-16.3 c0.5,0.1,0.9,0.6,0.8,1.2L192,166.4z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_611_",
    fill: "#FF8D76",
    d: "M195.5,182.5c-0.3,0.6,0.1,1.3,0.8,1.4c-0.1,0-0.2,0-0.3,0c-1.7,0-3.3-0.5-2.1-2.8 c1-2,6.2-11.8,7.6-14.4c0.7,0.5,1.1,1.5,0.7,2.4L195.5,182.5z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_610_",
    fill: "#FF8D76",
    d: "M202.9,186.9l-15.3,19.2c-0.5,0.7-1.6,0.1-1.3-0.7l0.1-0.1c0.6-0.6,1.7-1.6,3.2-3.8 c1.8-2.6,10.9-14.8,12.8-17.4C203.3,184.6,203.7,185.9,202.9,186.9z"
  })))), _g8 || (_g8 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "LIGHTNING_1"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_401_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_407_",
    fill: "#FEC272",
    d: "M329.2,198.6l-36.8,46.2c-1.3,1.6-3.8,0.2-3.1-1.8l0.1-0.3l11.2-28.2 c0.1-0.2,0.1-0.4,0.1-0.7c0-0.8-0.8-1.6-1.7-1.4l-14.4,1.7c-3.3,0.4-5.7-2.9-4.3-5.9l0.3-0.6l11.9-25.7l0.2-0.4 c0.7-1.6-0.5-3.5-2.2-3.4l-14.4,0.3c-4.8,0.1-7.8-5.1-5.3-9.2l0.5-0.8l33.6-56.2c0.6-1.1,1.7-1.4,2.7-1.2c1.2,0.3,2.2,1.4,1.9,2.9 l-6.2,35.5c-0.3,1.9,1.3,3.5,3.2,3.1l16-3.4c1.2-0.3,2.4,0,3.3,0.6c1.8,1.1,2.7,3.5,1.6,5.7l-15.8,32.5c-0.7,1.5,0.3,3.2,1.9,3.3 h0c0,0,0.1,0,0.1,0l12.4,0.2c0.7,0,1.3,0.2,1.9,0.5C330.1,193,331.1,196.3,329.2,198.6z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_406_",
    fill: "#FF8D76",
    d: "M292.5,181.9l-0.1,0l0.2-0.4c0.7-1.6-0.5-3.5-2.2-3.4l-14.4,0.3c-4.8,0.1-7.8-5.1-5.3-9.2 l0.5-0.8c0.7,0.8,2,1.8,4.2,1.9c4.3,0.2,16.1-0.1,19.6,0.1C298.5,170.6,292.5,181.9,292.5,181.9z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_405_",
    fill: "#FF8D76",
    d: "M300.6,213.8c0-0.8-0.8-1.6-1.7-1.4l-14.4,1.7c-3.3,0.4-5.7-2.9-4.3-5.9l0.3-0.6 c1.3,0.3,3.5,0.6,6.7,0.2c5.9-0.8,14.7-2.5,15.4-1.6C303.1,207,301.1,212.6,300.6,213.8z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_404_",
    fill: "#FF8D76",
    d: "M303.1,149.4c-0.3,1.9,1.3,3.5,3.2,3.1c-4.7,1.7-9.2,2.1-8.4-2.3c0.7-4,8.1-33.7,9.4-39.1 c1.2,0.3,2.2,1.4,1.9,2.9L303.1,149.4z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_403_",
    fill: "#FF8D76",
    d: "M311.4,187.9c-0.7,1.5,0.3,3.2,1.9,3.3c-0.3,0-0.5,0-0.8,0c-4.2,0-7.9-1.2-5.1-6.8 c2.4-4.9,14.8-28.3,18.2-34.7c1.8,1.1,2.7,3.5,1.6,5.7L311.4,187.9z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_402_",
    fill: "#FF8D76",
    d: "M329.2,198.6l-36.8,46.2c-1.3,1.6-3.8,0.2-3.1-1.8l0.1-0.3c1.5-1.4,4-3.9,7.7-9.1 c4.4-6.3,26.2-35.6,30.7-41.7C330.1,193,331.1,196.3,329.2,198.6z"
  })))), _g9 || (_g9 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "LIGHTNING_2"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_616_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_622_",
    fill: "#FEC272",
    d: "M437.1,225.6l-12.7,15.9c-0.4,0.6-1.3,0.1-1.1-0.6l0-0.1l3.8-9.7c0-0.1,0-0.2,0-0.2 c0-0.3-0.3-0.5-0.6-0.5l-5,0.6c-1.1,0.1-2-1-1.5-2l0.1-0.2l4.1-8.8l0.1-0.1c0.3-0.6-0.2-1.2-0.8-1.2l-5,0.1 c-1.6,0-2.7-1.8-1.8-3.2l0.2-0.3l11.6-19.4c0.2-0.4,0.6-0.5,0.9-0.4c0.4,0.1,0.8,0.5,0.7,1l-2.1,12.2c-0.1,0.6,0.5,1.2,1.1,1.1 l5.5-1.2c0.4-0.1,0.8,0,1.1,0.2c0.6,0.4,0.9,1.2,0.6,2l-5.5,11.2c-0.2,0.5,0.1,1.1,0.6,1.1h0c0,0,0,0,0,0l4.3,0.1 c0.2,0,0.5,0.1,0.6,0.2C437.4,223.7,437.7,224.8,437.1,225.6z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_621_",
    fill: "#FF8D76",
    d: "M424.5,219.8L424.5,219.8l0-0.1c0.3-0.6-0.2-1.2-0.8-1.2l-5,0.1c-1.6,0-2.7-1.8-1.8-3.2 l0.2-0.3c0.2,0.3,0.7,0.6,1.5,0.7c1.5,0.1,5.5,0,6.8,0S424.5,219.8,424.5,219.8z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_620_",
    fill: "#FF8D76",
    d: "M427.3,230.8c0-0.3-0.3-0.5-0.6-0.5l-5,0.6c-1.1,0.1-2-1-1.5-2l0.1-0.2 c0.4,0.1,1.2,0.2,2.3,0.1c2-0.3,5.1-0.8,5.3-0.5C428.1,228.5,427.4,230.4,427.3,230.8z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_619_",
    fill: "#FF8D76",
    d: "M428.1,208.6c-0.1,0.6,0.5,1.2,1.1,1.1c-1.6,0.6-3.2,0.7-2.9-0.8 c0.2-1.4,2.8-11.6,3.3-13.5c0.4,0.1,0.8,0.5,0.7,1L428.1,208.6z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_618_",
    fill: "#FF8D76",
    d: "M431,221.9c-0.2,0.5,0.1,1.1,0.6,1.1c-0.1,0-0.2,0-0.3,0c-1.4,0-2.7-0.4-1.7-2.4 c0.8-1.7,5.1-9.8,6.3-12c0.6,0.4,0.9,1.2,0.6,2L431,221.9z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_617_",
    fill: "#FF8D76",
    d: "M437.1,225.6l-12.7,15.9c-0.4,0.6-1.3,0.1-1.1-0.6l0-0.1c0.5-0.5,1.4-1.3,2.6-3.1 c1.5-2.2,9-12.3,10.6-14.4C437.4,223.7,437.7,224.8,437.1,225.6z"
  })))), _g10 || (_g10 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "CLOUDS_2"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_390_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_393_",
    fill: "#273D7A",
    d: "M466.3,215.9c-0.1,2.3-18.3,4.8-38.6,5.3c-20.3,0.5-33.2-1.5-31.8-3.8 c1.4-2.2,8.8-3,8.8-3s-7-5.4-3.3-13c3.8-7.6,11.9-2.2,11.9-2.2s-2.6-11.6,5-15.3c1.2-0.6,2.6-1,4.3-1.1c0.9-0.1,1.7,0,2.6,0.1 c10.9,1.6,15.5,18.9,15.5,18.9s6.2-6.5,10.8-2.6c4.6,3.9,2.6,10.7,2.6,10.7s2.2-1.4,5-0.7c1.5,0.4,2.1,1.4,2.4,2.4 c0.3,0.9,0.3,1.7,0.3,1.7s2.4,0.2,3.7,1.1C466,214.7,466.3,215.2,466.3,215.9z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_392_",
    fill: "#072359",
    d: "M466.3,215.9c-0.1,2.3-18.3,4.8-38.6,5.3c-20.3,0.5-33.2-1.5-31.8-3.8 c1.4-2.2,8.8-3,8.8-3s-7-5.4-3.3-13c3.8-7.6,11.9-2.2,11.9-2.2s-2.6-11.6,5-15.3c-0.8,2-1.8,5.2-1.6,8.5c0.5,6.2,3,11,3.2,11.3 c-0.4-0.2-9.2-4.6-13.9-1.9c-4.8,2.8,2.2,13.6,2.2,13.6s-6.4,1.4-3.3,2.8s33.2,1.2,44.7-0.1c7.7-0.9,13.1-2.6,15.9-3.7 C466,214.7,466.3,215.2,466.3,215.9z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_391_",
    fill: "#506893",
    d: "M461.5,211.5c-0.3-0.2-0.7-0.3-1-0.5c-2.8-1.4-8.6,1.4-8.6,1.4s1.2-8.7-2.3-11 c-3.5-2.3-10,5.2-10,5.2s-0.8-4.7-4.9-12.8c-2.5-4.9-6.6-8.7-9.5-11c10.9,1.6,15.5,18.9,15.5,18.9s6.2-6.5,10.8-2.6 c4.6,3.9,2.6,10.7,2.6,10.7s2.2-1.4,5-0.7C460.5,209.4,461.2,210.5,461.5,211.5z"
  })))), _g11 || (_g11 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "SERVER_1"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_20_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_34_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_64_",
    fill: "#E1ECFF",
    d: "M311.2,466.4v45c0,3.6-2.9,6.6-6.6,6.6H188.3c-3.6,0-6.6-2.9-6.6-6.6v-45 c0-3.6,2.9-6.6,6.6-6.6h116.4C308.3,459.8,311.2,462.8,311.2,466.4z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_27_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    id: "XMLID_26_",
    fill: "#273D7A",
    cx: 201,
    cy: 472,
    r: 3.4
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    id: "XMLID_28_",
    fill: "#FF8D76",
    cx: 213.1,
    cy: 472,
    r: 3.4
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    id: "XMLID_29_",
    fill: "#FF8D76",
    cx: 225.1,
    cy: 472,
    r: 3.4
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_30_",
    fill: "#273D7A",
    d: "M293,490h-29.7c-1.3,0-2.4-1.1-2.4-2.4l0,0c0-1.3,1.1-2.4,2.4-2.4H293 c1.3,0,2.4,1.1,2.4,2.4l0,0C295.4,488.9,294.4,490,293,490z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    id: "XMLID_31_",
    fill: "#FF8D76",
    cx: 293.6,
    cy: 487.6,
    r: 5
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_57_",
    fill: "#273D7A",
    d: "M251.2,518h-54.3l2-4.9c1-2.5,3.4-4.1,6.1-4.1h38.2c2.7,0,5,1.6,6.1,4.1L251.2,518z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_33_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("rect", {
    id: "XMLID_25_",
    x: 197.6,
    y: 518,
    fill: "#273D7A",
    width: 99.6,
    height: 9.9
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("rect", {
    id: "XMLID_32_",
    x: 197.6,
    y: 518,
    fill: "#072359",
    width: 99.6,
    height: 4.9
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_61_",
    fill: "#CDE0FC",
    d: "M192.1,459.8V518h-3.8c-3.6,0-6.6-2.9-6.6-6.6v-45c0-3.6,2.9-6.6,6.6-6.6H192.1z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_60_",
    fill: "#F0F5FC",
    d: "M311.2,466.4v45c0,3.6-2.9,6.6-6.6,6.6h-2.1v-58.2h2.1 C308.3,459.8,311.2,462.8,311.2,466.4z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_36_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_71_",
    fill: "#E1ECFF",
    d: "M311.2,413.9v31.6c0,3.6-2.9,6.6-6.6,6.6H188.3c-3.6,0-6.6-2.9-6.6-6.6v-31.6 c0-3.6,2.9-6.6,6.6-6.6h116.4C308.3,407.3,311.2,410.3,311.2,413.9z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_67_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    id: "XMLID_70_",
    fill: "#FF8D76",
    cx: 201,
    cy: 419.5,
    r: 3.4
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    id: "XMLID_69_",
    fill: "#FF8D76",
    cx: 213.1,
    cy: 419.5,
    r: 3.4
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    id: "XMLID_68_",
    fill: "#273D7A",
    cx: 225.1,
    cy: 419.5,
    r: 3.4
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_66_",
    fill: "#273D7A",
    d: "M293,427.7h-29.7c-1.3,0-2.4-1.1-2.4-2.4l0,0c0-1.3,1.1-2.4,2.4-2.4H293 c1.3,0,2.4,1.1,2.4,2.4l0,0C295.4,426.6,294.4,427.7,293,427.7z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    id: "XMLID_65_",
    fill: "#FF8D76",
    cx: 293.6,
    cy: 425.2,
    r: 5
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_63_",
    fill: "#273D7A",
    d: "M251.2,452.1h-54.3l2-4.9c1-2.5,3.4-4.1,6.1-4.1h38.2c2.7,0,5,1.6,6.1,4.1L251.2,452.1z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_58_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("rect", {
    id: "XMLID_62_",
    x: 197.6,
    y: 452.1,
    fill: "#273D7A",
    width: 99.6,
    height: 7.7
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("rect", {
    id: "XMLID_59_",
    x: 197.6,
    y: 452.1,
    fill: "#072359",
    width: 99.6,
    height: 3.9
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_56_",
    fill: "#CDE0FC",
    d: "M192.1,407.3v44.7h-3.8c-3.6,0-6.6-2.9-6.6-6.6v-31.6c0-3.6,2.9-6.6,6.6-6.6H192.1z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_37_",
    fill: "#F0F5FC",
    d: "M311.2,413.9v31.6c0,3.6-2.9,6.6-6.6,6.6h-2.1v-44.7h2.1 C308.3,407.3,311.2,410.3,311.2,413.9z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_72_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_85_",
    fill: "#E1ECFF",
    d: "M311.2,367.9V393c0,3.6-2.9,6.6-6.6,6.6H188.3c-3.6,0-6.6-2.9-6.6-6.6v-25.2 c0-3.6,2.9-6.6,6.6-6.6h116.4C308.3,361.3,311.2,364.2,311.2,367.9z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_81_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    id: "XMLID_84_",
    fill: "#273D7A",
    cx: 201,
    cy: 373.5,
    r: 3.4
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    id: "XMLID_83_",
    fill: "#FF8D76",
    cx: 213.1,
    cy: 373.5,
    r: 3.4
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    id: "XMLID_82_",
    fill: "#FF8D76",
    cx: 225.1,
    cy: 373.5,
    r: 3.4
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_80_",
    fill: "#273D7A",
    d: "M293,381.6h-29.7c-1.3,0-2.4-1.1-2.4-2.4v0c0-1.3,1.1-2.4,2.4-2.4H293 c1.3,0,2.4,1.1,2.4,2.4v0C295.4,380.5,294.4,381.6,293,381.6z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    id: "XMLID_79_",
    fill: "#FF8D76",
    cx: 293.6,
    cy: 379.2,
    r: 5
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_78_",
    fill: "#273D7A",
    d: "M251.2,399.6h-54.3l2-4.9c1-2.5,3.4-4.1,6.1-4.1h38.2c2.7,0,5,1.6,6.1,4.1L251.2,399.6z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_75_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("rect", {
    id: "XMLID_77_",
    x: 197.6,
    y: 399.6,
    fill: "#273D7A",
    width: 99.6,
    height: 7.7
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("rect", {
    id: "XMLID_76_",
    x: 197.6,
    y: 399.6,
    fill: "#072359",
    width: 99.6,
    height: 3.9
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_74_",
    fill: "#CDE0FC",
    d: "M192.1,361.3v38.3h-3.8c-3.6,0-6.6-2.9-6.6-6.6v-25.2c0-3.6,2.9-6.6,6.6-6.6H192.1z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_73_",
    fill: "#F0F5FC",
    d: "M311.2,367.9V393c0,3.6-2.9,6.6-6.6,6.6h-2.1v-38.3h2.1 C308.3,361.3,311.2,364.2,311.2,367.9z"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_86_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_99_",
    fill: "#E1ECFF",
    d: "M311.2,321.8V347c0,3.6-2.9,6.6-6.6,6.6H188.3c-3.6,0-6.6-2.9-6.6-6.6v-25.2 c0-3.6,2.9-6.6,6.6-6.6h116.4C308.3,315.3,311.2,318.2,311.2,321.8z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_95_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    id: "XMLID_98_",
    fill: "#FF8D76",
    cx: 201,
    cy: 327.4,
    r: 3.4
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    id: "XMLID_97_",
    fill: "#FF8D76",
    cx: 213.1,
    cy: 327.4,
    r: 3.4
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    id: "XMLID_96_",
    fill: "#273D7A",
    cx: 225.1,
    cy: 327.4,
    r: 3.4
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_94_",
    fill: "#273D7A",
    d: "M293,335.6h-29.7c-1.3,0-2.4-1.1-2.4-2.4l0,0c0-1.3,1.1-2.4,2.4-2.4H293 c1.3,0,2.4,1.1,2.4,2.4l0,0C295.4,334.5,294.4,335.6,293,335.6z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    id: "XMLID_93_",
    fill: "#FF8D76",
    cx: 293.6,
    cy: 333.2,
    r: 5
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_92_",
    fill: "#273D7A",
    d: "M251.2,353.6h-54.3l2-4.9c1-2.5,3.4-4.1,6.1-4.1h38.2c2.7,0,5,1.6,6.1,4.1L251.2,353.6z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_89_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("rect", {
    id: "XMLID_91_",
    x: 197.6,
    y: 353.6,
    fill: "#273D7A",
    width: 99.6,
    height: 7.7
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("rect", {
    id: "XMLID_90_",
    x: 197.6,
    y: 353.6,
    fill: "#072359",
    width: 99.6,
    height: 3.9
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_88_",
    fill: "#CDE0FC",
    d: "M192.1,315.3v38.3h-3.8c-3.6,0-6.6-2.9-6.6-6.6v-25.2c0-3.6,2.9-6.6,6.6-6.6H192.1z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_87_",
    fill: "#F0F5FC",
    d: "M311.2,321.8V347c0,3.6-2.9,6.6-6.6,6.6h-2.1v-38.3h2.1 C308.3,315.3,311.2,318.2,311.2,321.8z"
  }))))), _g12 || (_g12 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "SERVER_2"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_295_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_314_",
    fill: "#FF97C9",
    d: "M383.5,405.3v116.8c0,3.1-2.6,5.7-5.7,5.7h-58.3c-3.2,0-5.7-2.6-5.7-5.7V405.3 c0-3.2,2.6-5.7,5.7-5.7h58.3C380.9,399.6,383.5,402.2,383.5,405.3z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_313_",
    fill: "#F774B9",
    d: "M332.3,399.6v128.2h-12.8c-3.2,0-5.7-2.6-5.7-5.7V405.3c0-3.2,2.6-5.7,5.7-5.7H332.3z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_312_",
    fill: "#5A7FDB",
    d: "M321.6,413h29.9c1.6,0,2.8,1.3,2.8,2.8v13.5c0,1.6-1.3,2.8-2.8,2.8h-29.9 c-1.6,0-2.8-1.3-2.8-2.8v-13.5C318.7,414.2,320,413,321.6,413z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_311_",
    fill: "#273D7A",
    d: "M378.5,415.8v13.5c0,1.6-1.3,2.8-2.8,2.8h-13.8c-1.6,0-2.8-1.3-2.8-2.8v-13.5 c0-1.6,1.3-2.8,2.8-2.8h13.8C377.2,413,378.5,414.2,378.5,415.8z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_304_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_310_",
    fill: "#273D7A",
    d: "M356.9,518h-16.6c-1.2,0-2.2-1-2.2-2.2v-25.5c0-1.2,1-2.2,2.2-2.2h16.6 c1.2,0,2.2,1,2.2,2.2v25.5C359.1,517,358.1,518,356.9,518z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_309_",
    fill: "#142966",
    d: "M355.6,505h-14c-0.9,0-1.6-0.7-1.6-1.6v-11c0-0.9,0.7-1.6,1.6-1.6h14 c0.9,0,1.6,0.7,1.6,1.6v11C357.3,504.3,356.5,505,355.6,505z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_308_",
    fill: "#142966",
    d: "M355.4,515.3h-13.6c-1,0-1.8-0.8-1.8-1.8v-4.7c0-1,0.8-1.8,1.8-1.8h13.6 c1,0,1.8,0.8,1.8,1.8v4.7C357.3,514.5,356.4,515.3,355.4,515.3z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("circle", {
    id: "XMLID_305_",
    fill: "#FEC272",
    cx: 348.6,
    cy: 511.2,
    r: 2.6
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_296_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_303_",
    fill: "#273D7A",
    d: "M378.5,440.6V477c0,1.7-1.3,3.1-3,3.1h-53.9c-1,0-2-0.6-2.5-1.4 c-0.3-0.5-0.5-1.1-0.5-1.7v-36.4c0-1.7,1.3-3.1,3-3.1h53.9c1.4,0,2.6,1,2.9,2.4C378.5,440.2,378.5,440.4,378.5,440.6z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_297_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_302_",
    fill: "#94ADEA",
    d: "M376.3,442.6v32.5c0,1.5-1.2,2.7-2.7,2.7h-49.9c-1,0-1.8-0.5-2.3-1.3 c-0.3-0.4-0.4-0.9-0.4-1.5v-32.5c0-1.5,1.2-2.7,2.7-2.7h49.9c1.3,0,2.4,0.9,2.7,2.2C376.3,442.2,376.3,442.4,376.3,442.6z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_298_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_301_",
    fill: "#738DE0",
    d: "M376.3,442l-38.9,35.9h-13.7c-1,0-1.8-0.5-2.3-1.3l39.9-36.8h12.3 C374.9,439.8,376,440.7,376.3,442z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("polygon", {
    id: "XMLID_300_",
    fill: "#738DE0",
    points: "376.3,455.1 376.3,471.1 369,477.9 351.6,477.9  "
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("polygon", {
    id: "XMLID_299_",
    fill: "#738DE0",
    points: "344.5,439.8 320.9,461.6 320.9,445.5 327.1,439.8  "
  }))))))), _g13 || (_g13 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "ORNAMENT_3"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_106_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_124_",
    fill: "#FF8D76",
    d: "M293.6,313.5h-57.4l1-2.8l6.1-16.5l5.4-14.7l6.1-16.5L261,246c0.2-0.7,0.6-1.2,1.1-1.6 c2-1.9,5.6-1.3,6.7,1.6l2.5,6.9l3.8,10.4l3.4,9.3l3.8,10.4l3.4,9.3l3.8,10.4L293.6,313.5z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_105_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("polygon", {
    id: "XMLID_121_",
    fill: "#273D7A",
    points: "275.1,263.3 257.7,274 248.7,279.5 254.7,263.1 259.8,260 271.3,252.9  "
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("polygon", {
    id: "XMLID_129_",
    fill: "#273D7A",
    points: "282.3,282.9 253.7,300.5 237.2,310.7 243.3,294.2 255.8,286.5 278.5,272.5  "
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("polygon", {
    id: "XMLID_127_",
    fill: "#273D7A",
    points: "289.6,302.6 271.8,313.5 251.2,313.5 251.8,313.1 285.8,292.2  "
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_122_",
    fill: "#FF8D76",
    d: "M262.1,244.4l-10.3,69.1h-15.6l1-2.8l6.1-16.5l5.4-14.7l6.1-16.5L261,246 C261.3,245.4,261.6,244.8,262.1,244.4z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("polygon", {
    id: "XMLID_123_",
    fill: "#FF8D76",
    points: "251.2,313.5 251.8,313.1 251.8,313.5  "
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("polygon", {
    id: "XMLID_126_",
    fill: "#072359",
    points: "255.8,286.5 253.7,300.5 237.2,310.7 243.3,294.2  "
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("polygon", {
    id: "XMLID_119_",
    fill: "#072359",
    points: "259.8,260 257.7,274 248.7,279.5 254.7,263.1  "
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_102_",
    fill: "#FF8D76",
    d: "M294.4,315.3h-60.5c-1.8,0-3.2-1.5-3.2-3.2v-0.2c0-1.8,1.5-3.2,3.2-3.2h60.5 c1.8,0,3.2,1.5,3.2,3.2v0.2C297.6,313.8,296.2,315.3,294.4,315.3z"
  })))), _g14 || (_g14 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "ORNAMENT_1"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "XMLID_120_"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("polygon", {
    id: "XMLID_191_",
    fill: "#FEC272",
    points: "182.5,304.9 169.3,271.3 160.9,275.8 181.5,305.4  "
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("polygon", {
    id: "XMLID_167_",
    fill: "#FEC272",
    points: "148.1,271.3 140.1,279.9 176.3,309.9 177.9,308.4  "
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("polygon", {
    id: "XMLID_125_",
    fill: "#FEC272",
    points: "147.2,293.7 142.6,301.3 172.7,314.6 173.4,313.4  "
  })))), _g15 || (_g15 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    id: "ORNAMENT_2"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "XMLID_172_",
    fill: "#FEC272",
    d: "M377.2,373.7l-2.1,14.4c0,0,6.1-0.3,10.7,3.6c6,5.2,6.7,10,6.7,10l22.6-11.5 c0,0-15.1,5-20.1-0.1c-5-5.1-0.8-15.4-0.8-15.4s-6.7,8.7-11.7,7.2C377.6,380.5,377.2,373.7,377.2,373.7z"
  }))));
}

const ForwardRef = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(SvgErrorServer);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "static/media/error-server.f84bf56eecb229f460998f2445c08674.svg");


/***/ }),

/***/ "./src/images/logos/express.svg":
/*!**************************************!*\
  !*** ./src/images/logos/express.svg ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "ReactComponent": () => (/* binding */ ForwardRef)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _path;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }



function SvgExpress(_ref, svgRef) {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    width: "24px",
    height: "24px",
    viewBox: "0 0 24 24",
    role: "img",
    xmlns: "http://www.w3.org/2000/svg",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("title", {
    id: titleId
  }, title) : null, _path || (_path = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M24 18.588a1.529 1.529 0 0 1-1.895-.72l-3.45-4.771-.5-.667-4.003 5.444a1.466 1.466 0 0 1-1.802.708l5.158-6.92-4.798-6.251a1.595 1.595 0 0 1 1.9.666l3.576 4.83 3.596-4.81a1.435 1.435 0 0 1 1.788-.668L21.708 7.9l-2.522 3.283a.666.666 0 0 0 0 .994l4.804 6.412zM.002 11.576l.42-2.075c1.154-4.103 5.858-5.81 9.094-3.27 1.895 1.489 2.368 3.597 2.275 5.973H1.116C.943 16.447 4.005 19.009 7.92 17.7a4.078 4.078 0 0 0 2.582-2.876c.207-.666.548-.78 1.174-.588a5.417 5.417 0 0 1-2.589 3.957 6.272 6.272 0 0 1-7.306-.933 6.575 6.575 0 0 1-1.64-3.858c0-.235-.08-.455-.134-.666A88.33 88.33 0 0 1 0 11.577zm1.127-.286h9.654c-.06-3.076-2.001-5.258-4.59-5.278-2.882-.04-4.944 2.094-5.071 5.264z"
  })));
}

const ForwardRef = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(SvgExpress);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "static/media/express.66b3fc0c6ef51519c20c0fdb58d6a4e4.svg");


/***/ }),

/***/ "./src/images/logos/git-icon.svg":
/*!***************************************!*\
  !*** ./src/images/logos/git-icon.svg ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "ReactComponent": () => (/* binding */ ForwardRef)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }



function SvgGitIcon(_ref, svgRef) {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    width: "32px",
    height: "32px",
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title === undefined ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("title", {
    id: titleId
  }, "file_type_git") : title ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M29.472,14.753,17.247,2.528a1.8,1.8,0,0,0-2.55,0L12.158,5.067l3.22,3.22a2.141,2.141,0,0,1,2.712,2.73l3.1,3.1a2.143,2.143,0,1,1-1.285,1.21l-2.895-2.895v7.617a2.141,2.141,0,1,1-1.764-.062V12.3a2.146,2.146,0,0,1-1.165-2.814L10.911,6.314,2.528,14.7a1.8,1.8,0,0,0,0,2.551L14.753,29.472a1.8,1.8,0,0,0,2.55,0L29.472,17.3a1.8,1.8,0,0,0,0-2.551",
    style: {
      fill: "#dd4c35"
    }
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M12.158,5.067l3.22,3.22a2.141,2.141,0,0,1,2.712,2.73l3.1,3.1a2.143,2.143,0,1,1-1.285,1.21l-2.895-2.895v7.617a2.141,2.141,0,1,1-1.764-.062V12.3a2.146,2.146,0,0,1-1.165-2.814L10.911,6.314",
    style: {
      fill: "#fff"
    }
  }));
}

const ForwardRef = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(SvgGitIcon);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "static/media/git-icon.da7cbb7e0f60abd807f4ef40cc3da768.svg");


/***/ }),

/***/ "./src/images/logos/html5.svg":
/*!************************************!*\
  !*** ./src/images/logos/html5.svg ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "ReactComponent": () => (/* binding */ ForwardRef)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _path, _path2, _path3, _path4;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }



function SvgHtml5(_ref, svgRef) {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    xmlns: "http://www.w3.org/2000/svg",
    "aria-label": "HTML5",
    role: "img",
    viewBox: "0 0 512 512",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("title", {
    id: titleId
  }, title) : null, _path || (_path = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fill: "#e34f26",
    d: "M71 460L30 0h451l-41 460-185 52"
  })), _path2 || (_path2 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fill: "#ef652a",
    d: "M256 472l149-41 35-394H256"
  })), _path3 || (_path3 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fill: "#ebebeb",
    d: "M256 208h-75l-5-58h80V94H114l15 171h127zm-1 147l-63-17-4-45h-56l7 89 116 32z"
  })), _path4 || (_path4 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fill: "#fff",
    d: "M255 208v57h70l-7 73-63 17v59l116-32 16-174zm0-114v56h137l5-56z"
  })));
}

const ForwardRef = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(SvgHtml5);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "static/media/html5.84c6adac417775a66b5529f1ae8d4572.svg");


/***/ }),

/***/ "./src/images/logos/javascript.svg":
/*!*****************************************!*\
  !*** ./src/images/logos/javascript.svg ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "ReactComponent": () => (/* binding */ ForwardRef)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _rect, _path;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }



function SvgJavascript(_ref, svgRef) {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    xmlns: "http://www.w3.org/2000/svg",
    "aria-label": "JavaScript",
    role: "img",
    viewBox: "0 0 512 512",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("title", {
    id: titleId
  }, title) : null, _rect || (_rect = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("rect", {
    width: 512,
    height: 512,
    rx: "15%",
    fill: "#f7df1e"
  })), _path || (_path = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M324 370c10 17 24 29 47 29c20 0 33-10 33 -24c0-16 -13 -22 -35 -32l-12-5c-35-15 -58 -33 -58 -72c0-36 27 -64 70 -64c31 0 53 11 68 39l-37 24c-8-15 -17 -21 -31 -21c-14 0-23 9 -23 21c0 14 9 20 30 29l12 5c41 18 64 35 64 76c0 43-34 67 -80 67c-45 0-74 -21 -88 -49zm-170 4c8 13 14 25 31 25c16 0 26-6 26 -30V203h48v164c0 50-29 72 -72 72c-39 0-61 -20 -72 -44z"
  })));
}

const ForwardRef = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(SvgJavascript);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "static/media/javascript.84ac97b2d839ad0e78473327947874a9.svg");


/***/ }),

/***/ "./src/images/logos/material-ui.svg":
/*!******************************************!*\
  !*** ./src/images/logos/material-ui.svg ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "ReactComponent": () => (/* binding */ ForwardRef)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _g;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }



function SvgMaterialUi(_ref, svgRef) {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    width: "256px",
    height: "256px",
    viewBox: "0 -26 256 256",
    xmlns: "http://www.w3.org/2000/svg",
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    preserveAspectRatio: "xMidYMid",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("title", {
    id: titleId
  }, title) : null, _g || (_g = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("polygon", {
    fill: "#00B0FF",
    points: "0 110.848 0 0 96 55.424 96 92.3733333 32 55.424 32 129.322667"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("polygon", {
    fill: "#0081CB",
    points: "96 55.424 192 0 192 110.848 128 147.797333 96 129.322667 160 92.3733333 160 55.424 96 92.3733333"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("polygon", {
    fill: "#00B0FF",
    points: "96 129.322667 96 166.272 160 203.221333 160 166.272"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M160,203.221333 L256,147.797333 L256,73.8986667 L224,92.3733333 L224,129.322667 L160,166.272 L160,203.221333 Z M224,55.424 L224,18.4746667 L256,5.68434189e-14 L256,36.9493333 L224,55.424 Z",
    fill: "#0081CB"
  }))));
}

const ForwardRef = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(SvgMaterialUi);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "static/media/material-ui.456bfb02539777f812137c514d397868.svg");


/***/ }),

/***/ "./src/images/logos/mongodb.svg":
/*!**************************************!*\
  !*** ./src/images/logos/mongodb.svg ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "ReactComponent": () => (/* binding */ ForwardRef)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _defs;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }



function SvgMongodb(_ref, svgRef) {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    width: "32px",
    height: "32px",
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), _defs || (_defs = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("defs", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient", {
    id: "a",
    x1: -645.732,
    y1: 839.188,
    x2: -654.59,
    y2: 839.25,
    gradientTransform: "matrix(-0.977, -0.323, -0.29, 0.877, -375.944, -928.287)",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 0.231,
    stopColor: "#999875"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 0.563,
    stopColor: "#9b9977"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 0.683,
    stopColor: "#a09f7e"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 0.768,
    stopColor: "#a9a889"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 0.837,
    stopColor: "#b7b69a"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 0.896,
    stopColor: "#c9c7b0"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 0.948,
    stopColor: "#deddcb"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 0.994,
    stopColor: "#f8f6eb"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 1,
    stopColor: "#fbf9ef"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient", {
    id: "b",
    x1: -644.287,
    y1: 823.405,
    x2: -657.028,
    y2: 845.476,
    gradientTransform: "matrix(-0.977, -0.323, -0.29, 0.877, -375.944, -928.287)",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 0,
    stopColor: "#48a547"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 1,
    stopColor: "#3f9143"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient", {
    id: "c",
    x1: -643.386,
    y1: 839.485,
    x2: -652.418,
    y2: 833.417,
    gradientTransform: "matrix(-0.977, -0.323, -0.29, 0.877, -375.944, -928.287)",
    gradientUnits: "userSpaceOnUse"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 0,
    stopColor: "#41a247"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 0.352,
    stopColor: "#4ba74b"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 0.956,
    stopColor: "#67b554"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    offset: 1,
    stopColor: "#69b655"
  })))), title === undefined ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("title", {
    id: titleId
  }, "file_type_mongo") : title ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("title", {
    id: titleId
  }, title) : null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M16.62,30l-.751-.249s.1-3.8-1.275-4.067c-.9-1.048.133-44.741,3.423-.149a2.712,2.712,0,0,0-1.333,1.523A14.1,14.1,0,0,0,16.62,30Z",
    style: {
      fill: "url(#a)"
    }
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M17.026,26.329a13.223,13.223,0,0,0,5-13.225C20.556,6.619,17.075,4.487,16.7,3.673a9.792,9.792,0,0,1-.825-1.6l.277,18.069S15.578,25.664,17.026,26.329Z",
    style: {
      fill: "url(#b)"
    }
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M15.487,26.569S9.366,22.4,9.72,15.025A15.54,15.54,0,0,1,15.239,3.377,1.725,1.725,0,0,0,15.846,2c.381.82.319,12.243.359,13.579C16.36,20.776,15.916,25.588,15.487,26.569Z",
    style: {
      fill: "url(#c)"
    }
  }));
}

const ForwardRef = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(SvgMongodb);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "static/media/mongodb.464a4e8bb6d791cfa542bd7b0faa2507.svg");


/***/ }),

/***/ "./src/images/logos/mongoose_js.svg":
/*!******************************************!*\
  !*** ./src/images/logos/mongoose_js.svg ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "ReactComponent": () => (/* binding */ ForwardRef)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _g;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }



function SvgMongooseJs(_ref, svgRef) {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    xmlns: "http://www.w3.org/2000/svg",
    width: "32px",
    height: "32px",
    viewBox: "0 0 1275.000000 501.000000",
    preserveAspectRatio: "xMidYMid meet",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("title", {
    id: titleId
  }, title) : null, _g || (_g = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    transform: "translate(0.000000,501.000000) scale(0.100000,-0.100000)",
    fill: "#bc4949",
    stroke: "none"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M6969 4979 c-167 -7 -449 -52 -449 -71 0 -8 199 -108 214 -108 14 0 245 -116 296 -148 67 -43 115 -82 101 -82 -9 0 -246 92 -336 131 -73 31 -377 122 -525 157 -80 19 -114 26 -250 51 -201 37 -437 39 -540 5 -147 -48 -180 -107 -180 -325 0 -120 6 -171 32 -279 11 -47 43 -150 58 -185 4 -11 18 -45 30 -75 12 -30 48 -107 80 -170 179 -357 447 -655 825 -917 119 -82 443 -238 573 -275 33 -9 44 -28 17 -28 -30 0 -304 76 -360 100 -11 5 -40 17 -65 26 -195 79 -444 242 -650 427 -226 202 -408 453 -529 727 -79 179 -133 388 -146 570 -8 104 -16 129 -43 128 -9 0 -94 3 -188 8 -255 11 -604 -17 -949 -77 -660 -113 -1372 -374 -2105 -772 -124 -68 -183 -101 -361 -207 -14 -8 -58 -35 -98 -60 -40 -25 -87 -53 -104 -64 -38 -22 -457 -308 -507 -346 -19 -14 -71 -53 -115 -85 -199 -148 -632 -503 -657 -539 -12 -18 7 -27 33 -18 13 5 47 12 74 16 28 4 100 23 160 43 61 19 126 39 145 44 148 35 208 47 295 60 39 5 97 14 130 19 406 60 600 75 781 61 393 -32 769 -99 984 -176 161 -58 489 -236 633 -343 83 -63 351 -331 410 -412 46 -64 97 -120 109 -120 4 0 9 204 10 453 l3 452 526 3 c414 2 529 -1 536 -10 10 -13 34 -56 113 -203 75 -141 112 -209 135 -250 12 -22 40 -74 63 -115 22 -41 63 -117 91 -169 28 -52 51 -96 51 -98 0 -9 41 -63 48 -63 4 0 14 15 21 32 8 18 29 58 46 88 18 30 50 89 72 130 22 41 52 98 68 125 44 79 90 165 128 235 19 36 49 92 67 125 18 33 44 80 58 105 13 25 29 51 34 58 8 9 126 12 552 10 l541 -3 3 -883 c2 -696 5 -882 15 -882 6 1 46 24 87 53 58 41 83 66 110 112 61 105 234 270 350 334 140 78 291 135 450 170 160 34 207 39 570 52 663 23 761 27 766 32 3 3 -6 29 -19 59 -14 29 -38 83 -55 119 -63 137 -63 183 3 250 45 47 161 88 360 128 33 7 74 16 91 22 17 5 38 9 47 9 25 0 224 49 266 65 29 12 185 46 371 82 81 16 291 58 465 93 110 22 225 45 255 51 30 6 73 15 95 19 22 5 51 11 65 13 14 3 84 17 155 32 72 15 144 29 161 31 50 5 427 96 514 124 138 45 179 63 266 122 94 64 120 99 213 285 103 207 118 242 147 329 45 139 42 192 -15 250 -40 40 -126 81 -189 90 -47 6 -53 4 -76 -21 -14 -15 -26 -33 -26 -39 0 -9 -16 -53 -61 -161 -4 -11 -13 -38 -20 -60 -6 -22 -18 -53 -25 -70 -13 -28 -14 -23 -9 55 5 77 18 142 47 240 5 19 12 51 15 71 l5 36 -104 42 c-108 45 -201 84 -255 108 -18 7 -63 25 -100 39 -38 14 -84 32 -103 41 -36 16 -70 30 -105 44 -67 26 -301 106 -500 169 -54 17 -369 112 -400 121 -64 17 -111 30 -140 39 -16 4 -55 15 -85 23 -176 49 -222 61 -285 79 -38 11 -86 24 -105 28 -19 5 -71 17 -115 28 -77 19 -400 94 -575 134 -47 11 -103 24 -125 29 -22 5 -62 13 -90 18 -27 5 -84 16 -125 25 -41 8 -129 25 -195 36 -66 12 -145 26 -175 31 -276 50 -295 53 -790 108 -305 35 -715 64 -815 59 -16 0 -105 -4 -196 -9z m-1156 -493 c264 -86 521 -203 697 -317 140 -91 314 -236 361 -301 l20 -27 -38 15 c-21 9 -65 28 -98 44 -176 82 -195 89 -195 71 0 -5 41 -71 90 -145 50 -75 90 -141 90 -147 0 -5 -19 3 -42 19 -90 62 -301 151 -313 133 -3 -5 62 -88 145 -185 82 -97 150 -180 150 -186 0 -15 -16 -13 -92 15 -78 28 -98 31 -98 12 0 -13 169 -242 236 -321 19 -22 34 -43 34 -48 0 -24 -234 129 -400 261 -237 190 -466 445 -587 656 -99 172 -133 265 -133 367 0 60 3 72 25 93 13 14 29 25 35 25 6 0 56 -15 113 -34z m3157 -356 c96 -17 227 -40 290 -51 63 -11 140 -24 170 -29 30 -6 73 -14 95 -19 22 -5 65 -14 95 -21 99 -22 123 -27 285 -65 174 -41 212 -49 265 -60 45 -9 90 -26 90 -34 0 -3 -33 -22 -73 -43 -82 -41 -99 -44 -437 -57 -230 -10 -353 -7 -465 11 -226 35 -343 99 -434 237 -32 47 -53 61 -126 80 -27 8 -68 19 -90 26 -22 7 -60 18 -84 25 -72 19 -31 30 114 30 100 0 170 -7 305 -30z m1203 -1397 c-7 -2 -19 -2 -25 0 -7 3 -2 5 12 5 14 0 19 -2 13 -5z m-43 -12 c0 -5 -12 -12 -27 -15 -31 -8 -153 -43 -193 -56 -14 -5 -59 -19 -100 -31 -103 -30 -353 -112 -420 -138 -126 -48 -422 -206 -464 -248 -62 -61 -81 -127 -72 -253 3 -53 10 -120 16 -149 12 -63 5 -80 -19 -49 -24 31 -75 143 -90 198 -8 25 -17 58 -22 74 -18 57 -11 124 17 165 38 58 174 151 334 228 76 37 297 113 500 173 41 12 86 26 100 30 144 49 440 96 440 71z m-3163 -67 c-3 -3 -12 -4 -19 -1 -8 3 -5 6 6 6 11 1 17 -2 13 -5z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M4870 720 l0 -700 498 0 c374 0 501 3 510 12 15 15 18 1388 3 1388 -5 0 -12 -8 -15 -17 -4 -9 -113 -180 -243 -380 -206 -316 -263 -393 -263 -354 0 7 -341 542 -428 671 -10 14 -24 37 -31 53 -8 15 -18 27 -23 27 -4 0 -8 -315 -8 -700z"
  }))));
}

const ForwardRef = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(SvgMongooseJs);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "static/media/mongoose_js.31cfb118f32f59c7979553528a8d5893.svg");


/***/ }),

/***/ "./src/images/logos/nodejs.svg":
/*!*************************************!*\
  !*** ./src/images/logos/nodejs.svg ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "ReactComponent": () => (/* binding */ ForwardRef)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _defs, _g;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }



function SvgNodejs(_ref, svgRef) {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    width: "512px",
    height: "512px",
    viewBox: "0 -99 512 512",
    xmlns: "http://www.w3.org/2000/svg",
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    preserveAspectRatio: "xMidYMid",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("title", {
    id: titleId
  }, title) : null, _defs || (_defs = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("defs", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient", {
    x1: "68.188%",
    y1: "17.487%",
    x2: "27.823%",
    y2: "89.755%",
    id: "b"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#41873F",
    offset: "0%"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#418B3D",
    offset: "32.88%"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#419637",
    offset: "63.52%"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#3FA92D",
    offset: "93.19%"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#3FAE2A",
    offset: "100%"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    id: "a",
    d: "M57.903 1.85a5.957 5.957 0 0 0-5.894 0L3.352 29.933c-1.85 1.04-2.89 3.005-2.89 5.085v56.286c0 2.08 1.156 4.045 2.89 5.085l48.657 28.085a5.957 5.957 0 0 0 5.894 0l48.658-28.085c1.849-1.04 2.89-3.005 2.89-5.085V35.019c0-2.08-1.157-4.045-2.89-5.085L57.903 1.85z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient", {
    x1: "43.277%",
    y1: "55.169%",
    x2: "159.245%",
    y2: "-18.306%",
    id: "d"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#41873F",
    offset: "13.76%"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#54A044",
    offset: "40.32%"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#66B848",
    offset: "71.36%"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#6CC04A",
    offset: "90.81%"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient", {
    x1: "-4413.77%",
    y1: "13.43%",
    x2: "5327.93%",
    y2: "13.43%",
    id: "e"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#6CC04A",
    offset: "9.192%"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#66B848",
    offset: "28.64%"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#54A044",
    offset: "59.68%"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#41873F",
    offset: "86.24%"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient", {
    x1: "-4.389%",
    y1: "49.997%",
    x2: "101.499%",
    y2: "49.997%",
    id: "f"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#6CC04A",
    offset: "9.192%"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#66B848",
    offset: "28.64%"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#54A044",
    offset: "59.68%"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#41873F",
    offset: "86.24%"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient", {
    x1: "-9713.77%",
    y1: "36.21%",
    x2: "27.93%",
    y2: "36.21%",
    id: "g"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#6CC04A",
    offset: "9.192%"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#66B848",
    offset: "28.64%"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#54A044",
    offset: "59.68%"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#41873F",
    offset: "86.24%"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient", {
    x1: "-103.861%",
    y1: "50.275%",
    x2: "100.797%",
    y2: "50.275%",
    id: "h"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#6CC04A",
    offset: "9.192%"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#66B848",
    offset: "28.64%"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#54A044",
    offset: "59.68%"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#41873F",
    offset: "86.24%"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("linearGradient", {
    x1: "130.613%",
    y1: "-211.069%",
    x2: "4.393%",
    y2: "201.605%",
    id: "i"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#41873F",
    offset: "0%"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#418B3D",
    offset: "32.88%"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#419637",
    offset: "63.52%"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#3FA92D",
    offset: "93.19%"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("stop", {
    stopColor: "#3FAE2A",
    offset: "100%"
  })))), _g || (_g = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    fill: "none"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M253.11 313.094c-1.733 0-3.351-.462-4.854-1.271l-15.371-9.13c-2.312-1.272-1.156-1.734-.462-1.965 3.12-1.04 3.698-1.272 6.934-3.12.347-.232.81-.116 1.156.115l11.789 7.05c.462.231 1.04.231 1.386 0l46.115-26.698c.462-.231.694-.694.694-1.271v-53.28c0-.579-.232-1.04-.694-1.272l-46.115-26.582c-.462-.232-1.04-.232-1.386 0l-46.115 26.582c-.462.231-.694.809-.694 1.271v53.28c0 .463.232 1.04.694 1.272l12.598 7.281c6.819 3.467 11.095-.578 11.095-4.623v-52.587c0-.693.578-1.387 1.387-1.387h5.894c.694 0 1.387.578 1.387 1.387v52.587c0 9.13-4.97 14.447-13.638 14.447-2.658 0-4.738 0-10.633-2.89l-12.135-6.934c-3.005-1.733-4.854-4.97-4.854-8.437v-53.28c0-3.467 1.849-6.704 4.854-8.437l46.114-26.698c2.89-1.618 6.82-1.618 9.709 0l46.114 26.698c3.005 1.733 4.855 4.97 4.855 8.437v53.28c0 3.467-1.85 6.704-4.855 8.437l-46.114 26.698c-1.503.694-3.236 1.04-4.854 1.04zm14.216-36.637c-20.225 0-24.386-9.246-24.386-17.105 0-.694.578-1.387 1.387-1.387h6.01c.693 0 1.271.462 1.271 1.156.925 6.125 3.583 9.13 15.834 9.13 9.708 0 13.87-2.196 13.87-7.397 0-3.005-1.157-5.2-16.297-6.703-12.598-1.272-20.457-4.045-20.457-14.1 0-9.362 7.86-14.91 21.035-14.91 14.793 0 22.075 5.086 23 16.18 0 .348-.116.694-.347 1.041-.232.231-.578.462-.925.462h-6.01c-.578 0-1.156-.462-1.271-1.04-1.387-6.356-4.97-8.437-14.447-8.437-10.633 0-11.905 3.699-11.905 6.472 0 3.352 1.503 4.392 15.834 6.241 14.216 1.85 20.92 4.508 20.92 14.447-.116 10.171-8.437 15.95-23.116 15.95z",
    fill: "#539E43"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M110.028 104.712c0-2.08-1.156-4.046-3.005-5.086l-49.004-28.2c-.81-.463-1.734-.694-2.658-.81h-.463c-.924 0-1.849.347-2.658.81l-49.004 28.2c-1.85 1.04-3.005 3.005-3.005 5.086l.116 75.817c0 1.04.578 2.08 1.502 2.543.925.578 2.08.578 2.89 0l29.125-16.643c1.849-1.04 3.005-3.005 3.005-5.085v-35.482c0-2.08 1.155-4.045 3.005-5.085l12.366-7.166c.925-.578 1.965-.81 3.005-.81 1.04 0 2.08.232 2.89.81l12.366 7.166c1.85 1.04 3.005 3.004 3.005 5.085v35.482c0 2.08 1.156 4.045 3.005 5.085l29.125 16.643c.925.578 2.08.578 3.005 0 .925-.463 1.503-1.503 1.503-2.543l-.116-75.817zM345.571.347c-.924-.463-2.08-.463-2.89 0-.924.578-1.502 1.502-1.502 2.542v75.125c0 .693-.346 1.386-1.04 1.849-.693.346-1.387.346-2.08 0l-12.251-7.05a5.957 5.957 0 0 0-5.895 0l-49.004 28.316c-1.849 1.04-3.005 3.005-3.005 5.085v56.516c0 2.08 1.156 4.046 3.005 5.086l49.004 28.316a5.957 5.957 0 0 0 5.895 0l49.004-28.316c1.849-1.04 3.005-3.005 3.005-5.086V21.844c0-2.196-1.156-4.16-3.005-5.201L345.572.347zm-4.507 143.776c0 .578-.231 1.04-.694 1.271l-16.758 9.708a1.714 1.714 0 0 1-1.503 0l-16.758-9.708c-.463-.231-.694-.809-.694-1.271v-19.417c0-.578.231-1.04.694-1.271l16.758-9.709a1.714 1.714 0 0 1 1.503 0l16.758 9.709c.463.23.694.809.694 1.271v19.417zM508.648 124.244c1.85-1.04 2.89-3.005 2.89-5.086v-13.753c0-2.08-1.156-4.045-2.89-5.085l-48.657-28.2a5.957 5.957 0 0 0-5.894 0l-49.004 28.315c-1.85 1.04-3.005 3.005-3.005 5.086v56.516c0 2.08 1.155 4.045 3.005 5.085l48.657 27.738c1.85 1.04 4.045 1.04 5.779 0L489 178.45c.925-.463 1.503-1.503 1.503-2.543 0-1.04-.578-2.08-1.503-2.543l-49.235-28.316c-.924-.577-1.502-1.502-1.502-2.542v-17.683c0-1.04.578-2.08 1.502-2.543l15.372-8.784a2.821 2.821 0 0 1 3.005 0l15.371 8.784c.925.578 1.503 1.502 1.503 2.543v13.869c0 1.04.578 2.08 1.502 2.542.925.578 2.08.578 3.005 0l29.125-16.99z",
    fill: "#333"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M456.293 121.586a1.05 1.05 0 0 1 1.155 0l9.362 5.432c.347.23.578.577.578 1.04v10.864c0 .462-.231.809-.578 1.04l-9.362 5.432a1.05 1.05 0 0 1-1.155 0l-9.362-5.432c-.347-.231-.578-.578-.578-1.04v-10.864c0-.463.231-.81.578-1.04l9.362-5.432z",
    fill: "#539E43"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    transform: "translate(134.068 70.501)"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("mask", {
    id: "c",
    fill: "#fff"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("use", {
    xlinkHref: "#a"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("use", {
    fill: "url(#b)",
    xlinkHref: "#a"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    mask: "url(#c)"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M51.893 1.85L3.121 29.933C1.27 30.974 0 32.94 0 35.02v56.286c0 1.387.578 2.658 1.502 3.698L56.285 1.156c-1.387-.231-3.005-.116-4.392.693zM56.632 125.053c.462-.116.925-.347 1.387-.578l48.773-28.085c1.85-1.04 3.005-3.005 3.005-5.085V35.019c0-1.502-.694-3.005-1.734-4.045l-51.43 94.079z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M106.676 29.934L57.788 1.85a8.025 8.025 0 0 0-1.503-.578L1.502 95.12a6.082 6.082 0 0 0 1.619 1.387l48.888 28.085c1.387.809 3.005 1.04 4.507.577l51.432-94.078c-.347-.462-.81-.81-1.272-1.156z",
    fill: "url(#d)"
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    mask: "url(#c)"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M109.797 91.305V35.019c0-2.08-1.271-4.045-3.12-5.085L57.786 1.85a5.106 5.106 0 0 0-1.848-.693l53.511 91.42c.231-.347.347-.809.347-1.271zM3.12 29.934C1.272 30.974 0 32.94 0 35.02v56.286c0 2.08 1.387 4.045 3.12 5.085l48.889 28.085c1.156.693 2.427.925 3.814.693L3.467 29.818l-.346.116z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fill: "url(#e)",
    fillRule: "evenodd",
    d: "M50.391.809l-.693.347h.924l-.231-.347z",
    transform: "translate(0 -9.246)"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M106.792 105.636c1.387-.809 2.427-2.196 2.89-3.698L56.053 10.402c-1.387-.231-2.89-.116-4.16.693L3.351 39.065l52.355 95.465a8.057 8.057 0 0 0 2.196-.693l48.889-28.2z",
    fill: "url(#f)",
    fillRule: "evenodd",
    transform: "translate(0 -9.246)"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    fill: "url(#g)",
    fillRule: "evenodd",
    d: "M111.3 104.712l-.347-.578v.809l.346-.231z",
    transform: "translate(0 -9.246)"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M106.792 105.636l-48.773 28.085a6.973 6.973 0 0 1-2.196.693l.925 1.734 54.089-31.32v-.694l-1.387-2.312c-.231 1.618-1.271 3.005-2.658 3.814z",
    fill: "url(#h)",
    fillRule: "evenodd",
    transform: "translate(0 -9.246)"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M106.792 105.636l-48.773 28.085a6.973 6.973 0 0 1-2.196.693l.925 1.734 54.089-31.32v-.694l-1.387-2.312c-.231 1.618-1.271 3.005-2.658 3.814z",
    fill: "url(#i)",
    fillRule: "evenodd",
    transform: "translate(0 -9.246)"
  }))))));
}

const ForwardRef = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(SvgNodejs);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "static/media/nodejs.84ec8c0184f96aed84c87d0c94f9990f.svg");


/***/ }),

/***/ "./src/images/logos/react-bootstrap.svg":
/*!**********************************************!*\
  !*** ./src/images/logos/react-bootstrap.svg ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "ReactComponent": () => (/* binding */ ForwardRef)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _path, _path2;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }



function SvgReactBootstrap(_ref, svgRef) {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    id: "Layer_1",
    "data-name": "Layer 1",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 2127.98 2016.87",
    fill: "#41e0fd",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("title", {
    id: titleId
  }, title) : null, _path || (_path = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M888 1119.17c16-32.62 32.84-65.37 50.17-97.35l.15-.27 18.39-35.68 27.16-45 .17-.29c10.14-17.26 20.66-34.68 31.27-51.78l18.69-30.87c24.88-41.19 44.88-71.23 76.43-114.76 17-23.43 33.12-44 58.66-75.92l.06-.06 1.26-1.59.49-.63c10.37-13.22 20.84-26.25 31.11-38.73l.34-.42.2-.25c23.83-29.51 48.12-59.13 72.19-88l9.57-11.48V356.54H1267c-9.23-8.68-18.66-17.3-28.08-25.69-76.32-67.72-152.43-120.85-226.27-157.79-75.71-37.92-145.63-57.14-207.8-57.14-44.39 0-84.06 9.94-117.91 29.53-32.55 18.84-59.9 46.91-81.31 83.44-20.06 34.23-34.84 75.89-43.95 123.81-17.54 92.37-13.74 208 11 334.34 3.12 15.9 6.56 32 10.25 48-19.74 6-38.91 12.18-57.13 18.53-119.26 41.58-219 95.91-288.42 157.14-36 31.71-63.84 65.23-82.89 99.62-20.24 36.57-30.51 74.08-30.51 111.49 0 75 41.55 151 120.15 219.94 74 64.93 178.65 121.62 302.55 164 11.51 3.91 23.22 7.71 35 11.34-4.12 17.93-7.93 36-11.36 54-23.56 124.08-26.31 237.62-8 328.35 9.51 47 24.61 87.89 44.89 121.57 21.56 35.8 48.93 63.44 81.34 82.13 34.15 19.69 74.34 29.67 119.45 29.67 61.42 0 130.09-18.21 204.11-54.13 72.56-35.21 146.63-85.64 220.13-149.89 11.33-9.9 23-20.49 34.66-31.53h17.41v-174.39l-6.34-7.8-3-3.67-79.82-98.55-44.35-54.75c-22.39-27.64-58.25-78.79-101-144-34-51.84-58.76-93.47-70.5-113.63l-1.28-2.21c-20.49-35.33-35.71-63.79-47.93-86.64-15.3-28.63-30.39-57.87-44.91-87l2.66-5.17zm-80.86-172.89c-13.53-34.7-25.92-69.13-37-102.81 34.57-7.13 70.51-13.53 107.32-19.11-12.28 20.11-24.34 40.41-36 60.64s-23.12 40.69-34.32 61.28zm-38.25 462.1c11.45-34.86 24.31-70.56 38.39-106.59 11.29 20.7 22.87 41.3 34.58 61.53 12.27 21.19 25 42.48 37.95 63.58-38.46-5.32-75.62-11.53-110.92-18.51zM707.18 397.16c9-61.74 29.14-105.87 55.37-121.06 10.89-6.31 25.34-9.5 42.93-9.5 38.47 0 88.24 15.1 143.91 43.67 60.34 31 125.77 77.11 189.22 133.45q5.9 5.24 12.07 10.89c-55.81 61.71-110.81 130.28-163.68 204.1-90.08 8.8-176.68 21.94-257.76 39.11-2.93-12.84-5.68-25.75-8.2-38.5l-.24-1.32c-19.33-98.76-24.04-189-13.62-260.84zm11.31 727c-38.1 84-70.48 167.16-96.37 247.46-9-2.8-17.89-5.72-26.65-8.7-103-35.21-188.79-80.66-248.08-131.43-45.37-38.85-72.45-79.83-72.45-109.63 0-30.59 27.09-70 74.34-108.2 55-44.47 133.27-85.11 226.19-117.5 15.79-5.48 31.87-10.73 48-15.64 25.53 79.13 57.48 160.99 95.01 243.63zm.12 474.92c2.86-15 6-30.09 9.43-45.09 80 16.37 167.59 28.71 260.75 36.71 53.38 74.34 108.84 143.37 165.05 205.44-6.94 6.39-13.94 12.68-20.9 18.79-81.37 71.13-163.09 122.55-236.28 148.71l-1.52.54c-32.8 11.58-62.09 17.45-87 17.45-18.38 0-33.22-3.18-44.11-9.46-26.51-15.29-47.14-58.46-56.6-118.45-11.06-69.91-7.19-157.97 11.17-254.65z",
    transform: "translate(-123.98 -115.92)",
    id: "_Group_",
    "data-name": "<Group>"
  })), _path2 || (_path2 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M2195.07 1205.1q-56.26-103.45-165.54-134.23a2.85 2.85 0 0 1-1.79-2.85 3 3 0 0 1 1.37-2.68c54.24-30.16 95.93-73.11 125.15-127.9q44.15-82.89 44.16-199.49c0-128.25-32.45-223.65-97.06-287.11s-150.62-95-257.7-95h-578.35c-1.25 0-2.27 1.31-2.27 2.93V1894.3c0 1.62 1 2.93 2.27 2.93h546.57q115.42 0 199.11-33.69c55.91-22.42 101.4-52.68 137.21-90.68s61.92-83.33 78.66-136c16.74-52.23 25.1-108.8 25.1-169.24.04-105.37-19.08-192.57-56.89-262.52zm-722.32-628c0-1.62 1-2.93 2.27-2.93h339.46c56.95 0 100.51 16 130.65 47.55s45.2 86.4 45.2 164.18c0 69.18-16.74 121.92-50.25 159.08s-75.37 55.32-125.63 55.32H1475c-1.25 0-2.27-1.31-2.27-2.93zm518.16 1035.8c-34.86 42.76-84.41 64-148.07 64H1475c-1.25 0-2.27-1.31-2.27-2.93v-476.4c0-1.62 1-2.93 2.27-2.93h367.82c63.66 0 112.57 19.89 148.07 61.35s52.93 99.82 52.93 176.3c.02 77.77-17.76 138.27-52.91 180.61z",
    transform: "translate(-123.98 -115.92)"
  })));
}

const ForwardRef = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(SvgReactBootstrap);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "static/media/react-bootstrap.534ba5749ea53d6d943b273291be8174.svg");


/***/ }),

/***/ "./src/images/logos/react.svg":
/*!************************************!*\
  !*** ./src/images/logos/react.svg ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "ReactComponent": () => (/* binding */ ForwardRef)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _g;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }



function SvgReact(_ref, svgRef) {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    width: "256px",
    height: "256px",
    viewBox: "0 -14 256 256",
    xmlns: "http://www.w3.org/2000/svg",
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    preserveAspectRatio: "xMidYMid",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("title", {
    id: titleId
  }, title) : null, _g || (_g = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M210.483381,73.8236374 C207.827698,72.9095503 205.075867,72.0446761 202.24247,71.2267368 C202.708172,69.3261098 203.135596,67.4500894 203.515631,65.6059664 C209.753843,35.3248922 205.675082,10.9302478 191.747328,2.89849283 C178.392359,-4.80289661 156.551327,3.22703567 134.492936,22.4237776 C132.371761,24.2697233 130.244662,26.2241201 128.118477,28.2723861 C126.701777,26.917204 125.287358,25.6075897 123.876584,24.3549348 C100.758745,3.82852863 77.5866802,-4.82157937 63.6725966,3.23341515 C50.3303869,10.9571328 46.3792156,33.8904224 51.9945178,62.5880206 C52.5367729,65.3599011 53.1706189,68.1905639 53.8873982,71.068617 C50.6078941,71.9995641 47.4418534,72.9920277 44.4125156,74.0478303 C17.3093297,83.497195 0,98.3066828 0,113.667995 C0,129.533287 18.5815786,145.446423 46.8116526,155.095373 C49.0394553,155.856809 51.3511025,156.576778 53.7333796,157.260293 C52.9600965,160.37302 52.2875179,163.423318 51.7229345,166.398431 C46.3687351,194.597975 50.5500231,216.989464 63.8566899,224.664425 C77.6012619,232.590464 100.66852,224.443422 123.130185,204.809231 C124.905501,203.257196 126.687196,201.611293 128.472081,199.886102 C130.785552,202.113904 133.095375,204.222319 135.392897,206.199955 C157.14963,224.922338 178.637969,232.482469 191.932332,224.786092 C205.663234,216.837268 210.125675,192.78347 204.332202,163.5181 C203.88974,161.283006 203.374826,158.99961 202.796573,156.675661 C204.416503,156.196743 206.006814,155.702335 207.557482,155.188332 C236.905331,145.46465 256,129.745175 256,113.667995 C256,98.2510906 238.132466,83.3418093 210.483381,73.8236374 L210.483381,73.8236374 Z M204.118035,144.807565 C202.718197,145.270987 201.281904,145.718918 199.818271,146.153177 C196.578411,135.896354 192.205739,124.989735 186.854729,113.72131 C191.961041,102.721277 196.164656,91.9540963 199.313837,81.7638014 C201.93261,82.5215915 204.474374,83.3208483 206.923636,84.1643056 C230.613348,92.3195488 245.063763,104.377206 245.063763,113.667995 C245.063763,123.564379 229.457753,136.411268 204.118035,144.807565 L204.118035,144.807565 Z M193.603754,165.642007 C196.165567,178.582766 196.531475,190.282717 194.834536,199.429057 C193.309843,207.64764 190.243595,213.12715 186.452366,215.321689 C178.384612,219.991462 161.131788,213.921395 142.525146,197.909832 C140.392124,196.074366 138.243609,194.114502 136.088259,192.040261 C143.301619,184.151133 150.510878,174.979732 157.54698,164.793993 C169.922699,163.695814 181.614905,161.900447 192.218042,159.449363 C192.740247,161.555956 193.204126,163.621993 193.603754,165.642007 L193.603754,165.642007 Z M87.2761866,214.514686 C79.3938934,217.298414 73.1160375,217.378157 69.3211631,215.189998 C61.2461189,210.532528 57.8891498,192.554265 62.4682434,168.438039 C62.9927272,165.676183 63.6170041,162.839142 64.3365173,159.939216 C74.8234575,162.258154 86.4299951,163.926841 98.8353334,164.932519 C105.918826,174.899534 113.336329,184.06091 120.811247,192.08264 C119.178102,193.65928 117.551336,195.16028 115.933685,196.574699 C106.001303,205.256705 96.0479605,211.41654 87.2761866,214.514686 L87.2761866,214.514686 Z M50.3486141,144.746959 C37.8658105,140.48046 27.5570398,134.935332 20.4908634,128.884403 C14.1414664,123.446815 10.9357817,118.048415 10.9357817,113.667995 C10.9357817,104.34622 24.8334611,92.4562517 48.0123604,84.3748281 C50.8247961,83.3942121 53.7689223,82.4701001 56.8242337,81.6020363 C60.0276398,92.0224477 64.229889,102.917218 69.3011135,113.93411 C64.1642716,125.11459 59.9023288,136.182975 56.6674809,146.725506 C54.489347,146.099407 52.3791089,145.440499 50.3486141,144.746959 L50.3486141,144.746959 Z M62.7270678,60.4878073 C57.9160346,35.9004118 61.1112387,17.3525532 69.1516515,12.6982729 C77.7160924,7.74005624 96.6544653,14.8094222 116.614922,32.5329619 C117.890816,33.6657739 119.171723,34.8514442 120.456275,36.0781256 C113.018267,44.0647686 105.66866,53.1573386 98.6480514,63.0655695 C86.6081646,64.1815215 75.0831931,65.9741531 64.4868907,68.3746571 C63.8206914,65.6948233 63.2305903,63.0619242 62.7270678,60.4878073 L62.7270678,60.4878073 Z M173.153901,87.7550367 C170.620796,83.3796304 168.020249,79.1076627 165.369124,74.9523483 C173.537126,75.9849113 181.362914,77.3555864 188.712066,79.0329319 C186.505679,86.1041206 183.755673,93.4974728 180.518546,101.076741 C178.196419,96.6680702 175.740322,92.2229454 173.153901,87.7550367 L173.153901,87.7550367 Z M128.122121,43.8938899 C133.166461,49.3588189 138.218091,55.4603279 143.186789,62.0803968 C138.179814,61.8439007 133.110868,61.720868 128.000001,61.720868 C122.937434,61.720868 117.905854,61.8411667 112.929865,62.0735617 C117.903575,55.515009 122.99895,49.4217021 128.122121,43.8938899 L128.122121,43.8938899 Z M82.8018984,87.830679 C80.2715265,92.2183886 77.8609975,96.6393627 75.5753239,101.068539 C72.3906004,93.5156998 69.6661103,86.0886276 67.440586,78.9171899 C74.7446255,77.2826781 82.5335049,75.9461789 90.6495601,74.9332099 C87.9610684,79.1268011 85.3391054,83.4302106 82.8018984,87.8297677 L82.8018984,87.830679 L82.8018984,87.830679 Z M90.8833221,153.182899 C82.4979621,152.247395 74.5919739,150.979704 67.289757,149.390303 C69.5508242,142.09082 72.3354636,134.505173 75.5876271,126.789657 C77.8792246,131.215644 80.2993228,135.638441 82.8451877,140.03572 L82.8456433,140.03572 C85.4388987,144.515476 88.1255676,148.90364 90.8833221,153.182899 L90.8833221,153.182899 Z M128.424691,184.213105 C123.24137,178.620587 118.071264,172.434323 113.021912,165.780078 C117.923624,165.972373 122.921029,166.0708 128.000001,166.0708 C133.217953,166.0708 138.376211,165.953235 143.45336,165.727219 C138.468257,172.501308 133.434855,178.697141 128.424691,184.213105 L128.424691,184.213105 Z M180.622896,126.396409 C184.044571,134.195313 186.929004,141.741317 189.219234,148.9164 C181.796719,150.609693 173.782736,151.973534 165.339049,152.986959 C167.996555,148.775595 170.619884,144.430263 173.197646,139.960532 C175.805484,135.438399 178.28163,130.90943 180.622896,126.396409 L180.622896,126.396409 Z M163.724586,134.496971 C159.722835,141.435557 155.614455,148.059271 151.443648,154.311611 C143.847063,154.854776 135.998946,155.134562 128.000001,155.134562 C120.033408,155.134562 112.284171,154.887129 104.822013,154.402745 C100.48306,148.068386 96.285368,141.425078 92.3091341,134.556664 L92.3100455,134.556664 C88.3442923,127.706935 84.6943232,120.799333 81.3870228,113.930466 C84.6934118,107.045648 88.3338117,100.130301 92.276781,93.292874 L92.2758697,93.294241 C96.2293193,86.4385872 100.390102,79.8276317 104.688954,73.5329157 C112.302398,72.9573964 120.109505,72.6571055 127.999545,72.6571055 L128.000001,72.6571055 C135.925583,72.6571055 143.742714,72.9596746 151.353879,73.5402067 C155.587114,79.7888993 159.719645,86.3784378 163.688588,93.2350031 C167.702644,100.168578 171.389978,107.037901 174.724618,113.77508 C171.400003,120.627999 167.720871,127.566587 163.724586,134.496971 L163.724586,134.496971 Z M186.284677,12.3729198 C194.857321,17.3165548 198.191049,37.2542268 192.804953,63.3986692 C192.461372,65.0669011 192.074504,66.7661189 191.654369,68.4881206 C181.03346,66.0374921 169.500286,64.2138746 157.425315,63.0810626 C150.391035,53.0639249 143.101577,43.9572289 135.784778,36.073113 C137.751934,34.1806885 139.716356,32.3762092 141.672575,30.673346 C160.572216,14.2257007 178.236518,7.73185406 186.284677,12.3729198 L186.284677,12.3729198 Z M128.000001,90.8080696 C140.624975,90.8080696 150.859926,101.042565 150.859926,113.667995 C150.859926,126.292969 140.624975,136.527922 128.000001,136.527922 C115.375026,136.527922 105.140075,126.292969 105.140075,113.667995 C105.140075,101.042565 115.375026,90.8080696 128.000001,90.8080696 L128.000001,90.8080696 Z",
    fill: "#00D8FF"
  }))));
}

const ForwardRef = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(SvgReact);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "static/media/react.fdd3331d261ad6d5e1c92448737aa2aa.svg");


/***/ }),

/***/ "./src/images/logos/sass.svg":
/*!***********************************!*\
  !*** ./src/images/logos/sass.svg ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "ReactComponent": () => (/* binding */ ForwardRef)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _g;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }



function SvgSass(_ref, svgRef) {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    width: "256px",
    height: "256px",
    viewBox: "0 -32 256 256",
    xmlns: "http://www.w3.org/2000/svg",
    xmlnsXlink: "http://www.w3.org/1999/xlink",
    preserveAspectRatio: "xMidYMid",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("title", {
    id: titleId
  }, title) : null, _g || (_g = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    fill: "#CD6799"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M220.281239,110.513661 C211.374863,110.560291 203.634244,112.705282 197.152641,115.876138 C194.774499,111.166485 192.396357,106.969763 191.976685,103.892168 C191.510383,100.301639 190.95082,98.1100182 191.510383,93.8200364 C192.069945,89.5300546 194.587978,83.4214936 194.541348,82.9551913 C194.494718,82.4888889 193.981785,80.2972678 188.852459,80.2506375 C183.723133,80.2040073 179.29326,81.2298725 178.780328,82.5821494 C178.267395,83.9344262 177.28816,87.0120219 176.635337,90.182878 C175.749362,94.8459016 166.376685,111.492896 161.014208,120.21275 C159.288889,116.808743 157.796721,113.824408 157.47031,111.446266 C157.004007,107.855738 156.444444,105.664117 157.004007,101.374135 C157.56357,97.084153 160.081603,90.975592 160.034973,90.5092896 C159.988342,90.0429872 159.47541,87.8513661 154.346084,87.8047359 C149.216758,87.7581056 144.786885,88.7839709 144.273953,90.1362477 C143.76102,91.4885246 143.201457,94.6593807 142.128962,97.7369763 C141.056466,100.814572 128.606193,128.606193 125.342077,135.78725 C123.663388,139.471038 122.217851,142.408743 121.191985,144.413843 L121.191985,144.413843 C121.191985,144.413843 121.145355,144.553734 121.005464,144.786885 C120.11949,146.512204 119.606557,147.444809 119.606557,147.444809 C119.606557,147.444809 119.606557,147.444809 119.606557,147.491439 C118.907104,148.750455 118.16102,149.916211 117.787978,149.916211 C117.508197,149.916211 116.995264,146.558834 117.881239,141.989071 C119.746448,132.336612 124.176321,117.321676 124.12969,116.808743 C124.12969,116.528962 124.969035,113.917668 121.238616,112.565392 C117.601457,111.213115 116.295811,113.451366 115.969399,113.451366 C115.642987,113.451366 115.409836,114.24408 115.409836,114.24408 C115.409836,114.24408 119.466667,97.3639344 107.669217,97.3639344 C100.301639,97.3639344 90.1362477,105.430965 85.1001821,112.705282 C81.929326,114.430601 75.1679417,118.11439 67.940255,122.07796 C65.189071,123.616758 62.3446266,125.155556 59.6867031,126.601093 C59.5001821,126.414572 59.3136612,126.181421 59.1271403,125.9949 C44.8582878,110.746812 18.4655738,99.9752277 19.5846995,79.5045537 C20.0043716,72.0437158 22.5690346,52.4590164 70.2717668,28.6775956 C109.534426,9.32604736 140.776685,14.6885246 146.185792,26.579235 C153.926412,43.5526412 129.445537,75.0746812 88.8772313,79.6444444 C73.3959927,81.3697632 65.2823315,75.4010929 63.2306011,73.1628415 C61.0856102,70.8313297 60.7591985,70.691439 59.9664845,71.1577413 C58.6608379,71.8571949 59.5001821,73.9555556 59.9664845,75.1679417 C61.1788707,78.3387978 66.168306,83.9344262 74.6083789,86.6856102 C82.0692168,89.1103825 100.208379,90.4626594 122.17122,81.9759563 C146.745355,72.463388 165.957013,46.0240437 160.314754,23.8746812 C154.672495,1.3989071 117.368306,-6.01530055 82.0692168,6.52823315 C61.0856102,13.989071 38.3300546,25.7398907 21.9628415,41.0346084 C2.51803279,59.2204007 -0.559562842,75.028051 0.699453552,81.6495446 C5.22258652,105.151184 37.6306011,120.445902 50.5938069,131.777049 C49.9409836,132.150091 49.3347905,132.476503 48.8218579,132.756284 C42.340255,135.97377 17.6262295,148.890346 11.4710383,162.553005 C4.47650273,178.034244 12.5901639,189.13224 17.9526412,190.624408 C34.5996357,195.240801 51.7129326,186.940619 60.8990893,173.23133 C70.0852459,159.52204 68.9661202,141.70929 64.7227687,133.548998 C64.6761384,133.455738 64.6295082,133.362477 64.5362477,133.269217 C66.2149362,132.289982 67.940255,131.264117 69.6189435,130.284882 C72.9296903,128.326412 76.1938069,126.507832 78.9916211,125.015665 C77.4061931,129.352277 76.2404372,134.528233 75.6808743,141.989071 C74.9814208,150.755556 78.571949,162.133333 83.2816029,166.609836 C85.3799636,168.568306 87.8513661,168.614936 89.4367942,168.614936 C94.9391621,168.614936 97.4105647,164.045173 100.161749,158.636066 C103.519126,152.014572 106.550091,144.320583 106.550091,144.320583 C106.550091,144.320583 102.773042,165.117668 113.031694,165.117668 C116.762113,165.117668 120.539162,160.268124 122.217851,157.796721 L122.217851,157.843352 C122.217851,157.843352 122.311111,157.703461 122.497632,157.377049 C122.870674,156.770856 123.103825,156.397814 123.103825,156.397814 L123.103825,156.304554 C124.595993,153.69326 127.95337,147.77122 132.942805,137.93224 C139.377778,125.248816 145.579599,109.394536 145.579599,109.394536 C145.579599,109.394536 146.139162,113.264845 148.051002,119.699818 C149.170128,123.476867 151.501639,127.626958 153.366849,131.637158 C151.874681,133.735519 150.942077,134.901275 150.942077,134.901275 C150.942077,134.901275 150.942077,134.901275 150.988707,134.947905 C149.776321,136.533333 148.470674,138.258652 147.025137,139.937341 C141.942441,145.999271 135.88051,152.947177 135.041166,154.952277 C134.061931,157.330419 134.295082,159.055738 136.160291,160.454645 C137.512568,161.48051 139.937341,161.620401 142.408743,161.48051 C146.978506,161.154098 150.195993,160.034973 151.781421,159.335519 C154.252823,158.449545 157.143898,157.097268 159.848452,155.092168 C164.837887,151.408379 167.868852,146.139162 167.589071,139.191257 C167.44918,135.367577 166.190164,131.543898 164.651366,127.95337 C165.117668,127.300546 165.537341,126.647723 166.003643,125.9949 C173.884153,114.477231 179.992714,101.840437 179.992714,101.840437 C179.992714,101.840437 180.552277,105.710747 182.464117,112.145719 C183.396721,115.409836 185.308561,118.953734 186.98725,122.404372 C179.573042,128.419672 175.003279,135.414208 173.37122,139.983971 C170.433515,148.470674 172.718397,152.294353 177.055009,153.180328 C179.013479,153.6 181.811293,152.667395 183.863024,151.781421 C186.474317,150.942077 189.551913,149.496539 192.489617,147.351548 C197.479053,143.66776 202.281967,138.538434 202.002186,131.590528 C201.862295,128.419672 201.022951,125.295446 199.857195,122.264481 C206.152277,119.653188 214.265938,118.20765 224.617851,119.420036 C246.813843,122.03133 251.197086,135.88051 250.357741,141.70929 C249.518397,147.538069 244.855373,150.708925 243.316576,151.68816 C241.777778,152.667395 241.264845,152.993807 241.404736,153.69326 C241.591257,154.719126 242.337341,154.672495 243.642987,154.485974 C245.461566,154.159563 255.300546,149.776321 255.720219,139.051366 C256.419672,125.342077 243.363206,110.37377 220.281239,110.513661 L220.281239,110.513661 Z M49.0550091,168.241894 C41.6874317,176.262295 31.4287796,179.29326 26.9989071,176.728597 C22.242623,173.977413 24.1078324,162.133333 33.1540984,153.64663 C38.6564663,148.470674 45.7442623,143.66776 50.4539162,140.730055 C51.5264117,140.077231 53.1118397,139.144627 55.0236794,137.978871 C55.3500911,137.79235 55.536612,137.699089 55.536612,137.699089 L55.536612,137.699089 C55.9096539,137.465938 56.2826958,137.232787 56.6557377,136.999636 C59.9664845,149.123497 56.7956284,159.801821 49.0550091,168.241894 L49.0550091,168.241894 Z M102.679781,131.777049 C100.115118,138.025501 94.7526412,154.019672 91.4885246,153.133698 C88.6907104,152.387614 86.9653916,140.263752 90.9289617,128.279781 C92.9340619,122.264481 97.1774135,115.083424 99.648816,112.28561 C103.659016,107.809107 108.088889,106.31694 109.161384,108.135519 C110.513661,110.513661 104.265209,127.860109 102.679781,131.777049 L102.679781,131.777049 Z M146.931876,152.947177 C145.859381,153.50674 144.833515,153.879781 144.367213,153.6 C144.040801,153.413479 144.833515,152.667395 144.833515,152.667395 C144.833515,152.667395 150.382514,146.698725 152.574135,143.994171 C153.833151,142.408743 155.325319,140.543534 156.910747,138.445173 L156.910747,139.051366 C156.910747,146.185792 150.009472,150.988707 146.931876,152.947177 L146.931876,152.947177 Z M181.065209,145.159927 C180.272495,144.600364 180.412386,142.735155 183.07031,136.906375 C184.096175,134.621494 186.520947,130.797814 190.671038,127.114026 C191.137341,128.606193 191.463752,130.05173 191.417122,131.404007 C191.370492,140.403643 184.935519,143.76102 181.065209,145.159927 L181.065209,145.159927 Z"
  }))));
}

const ForwardRef = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(SvgSass);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "static/media/sass.02dda4cb70eb34023b9a05eecd50e50e.svg");


/***/ }),

/***/ "./src/images/phaser-pictures/image2vector.svg":
/*!*****************************************************!*\
  !*** ./src/images/phaser-pictures/image2vector.svg ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "ReactComponent": () => (/* binding */ ForwardRef)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _g;function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function SvgImage2Vector(_ref,svgRef){let{title,titleId,...props}=_ref;return/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",_extends({id:"svg",xmlns:"http://www.w3.org/2000/svg",xmlnsXlink:"http://www.w3.org/1999/xlink",width:400,height:400.59685863874347,viewBox:"0, 0, 400,346.59685863874347",ref:svgRef,"aria-labelledby":titleId},props),title?/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("title",{id:titleId},title):null,_g||(_g=/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g",{id:"svgg"},/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{id:"path0",d:"M310.225 8.421 C 309.653 8.710,309.359 9.150,309.359 9.716 C 309.359 10.866,311.741 11.140,312.985 10.132 C 314.728 8.721,312.439 7.301,310.225 8.421 M155.402 24.460 C 155.288 24.759,155.364 25.173,155.572 25.381 C 156.072 25.882,157.052 25.100,156.788 24.411 C 156.535 23.751,155.663 23.781,155.402 24.460 M131.889 27.974 C 123.565 30.816,122.976 43.022,130.817 50.203 C 139.168 57.851,152.388 51.819,148.931 41.938 L 148.387 40.381 148.351 42.634 C 148.170 53.994,133.947 55.157,128.603 44.249 C 123.609 34.058,131.502 25.019,140.818 30.261 C 143.216 31.611,144.529 31.709,143.163 30.436 C 140.662 28.107,135.075 26.886,131.889 27.974 M349.260 39.351 C 348.952 39.659,348.700 40.045,348.700 40.208 C 348.700 41.380,350.292 41.799,350.927 40.794 C 351.664 39.625,350.229 38.382,349.260 39.351 M134.142 41.075 C 134.142 41.360,134.298 41.594,134.489 41.594 C 134.679 41.594,134.835 41.360,134.835 41.075 C 134.835 40.789,134.679 40.555,134.489 40.555 C 134.298 40.555,134.142 40.789,134.142 41.075 M131.380 41.615 C 131.374 41.912,131.598 42.458,131.878 42.828 C 132.285 43.366,132.389 43.393,132.398 42.961 C 132.404 42.663,132.180 42.117,131.900 41.747 C 131.493 41.209,131.389 41.183,131.380 41.615 M21.664 44.566 C 19.189 45.853,18.243 47.874,18.617 51.068 C 18.795 52.582,18.884 52.719,19.546 52.502 C 24.156 50.986,29.750 49.813,33.449 49.586 L 37.608 49.330 34.251 49.275 L 30.893 49.220 29.918 47.400 C 28.328 44.434,24.467 43.108,21.664 44.566 M117.331 48.028 C 115.786 48.928,114.984 49.195,114.211 49.065 L 113.172 48.889 114.034 49.371 C 114.508 49.636,114.976 49.807,115.074 49.752 C 119.387 47.302,120.277 47.473,120.277 50.749 C 120.277 52.173,120.433 53.435,120.624 53.553 C 121.325 53.986,121.047 48.010,120.337 47.367 C 119.544 46.650,119.783 46.598,117.331 48.028 M256.953 47.208 C 256.069 47.635,255.485 48.731,256.322 48.392 C 257.766 47.808,257.962 47.822,257.004 48.441 C 254.534 50.037,253.231 52.338,253.782 54.133 L 254.141 55.303 256.754 54.972 C 259.195 54.663,261.993 54.908,264.737 55.671 C 265.363 55.845,265.478 55.776,265.306 55.328 C 265.187 55.019,265.224 54.766,265.388 54.765 C 265.678 54.765,265.718 49.647,265.438 48.437 C 265.156 47.222,264.600 47.047,261.543 47.207 C 259.905 47.293,258.763 47.238,259.005 47.084 C 259.672 46.660,257.859 46.770,256.953 47.208 M109.626 49.913 C 109.626 50.771,109.694 51.122,109.777 50.693 C 109.859 50.264,109.859 49.562,109.777 49.133 C 109.694 48.705,109.626 49.055,109.626 49.913 M111.201 52.195 C 111.064 54.346,110.973 54.555,109.600 55.860 C 107.992 57.391,107.909 57.539,108.666 57.539 C 108.951 57.539,109.185 57.394,109.185 57.217 C 109.185 56.557,113.470 52.819,115.495 51.713 C 118.153 50.261,118.544 50.401,118.544 52.806 C 118.544 54.133,118.713 54.820,119.121 55.157 C 119.642 55.587,119.659 55.560,119.294 54.875 C 119.072 54.459,118.891 53.172,118.891 52.016 C 118.891 49.650,118.772 49.576,116.638 50.607 C 114.883 51.454,114.452 51.454,113.172 50.607 C 111.557 49.538,111.360 49.697,111.201 52.195 M66.313 51.386 C 65.895 52.318,66.081 53.033,66.741 53.033 C 67.348 53.033,68.052 51.750,67.802 51.099 C 67.515 50.353,66.706 50.509,66.313 51.386 M266.598 51.878 C 266.572 52.291,266.461 52.915,266.352 53.265 C 266.163 53.866,266.173 53.867,266.548 53.283 C 266.765 52.944,266.876 52.320,266.794 51.896 C 266.646 51.127,266.645 51.127,266.598 51.878 M108.750 53.816 C 108.470 54.243,107.363 55.217,106.293 55.979 C 104.258 57.428,103.611 58.576,104.336 59.450 C 104.889 60.116,106.031 60.113,106.287 59.445 C 106.548 58.765,106.856 58.788,108.569 59.616 C 109.948 60.283,110.487 60.322,110.119 59.728 C 110.022 59.573,109.153 59.140,108.187 58.766 C 105.937 57.896,105.820 57.500,107.385 56.062 C 109.329 54.277,109.960 53.471,109.593 53.244 C 109.410 53.131,109.031 53.388,108.750 53.816 M117.863 57.168 C 115.395 57.356,115.238 57.421,114.483 58.543 C 113.312 60.286,113.522 60.650,114.734 58.977 L 115.776 57.539 118.546 57.539 C 120.162 57.539,121.317 57.395,121.317 57.192 C 121.317 57.002,121.122 56.874,120.884 56.908 C 120.646 56.943,119.286 57.060,117.863 57.168 M254.333 57.391 C 253.192 58.010,253.037 59.411,254.050 59.953 C 255.045 60.486,257.277 60.388,258.155 59.772 C 260.542 58.100,257.043 55.920,254.333 57.391 M110.572 58.179 C 110.572 58.399,110.716 58.579,110.892 58.579 C 111.068 58.579,111.591 59.376,112.054 60.350 C 112.656 61.616,112.956 61.961,113.109 61.563 C 113.227 61.256,113.191 61.005,113.029 61.005 C 112.868 61.005,112.547 60.549,112.315 59.990 C 111.850 58.866,110.572 57.538,110.572 58.179 M27.740 61.102 C 26.572 61.693,25.303 63.664,25.303 64.886 C 25.303 65.977,26.176 67.938,26.661 67.938 C 26.826 67.938,27.079 68.367,27.223 68.891 L 27.485 69.844 27.851 68.647 C 28.948 65.060,32.502 63.670,37.435 64.898 C 37.721 64.969,37.604 64.872,37.175 64.683 C 36.746 64.493,36.395 64.212,36.395 64.058 C 36.395 63.904,36.017 63.778,35.554 63.778 C 35.081 63.778,34.429 63.418,34.065 62.955 C 32.608 61.103,29.524 60.199,27.740 61.102 M78.163 68.429 C 73.794 69.612,74.043 69.225,75.594 72.421 C 76.339 73.959,76.950 75.373,76.950 75.564 C 76.950 76.686,77.864 75.482,79.253 72.530 C 81.168 68.462,81.517 67.577,81.187 67.634 C 81.049 67.658,79.688 68.015,78.163 68.429 M30.645 68.412 C 30.385 69.090,30.740 69.671,31.414 69.671 C 31.754 69.671,31.899 69.407,31.827 68.918 C 31.692 68.004,30.928 67.677,30.645 68.412 M69.671 70.934 C 65.162 72.568,61.862 73.921,61.450 74.305 C 60.993 74.731,68.098 87.295,68.816 87.330 C 69.778 87.378,75.910 79.927,75.910 78.710 C 75.910 78.070,72.677 70.784,72.209 70.371 C 72.052 70.232,70.910 70.486,69.671 70.934 M55.583 76.990 C 50.931 79.404,49.220 80.425,49.220 80.788 C 49.220 81.063,55.527 90.891,56.184 91.640 C 56.872 92.425,63.845 90.696,66.460 89.092 L 67.581 88.404 66.806 87.213 C 66.380 86.558,64.627 83.596,62.912 80.631 C 59.308 74.404,59.950 74.723,55.583 76.990 M77.643 80.439 C 77.643 80.642,77.276 81.305,76.828 81.912 C 75.582 83.597,75.450 83.904,76.072 83.665 C 76.535 83.487,76.562 83.599,76.252 84.414 C 75.677 85.925,76.709 84.890,78.164 82.493 C 79.597 80.136,79.703 79.666,78.503 81.003 L 77.631 81.976 77.848 81.023 C 77.967 80.498,77.970 80.069,77.854 80.069 C 77.738 80.069,77.643 80.236,77.643 80.439 M44.329 83.622 C 40.257 86.447,37.456 88.541,37.445 88.770 C 37.419 89.313,47.004 91.351,51.269 91.709 C 54.757 92.002,54.769 92.380,51.116 86.801 C 49.665 84.586,48.395 82.555,48.292 82.288 C 47.966 81.437,47.020 81.756,44.329 83.622 M332.289 87.982 C 330.240 90.247,332.476 93.266,334.772 91.334 C 335.339 90.858,335.974 90.468,336.185 90.468 C 336.828 90.468,336.612 88.779,335.875 88.042 C 334.990 87.156,333.066 87.125,332.289 87.982 M202.125 108.821 C 201.726 109.083,201.371 135.479,201.744 137.142 C 201.931 137.974,202.484 138.866,203.217 139.515 C 205.898 141.890,214.625 149.466,218.520 152.800 C 222.900 156.548,228.969 161.798,229.609 162.392 C 229.814 162.583,232.439 164.890,235.442 167.520 C 238.445 170.149,240.901 172.475,240.901 172.688 C 240.901 172.972,235.515 173.011,220.755 172.834 L 200.608 172.593 200.845 178.064 C 200.976 181.073,201.222 185.173,201.394 187.175 C 201.565 189.177,201.812 193.272,201.942 196.276 C 202.187 201.902,202.574 203.439,203.512 202.513 C 204.268 201.768,269.582 201.892,270.409 202.641 C 270.986 203.162,271.099 203.131,272.032 202.198 C 273.228 201.002,273.346 200.334,273.824 192.028 C 274.016 188.692,274.325 184.012,274.510 181.629 C 274.696 179.246,274.919 176.288,275.006 175.057 L 275.164 172.817 271.984 169.517 C 270.235 167.701,268.726 166.136,268.631 166.037 C 268.536 165.939,266.663 163.986,264.471 161.698 C 262.278 159.411,256.897 153.804,252.512 149.238 C 248.128 144.673,243.950 140.320,243.227 139.564 C 242.505 138.808,242.037 138.074,242.187 137.932 C 242.536 137.604,273.432 142.748,275.714 143.514 C 276.929 143.922,277.283 143.541,277.291 141.817 C 277.294 141.177,277.527 137.121,277.808 132.805 C 278.090 128.488,278.389 123.844,278.472 122.483 L 278.623 120.010 276.313 119.450 C 273.619 118.797,267.230 117.450,262.045 116.441 C 260.043 116.052,257.314 115.518,255.979 115.254 C 254.645 114.991,251.993 114.523,250.087 114.215 C 248.180 113.907,245.295 113.439,243.674 113.175 C 240.732 112.696,236.445 112.109,228.596 111.112 C 222.564 110.346,212.990 109.430,203.548 108.716 C 202.926 108.669,202.286 108.716,202.125 108.821 M163.258 112.847 C 158.866 113.605,149.590 115.131,142.114 116.326 C 140.303 116.616,138.476 116.923,138.054 117.009 C 137.272 117.168,136.966 117.906,136.248 121.369 C 135.561 124.681,134.837 128.060,133.287 135.182 C 132.395 139.281,131.442 143.726,131.170 145.061 C 130.897 146.395,130.438 148.501,130.150 149.740 C 129.862 150.979,129.411 153.007,129.148 154.246 C 128.885 155.485,128.168 158.761,127.555 161.525 C 126.943 164.289,126.243 167.487,126.000 168.631 C 124.758 174.476,124.340 176.435,123.928 178.336 C 123.681 179.480,123.229 181.586,122.924 183.016 C 122.619 184.445,121.914 187.643,121.359 190.121 C 116.224 213.028,116.304 211.181,120.500 210.061 C 121.807 209.712,126.153 208.557,130.156 207.496 C 134.159 206.434,139.385 205.021,141.768 204.356 C 146.824 202.945,146.276 202.721,148.718 207.191 C 149.526 208.669,150.320 209.931,150.483 209.994 C 150.646 210.058,150.780 210.322,150.780 210.580 C 150.780 210.839,150.921 211.138,151.094 211.245 C 151.267 211.352,151.241 210.893,151.036 210.226 C 150.831 209.558,150.534 209.012,150.375 209.012 C 150.216 209.012,150.087 208.842,150.087 208.635 C 150.087 208.427,149.608 207.224,149.023 205.960 C 147.475 202.615,147.474 202.400,149.000 196.528 C 152.802 181.896,153.690 178.401,154.456 175.043 C 154.912 173.042,155.646 170.079,156.087 168.460 C 156.888 165.517,156.888 165.515,156.227 163.780 C 154.848 160.162,152.254 151.806,152.469 151.674 C 152.592 151.598,156.045 150.886,160.142 150.091 C 164.239 149.297,169.307 148.281,171.404 147.834 C 175.609 146.937,176.046 147.032,176.183 148.880 L 176.256 149.875 170.364 150.973 C 163.751 152.205,157.512 153.467,156.561 153.765 C 156.133 153.898,156.006 154.148,156.168 154.537 C 156.299 154.854,156.857 156.413,157.407 158.002 C 157.957 159.592,159.203 162.789,160.175 165.108 C 161.147 167.427,162.612 170.962,163.431 172.964 C 164.250 174.965,165.469 177.929,166.140 179.549 C 166.812 181.170,168.240 184.679,169.316 187.348 C 170.391 190.017,171.475 192.669,171.725 193.241 C 171.976 193.813,172.605 195.412,173.122 196.794 C 174.102 199.409,174.401 199.648,175.622 198.794 C 176.024 198.512,181.245 197.088,187.224 195.631 C 193.202 194.173,198.198 192.883,198.325 192.764 C 198.543 192.560,197.869 178.311,197.401 173.225 C 197.219 171.256,196.757 169.995,194.476 165.253 C 190.743 157.490,188.052 151.868,186.304 148.180 C 185.491 146.464,183.932 143.189,182.839 140.901 C 181.747 138.614,180.090 135.141,179.158 133.185 C 178.225 131.228,176.400 127.407,175.101 124.693 C 173.803 121.978,171.907 118.003,170.887 115.858 C 169.628 113.207,168.859 111.971,168.486 111.999 C 168.184 112.022,165.832 112.403,163.258 112.847 M111.082 123.042 C 107.846 124.336,104.263 125.810,103.120 126.317 C 101.976 126.825,100.263 127.584,99.314 128.005 C 97.034 129.015,90.940 131.953,87.731 133.588 L 85.168 134.895 85.415 139.804 C 85.877 148.972,86.251 160.297,86.101 160.540 C 85.923 160.829,83.537 161.647,83.379 161.473 C 83.319 161.406,83.004 155.815,82.679 149.047 C 81.997 134.848,82.298 136.308,80.284 137.419 C 79.403 137.904,77.942 138.706,77.036 139.201 C 76.131 139.695,71.825 142.230,67.468 144.833 L 59.546 149.567 59.745 161.005 C 60.022 176.942,60.622 184.483,62.933 201.040 C 63.897 207.947,65.847 218.737,67.151 224.377 C 68.082 228.405,67.937 228.418,81.456 223.135 C 85.882 221.405,87.923 220.841,87.545 221.453 C 87.385 221.712,87.814 221.837,88.861 221.837 C 90.013 221.837,90.681 222.061,91.445 222.704 C 93.244 224.218,93.066 223.640,91.097 221.575 L 89.194 219.580 88.770 214.556 C 88.536 211.793,88.123 206.880,87.852 203.640 C 87.312 197.202,86.775 191.072,86.433 187.460 L 86.213 185.144 87.511 184.602 C 89.462 183.787,89.262 183.176,90.099 192.548 C 90.852 200.976,91.222 205.029,91.697 210.052 C 91.977 213.007,92.205 216.077,92.203 216.874 C 92.201 218.080,92.370 218.444,93.208 219.041 C 94.438 219.917,94.504 219.920,94.716 219.110 C 94.905 218.387,95.032 218.335,104.679 215.062 C 114.531 211.720,113.320 212.670,114.408 207.424 C 114.919 204.961,115.836 200.685,116.445 197.920 C 118.682 187.776,118.603 188.759,117.942 179.273 C 117.253 169.395,117.103 126.480,117.753 125.318 C 118.051 124.785,118.243 124.976,119.092 126.654 C 119.754 127.962,120.243 128.550,120.566 128.427 C 120.869 128.310,120.981 128.415,120.869 128.708 C 120.770 128.964,120.895 129.174,121.146 129.174 C 121.821 129.174,121.157 127.667,118.977 124.250 C 118.738 123.876,118.385 123.204,118.192 122.756 C 117.212 120.477,117.524 120.465,111.082 123.042 M281.663 122.790 C 281.542 123.791,281.216 127.184,280.938 130.329 C 280.659 133.475,280.200 138.544,279.916 141.594 C 279.632 144.645,279.237 149.636,279.038 152.686 C 278.839 155.737,278.520 160.182,278.328 162.565 C 278.137 164.948,277.825 169.705,277.635 173.137 C 277.446 176.568,277.048 183.738,276.752 189.070 C 276.167 199.589,276.175 199.653,278.029 199.653 C 278.359 199.653,281.488 200.203,284.982 200.876 C 288.476 201.548,293.752 202.555,296.707 203.114 C 299.662 203.673,305.038 204.693,308.653 205.382 C 315.937 206.769,316.118 206.746,316.118 204.420 C 316.118 203.874,316.270 202.773,316.455 201.973 C 318.000 195.313,319.645 185.347,319.240 185.097 C 318.995 184.945,317.451 184.471,315.809 184.043 C 314.168 183.615,311.187 182.837,309.185 182.314 C 307.184 181.791,304.181 181.009,302.513 180.577 L 299.480 179.791 299.480 178.067 C 299.480 176.063,298.897 176.088,305.199 177.817 C 316.209 180.838,318.457 181.410,319.392 181.432 L 320.413 181.456 321.718 174.523 C 322.436 170.711,323.105 167.258,323.207 166.851 C 323.411 166.025,322.509 165.586,312.652 161.716 C 309.887 160.631,307.158 159.537,306.586 159.286 C 306.014 159.034,304.415 158.392,303.033 157.859 L 300.520 156.890 300.520 155.221 C 300.520 153.195,300.143 153.191,305.190 155.270 C 309.975 157.240,322.186 162.031,323.236 162.350 C 323.883 162.547,323.992 162.299,324.555 159.359 C 324.893 157.595,325.381 155.061,325.640 153.726 C 325.899 152.392,326.442 149.506,326.848 147.314 C 327.254 145.121,327.735 142.674,327.918 141.874 C 328.420 139.676,328.372 139.566,326.602 138.845 C 325.697 138.476,323.709 137.598,322.184 136.894 C 314.494 133.342,300.779 127.716,292.028 124.525 C 289.931 123.760,286.881 122.648,285.251 122.053 C 283.621 121.457,282.196 120.971,282.085 120.971 C 281.973 120.971,281.784 121.789,281.663 122.790 M29.521 124.748 C 27.696 127.423,26.611 132.086,27.931 131.580 C 28.233 131.464,28.691 131.369,28.950 131.369 C 29.208 131.369,29.421 131.096,29.422 130.763 C 29.427 129.613,30.062 127.221,30.503 126.690 C 30.867 126.251,30.836 126.036,30.323 125.470 C 29.726 124.810,29.726 124.757,30.331 124.088 C 30.677 123.706,30.892 123.324,30.808 123.240 C 30.724 123.156,30.145 123.835,29.521 124.748 M315.010 135.561 C 315.905 135.960,317.447 136.662,318.436 137.120 C 319.425 137.579,320.361 137.960,320.516 137.967 C 320.671 137.973,321.421 138.280,322.184 138.648 C 322.946 139.017,323.742 139.323,323.953 139.330 C 324.599 139.350,326.173 141.007,326.002 141.488 C 325.914 141.737,325.586 143.579,325.275 145.581 C 324.963 147.582,324.485 150.468,324.213 151.993 C 323.940 153.518,323.569 155.772,323.389 157.002 C 322.842 160.724,322.879 160.720,316.573 157.840 C 315.585 157.388,314.610 157.019,314.407 157.019 C 314.204 157.019,314.038 156.870,314.038 156.688 C 314.038 156.506,313.485 156.253,312.809 156.127 C 312.133 156.000,311.648 155.827,311.732 155.743 C 311.966 155.510,316.118 156.429,316.118 156.714 C 316.118 156.852,316.586 157.067,317.158 157.192 C 317.730 157.318,318.198 157.552,318.198 157.712 C 318.198 157.873,318.666 158.107,319.237 158.232 C 319.809 158.358,320.277 158.604,320.277 158.780 C 320.277 158.955,320.725 159.099,321.272 159.099 C 322.366 159.099,322.692 158.170,322.700 155.026 C 322.702 154.216,322.849 153.553,323.026 153.553 C 323.204 153.553,323.458 152.305,323.591 150.780 C 323.724 149.255,323.956 148.007,324.107 148.007 C 324.350 148.007,324.955 141.786,324.799 140.901 C 324.765 140.711,324.514 140.600,324.241 140.656 C 323.967 140.712,323.744 140.608,323.744 140.424 C 323.744 140.240,323.276 139.987,322.704 139.861 C 322.132 139.736,321.664 139.507,321.664 139.352 C 321.664 139.198,321.118 138.970,320.451 138.844 C 319.783 138.719,319.237 138.488,319.237 138.331 C 319.237 138.174,318.696 137.958,318.035 137.851 C 317.374 137.743,316.480 137.327,316.049 136.925 C 315.618 136.524,314.874 136.097,314.395 135.977 C 313.442 135.738,312.334 134.835,312.993 134.835 C 313.207 134.835,314.115 135.162,315.010 135.561 M331.244 142.057 C 329.684 150.144,329.378 151.752,328.594 155.979 C 328.188 158.172,327.485 161.837,327.034 164.125 C 326.582 166.412,325.728 170.858,325.136 174.003 C 323.964 180.229,321.549 192.823,319.865 201.486 C 318.625 207.870,318.345 207.205,322.603 207.996 C 324.469 208.343,328.560 209.120,331.693 209.723 C 338.454 211.024,338.475 211.016,338.140 207.452 C 338.032 206.308,337.707 198.198,337.417 189.428 C 337.128 180.659,336.762 171.300,336.604 168.631 C 336.262 162.833,336.208 162.928,338.821 164.742 C 344.251 168.508,349.553 172.072,352.942 174.231 C 356.827 176.707,357.150 177.116,356.957 179.314 C 356.819 180.878,357.510 181.230,347.640 174.568 C 343.440 171.732,339.911 169.505,339.798 169.618 C 339.606 169.810,339.968 178.463,340.763 192.721 C 340.950 196.057,341.250 207.990,341.432 219.237 C 341.732 237.843,342.183 250.791,342.543 251.151 C 342.620 251.228,343.842 250.920,345.258 250.467 C 346.675 250.014,349.003 249.302,350.433 248.886 C 351.863 248.469,353.423 247.996,353.899 247.834 C 354.376 247.671,355.936 247.200,357.366 246.787 C 361.267 245.659,362.218 245.299,362.218 244.954 C 362.218 244.643,361.490 240.233,360.776 236.222 C 360.573 235.078,360.279 233.206,360.124 232.062 C 359.968 230.919,359.587 228.423,359.275 226.516 C 358.964 224.610,358.495 221.646,358.233 219.931 C 357.971 218.215,357.444 214.783,357.061 212.305 C 355.636 203.072,355.236 200.467,354.927 198.404 C 354.753 197.241,354.517 196.048,354.404 195.753 C 353.957 194.587,355.003 194.975,360.321 197.947 C 367.447 201.929,366.893 202.044,367.941 196.360 C 368.258 194.645,368.658 192.539,368.830 191.681 C 369.436 188.667,370.188 179.328,370.190 174.811 L 370.191 170.246 363.518 163.503 C 359.848 159.795,355.286 155.390,353.380 153.715 C 351.473 152.040,349.445 150.258,348.873 149.756 C 346.090 147.312,334.319 138.233,332.577 137.186 C 332.360 137.056,331.848 138.930,331.244 142.057 M335.113 141.908 C 335.627 142.176,336.438 142.819,336.915 143.338 L 337.782 144.280 336.915 144.018 C 336.438 143.874,335.924 143.543,335.771 143.282 C 335.619 143.021,335.281 142.808,335.020 142.808 C 334.760 142.808,334.474 142.613,334.386 142.374 C 334.298 142.136,334.109 142.916,333.966 144.107 C 333.823 145.299,333.589 146.274,333.445 146.274 C 333.302 146.274,333.074 147.600,332.939 149.220 C 332.804 150.841,332.565 152.166,332.407 152.166 C 332.250 152.166,332.012 153.336,331.878 154.766 C 331.744 156.196,331.515 157.366,331.369 157.366 C 331.224 157.366,330.994 158.692,330.859 160.312 C 330.724 161.932,330.492 163.258,330.343 163.258 C 330.194 163.258,329.963 164.506,329.830 166.031 C 329.697 167.556,329.461 168.804,329.306 168.804 C 329.151 168.804,328.915 169.974,328.781 171.404 C 328.647 172.834,328.413 174.003,328.261 174.003 C 328.109 174.003,327.875 175.329,327.740 176.950 C 327.605 178.570,327.363 179.896,327.202 179.896 C 327.042 179.896,326.802 181.144,326.669 182.669 C 326.536 184.194,326.309 185.442,326.166 185.442 C 326.022 185.442,325.792 186.651,325.654 188.128 C 325.516 189.606,325.258 190.905,325.081 191.016 C 324.903 191.127,324.706 192.337,324.642 193.705 C 324.578 195.072,324.389 196.229,324.221 196.276 C 323.730 196.412,323.670 194.301,324.104 192.131 C 324.325 191.026,324.708 189.029,324.955 187.695 C 326.029 181.896,326.532 179.213,327.003 176.776 C 327.279 175.347,327.767 172.773,328.086 171.057 C 328.406 169.341,328.889 166.768,329.160 165.338 C 329.431 163.908,329.880 161.490,330.157 159.965 C 330.433 158.440,330.886 156.023,331.162 154.593 C 331.876 150.900,332.723 146.392,333.084 144.367 C 333.635 141.281,333.717 141.182,335.113 141.908 M340.622 145.704 C 342.412 147.021,345.574 149.645,348.821 152.509 C 350.513 154.002,350.560 154.373,349.311 156.407 C 347.496 159.364,347.397 159.534,346.421 161.352 C 345.910 162.305,345.394 163.163,345.276 163.258 C 345.158 163.354,344.821 163.898,344.529 164.469 C 343.730 166.027,343.215 165.912,339.942 163.444 C 334.602 159.415,334.367 159.785,334.887 171.420 L 335.274 180.069 334.485 181.456 C 334.052 182.218,333.323 183.544,332.866 184.402 C 331.289 187.365,325.332 197.198,325.197 197.063 C 324.941 196.807,325.921 194.320,326.539 193.657 C 326.878 193.293,327.356 192.504,327.601 191.905 C 327.846 191.305,328.249 190.608,328.495 190.357 C 328.741 190.105,328.943 189.676,328.943 189.403 C 328.943 189.131,329.099 188.908,329.289 188.908 C 329.480 188.908,329.636 188.674,329.636 188.388 C 329.636 188.102,329.789 187.868,329.976 187.868 C 330.163 187.868,330.414 187.478,330.534 187.002 C 330.653 186.525,330.899 186.135,331.081 186.135 C 331.262 186.135,331.314 185.979,331.196 185.789 C 331.078 185.598,331.129 185.442,331.308 185.442 C 331.488 185.442,331.738 185.169,331.864 184.835 C 332.285 183.719,332.918 182.669,333.169 182.669 C 333.306 182.669,333.520 182.123,333.645 181.456 C 333.770 180.789,334.018 180.243,334.195 180.243 C 334.531 180.243,334.366 169.325,333.960 164.731 C 333.810 163.023,333.859 162.218,334.114 162.218 C 334.320 162.218,334.489 162.051,334.489 161.847 C 334.489 161.186,335.456 160.485,336.370 160.485 C 336.861 160.485,337.262 160.641,337.262 160.832 C 337.262 161.023,337.464 161.179,337.711 161.179 C 338.136 161.179,338.763 161.595,340.451 162.998 C 340.852 163.332,341.374 163.605,341.610 163.605 C 341.847 163.605,342.130 163.839,342.240 164.125 C 342.545 164.920,343.766 164.755,344.043 163.881 C 344.176 163.461,344.499 162.904,344.760 162.643 C 345.021 162.382,345.234 161.946,345.234 161.674 C 345.234 161.401,345.373 161.179,345.543 161.179 C 345.713 161.179,345.950 160.789,346.070 160.312 C 346.189 159.835,346.428 159.445,346.600 159.445 C 346.771 159.445,347.012 158.991,347.134 158.435 C 347.256 157.879,347.580 157.337,347.855 157.232 C 348.129 157.127,348.354 156.802,348.354 156.510 C 348.354 156.218,348.471 155.978,348.614 155.976 C 348.756 155.975,349.048 155.598,349.261 155.138 C 349.658 154.282,346.864 151.127,345.708 151.127 C 345.473 151.127,345.182 150.814,345.061 150.433 C 344.939 150.051,344.500 149.561,344.084 149.342 C 343.668 149.124,343.203 148.734,343.050 148.476 C 342.898 148.218,342.637 148.007,342.470 148.007 C 342.304 148.007,341.710 147.578,341.150 147.054 C 340.590 146.529,339.640 145.672,339.038 145.147 C 337.344 143.673,338.337 144.021,340.622 145.704 M52.686 154.155 C 49.688 156.219,39.136 163.703,38.303 164.357 C 38.112 164.507,36.707 165.597,35.182 166.780 C 28.933 171.625,18.831 179.874,16.489 182.043 C 14.785 183.622,14.888 202.623,16.667 214.905 C 17.979 223.962,18.581 227.107,20.513 235.009 C 21.684 239.794,21.945 240.709,23.742 246.322 C 25.321 251.253,25.527 251.332,29.561 248.550 C 31.127 247.470,35.348 244.593,38.939 242.156 L 45.469 237.726 50.392 238.967 C 55.848 240.342,57.318 240.538,54.419 239.502 C 48.552 237.406,46.151 235.993,45.924 234.504 C 45.806 233.733,45.186 230.061,44.546 226.343 C 43.905 222.626,43.030 217.439,42.600 214.818 C 42.170 212.197,41.681 210.052,41.515 210.052 C 41.225 210.052,39.354 208.788,32.409 203.898 C 30.693 202.690,28.317 201.046,27.128 200.244 C 24.356 198.376,24.288 198.547,29.043 195.448 C 31.275 193.992,34.908 191.614,37.114 190.162 C 41.829 187.059,41.941 187.033,41.941 189.043 L 41.941 190.564 36.049 194.464 C 32.808 196.609,30.160 198.459,30.165 198.575 C 30.179 198.918,42.765 207.285,43.261 207.282 C 43.511 207.280,44.291 206.831,44.994 206.283 C 45.698 205.735,49.081 203.604,52.513 201.547 C 55.945 199.490,58.820 197.752,58.904 197.683 C 58.987 197.615,58.713 194.326,58.295 190.374 C 57.126 179.320,56.532 169.805,56.424 160.400 C 56.370 155.682,56.248 151.837,56.153 151.855 C 56.057 151.874,54.497 152.909,52.686 154.155 M363.997 166.638 C 368.005 170.793,368.229 171.204,368.373 174.675 C 368.648 181.291,366.368 197.920,365.186 197.920 C 364.731 197.920,358.271 194.708,357.548 194.122 C 354.373 191.547,351.640 191.693,352.348 194.400 C 352.481 194.906,352.812 196.802,353.084 198.614 C 353.355 200.425,353.810 203.310,354.095 205.026 C 354.379 206.742,354.759 209.159,354.939 210.399 C 355.120 211.638,355.365 213.042,355.483 213.518 C 355.713 214.442,356.521 219.500,357.033 223.224 C 357.203 224.463,357.497 226.101,357.685 226.863 C 357.874 227.626,358.125 229.301,358.244 230.586 C 358.363 231.870,358.604 233.010,358.779 233.119 C 358.955 233.228,359.099 233.843,359.099 234.487 C 359.099 235.130,359.319 236.720,359.588 238.019 C 360.339 241.642,360.409 243.708,359.792 244.035 C 358.165 244.896,356.571 245.433,356.052 245.297 C 355.623 245.184,355.674 245.130,356.239 245.101 C 356.668 245.079,357.019 244.905,357.019 244.714 C 357.019 244.523,357.253 244.367,357.539 244.367 C 357.825 244.367,358.059 244.230,358.059 244.061 C 358.059 243.893,358.388 243.669,358.790 243.564 C 359.535 243.369,359.502 237.927,358.752 237.435 C 358.607 237.340,358.376 235.975,358.238 234.402 C 358.100 232.829,357.847 231.542,357.676 231.542 C 357.505 231.542,357.366 230.763,357.366 229.809 C 357.366 228.856,357.226 228.076,357.056 228.076 C 356.885 228.076,356.635 226.672,356.499 224.957 C 356.363 223.241,356.129 221.837,355.979 221.837 C 355.829 221.837,355.595 220.433,355.459 218.718 C 355.323 217.002,355.088 215.598,354.935 215.598 C 354.782 215.598,354.546 214.116,354.411 212.305 C 354.275 210.494,354.043 209.012,353.895 209.012 C 353.747 209.012,353.515 207.608,353.380 205.893 C 353.244 204.177,353.012 202.773,352.864 202.773 C 352.716 202.773,352.484 201.291,352.349 199.480 C 352.213 197.669,351.960 196.187,351.787 196.187 C 351.615 196.187,351.473 195.251,351.473 194.107 C 351.473 192.490,351.589 192.028,351.993 192.028 C 352.279 192.028,352.513 191.872,352.513 191.681 C 352.513 191.490,353.059 191.334,353.726 191.334 C 354.393 191.334,354.939 191.487,354.939 191.675 C 354.939 191.862,355.329 192.112,355.806 192.232 C 356.282 192.352,356.672 192.589,356.672 192.759 C 356.672 192.929,356.895 193.068,357.168 193.068 C 357.440 193.068,357.875 193.263,358.135 193.501 C 359.202 194.478,363.246 196.534,364.103 196.534 C 364.401 196.534,364.645 196.690,364.645 196.880 C 364.645 198.307,365.332 196.759,365.530 194.887 C 365.666 193.601,365.919 192.456,366.093 192.344 C 366.268 192.232,366.504 190.477,366.620 188.444 C 366.735 186.412,366.961 184.749,367.123 184.749 C 367.620 184.749,367.487 171.634,366.984 171.012 C 365.405 169.057,360.832 164.664,360.832 165.102 C 360.832 165.395,360.618 165.848,360.358 166.109 C 360.097 166.370,359.774 166.927,359.641 167.347 C 359.508 167.767,359.253 168.111,359.075 168.111 C 358.898 168.111,358.752 168.334,358.752 168.606 C 358.752 168.878,358.539 169.315,358.278 169.575 C 358.017 169.836,357.685 170.425,357.539 170.884 C 357.393 171.343,357.061 171.931,356.800 172.192 C 355.888 173.104,356.126 173.587,358.369 175.386 L 359.445 176.249 359.445 179.806 C 359.445 181.946,359.307 183.362,359.099 183.362 C 358.908 183.362,358.752 183.596,358.752 183.882 C 358.752 184.977,356.892 184.268,355.343 182.582 C 355.036 182.249,354.521 181.976,354.198 181.976 C 353.875 181.976,353.559 181.831,353.495 181.655 C 353.223 180.899,351.545 180.857,351.309 181.600 C 351.183 181.997,350.947 182.322,350.784 182.322 C 350.621 182.322,350.386 182.790,350.260 183.362 C 350.134 183.934,349.909 184.402,349.760 184.402 C 349.611 184.402,349.119 185.182,348.666 186.135 C 348.214 187.088,347.724 187.868,347.578 187.868 C 347.433 187.868,347.314 188.091,347.314 188.363 C 347.314 188.636,347.100 189.072,346.839 189.333 C 346.579 189.594,346.248 190.178,346.104 190.631 C 345.849 191.435,345.604 191.801,344.541 192.970 C 343.982 193.584,343.971 227.000,344.529 227.383 C 345.043 227.736,345.233 231.196,344.738 231.196 C 343.831 231.196,343.492 224.908,343.101 200.867 L 342.994 194.281 344.807 191.286 C 345.804 189.639,346.620 188.132,346.620 187.936 C 346.620 187.740,346.737 187.527,346.880 187.464 C 347.023 187.400,347.519 186.646,347.981 185.789 C 349.606 182.772,351.540 179.896,351.943 179.896 C 352.387 179.896,355.006 181.229,355.286 181.598 C 357.469 184.476,358.752 183.858,358.752 179.928 L 358.752 176.494 357.037 175.058 C 355.042 173.388,355.002 173.711,357.779 169.104 C 358.886 167.267,359.792 165.641,359.792 165.492 C 359.792 165.146,360.863 163.951,361.172 163.951 C 361.300 163.951,362.571 165.160,363.997 166.638 M320.753 169.034 C 320.729 170.147,320.443 172.461,320.119 174.177 C 319.794 175.893,319.446 177.803,319.345 178.423 C 319.108 179.879,318.733 179.928,315.338 178.952 C 314.242 178.636,313.345 178.232,313.345 178.053 C 313.345 177.655,316.154 178.061,316.620 178.527 C 317.535 179.441,318.544 178.886,318.544 177.470 C 318.544 176.707,318.687 176.083,318.861 176.083 C 319.036 176.083,319.288 174.913,319.422 173.484 C 319.556 172.054,319.803 170.884,319.971 170.884 C 320.730 170.884,320.292 167.816,319.497 167.568 C 318.760 167.337,318.215 166.817,318.203 166.332 C 318.200 166.211,318.782 166.315,319.497 166.562 L 320.797 167.010 320.753 169.034 M22.653 180.676 C 22.507 180.914,21.562 181.866,20.553 182.790 C 19.107 184.115,18.712 184.703,18.693 185.563 C 18.666 186.790,18.112 188.390,18.015 187.522 C 17.776 185.380,18.101 184.196,19.170 183.311 C 19.779 182.806,20.823 181.912,21.490 181.323 C 22.820 180.151,23.053 180.021,22.653 180.676 M316.754 186.934 C 317.213 187.306,317.196 187.569,316.521 190.468 L 316.198 191.854 316.158 190.532 C 316.136 189.804,316.288 188.891,316.497 188.502 C 317.005 187.552,316.593 187.195,314.324 186.618 L 312.478 186.150 314.385 186.355 C 315.433 186.467,316.499 186.728,316.754 186.934 M307.944 187.039 C 308.718 187.336,308.625 187.868,307.799 187.868 C 307.414 187.868,307.106 187.637,307.106 187.348 C 307.106 186.765,307.169 186.742,307.944 187.039 M316.010 195.407 C 315.923 195.741,315.852 195.468,315.852 194.801 C 315.852 194.133,315.923 193.860,316.010 194.194 C 316.097 194.528,316.097 195.074,316.010 195.407 M314.970 200.260 C 314.883 200.594,314.812 200.321,314.812 199.653 C 314.812 198.986,314.883 198.713,314.970 199.047 C 315.057 199.380,315.057 199.926,314.970 200.260 M300.631 199.814 C 302.190 200.093,304.402 200.476,305.546 200.664 C 309.429 201.304,310.457 201.601,309.791 201.891 C 309.457 202.036,308.755 202.039,308.231 201.897 C 306.906 201.539,302.565 200.734,299.567 200.291 C 298.185 200.086,297.054 199.781,297.054 199.613 C 297.054 199.206,297.316 199.221,300.631 199.814 M312.305 201.040 C 312.305 201.231,311.993 201.386,311.612 201.386 C 311.231 201.386,310.919 201.231,310.919 201.040 C 310.919 200.849,311.231 200.693,311.612 200.693 C 311.993 200.693,312.305 200.849,312.305 201.040 M314.647 201.820 C 314.568 202.060,313.820 202.293,312.971 202.343 C 311.756 202.414,311.565 202.356,312.052 202.062 C 312.390 201.858,312.974 201.789,313.352 201.909 C 313.743 202.033,314.038 201.967,314.038 201.756 C 314.038 201.553,314.207 201.386,314.414 201.386 C 314.620 201.386,314.725 201.581,314.647 201.820 M202.773 203.966 C 202.773 204.431,202.929 204.908,203.120 205.026 C 203.322 205.151,203.466 204.799,203.466 204.180 C 203.466 203.597,203.310 203.120,203.120 203.120 C 202.929 203.120,202.773 203.500,202.773 203.966 M54.949 212.954 C 55.728 213.496,61.646 216.638,61.887 216.638 C 62.743 216.638,61.415 215.739,58.377 214.262 C 54.660 212.455,53.709 212.092,54.949 212.954 M39.490 216.135 C 39.504 216.907,39.652 217.687,39.821 217.868 C 40.426 218.519,40.668 223.938,40.082 223.714 C 39.664 223.553,39.588 222.974,39.693 220.769 C 39.765 219.259,39.684 218.024,39.515 218.024 C 39.345 218.024,39.154 217.283,39.091 216.378 C 38.999 215.057,38.913 214.869,38.658 215.425 C 38.483 215.806,38.137 216.324,37.888 216.576 C 37.639 216.828,37.435 217.257,37.435 217.529 C 37.435 217.801,37.282 218.024,37.095 218.024 C 36.908 218.024,36.657 218.414,36.537 218.891 C 36.418 219.367,36.191 219.757,36.034 219.757 C 35.877 219.757,35.640 220.101,35.506 220.521 C 35.373 220.941,35.050 221.498,34.790 221.759 C 34.529 222.020,34.315 222.456,34.315 222.728 C 34.315 223.001,34.159 223.224,33.969 223.224 C 33.778 223.224,33.622 223.446,33.622 223.719 C 33.622 223.991,33.409 224.427,33.148 224.688 C 32.887 224.949,32.565 225.506,32.431 225.926 C 32.298 226.346,32.044 226.690,31.866 226.690 C 31.688 226.690,31.542 226.900,31.542 227.157 C 31.542 227.754,30.326 229.171,30.050 228.895 C 29.935 228.780,30.393 227.825,31.066 226.772 C 31.740 225.719,32.437 224.529,32.615 224.127 C 32.793 223.725,33.238 222.929,33.604 222.357 C 33.969 221.785,34.607 220.696,35.022 219.936 C 38.250 214.020,39.436 213.011,39.490 216.135 M172.270 218.241 C 169.772 218.725,164.298 220.945,164.298 221.476 C 164.298 221.613,164.961 221.925,165.771 222.167 C 167.482 222.679,173.614 225.166,178.630 227.382 C 180.407 228.167,181.189 228.168,179.722 227.383 C 178.556 226.759,178.629 226.326,180.120 225.005 C 181.533 223.754,182.440 223.707,182.607 224.877 C 182.756 225.923,184.491 226.801,185.828 226.508 C 187.610 226.116,188.489 227.510,187.293 228.831 C 186.257 229.976,187.043 229.851,188.337 228.665 C 189.033 228.028,189.601 227.212,189.601 226.851 C 189.601 226.267,189.659 226.252,190.122 226.715 C 191.478 228.071,192.573 233.631,191.663 234.541 C 191.409 234.796,191.574 235.086,192.213 235.505 C 193.484 236.337,193.588 236.094,193.588 232.294 C 193.588 223.254,182.872 216.190,172.270 218.241 M138.448 221.231 C 138.536 221.659,138.785 222.868,139.001 223.917 C 140.854 232.923,147.983 247.812,152.994 253.142 C 153.206 253.368,154.472 254.918,155.806 256.586 C 158.540 260.003,158.610 260.050,158.622 258.492 C 158.635 256.727,159.113 254.073,159.417 254.073 C 160.385 254.073,179.376 270.526,179.376 271.364 C 179.376 271.863,180.117 273.532,181.023 275.074 C 182.690 277.913,183.022 279.005,182.236 279.059 C 181.997 279.076,182.270 279.233,182.842 279.409 C 185.160 280.123,192.758 278.665,196.647 276.761 C 198.760 275.726,199.908 274.778,198.649 275.107 C 198.102 275.250,197.901 275.076,197.715 274.300 C 197.585 273.756,197.032 272.342,196.486 271.158 C 195.941 269.975,195.494 268.888,195.494 268.744 C 195.494 267.829,191.568 260.775,189.612 258.172 C 187.362 255.181,184.055 249.439,184.055 248.525 C 184.055 246.639,205.341 253.080,211.172 256.730 C 213.202 258.001,213.873 256.849,212.063 255.198 C 211.489 254.675,210.763 254.003,210.449 253.705 C 210.135 253.408,208.632 252.160,207.109 250.932 C 205.586 249.705,204.134 248.507,203.883 248.272 C 202.893 247.343,191.365 238.853,189.081 237.371 C 174.736 228.059,160.989 222.849,145.810 220.970 C 139.602 220.201,138.247 220.249,138.448 221.231 M41.103 226.951 C 40.725 227.328,40.582 226.834,40.821 225.981 L 41.060 225.130 41.182 225.940 C 41.249 226.385,41.213 226.840,41.103 226.951 M41.493 230.239 C 41.410 230.670,41.339 230.399,41.335 229.636 C 41.331 228.873,41.399 228.521,41.486 228.852 C 41.573 229.184,41.576 229.807,41.493 230.239 M29.203 230.752 C 28.964 230.837,28.757 231.167,28.742 231.485 C 28.724 231.863,28.653 231.909,28.536 231.617 C 28.332 231.109,29.106 230.021,29.425 230.368 C 29.541 230.494,29.441 230.667,29.203 230.752 M186.482 231.505 C 186.482 231.676,186.729 231.910,187.030 232.025 C 187.878 232.351,187.990 232.280,187.522 231.716 C 187.043 231.140,186.482 231.026,186.482 231.505 M42.288 232.640 C 42.288 233.244,42.171 233.621,42.028 233.478 C 41.678 233.128,41.664 231.542,42.012 231.542 C 42.163 231.542,42.288 232.036,42.288 232.640 M41.248 233.795 C 41.248 234.081,41.092 234.315,40.901 234.315 C 40.711 234.315,40.555 234.081,40.555 233.795 C 40.555 233.510,40.711 233.276,40.901 233.276 C 41.092 233.276,41.248 233.510,41.248 233.795 M42.634 235.186 C 42.634 235.475,41.737 236.279,40.641 236.973 C 39.545 237.668,38.102 238.654,37.435 239.164 C 36.327 240.012,35.009 240.695,35.009 240.421 C 35.009 240.072,36.743 238.521,37.349 238.329 C 37.742 238.204,38.152 237.874,38.259 237.595 C 38.366 237.316,38.692 237.088,38.984 237.088 C 39.276 237.088,39.515 236.932,39.515 236.742 C 39.515 236.551,39.724 236.395,39.981 236.395 C 40.237 236.395,40.900 236.005,41.454 235.529 C 42.639 234.510,42.634 234.511,42.634 235.186 M216.089 264.341 C 216.645 264.868,216.933 265.355,216.729 265.423 C 215.894 265.702,218.091 267.303,218.996 267.076 L 219.883 266.853 218.694 265.827 C 218.040 265.263,216.958 264.482,216.291 264.092 L 215.078 263.383 216.089 264.341 M72.363 295.966 C 72.488 296.822,71.985 299.391,71.233 301.733 C 71.103 302.139,71.488 301.860,72.161 301.062 C 72.793 300.312,73.909 299.114,74.641 298.401 L 75.972 297.103 74.502 296.038 C 72.653 294.699,72.174 294.683,72.363 295.966 M70.230 303.922 C 69.616 304.916,67.629 310.354,67.787 310.609 C 68.117 311.143,68.631 310.946,68.631 310.287 C 68.631 309.939,69.077 308.730,69.623 307.600 C 70.909 304.937,71.162 304.092,70.749 303.836 C 70.563 303.722,70.330 303.760,70.230 303.922 M57.256 308.002 C 50.942 316.583,50.568 324.576,56.177 331.051 C 63.815 339.868,75.732 340.128,83.706 331.652 C 85.137 330.130,86.308 328.677,86.308 328.423 C 86.308 327.343,85.346 327.819,83.467 329.828 C 76.345 337.441,65.064 336.998,58.316 328.839 C 56.879 327.102,56.903 326.778,58.522 326.063 C 60.085 325.374,60.659 325.325,60.659 325.881 C 60.659 326.103,60.730 326.214,60.818 326.126 C 60.905 326.038,60.658 324.960,60.267 323.729 C 59.716 321.994,59.590 320.867,59.707 318.718 C 59.790 317.192,59.791 316.226,59.709 316.570 C 59.609 316.990,59.429 317.090,59.156 316.875 C 58.934 316.699,58.167 316.366,57.452 316.136 C 56.496 315.828,56.153 315.525,56.153 314.990 C 56.153 313.957,58.460 309.418,59.466 308.473 C 60.258 307.729,60.275 307.639,59.738 307.046 C 58.902 306.122,58.535 306.264,57.256 308.002 M129.983 314.558 C 129.983 314.844,130.139 315.078,130.329 315.078 C 130.520 315.078,130.676 314.844,130.676 314.558 C 130.676 314.272,130.520 314.038,130.329 314.038 C 130.139 314.038,129.983 314.272,129.983 314.558 M69.590 331.274 C 70.213 331.351,71.149 331.349,71.670 331.270 C 72.191 331.191,71.681 331.128,70.537 331.130 C 69.393 331.132,68.967 331.197,69.590 331.274 ",stroke:"none",fill:"#bae4ef",fillRule:"evenodd"}),/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{id:"path1",d:"M310.399 3.466 C 309.515 3.846,310.427 3.846,311.612 3.466 C 312.308 3.243,312.342 3.187,311.785 3.178 C 311.404 3.173,310.780 3.302,310.399 3.466 M319.584 4.822 C 320.061 5.212,320.607 5.532,320.797 5.533 C 321.168 5.535,320.541 5.056,319.411 4.471 C 318.950 4.233,319.008 4.351,319.584 4.822 M305.530 6.672 L 304.159 8.146 305.633 6.775 C 307.003 5.501,307.265 5.199,307.003 5.199 C 306.946 5.199,306.283 5.862,305.530 6.672 M322.009 7.192 C 322.463 7.812,322.888 8.319,322.954 8.319 C 323.218 8.319,322.358 7.019,321.790 6.557 C 321.415 6.253,321.499 6.495,322.009 7.192 M321.280 9.619 C 321.260 9.762,321.271 10.295,321.304 10.804 C 321.382 12.018,320.628 13.412,319.094 14.886 C 317.725 16.202,317.398 15.988,318.628 14.580 C 319.055 14.092,318.827 14.223,318.121 14.873 C 317.415 15.523,316.899 16.152,316.972 16.272 C 317.046 16.391,316.845 16.507,316.526 16.530 C 316.206 16.552,315.321 16.812,314.558 17.109 C 312.443 17.930,307.689 17.656,305.117 16.564 C 303.688 15.957,303.536 16.018,303.499 17.216 C 303.481 17.819,303.603 18.287,303.769 18.255 C 303.936 18.224,304.152 18.414,304.248 18.679 C 304.365 19.002,304.276 19.070,303.978 18.886 C 303.677 18.700,303.617 18.748,303.794 19.034 C 303.938 19.266,304.143 19.370,304.249 19.264 C 304.498 19.015,305.373 19.735,305.373 20.189 C 305.373 20.380,305.100 20.326,304.766 20.070 C 304.432 19.814,304.538 20.029,305.000 20.548 C 305.874 21.528,306.476 21.882,305.719 20.971 C 305.447 20.643,305.424 20.451,305.656 20.451 C 305.859 20.451,306.131 20.623,306.261 20.833 C 306.391 21.043,307.051 21.446,307.727 21.729 C 308.633 22.107,308.832 22.320,308.483 22.536 C 308.197 22.713,308.620 22.775,309.550 22.692 C 310.747 22.586,310.859 22.614,310.052 22.816 L 309.012 23.077 309.879 23.319 C 312.878 24.156,320.671 21.928,319.780 20.488 C 319.574 20.154,321.110 18.626,321.380 18.896 C 321.482 18.998,321.782 18.804,322.048 18.466 C 322.487 17.907,322.475 17.894,321.924 18.327 C 321.156 18.928,321.164 18.786,322.010 16.638 C 322.836 14.544,322.908 11.799,322.175 10.381 C 321.652 9.370,321.352 9.114,321.280 9.619 M323.570 12.478 C 323.570 13.989,323.676 14.958,323.806 14.632 C 323.935 14.305,324.041 13.336,324.041 12.478 C 324.041 11.620,323.935 10.651,323.806 10.325 C 323.676 9.998,323.570 10.967,323.570 12.478 M16.638 11.612 C 17.109 12.201,17.101 12.240,16.551 12.034 C 15.986 11.822,15.945 12.280,15.945 18.708 C 15.945 22.935,15.810 25.692,15.598 25.823 C 15.407 25.941,15.226 26.847,15.195 27.837 L 15.138 29.636 14.934 27.730 L 14.729 25.823 14.485 27.903 C 14.339 29.149,14.374 30.029,14.573 30.098 C 15.011 30.251,15.000 31.443,14.558 31.716 C 14.367 31.834,14.196 31.726,14.177 31.476 C 14.157 31.227,13.922 32.026,13.654 33.253 C 13.386 34.480,13.302 35.572,13.468 35.680 C 13.634 35.787,13.646 36.187,13.495 36.568 L 13.220 37.262 13.173 36.568 C 13.147 36.187,12.908 36.572,12.643 37.423 C 12.286 38.570,12.263 39.035,12.557 39.217 C 12.852 39.399,12.855 39.669,12.566 40.268 C 12.209 41.011,12.175 41.019,12.132 40.381 C 12.106 39.990,11.884 40.333,11.623 41.169 C 11.369 41.983,11.248 42.982,11.354 43.389 C 11.475 43.853,11.413 44.046,11.187 43.907 C 10.732 43.625,10.051 46.197,10.315 47.203 C 10.430 47.646,10.370 47.857,10.164 47.729 C 9.963 47.605,9.204 49.637,8.339 52.614 C 7.525 55.418,6.647 58.386,6.388 59.210 C 6.018 60.390,6.006 60.850,6.335 61.377 C 6.662 61.900,6.659 62.195,6.323 62.734 C 6.086 63.112,5.893 63.727,5.893 64.100 C 5.893 64.472,5.743 64.869,5.561 64.982 C 5.379 65.095,5.321 65.426,5.434 65.719 C 5.546 66.012,5.472 66.592,5.269 67.008 C 4.818 67.932,4.559 69.436,4.303 72.614 C 4.052 75.727,3.825 75.936,3.767 73.108 L 3.722 70.884 3.411 73.607 C 3.218 75.299,3.229 77.267,3.441 78.806 L 3.781 81.282 3.631 78.372 C 3.430 74.501,3.630 74.895,4.314 79.723 C 4.625 81.915,5.022 84.021,5.197 84.402 C 6.134 86.446,6.489 87.654,6.230 87.919 C 6.070 88.082,6.179 88.527,6.472 88.908 C 6.988 89.580,6.997 89.574,6.768 88.735 C 6.553 87.944,6.590 87.960,7.196 88.908 C 7.561 89.480,8.119 90.162,8.436 90.424 C 8.753 90.685,9.007 91.075,9.001 91.290 C 8.995 91.505,8.597 91.234,8.117 90.688 C 7.636 90.142,7.177 89.761,7.096 89.842 C 7.015 89.923,7.761 90.760,8.753 91.702 C 9.746 92.644,10.183 92.985,9.725 92.461 C 8.487 91.045,9.307 91.335,11.092 92.943 C 12.279 94.014,12.403 94.208,11.612 93.758 L 10.572 93.166 11.409 93.912 C 11.869 94.322,12.462 94.575,12.727 94.473 C 12.991 94.372,13.117 94.435,13.007 94.614 C 12.896 94.793,13.141 95.119,13.550 95.338 C 13.971 95.563,14.201 95.584,14.079 95.387 C 13.940 95.162,14.294 95.171,15.077 95.411 C 15.745 95.616,16.291 95.919,16.291 96.084 C 16.291 96.250,15.989 96.223,15.621 96.026 C 15.252 95.829,14.823 95.673,14.668 95.680 C 14.512 95.686,14.773 95.907,15.247 96.169 C 15.721 96.432,16.232 96.570,16.382 96.478 C 16.978 96.110,18.768 96.768,18.571 97.283 C 18.422 97.670,18.551 97.736,19.110 97.559 C 19.564 97.415,19.762 97.458,19.629 97.674 C 19.382 98.073,20.356 98.539,20.829 98.248 C 21.002 98.140,21.144 98.221,21.144 98.426 C 21.144 98.653,21.518 98.718,22.097 98.592 C 22.744 98.451,22.902 98.489,22.588 98.711 C 22.231 98.962,22.308 99.085,22.922 99.246 C 23.383 99.366,23.831 99.277,23.986 99.034 C 24.240 98.634,24.410 98.958,24.289 99.613 C 24.258 99.782,24.746 99.821,25.374 99.700 C 26.091 99.563,26.338 99.596,26.039 99.788 C 25.717 99.995,26.397 100.222,28.119 100.483 C 29.525 100.696,31.378 101.024,32.236 101.212 C 33.094 101.400,35.043 101.613,36.568 101.686 C 38.094 101.759,38.718 101.751,37.955 101.667 C 37.192 101.584,36.420 101.370,36.239 101.191 C 36.058 101.013,35.512 100.856,35.026 100.842 C 34.286 100.822,34.368 100.735,35.529 100.311 C 37.380 99.635,38.501 98.541,37.793 98.102 C 37.384 97.848,37.454 97.722,38.160 97.454 C 38.640 97.272,39.493 96.740,40.054 96.273 C 40.615 95.806,41.308 95.335,41.594 95.226 C 41.942 95.094,41.855 95.020,41.334 95.001 C 40.906 94.986,40.555 94.828,40.555 94.649 C 40.555 94.471,40.126 94.259,39.601 94.180 C 39.077 94.100,39.584 94.103,40.728 94.185 C 41.872 94.268,43.354 94.475,44.021 94.645 C 44.688 94.815,46.404 95.032,47.834 95.128 L 50.433 95.302 47.487 94.838 C 40.782 93.782,33.142 91.911,26.079 89.596 C 24.681 89.137,24.620 89.145,24.940 89.743 C 25.537 90.858,21.692 90.965,18.495 89.921 C 17.086 89.461,15.819 89.122,15.679 89.168 C 14.586 89.526,9.811 86.253,7.657 83.670 C 5.266 80.802,4.154 73.660,5.655 70.813 C 6.003 70.152,6.360 68.293,6.534 66.232 C 6.696 64.323,7.025 62.525,7.266 62.235 C 7.506 61.945,7.612 61.469,7.500 61.179 C 7.389 60.888,7.441 60.301,7.616 59.875 C 7.792 59.448,8.508 57.617,9.208 55.806 C 9.909 53.995,10.674 52.279,10.908 51.993 C 12.088 50.556,14.313 40.943,15.282 33.102 C 15.470 31.577,15.855 28.925,16.136 27.210 C 16.418 25.494,16.660 22.024,16.674 19.499 C 16.688 16.973,16.847 14.817,17.026 14.706 C 17.359 14.500,20.924 16.903,24.650 19.844 C 25.797 20.750,26.842 21.501,26.973 21.514 C 29.465 21.760,30.874 22.283,35.458 24.664 C 36.563 25.238,37.818 25.890,38.246 26.112 C 38.674 26.335,39.641 26.994,40.396 27.578 C 41.150 28.161,42.665 29.084,43.761 29.627 C 44.857 30.171,45.754 30.718,45.754 30.842 C 45.754 30.966,46.417 31.440,47.227 31.895 C 48.037 32.349,48.980 32.981,49.323 33.299 C 49.665 33.617,50.484 34.167,51.143 34.522 C 51.801 34.876,52.340 35.354,52.340 35.584 C 52.340 36.483,53.761 36.465,55.082 35.550 C 55.802 35.051,56.615 34.728,56.888 34.833 C 57.162 34.938,57.693 34.778,58.069 34.478 C 58.731 33.950,58.726 33.939,57.886 34.141 C 57.135 34.321,57.103 34.296,57.647 33.956 C 57.992 33.741,58.466 33.638,58.700 33.727 C 58.933 33.817,59.587 33.673,60.152 33.408 L 61.179 32.925 60.139 33.105 C 59.269 33.256,59.202 33.223,59.730 32.902 C 60.078 32.692,60.702 32.598,61.117 32.694 C 61.532 32.790,62.808 32.667,63.951 32.422 C 65.921 32.000,65.967 31.968,64.818 31.811 C 64.151 31.720,65.243 31.717,67.244 31.803 C 69.246 31.890,71.834 32.170,72.995 32.427 C 74.155 32.683,75.481 32.821,75.941 32.734 C 76.400 32.646,76.565 32.673,76.306 32.793 C 75.654 33.096,79.242 35.027,80.004 34.784 C 80.375 34.665,80.444 34.704,80.192 34.889 C 79.922 35.088,80.304 35.625,81.388 36.567 C 82.334 37.389,82.884 37.698,82.743 37.328 C 82.590 36.931,82.636 36.788,82.870 36.932 C 83.071 37.057,83.149 37.385,83.043 37.662 C 82.863 38.131,84.376 41.594,84.761 41.594 C 84.857 41.594,84.853 41.166,84.753 40.641 C 84.653 40.117,84.674 39.922,84.799 40.208 C 84.924 40.494,85.175 40.825,85.356 40.944 C 85.564 41.079,85.556 41.404,85.336 41.816 C 85.084 42.286,85.119 42.717,85.461 43.333 C 85.723 43.807,85.943 43.999,85.950 43.761 C 85.980 42.683,86.558 43.515,87.154 45.494 C 89.126 52.040,87.448 63.231,82.962 73.450 C 82.510 74.480,82.207 75.390,82.289 75.472 C 82.422 75.605,83.882 72.598,83.882 72.192 C 83.882 72.102,84.108 71.537,84.385 70.936 C 88.976 60.966,89.959 46.539,86.426 40.967 C 85.335 39.246,86.260 39.480,87.605 41.265 C 90.443 45.033,91.760 50.864,91.393 58.040 C 91.132 63.145,89.730 68.321,88.384 69.154 C 88.113 69.321,88.050 69.907,88.198 70.895 C 88.433 72.459,87.849 74.781,86.611 77.210 C 86.254 77.910,85.962 78.720,85.962 79.011 C 85.962 79.301,86.289 78.918,86.688 78.158 C 87.087 77.398,87.640 76.421,87.915 75.987 C 88.191 75.552,88.323 75.045,88.209 74.860 C 88.094 74.675,88.155 74.523,88.344 74.523 C 88.757 74.523,89.247 73.192,89.131 72.386 C 89.085 72.069,89.282 71.249,89.567 70.565 C 94.093 59.734,92.489 45.186,86.020 38.388 C 83.647 35.894,84.074 35.776,86.644 38.215 L 88.562 40.034 86.499 37.874 C 85.165 36.477,84.348 35.856,84.187 36.117 C 84.012 36.399,83.590 36.258,82.783 35.648 C 80.014 33.558,75.374 31.439,70.761 30.157 C 69.494 29.805,67.600 29.263,66.551 28.953 C 62.534 27.765,61.019 27.366,55.979 26.166 C 39.093 22.145,31.498 19.918,25.997 17.372 C 24.379 16.624,24.394 16.639,24.890 16.332 C 25.195 16.144,25.063 15.946,24.447 15.665 C 23.916 15.424,23.570 15.400,23.570 15.605 C 23.570 15.792,23.830 15.945,24.148 15.945 C 24.466 15.945,24.640 16.030,24.535 16.135 C 24.145 16.525,22.488 15.861,22.670 15.387 C 22.772 15.121,22.517 14.753,22.084 14.544 C 21.345 14.187,21.342 14.193,21.990 14.712 C 23.034 15.549,21.905 15.360,20.277 14.425 C 19.515 13.988,18.891 13.450,18.891 13.231 C 18.891 13.012,18.267 12.412,17.504 11.898 C 16.547 11.252,16.279 11.164,16.638 11.612 M18.177 12.663 C 18.716 13.070,18.742 13.172,18.306 13.172 C 18.007 13.172,17.568 12.938,17.331 12.652 C 16.782 11.990,17.297 11.997,18.177 12.663 M302.340 14.038 C 302.344 14.801,302.415 15.072,302.498 14.641 C 302.581 14.210,302.578 13.586,302.491 13.254 C 302.404 12.923,302.337 13.276,302.340 14.038 M302.610 16.291 C 302.610 16.577,302.761 17.045,302.946 17.331 C 303.245 17.793,303.282 17.793,303.282 17.331 C 303.282 17.045,303.131 16.577,302.946 16.291 C 302.648 15.829,302.610 15.829,302.610 16.291 M319.393 20.765 C 319.023 21.117,316.532 22.530,316.281 22.530 C 315.641 22.530,316.316 21.849,317.134 21.669 C 317.693 21.546,318.336 21.222,318.563 20.948 C 318.790 20.675,319.144 20.451,319.349 20.451 C 319.584 20.451,319.600 20.568,319.393 20.765 M156.586 22.082 C 157.015 22.164,157.717 22.164,158.146 22.082 C 158.575 21.999,158.224 21.931,157.366 21.931 C 156.508 21.931,156.157 21.999,156.586 22.082 M159.489 22.694 C 160.681 23.946,159.179 27.135,156.993 27.993 C 156.250 28.286,155.750 28.679,155.872 28.877 C 156.011 29.101,155.845 29.147,155.429 29.001 C 154.786 28.775,154.787 28.784,155.439 29.289 C 157.268 30.704,160.858 29.029,161.324 26.542 C 161.607 25.033,160.837 23.083,159.735 22.518 C 158.978 22.130,158.962 22.141,159.489 22.694 M44.887 22.877 C 45.269 23.041,45.815 23.175,46.101 23.175 C 46.428 23.175,46.364 23.065,45.927 22.877 C 45.546 22.713,45.000 22.579,44.714 22.579 C 44.386 22.579,44.450 22.689,44.887 22.877 M315.338 22.769 C 315.004 22.856,314.458 22.856,314.125 22.769 C 313.791 22.682,314.064 22.611,314.731 22.611 C 315.399 22.611,315.672 22.682,315.338 22.769 M14.999 24.263 C 14.999 25.121,15.067 25.472,15.149 25.043 C 15.232 24.614,15.232 23.912,15.149 23.484 C 15.067 23.055,14.999 23.406,14.999 24.263 M49.047 23.917 C 49.428 24.081,50.052 24.210,50.433 24.205 C 50.991 24.196,50.957 24.140,50.260 23.917 C 49.075 23.537,48.164 23.537,49.047 23.917 M53.553 24.957 C 53.934 25.121,54.480 25.255,54.766 25.255 C 55.094 25.255,55.030 25.144,54.593 24.957 C 54.211 24.793,53.666 24.659,53.380 24.659 C 53.052 24.659,53.116 24.769,53.553 24.957 M58.059 25.997 C 58.440 26.160,58.986 26.294,59.272 26.294 C 59.600 26.294,59.536 26.184,59.099 25.997 C 58.718 25.833,58.172 25.699,57.886 25.699 C 57.558 25.699,57.622 25.809,58.059 25.997 M62.218 27.036 C 62.600 27.200,63.146 27.334,63.432 27.334 C 63.759 27.334,63.695 27.224,63.258 27.036 C 62.877 26.873,62.331 26.738,62.045 26.738 C 61.717 26.738,61.781 26.849,62.218 27.036 M61.207 28.096 C 62.526 28.488,64.463 29.043,65.511 29.330 C 69.493 30.419,69.648 30.668,66.392 30.748 C 64.398 30.798,63.363 30.686,63.181 30.401 C 62.866 29.911,61.960 29.436,59.099 28.264 C 56.443 27.176,57.759 27.071,61.207 28.096 M66.031 28.076 C 66.412 28.240,66.958 28.374,67.244 28.374 C 67.572 28.374,67.508 28.264,67.071 28.076 C 66.690 27.912,66.144 27.778,65.858 27.778 C 65.530 27.778,65.594 27.888,66.031 28.076 M146.481 33.508 C 142.989 35.791,135.953 38.803,134.076 38.817 C 133.246 38.823,133.082 39.249,133.462 40.411 L 133.793 41.421 133.668 40.465 C 133.576 39.756,133.651 39.597,133.957 39.851 C 134.513 40.313,136.115 39.825,138.479 38.472 C 140.901 37.087,140.960 37.573,138.561 39.154 C 137.560 39.813,136.322 40.730,135.809 41.192 C 135.210 41.731,134.652 41.953,134.249 41.813 C 133.904 41.694,134.452 42.375,135.466 43.328 C 137.337 45.086,137.957 45.410,137.953 44.627 C 137.952 44.389,137.451 43.910,136.841 43.563 L 135.732 42.931 136.757 42.434 C 137.320 42.160,138.779 41.006,139.999 39.870 C 141.218 38.733,142.336 37.878,142.482 37.968 C 142.629 38.059,142.801 37.997,142.865 37.831 C 142.929 37.665,144.278 36.417,145.863 35.056 C 148.739 32.586,149.040 31.834,146.481 33.508 M222.878 33.690 C 220.208 36.517,219.224 42.046,220.393 47.660 C 220.935 50.262,221.023 50.427,221.816 50.339 C 222.862 50.223,223.030 50.076,218.957 52.830 C 217.087 54.094,215.411 55.038,215.231 54.927 C 215.052 54.816,214.905 54.953,214.905 55.232 C 214.905 55.511,214.320 56.235,213.605 56.842 C 212.411 57.855,212.399 57.883,213.451 57.184 C 214.082 56.766,214.705 56.530,214.835 56.661 C 214.966 56.791,214.840 57.031,214.555 57.195 C 214.271 57.358,213.501 57.893,212.844 58.382 C 211.371 59.480,210.761 59.536,211.645 58.492 L 212.305 57.712 211.549 58.351 C 211.132 58.703,210.858 59.171,210.938 59.391 C 211.018 59.612,210.639 60.104,210.095 60.485 C 208.821 61.378,205.843 63.875,203.708 65.841 C 202.573 66.886,201.951 67.251,201.779 66.972 C 201.611 66.701,200.886 67.234,199.636 68.549 L 197.747 70.537 199.559 68.825 C 200.555 67.883,201.449 67.191,201.545 67.287 C 201.640 67.383,199.953 69.181,197.795 71.283 C 192.644 76.299,192.748 76.014,196.128 75.860 C 198.846 75.737,198.960 75.697,199.898 74.532 C 200.431 73.872,201.222 72.964,201.657 72.514 C 202.092 72.065,202.762 71.030,203.145 70.213 C 204.723 66.856,208.538 63.085,210.357 63.085 C 211.174 63.085,213.118 61.258,213.911 59.744 C 214.534 58.555,219.441 54.685,223.080 52.513 C 224.357 51.750,226.376 50.471,227.566 49.670 C 230.327 47.812,235.996 44.371,236.321 44.357 C 236.457 44.351,237.192 43.949,237.955 43.464 C 238.930 42.844,239.084 42.655,238.475 42.827 C 237.998 42.962,237.556 43.208,237.493 43.373 C 237.429 43.539,237.195 43.675,236.973 43.675 C 236.750 43.675,235.321 44.304,233.795 45.072 C 232.270 45.840,231.295 46.251,231.629 45.986 C 231.963 45.721,232.236 45.385,232.236 45.240 C 232.236 45.095,232.041 45.137,231.802 45.335 C 231.083 45.931,224.170 49.567,223.770 49.560 C 223.435 49.554,224.803 48.558,227.461 46.873 C 228.500 46.214,229.267 43.320,228.473 43.055 C 228.255 42.983,228.076 42.459,228.076 41.892 C 228.076 41.324,227.941 40.944,227.775 41.047 C 227.609 41.149,227.207 40.339,226.882 39.247 C 225.221 33.673,224.214 32.275,222.878 33.690 M270.435 33.532 C 271.714 33.599,273.898 33.599,275.288 33.533 C 276.679 33.467,275.633 33.413,272.964 33.412 C 270.295 33.412,269.157 33.466,270.435 33.532 M263.778 33.969 L 262.565 34.224 263.778 34.235 C 264.445 34.241,265.381 34.121,265.858 33.969 L 266.724 33.691 265.858 33.702 C 265.381 33.708,264.445 33.828,263.778 33.969 M282.149 34.315 C 282.626 34.468,283.328 34.593,283.709 34.593 C 284.258 34.593,284.222 34.535,283.536 34.315 C 283.059 34.163,282.357 34.038,281.976 34.038 C 281.427 34.038,281.463 34.096,282.149 34.315 M264.645 34.662 L 262.912 34.900 265.058 34.954 C 266.238 34.984,267.300 34.853,267.418 34.662 C 267.647 34.291,267.347 34.291,264.645 34.662 M65.719 35.052 C 62.657 35.488,63.027 35.580,67.511 35.499 C 70.253 35.449,70.914 35.498,69.541 35.650 L 67.505 35.875 70.148 36.689 C 71.601 37.137,72.790 37.644,72.790 37.816 C 72.790 37.988,73.024 38.128,73.310 38.128 C 73.596 38.128,73.830 38.259,73.830 38.419 C 73.830 38.579,74.216 38.886,74.687 39.101 C 75.163 39.318,75.651 39.916,75.784 40.449 C 75.917 40.975,76.523 42.111,77.132 42.973 C 79.520 46.355,80.133 47.753,80.365 50.352 C 80.574 52.687,80.642 52.852,81.358 52.753 C 81.925 52.675,82.169 52.856,82.292 53.446 C 82.677 55.308,82.750 58.189,82.457 59.965 C 81.744 64.273,81.743 64.108,82.483 62.635 C 82.847 61.911,83.213 61.053,83.296 60.728 C 83.379 60.404,83.382 60.763,83.302 61.525 C 83.093 63.527,82.141 65.511,81.389 65.511 C 80.538 65.511,69.235 69.090,65.354 70.589 C 57.105 73.773,46.811 79.506,39.044 85.240 L 35.091 88.158 36.336 88.793 C 37.685 89.481,38.270 89.628,37.435 89.070 C 36.982 88.767,36.994 88.675,37.529 88.361 C 37.867 88.162,38.037 87.828,37.909 87.620 C 37.769 87.394,37.835 87.340,38.072 87.487 C 38.291 87.622,38.859 87.342,39.339 86.863 C 39.817 86.385,40.208 86.083,40.208 86.193 C 40.208 86.303,40.440 86.201,40.724 85.965 C 41.008 85.729,41.140 85.374,41.017 85.176 C 40.891 84.971,40.961 84.918,41.180 85.053 C 41.392 85.185,42.819 84.429,44.351 83.374 C 45.882 82.319,47.232 81.456,47.351 81.456 C 47.470 81.456,48.602 80.770,49.867 79.932 C 51.132 79.095,53.882 77.590,55.979 76.589 C 58.076 75.588,60.026 74.641,60.312 74.484 C 63.043 72.983,71.314 69.913,72.084 70.114 C 72.388 70.194,72.850 70.031,73.110 69.753 C 73.519 69.315,73.644 69.392,74.036 70.325 C 74.286 70.919,74.581 71.404,74.692 71.404 C 74.803 71.404,74.733 71.102,74.536 70.733 C 73.804 69.366,74.090 69.135,77.556 68.297 C 79.415 67.847,81.131 67.479,81.369 67.478 C 81.607 67.476,81.802 67.348,81.802 67.193 C 81.802 67.038,81.140 66.967,80.329 67.034 C 79.519 67.102,79.207 67.089,79.636 67.005 C 80.065 66.921,80.416 66.706,80.416 66.528 C 80.416 66.350,80.772 66.205,81.208 66.205 C 82.649 66.205,84.711 61.075,83.834 59.671 C 83.509 59.150,83.499 58.785,83.793 58.174 C 84.163 57.405,84.184 57.424,84.227 58.579 C 84.272 59.766,84.281 59.774,84.658 58.925 C 85.210 57.685,85.220 47.517,84.671 46.620 C 84.312 46.035,84.265 46.250,84.368 48.007 C 84.436 49.151,84.426 49.619,84.347 49.047 C 84.268 48.475,84.029 47.564,83.814 47.022 C 83.509 46.250,83.524 45.975,83.883 45.753 C 84.486 45.381,83.034 42.349,81.263 40.279 C 80.015 38.821,77.037 36.539,76.752 36.824 C 76.671 36.905,77.375 37.472,78.317 38.082 C 80.677 39.611,83.561 43.475,83.523 45.056 C 83.516 45.344,83.096 44.723,82.590 43.674 C 81.084 40.554,78.335 38.118,74.697 36.679 C 74.230 36.494,74.400 36.457,75.217 36.564 L 76.430 36.723 75.432 36.178 C 74.621 35.735,74.287 35.712,73.650 36.052 C 73.078 36.358,72.692 36.371,72.221 36.097 C 71.653 35.767,71.699 35.718,72.617 35.683 C 73.631 35.643,73.635 35.636,72.790 35.381 C 71.240 34.914,67.811 34.755,65.719 35.052 M349.449 35.072 C 347.184 35.578,347.895 35.729,350.506 35.296 C 352.161 35.022,353.505 35.021,355.331 35.292 C 358.158 35.711,358.812 35.597,356.792 35.036 C 355.189 34.591,351.522 34.609,349.449 35.072 M54.709 36.434 L 53.206 37.860 54.766 36.719 C 56.878 35.175,57.056 35.009,56.598 35.009 C 56.386 35.009,55.536 35.650,54.709 36.434 M284.866 36.451 C 286.074 37.056,287.667 38.148,288.405 38.879 C 289.144 39.610,289.910 40.208,290.108 40.208 C 290.306 40.208,290.470 40.559,290.473 40.988 C 290.481 42.311,290.873 43.328,291.375 43.328 C 291.690 43.328,291.854 43.735,291.854 44.512 C 291.854 45.163,292.003 45.748,292.184 45.812 C 292.365 45.875,292.547 46.629,292.590 47.487 C 292.690 49.531,292.846 49.913,293.577 49.913 C 294.454 49.913,295.109 55.121,294.296 55.623 C 294.113 55.736,293.963 56.252,293.962 56.770 C 293.956 60.089,293.687 62.532,293.314 62.656 C 292.810 62.824,292.748 63.778,293.241 63.778 C 293.432 63.778,293.588 64.246,293.588 64.818 C 293.588 65.390,293.452 65.858,293.286 65.858 C 293.119 65.858,292.880 66.638,292.754 67.591 C 292.627 68.544,292.393 69.324,292.234 69.324 C 292.074 69.324,291.835 70.140,291.703 71.137 C 291.571 72.135,291.292 73.056,291.083 73.185 C 290.874 73.314,290.631 74.292,290.543 75.358 C 290.454 76.424,290.245 77.296,290.078 77.296 C 289.911 77.296,289.775 77.610,289.775 77.993 C 289.775 78.376,289.463 78.957,289.081 79.283 C 288.700 79.610,288.388 80.076,288.388 80.320 C 288.388 80.563,288.235 80.763,288.048 80.763 C 287.861 80.763,287.610 81.153,287.491 81.629 C 287.371 82.106,287.151 82.496,287.002 82.496 C 286.852 82.496,286.633 82.883,286.514 83.357 C 286.381 83.888,285.968 84.301,285.437 84.434 C 284.715 84.615,284.575 84.857,284.575 85.922 C 284.575 86.901,284.336 87.404,283.536 88.106 C 282.964 88.608,282.496 89.345,282.496 89.743 C 282.496 90.142,282.357 90.468,282.187 90.468 C 282.017 90.468,281.779 90.862,281.658 91.343 C 281.391 92.408,280.414 93.431,279.340 93.772 C 278.267 94.113,277.643 94.783,277.643 95.594 C 277.643 95.963,276.929 97.027,276.057 97.959 C 274.687 99.422,274.494 99.806,274.647 100.774 C 274.745 101.390,274.676 101.985,274.495 102.097 C 274.314 102.209,275.105 103.095,276.252 104.066 C 279.256 106.606,278.564 106.498,275.165 103.895 C 271.818 101.332,268.977 99.370,268.977 99.620 C 268.977 99.715,269.718 100.296,270.624 100.910 C 271.529 101.524,273.632 103.092,275.296 104.395 C 276.961 105.698,278.513 106.724,278.747 106.675 C 278.980 106.626,279.185 106.820,279.203 107.106 C 279.220 107.392,279.434 107.583,279.678 107.530 C 279.921 107.478,280.021 107.596,279.900 107.793 C 279.778 107.990,279.920 108.243,280.215 108.356 C 280.509 108.469,281.340 109.131,282.061 109.827 C 284.686 112.362,286.358 113.757,286.546 113.570 C 286.651 113.464,286.485 113.125,286.176 112.817 C 285.534 112.174,285.435 111.571,285.994 111.698 C 286.440 111.800,286.696 111.395,287.800 108.839 C 288.252 107.790,288.839 106.433,289.102 105.823 C 289.366 105.213,289.944 104.520,290.387 104.283 C 290.830 104.046,291.443 103.323,291.750 102.677 L 292.308 101.501 292.764 102.584 C 293.293 103.842,294.281 104.963,294.281 104.304 C 294.281 104.071,294.600 104.248,294.990 104.698 C 295.668 105.479,295.908 105.517,300.276 105.531 C 305.415 105.548,309.769 105.069,307.972 104.685 L 306.932 104.463 308.102 104.187 C 308.870 104.007,309.354 104.045,309.512 104.300 C 309.685 104.579,310.130 104.548,311.115 104.188 C 311.865 103.913,312.252 103.677,311.976 103.664 C 311.575 103.644,311.561 103.552,311.904 103.209 C 312.246 102.866,312.394 102.875,312.627 103.254 C 312.791 103.519,313.107 103.613,313.343 103.467 C 313.668 103.266,313.657 103.130,313.295 102.873 C 312.954 102.631,313.039 102.586,313.605 102.711 C 314.035 102.805,314.309 102.758,314.216 102.607 C 313.996 102.251,315.024 101.390,315.317 101.684 C 315.440 101.806,315.358 101.906,315.136 101.906 C 314.913 101.906,314.731 102.081,314.731 102.295 C 314.731 102.568,314.884 102.558,315.240 102.262 C 315.520 102.030,315.715 101.660,315.673 101.440 C 315.632 101.220,315.778 101.074,315.998 101.115 C 316.218 101.157,316.608 100.923,316.865 100.596 C 317.285 100.058,317.272 100.047,316.724 100.476 C 316.363 100.759,316.118 100.802,316.118 100.583 C 316.118 100.380,316.274 100.118,316.464 100.000 C 317.467 99.380,316.569 96.856,314.951 95.748 C 313.534 94.776,313.345 94.781,313.345 95.782 C 313.345 98.119,306.795 100.897,300.117 101.394 C 293.009 101.922,291.364 95.559,297.582 91.591 C 297.959 91.350,297.643 91.450,296.880 91.813 L 295.494 92.473 295.444 91.644 C 295.416 91.188,295.533 90.815,295.704 90.815 C 295.874 90.815,296.015 90.386,296.016 89.861 C 296.017 89.337,296.232 88.498,296.494 87.996 C 297.412 86.236,298.427 82.630,299.143 78.585 C 299.540 76.339,300.165 73.376,300.531 71.999 C 300.897 70.623,301.201 69.139,301.205 68.700 C 301.210 68.262,301.479 67.404,301.803 66.794 L 302.393 65.685 302.629 66.724 C 303.549 70.787,302.029 80.371,299.348 87.407 L 298.467 89.719 299.468 89.432 C 300.018 89.274,300.545 89.222,300.639 89.316 C 301.906 90.583,305.367 71.512,305.367 63.258 C 305.367 57.956,304.358 51.300,303.554 51.300 C 303.388 51.300,303.338 51.161,303.442 50.992 C 303.713 50.555,302.229 47.114,301.867 47.338 C 301.702 47.440,301.670 47.255,301.796 46.928 C 301.957 46.510,301.897 46.412,301.596 46.598 C 301.304 46.779,301.202 46.658,301.277 46.222 C 301.340 45.852,301.203 45.617,300.953 45.667 C 300.715 45.715,300.500 45.598,300.477 45.407 C 300.453 45.217,300.407 44.866,300.374 44.627 C 300.342 44.389,300.108 44.239,299.855 44.295 C 299.583 44.355,299.471 44.197,299.582 43.908 C 299.694 43.618,299.009 42.670,297.892 41.566 C 296.859 40.546,296.014 39.818,296.014 39.947 C 296.014 40.077,296.677 40.834,297.487 41.630 L 298.960 43.077 297.486 41.816 C 296.675 41.122,295.840 40.555,295.629 40.555 C 295.419 40.555,295.332 40.332,295.436 40.060 C 295.541 39.788,295.401 39.379,295.127 39.151 C 294.773 38.857,294.627 38.850,294.627 39.126 C 294.627 39.340,294.809 39.515,295.032 39.515 C 295.254 39.515,295.351 39.600,295.246 39.705 C 295.141 39.810,293.731 39.202,292.112 38.356 C 290.494 37.509,288.643 36.702,287.999 36.562 C 287.355 36.422,286.750 36.191,286.655 36.047 C 286.560 35.903,285.624 35.688,284.575 35.569 L 282.669 35.352 284.866 36.451 M61.698 36.222 C 61.222 36.494,60.988 36.717,61.179 36.717 C 61.369 36.717,61.915 36.494,62.392 36.222 C 62.868 35.949,63.102 35.726,62.912 35.726 C 62.721 35.726,62.175 35.949,61.698 36.222 M345.562 36.693 C 344.714 37.238,343.632 38.135,343.158 38.686 C 342.349 39.624,342.371 39.618,343.504 38.585 C 344.170 37.979,345.416 37.084,346.274 36.596 C 347.132 36.109,347.669 35.708,347.468 35.706 C 347.267 35.704,346.409 36.148,345.562 36.693 M355.979 36.049 C 356.651 36.483,357.019 36.483,357.019 36.049 C 357.019 35.858,356.668 35.704,356.239 35.707 C 355.609 35.712,355.559 35.777,355.979 36.049 M358.406 36.011 C 358.406 36.181,358.761 36.409,359.195 36.518 C 360.215 36.774,362.565 38.863,362.565 39.514 C 362.565 39.854,362.403 39.785,362.065 39.301 C 361.349 38.280,359.346 36.817,358.304 36.555 C 357.460 36.344,357.481 36.405,358.723 37.750 C 359.443 38.530,360.194 39.168,360.392 39.168 C 360.812 39.168,361.167 40.319,361.174 41.704 C 361.181 43.128,358.304 45.748,354.593 47.698 C 351.583 49.280,347.145 48.891,344.248 46.793 L 342.808 45.750 342.808 43.132 C 342.808 41.221,342.698 40.581,342.402 40.764 C 342.123 40.937,342.071 40.820,342.237 40.389 C 342.446 39.843,342.404 39.823,341.911 40.233 C 341.559 40.525,341.490 40.751,341.730 40.831 C 342.191 40.985,342.249 41.941,341.797 41.941 C 341.622 41.941,341.410 41.746,341.325 41.508 C 341.241 41.269,340.965 41.751,340.713 42.579 C 340.386 43.646,340.358 44.250,340.614 44.660 C 340.857 45.049,340.861 45.418,340.627 45.789 C 340.425 46.109,340.394 46.762,340.553 47.347 L 340.827 48.354 341.119 47.487 C 341.344 46.821,341.375 46.941,341.253 48.007 C 341.154 48.866,341.208 49.211,341.394 48.913 C 341.631 48.532,341.778 48.592,342.105 49.203 C 342.332 49.626,342.427 50.063,342.316 50.174 C 342.205 50.285,342.114 50.194,342.114 49.971 C 342.114 49.749,341.927 49.567,341.697 49.567 C 341.468 49.567,341.887 50.188,342.628 50.947 C 343.369 51.706,344.049 52.254,344.138 52.165 C 344.227 52.076,343.878 51.671,343.362 51.265 C 342.846 50.859,342.493 50.459,342.577 50.375 C 342.662 50.290,343.177 50.638,343.722 51.147 C 344.268 51.656,345.026 52.215,345.407 52.389 C 346.047 52.682,346.041 52.694,345.320 52.555 C 343.978 52.296,344.817 52.957,346.746 53.679 C 349.368 54.659,357.962 54.391,356.326 53.379 C 355.996 53.176,355.997 53.063,356.328 52.859 C 356.560 52.715,356.869 52.790,357.014 53.024 C 357.215 53.350,357.452 53.358,358.015 53.057 C 358.967 52.547,358.951 52.367,357.972 52.553 C 357.440 52.654,357.362 52.616,357.728 52.433 C 360.122 51.240,362.495 48.576,363.287 46.192 C 363.583 45.301,363.595 45.319,363.456 46.447 L 363.307 47.660 363.787 46.620 C 364.661 44.727,364.115 39.294,363.183 40.608 C 362.945 40.943,362.900 40.852,363.025 40.285 C 363.235 39.327,361.990 37.737,360.088 36.536 C 358.639 35.622,358.406 35.549,358.406 36.011 M58.907 37.722 C 58.059 38.262,57.132 38.991,56.846 39.342 C 56.560 39.693,57.044 39.447,57.922 38.795 C 58.800 38.142,59.814 37.423,60.175 37.195 C 60.536 36.968,60.745 36.773,60.640 36.762 C 60.534 36.751,59.754 37.183,58.907 37.722 M148.058 37.750 C 147.806 37.906,147.652 38.375,147.717 38.792 C 147.821 39.472,147.902 39.501,148.489 39.069 C 149.256 38.504,148.851 37.260,148.058 37.750 M251.127 37.782 C 250.183 38.022,250.167 38.048,250.953 38.063 C 251.430 38.072,252.132 37.945,252.513 37.782 C 253.368 37.414,252.570 37.414,251.127 37.782 M247.140 38.302 C 246.473 38.559,246.083 38.783,246.274 38.800 C 246.464 38.817,247.010 38.910,247.487 39.007 C 248.242 39.160,248.264 39.140,247.660 38.853 C 247.088 38.581,247.069 38.519,247.553 38.499 C 247.876 38.486,248.236 38.319,248.354 38.128 C 248.606 37.721,248.675 37.711,247.140 38.302 M51.992 39.255 C 51.482 39.952,51.398 40.194,51.772 39.890 C 52.341 39.428,53.200 38.128,52.937 38.128 C 52.871 38.128,52.446 38.635,51.992 39.255 M244.541 39.354 C 243.670 39.773,243.642 39.821,244.367 39.646 C 244.844 39.531,245.382 39.298,245.563 39.129 C 246.013 38.709,245.766 38.764,244.541 39.354 M128.845 39.428 C 128.768 39.571,128.834 40.078,128.991 40.555 L 129.277 41.421 129.161 40.486 C 129.065 39.707,129.197 39.528,129.948 39.411 L 130.849 39.272 129.916 39.220 C 129.403 39.191,128.921 39.285,128.845 39.428 M122.357 40.228 C 121.923 40.525,121.944 40.567,122.487 40.482 C 122.996 40.403,123.246 40.747,123.635 42.064 C 124.275 44.230,124.538 44.006,123.970 41.779 C 123.508 39.970,123.187 39.661,122.357 40.228 M242.315 40.191 C 241.941 40.422,241.980 40.520,242.497 40.653 C 243.067 40.799,243.074 40.826,242.548 40.861 C 242.214 40.883,241.941 41.044,241.941 41.218 C 241.941 41.392,242.416 41.355,242.996 41.136 C 243.576 40.917,243.849 40.673,243.603 40.594 C 243.356 40.515,243.072 40.326,242.972 40.174 C 242.871 40.022,242.576 40.030,242.315 40.191 M261.179 42.086 C 253.154 43.940,242.035 53.126,244.650 55.742 C 245.373 56.464,246.797 54.573,246.226 53.649 C 246.091 53.430,246.154 53.372,246.376 53.509 C 246.831 53.790,247.573 52.567,247.215 52.125 C 247.079 51.957,247.081 51.908,247.220 52.015 C 247.526 52.251,252.194 47.781,252.066 47.375 C 252.016 47.217,252.126 47.181,252.309 47.295 C 252.754 47.569,255.857 45.582,255.537 45.227 C 255.399 45.074,255.469 45.054,255.693 45.183 C 256.244 45.498,257.920 44.704,257.645 44.258 C 257.509 44.038,257.659 43.993,258.038 44.138 C 258.719 44.399,261.414 43.709,261.182 43.334 C 261.101 43.203,263.606 43.097,266.748 43.100 C 269.889 43.102,272.288 43.210,272.078 43.340 C 271.867 43.470,272.361 43.745,273.175 43.951 C 273.989 44.158,274.805 44.234,274.989 44.120 C 275.173 44.007,275.222 44.079,275.097 44.280 C 274.836 44.703,276.742 45.470,277.180 45.119 C 277.339 44.992,277.354 45.029,277.212 45.203 C 276.859 45.635,278.232 46.548,278.770 46.238 C 279.008 46.101,279.087 46.117,278.946 46.273 C 278.619 46.633,279.350 47.544,279.762 47.289 C 279.931 47.185,280.069 47.343,280.069 47.640 C 280.069 47.937,280.303 48.180,280.589 48.180 C 280.875 48.180,281.115 48.375,281.122 48.614 C 281.129 48.852,281.541 49.515,282.038 50.087 C 282.892 51.070,282.910 51.075,282.372 50.186 C 281.676 49.036,281.661 48.841,282.287 49.081 C 284.723 50.016,280.516 45.650,277.516 44.130 C 272.900 41.791,266.126 40.943,261.179 42.086 M237.088 42.461 C 236.612 42.733,236.378 42.956,236.568 42.956 C 236.759 42.956,237.305 42.733,237.782 42.461 C 238.258 42.189,238.492 41.966,238.302 41.966 C 238.111 41.966,237.565 42.189,237.088 42.461 M51.976 45.441 C 51.577 46.222,51.311 46.920,51.384 46.993 C 51.456 47.066,51.855 46.427,52.270 45.573 C 53.214 43.629,52.959 43.514,51.976 45.441 M131.243 45.208 C 133.231 47.932,135.811 49.196,136.779 47.920 C 137.418 47.079,137.376 46.874,136.482 46.440 C 135.733 46.077,135.729 46.084,136.375 46.601 C 137.360 47.391,136.669 47.259,135.261 46.389 C 134.105 45.674,134.022 45.668,133.594 46.253 C 133.179 46.822,133.032 46.753,131.697 45.358 L 130.250 43.847 131.243 45.208 M134.039 44.873 C 134.382 45.341,134.896 45.819,135.181 45.935 C 135.467 46.050,135.243 45.667,134.683 45.083 C 133.456 43.801,133.194 43.716,134.039 44.873 M85.967 44.385 C 85.970 44.471,86.206 45.243,86.492 46.101 L 87.011 47.660 86.806 46.274 C 86.648 45.205,85.941 43.613,85.967 44.385 M125.138 45.993 C 125.142 46.148,125.679 47.131,126.332 48.180 C 127.451 49.978,127.480 50.100,126.844 50.335 C 126.473 50.472,126.170 50.738,126.170 50.926 C 126.170 51.540,122.926 53.775,122.280 53.606 C 121.328 53.357,121.541 54.001,122.991 55.758 C 125.686 59.021,125.421 59.469,120.597 59.811 C 116.704 60.087,116.904 59.967,115.119 63.084 C 113.240 66.364,112.365 66.290,110.551 62.698 C 109.474 60.563,108.576 59.576,109.197 61.209 C 110.350 64.243,106.653 66.432,102.844 64.971 C 102.422 64.809,102.245 64.928,102.225 65.388 C 102.204 65.856,102.059 65.748,101.690 64.991 L 101.183 63.951 101.395 64.991 C 102.197 68.929,107.844 70.231,114.731 68.064 C 116.545 67.494,119.307 66.158,119.100 65.952 C 119.022 65.874,118.638 66.010,118.247 66.254 C 117.856 66.498,117.412 66.566,117.260 66.404 C 117.108 66.242,117.150 66.050,117.352 65.977 C 117.554 65.904,119.113 64.935,120.818 63.823 C 123.566 62.031,125.305 60.432,130.785 54.656 L 131.760 53.628 129.656 51.511 C 127.545 49.386,125.823 47.129,125.823 46.486 C 125.823 46.296,125.667 46.045,125.477 45.927 C 125.286 45.809,125.134 45.839,125.138 45.993 M91.557 46.794 C 91.557 47.080,91.691 47.626,91.854 48.007 C 92.042 48.444,92.152 48.508,92.152 48.180 C 92.152 47.894,92.018 47.348,91.854 46.967 C 91.667 46.530,91.557 46.466,91.557 46.794 M131.369 48.007 C 132.016 48.674,132.623 49.220,132.718 49.220 C 132.814 49.220,132.362 48.674,131.716 48.007 C 131.069 47.340,130.462 46.794,130.367 46.794 C 130.271 46.794,130.722 47.340,131.369 48.007 M71.994 47.820 C 74.506 49.351,74.861 52.754,72.822 55.745 L 71.717 57.366 72.813 56.190 C 73.792 55.139,73.884 55.102,73.678 55.844 C 73.453 56.653,73.461 56.656,73.998 55.983 C 74.300 55.604,74.395 55.243,74.208 55.181 C 74.022 55.119,73.960 54.831,74.071 54.541 C 74.209 54.181,74.350 54.138,74.515 54.405 C 74.887 55.008,74.523 50.905,74.108 49.820 C 73.717 48.800,71.971 47.140,71.291 47.142 C 71.067 47.142,71.383 47.447,71.994 47.820 M65.817 48.833 C 65.077 49.573,64.472 50.392,64.473 50.652 C 64.473 50.913,64.767 50.646,65.125 50.059 C 65.483 49.471,66.224 48.657,66.770 48.250 C 67.317 47.842,67.629 47.504,67.464 47.498 C 67.298 47.492,66.557 48.093,65.817 48.833 M110.099 47.758 C 110.003 47.913,110.048 48.241,110.200 48.486 C 110.415 48.834,110.521 48.814,110.682 48.394 C 110.900 47.825,110.397 47.276,110.099 47.758 M87.134 52.217 C 87.117 54.481,87.229 56.004,87.394 55.744 C 87.754 55.176,87.780 49.198,87.425 48.639 C 87.282 48.415,87.152 50.024,87.134 52.217 M118.198 48.684 L 117.332 49.164 118.285 49.403 C 119.122 49.613,119.242 49.815,119.278 51.077 C 119.317 52.441,119.333 52.461,119.584 51.473 C 120.329 48.546,119.923 47.729,118.198 48.684 M50.458 49.765 C 50.331 50.273,50.293 50.755,50.375 50.837 C 50.456 50.919,50.628 50.570,50.755 50.062 C 50.883 49.554,50.920 49.071,50.838 48.990 C 50.757 48.908,50.586 49.257,50.458 49.765 M115.771 49.740 C 115.295 50.012,115.061 50.235,115.251 50.235 C 115.442 50.235,115.988 50.012,116.464 49.740 C 116.941 49.468,117.175 49.245,116.984 49.245 C 116.794 49.245,116.248 49.468,115.771 49.740 M109.945 51.659 C 109.880 53.888,109.850 53.954,108.146 55.633 C 107.192 56.571,106.412 57.437,106.412 57.557 C 106.412 58.040,108.169 58.548,108.901 58.277 C 109.659 57.997,109.659 57.993,108.790 57.774 C 107.596 57.475,107.726 56.446,109.139 54.987 C 110.204 53.888,110.255 53.717,110.137 51.611 L 110.012 49.393 109.945 51.659 M361.145 50.235 C 360.063 51.431,360.049 51.803,361.125 50.802 C 361.726 50.242,362.218 49.735,362.218 49.675 C 362.218 49.387,361.640 49.689,361.145 50.235 M33.367 50.162 C 33.894 50.242,34.674 50.240,35.100 50.157 C 35.526 50.075,35.095 50.010,34.142 50.012 C 33.189 50.015,32.840 50.082,33.367 50.162 M27.556 50.625 C 26.900 50.803,27.412 50.837,28.943 50.715 C 30.277 50.608,31.434 50.462,31.514 50.391 C 31.779 50.151,28.610 50.338,27.556 50.625 M36.915 50.514 C 37.296 50.609,37.688 50.812,37.784 50.965 C 37.881 51.117,39.597 51.565,41.597 51.959 C 43.597 52.353,45.585 52.774,46.014 52.895 C 46.488 53.028,46.794 52.962,46.794 52.727 C 46.794 52.514,46.443 52.324,46.014 52.305 C 45.274 52.272,45.278 52.258,46.101 52.031 C 46.687 51.869,46.994 51.516,47.050 50.939 C 47.133 50.093,47.131 50.092,46.801 50.867 C 46.619 51.295,46.398 51.646,46.310 51.646 C 46.223 51.646,44.569 51.334,42.634 50.953 C 39.653 50.366,34.843 49.996,36.915 50.514 M284.229 50.745 C 284.229 50.820,284.617 51.561,285.091 52.391 C 286.127 54.203,286.247 53.911,285.262 51.979 C 284.655 50.789,284.229 50.280,284.229 50.745 M64.000 52.066 C 63.883 52.502,63.801 53.172,63.818 53.553 C 63.834 53.934,63.991 53.638,64.165 52.894 C 64.503 51.454,64.359 50.728,64.000 52.066 M71.750 51.738 C 71.750 51.978,71.401 52.329,70.974 52.517 C 70.440 52.752,70.131 53.267,69.988 54.159 C 69.748 55.658,69.959 55.771,70.954 54.679 C 71.604 53.966,72.382 51.300,71.939 51.300 C 71.835 51.300,71.750 51.497,71.750 51.738 M92.683 55.806 C 92.683 58.380,92.738 59.432,92.805 58.146 C 92.871 56.859,92.871 54.753,92.805 53.466 C 92.738 52.179,92.683 53.232,92.683 55.806 M71.341 53.439 C 71.201 54.392,70.364 54.712,70.364 53.813 C 70.364 53.093,70.644 52.686,71.139 52.686 C 71.311 52.686,71.402 53.025,71.341 53.439 M110.619 53.397 C 110.593 53.883,110.455 54.430,110.312 54.613 C 110.169 54.795,110.260 54.768,110.515 54.553 C 110.770 54.338,110.908 53.791,110.822 53.337 C 110.668 52.521,110.666 52.522,110.619 53.397 M220.451 52.831 C 220.451 52.911,219.866 53.329,219.151 53.760 C 218.436 54.191,217.283 54.984,216.588 55.522 C 215.229 56.573,214.905 56.695,214.905 56.153 C 214.905 55.962,215.057 55.806,215.243 55.806 C 215.429 55.806,216.628 55.104,217.907 54.246 C 220.243 52.679,220.451 52.564,220.451 52.831 M27.903 53.761 C 21.660 55.164,16.659 58.606,14.520 62.970 C 13.079 65.909,13.330 72.581,14.947 74.333 C 15.401 74.824,15.317 74.310,14.708 72.866 C 14.010 71.209,13.581 66.682,14.157 67.037 C 14.436 67.210,14.558 66.856,14.558 65.878 C 14.558 65.105,14.675 64.470,14.818 64.467 C 14.961 64.465,15.375 63.842,15.739 63.084 C 18.622 57.066,27.711 53.595,37.475 54.784 C 39.455 55.024,42.400 55.262,44.021 55.312 C 45.641 55.362,47.512 55.572,48.178 55.778 C 49.686 56.244,49.913 56.245,49.913 55.785 C 49.913 55.584,49.777 55.503,49.609 55.606 C 49.442 55.709,48.511 55.558,47.540 55.270 C 41.921 53.601,32.003 52.839,27.903 53.761 M119.931 53.575 C 119.931 53.698,120.652 54.600,121.533 55.580 C 122.414 56.560,123.262 57.675,123.417 58.057 C 123.630 58.581,123.705 58.614,123.722 58.189 C 123.734 57.880,122.886 56.665,121.837 55.490 C 120.789 54.315,119.931 53.453,119.931 53.575 M355.199 53.618 C 354.866 53.706,354.320 53.706,353.986 53.618 C 353.653 53.531,353.925 53.460,354.593 53.460 C 355.260 53.460,355.533 53.531,355.199 53.618 M245.851 53.986 C 245.927 54.129,245.782 54.636,245.530 55.113 C 245.277 55.589,245.069 55.875,245.066 55.748 C 245.063 55.620,244.956 55.244,244.828 54.911 C 244.657 54.463,244.717 54.380,245.061 54.593 C 245.400 54.802,245.465 54.724,245.304 54.303 C 245.089 53.744,245.573 53.463,245.851 53.986 M84.477 56.408 C 84.398 56.935,84.331 56.586,84.328 55.633 C 84.325 54.679,84.390 54.248,84.473 54.675 C 84.555 55.101,84.557 55.881,84.477 56.408 M284.288 54.419 C 284.305 55.320,284.851 56.799,284.863 55.979 C 284.869 55.598,284.739 54.974,284.575 54.593 C 284.393 54.168,284.281 54.101,284.288 54.419 M130.675 57.221 C 129.244 58.730,128.184 59.965,128.319 59.965 C 128.664 59.965,133.449 55.064,133.449 54.710 C 133.449 54.285,133.498 54.241,130.675 57.221 M254.766 55.765 C 252.182 56.466,251.271 56.902,250.578 57.771 C 250.240 58.195,250.398 58.147,251.087 57.616 C 251.637 57.193,252.338 56.858,252.646 56.873 C 252.954 56.888,253.039 56.970,252.834 57.055 C 252.242 57.301,252.688 59.170,253.502 59.858 C 254.239 60.479,254.240 60.479,253.640 59.765 C 251.813 57.595,255.978 55.345,258.357 57.216 C 259.106 57.805,259.229 57.829,259.045 57.350 C 258.849 56.839,259.001 56.798,260.272 57.012 C 261.852 57.279,263.220 56.672,262.321 56.102 C 262.013 55.906,262.143 55.804,262.738 55.777 L 263.605 55.737 262.738 55.459 C 261.225 54.975,257.098 55.133,254.766 55.765 M286.396 56.672 C 286.400 57.435,286.471 57.706,286.554 57.275 C 286.637 56.844,286.633 56.220,286.547 55.889 C 286.460 55.557,286.392 55.910,286.396 56.672 M243.323 56.857 C 243.084 57.435,242.968 57.988,243.066 58.086 C 243.164 58.184,243.346 57.861,243.469 57.368 C 243.593 56.874,243.844 56.563,244.027 56.676 C 244.212 56.791,244.268 56.643,244.153 56.344 C 243.874 55.616,243.824 55.647,243.323 56.857 M86.528 58.134 C 86.408 58.855,86.206 59.821,86.081 60.280 C 85.931 60.828,85.979 61.036,86.221 60.886 C 86.603 60.650,87.199 57.274,86.910 56.985 C 86.821 56.896,86.649 57.413,86.528 58.134 M121.457 57.139 C 121.620 57.402,121.371 57.555,120.731 57.586 C 119.855 57.629,119.839 57.649,120.577 57.789 C 121.537 57.971,122.297 57.410,121.640 57.005 C 121.363 56.833,121.298 56.881,121.457 57.139 M70.191 57.725 C 69.619 57.987,69.394 58.208,69.691 58.217 C 69.988 58.225,70.534 58.003,70.904 57.723 C 71.726 57.102,71.550 57.102,70.191 57.725 M116.205 58.125 C 116.538 58.212,117.084 58.212,117.418 58.125 C 117.751 58.037,117.478 57.966,116.811 57.966 C 116.144 57.966,115.871 58.037,116.205 58.125 M264.175 58.746 C 264.624 59.219,265.131 59.609,265.302 59.613 C 265.473 59.616,265.192 59.229,264.677 58.752 C 263.470 57.633,263.115 57.629,264.175 58.746 M117.410 58.829 C 118.025 58.906,119.117 58.907,119.836 58.832 C 120.555 58.757,120.052 58.694,118.718 58.693 C 117.383 58.691,116.795 58.752,117.410 58.829 M248.661 59.803 C 248.345 60.285,248.149 60.743,248.226 60.820 C 248.304 60.897,248.629 60.503,248.951 59.943 C 249.666 58.697,249.453 58.594,248.661 59.803 M286.403 61.005 C 286.403 61.863,286.470 62.214,286.553 61.785 C 286.636 61.356,286.636 60.654,286.553 60.225 C 286.470 59.796,286.403 60.147,286.403 61.005 M114.558 61.698 C 114.075 62.652,113.758 63.432,113.853 63.432 C 113.948 63.432,114.422 62.652,114.905 61.698 C 115.388 60.745,115.705 59.965,115.610 59.965 C 115.514 59.965,115.041 60.745,114.558 61.698 M123.941 60.273 C 123.607 60.813,121.319 61.056,119.295 60.766 L 117.331 60.485 120.624 60.292 C 122.435 60.185,123.965 60.068,124.024 60.032 C 124.083 59.995,124.046 60.104,123.941 60.273 M242.413 63.085 C 242.413 64.896,242.471 65.637,242.542 64.731 C 242.614 63.826,242.614 62.344,242.542 61.438 C 242.471 60.533,242.413 61.274,242.413 63.085 M284.447 61.525 C 284.295 62.478,283.731 64.311,283.193 65.598 C 282.122 68.164,282.100 68.686,283.150 66.627 C 284.070 64.825,284.996 61.518,284.847 60.573 C 284.772 60.099,284.615 60.473,284.447 61.525 M268.365 61.698 C 268.365 62.366,268.436 62.639,268.523 62.305 C 268.610 61.971,268.610 61.425,268.523 61.092 C 268.436 60.758,268.365 61.031,268.365 61.698 M85.514 62.100 C 85.381 62.606,85.183 63.308,85.075 63.659 C 84.966 64.011,85.131 63.860,85.441 63.325 C 85.751 62.790,85.949 62.088,85.881 61.765 C 85.794 61.353,85.684 61.453,85.514 62.100 M5.397 62.590 C 5.270 63.098,5.232 63.580,5.314 63.662 C 5.396 63.744,5.567 63.395,5.694 62.887 C 5.822 62.379,5.859 61.896,5.778 61.815 C 5.696 61.733,5.525 62.082,5.397 62.590 M243.773 63.258 C 243.776 64.211,243.843 64.560,243.923 64.033 C 244.003 63.506,244.000 62.727,243.918 62.300 C 243.836 61.874,243.771 62.305,243.773 63.258 M10.597 62.936 C 10.469 63.444,10.432 63.927,10.513 64.009 C 10.595 64.090,10.766 63.741,10.894 63.233 C 11.021 62.725,11.059 62.243,10.977 62.161 C 10.895 62.080,10.724 62.428,10.597 62.936 M111.937 63.326 C 112.442 64.359,112.979 64.636,113.462 64.113 C 113.774 63.775,113.757 63.738,113.384 63.950 C 113.068 64.130,112.673 63.939,112.234 63.395 C 111.625 62.639,111.598 62.633,111.937 63.326 M91.700 64.317 C 91.570 65.013,91.532 65.651,91.617 65.736 C 91.702 65.821,91.878 65.321,92.008 64.625 C 92.139 63.930,92.176 63.291,92.092 63.207 C 92.007 63.122,91.831 63.622,91.700 64.317 M10.139 65.685 C 10.143 66.447,10.214 66.718,10.297 66.287 C 10.380 65.856,10.377 65.232,10.290 64.901 C 10.203 64.569,10.136 64.922,10.139 65.685 M33.189 64.716 C 33.618 64.799,34.320 64.799,34.749 64.716 C 35.178 64.633,34.827 64.566,33.969 64.566 C 33.111 64.566,32.760 64.633,33.189 64.716 M84.502 65.000 C 84.395 65.377,84.202 65.997,84.073 66.378 C 83.944 66.759,84.092 66.633,84.402 66.097 C 84.712 65.561,84.905 64.941,84.831 64.720 C 84.757 64.498,84.609 64.624,84.502 65.000 M4.549 66.031 C 4.520 66.412,4.416 67.114,4.318 67.591 L 4.140 68.458 4.511 67.607 C 4.715 67.140,4.819 66.438,4.741 66.047 C 4.604 65.356,4.599 65.356,4.549 66.031 M262.045 66.578 C 261.123 67.103,261.040 67.215,261.698 67.046 C 262.175 66.923,262.793 66.606,263.073 66.341 C 263.754 65.692,263.495 65.752,262.045 66.578 M36.395 67.938 C 37.210 68.753,37.290 69.324,36.588 69.324 C 36.002 69.324,34.955 70.690,35.217 71.114 C 35.548 71.649,36.714 71.411,37.076 70.733 C 37.811 69.361,37.172 67.244,36.024 67.244 C 35.847 67.244,36.014 67.556,36.395 67.938 M249.538 67.717 C 250.000 68.285,251.300 69.145,251.300 68.882 C 251.300 68.815,250.793 68.390,250.173 67.937 C 249.476 67.426,249.234 67.343,249.538 67.717 M30.383 67.851 C 30.294 67.994,30.660 68.111,31.196 68.111 C 31.731 68.111,32.097 67.994,32.009 67.851 C 31.920 67.708,31.555 67.591,31.196 67.591 C 30.837 67.591,30.471 67.708,30.383 67.851 M257.972 67.830 C 258.306 67.917,258.852 67.917,259.185 67.830 C 259.519 67.743,259.246 67.671,258.579 67.671 C 257.912 67.671,257.639 67.743,257.972 67.830 M279.463 70.997 C 278.081 72.460,276.950 73.730,276.950 73.820 C 276.950 74.103,281.489 69.527,281.839 68.891 C 282.343 67.976,282.181 68.119,279.463 70.997 M39.867 69.601 C 39.856 71.824,38.507 73.405,36.007 74.124 L 34.835 74.461 36.152 74.492 C 39.242 74.565,41.678 71.253,40.208 68.977 C 39.954 68.584,39.871 68.735,39.867 69.601 M277.190 69.855 C 276.655 70.326,275.915 70.711,275.544 70.711 C 275.174 70.711,273.974 71.399,272.877 72.240 C 271.781 73.081,270.131 74.020,269.210 74.325 C 264.641 75.841,263.624 77.146,267.244 76.849 C 271.642 76.487,279.991 71.427,279.274 69.558 C 278.967 68.757,278.336 68.847,277.190 69.855 M36.379 70.394 C 36.166 70.791,35.908 71.032,35.804 70.929 C 35.519 70.643,35.976 69.671,36.396 69.671 C 36.653 69.671,36.648 69.892,36.379 70.394 M81.352 72.288 C 80.647 73.715,80.077 74.996,80.087 75.136 C 80.096 75.276,80.730 74.165,81.495 72.668 C 82.260 71.171,82.830 69.890,82.761 69.821 C 82.692 69.752,82.058 70.862,81.352 72.288 M245.618 70.104 C 247.140 72.721,251.596 76.953,252.825 76.948 C 253.035 76.947,252.504 76.482,251.646 75.914 C 249.712 74.634,247.335 72.321,246.402 70.811 C 245.752 69.759,245.049 69.124,245.618 70.104 M255.728 70.272 C 256.544 70.345,257.791 70.344,258.501 70.269 C 259.211 70.195,258.544 70.135,257.019 70.136 C 255.494 70.137,254.913 70.198,255.728 70.272 M31.695 71.588 C 32.095 71.891,33.009 72.072,33.948 72.036 L 35.529 71.976 33.969 71.841 C 33.111 71.767,32.261 71.561,32.080 71.382 C 31.899 71.203,31.587 71.062,31.386 71.068 C 31.186 71.074,31.325 71.308,31.695 71.588 M280.226 73.224 L 278.856 74.697 280.329 73.327 C 281.699 72.052,281.962 71.750,281.699 71.750 C 281.643 71.750,280.980 72.413,280.226 73.224 M246.967 74.476 C 247.730 75.296,248.821 76.292,249.393 76.688 C 250.606 77.528,250.448 77.361,247.660 74.854 C 245.897 73.268,245.791 73.210,246.967 74.476 M11.116 74.003 C 11.116 74.194,11.339 74.740,11.612 75.217 C 11.884 75.693,12.107 75.927,12.107 75.737 C 12.107 75.546,11.884 75.000,11.612 74.523 C 11.339 74.047,11.116 73.813,11.116 74.003 M274.374 75.119 C 273.243 75.818,271.371 76.755,270.214 77.202 C 269.057 77.648,268.579 77.925,269.151 77.817 C 270.409 77.580,274.708 75.493,275.910 74.536 C 277.218 73.494,276.662 73.705,274.374 75.119 M15.838 75.937 C 16.183 76.523,16.686 77.186,16.957 77.410 C 17.227 77.633,17.012 77.153,16.477 76.343 C 15.355 74.642,14.913 74.360,15.838 75.937 M111.926 75.942 C 110.807 77.061,111.527 80.069,112.913 80.069 C 113.987 80.069,115.720 78.665,115.953 77.607 C 116.421 75.475,113.571 74.297,111.926 75.942 M13.529 76.776 C 13.977 77.539,14.723 78.670,15.185 79.289 C 16.279 80.754,15.802 80.740,14.421 79.267 C 13.829 78.634,13.574 78.439,13.853 78.833 C 14.963 80.395,16.769 82.109,17.094 81.908 C 17.283 81.791,17.335 81.862,17.209 82.066 C 16.750 82.808,23.107 87.500,26.005 88.558 C 28.563 89.491,29.863 89.836,30.065 89.634 C 30.171 89.529,29.883 89.294,29.426 89.111 C 27.611 88.385,29.879 88.765,32.485 89.623 C 35.992 90.779,41.279 92.206,41.941 92.176 C 42.227 92.163,40.901 91.722,38.995 91.196 C 26.476 87.745,19.017 83.608,14.560 77.643 C 12.921 75.449,12.581 75.163,13.529 76.776 M194.627 76.615 C 195.962 76.752,197.912 76.862,198.960 76.860 L 200.867 76.857 199.133 76.587 C 198.180 76.439,196.231 76.328,194.801 76.341 L 192.201 76.366 194.627 76.615 M203.558 77.198 C 204.085 77.278,204.864 77.276,205.291 77.194 C 205.717 77.111,205.286 77.046,204.333 77.049 C 203.380 77.051,203.031 77.119,203.558 77.198 M253.570 77.257 C 254.824 78.428,264.236 79.262,266.976 78.445 C 267.560 78.271,265.768 78.153,262.297 78.137 C 257.915 78.118,256.337 77.984,255.156 77.531 C 253.441 76.874,253.096 76.814,253.570 77.257 M207.196 77.542 C 207.628 77.624,208.251 77.621,208.583 77.535 C 208.914 77.448,208.562 77.380,207.799 77.384 C 207.036 77.388,206.765 77.459,207.196 77.542 M17.678 78.304 C 17.678 78.620,20.064 80.935,20.189 80.739 C 20.241 80.657,19.697 80.020,18.981 79.325 C 18.264 78.630,17.678 78.170,17.678 78.304 M77.816 79.029 C 77.521 79.601,77.357 80.069,77.452 80.069 C 77.547 80.069,77.867 79.601,78.163 79.029 C 78.459 78.458,78.623 77.990,78.527 77.990 C 78.432 77.990,78.112 78.458,77.816 79.029 M180.416 80.472 C 174.875 80.958,165.692 82.137,163.432 82.653 C 162.288 82.914,160.338 83.360,159.099 83.643 C 156.394 84.261,154.784 84.867,155.756 84.900 C 156.167 84.914,156.331 85.101,156.210 85.417 C 156.106 85.689,156.250 86.102,156.530 86.334 C 157.272 86.950,158.889 86.175,158.663 85.313 C 158.492 84.658,159.374 83.882,160.291 83.882 C 160.642 83.882,160.529 84.154,159.926 84.757 C 159.445 85.238,159.102 85.901,159.165 86.230 C 159.349 87.196,160.721 87.157,161.645 86.160 L 162.468 85.272 162.306 86.118 C 162.217 86.584,161.888 87.041,161.575 87.134 C 161.161 87.257,161.195 87.295,161.698 87.273 C 162.080 87.256,162.671 87.363,163.013 87.511 C 163.355 87.660,164.138 87.699,164.752 87.600 C 165.541 87.472,166.111 87.614,166.692 88.085 C 167.818 88.997,167.432 89.216,165.449 88.792 C 145.037 84.426,116.140 99.283,114.828 114.818 C 114.720 116.105,114.488 117.158,114.313 117.158 C 114.133 117.158,114.097 116.482,114.230 115.597 C 114.405 114.428,114.320 113.818,113.892 113.165 C 113.327 112.302,113.930 110.620,114.818 110.583 C 115.185 110.567,115.142 109.391,114.761 108.995 C 114.586 108.814,114.391 108.276,114.327 107.799 C 114.087 106.006,110.052 107.349,110.052 109.223 C 110.052 110.129,110.659 110.228,112.966 109.696 C 114.756 109.283,114.023 110.037,111.985 110.704 C 111.041 111.012,110.025 111.265,109.727 111.265 C 109.429 111.265,109.185 111.421,109.185 111.612 C 109.185 111.802,108.807 111.958,108.344 111.958 C 106.673 111.958,105.551 114.281,106.640 115.484 C 107.290 116.203,106.836 116.341,105.980 115.685 C 105.670 115.446,105.367 114.783,105.308 114.211 C 105.177 112.960,104.758 112.934,103.871 114.123 L 103.209 115.009 104.412 116.585 C 107.924 121.185,107.427 120.999,111.626 119.289 C 113.429 118.554,115.484 117.847,116.192 117.716 C 116.901 117.585,117.559 117.350,117.655 117.194 C 117.751 117.039,117.482 116.978,117.056 117.059 C 115.967 117.267,116.307 110.967,117.518 108.492 C 118.476 106.534,120.980 102.996,122.059 102.076 C 124.609 99.901,130.253 96.014,130.861 96.014 C 130.958 96.014,131.652 95.625,132.404 95.151 C 142.865 88.546,164.991 86.688,171.750 91.846 C 171.941 91.992,172.643 92.287,173.310 92.503 C 175.391 93.175,179.054 96.918,179.731 99.065 C 180.366 101.079,180.360 106.924,179.723 107.379 C 179.532 107.514,179.330 107.842,179.274 108.106 C 179.218 108.370,178.696 109.278,178.114 110.123 C 177.532 110.969,177.164 111.767,177.297 111.896 C 177.666 112.257,179.549 109.829,179.549 108.992 C 179.549 108.146,180.553 107.106,181.370 107.106 C 181.674 107.106,182.412 106.694,183.010 106.191 C 183.608 105.688,184.439 105.256,184.856 105.231 C 185.491 105.193,185.601 105.003,185.527 104.066 C 185.423 102.739,186.329 102.513,187.327 103.616 C 188.055 104.421,187.829 105.928,186.779 107.263 C 186.157 108.054,186.146 108.146,186.676 108.146 C 187.001 108.146,187.812 108.482,188.478 108.894 C 190.059 109.871,192.028 109.065,192.028 107.440 C 192.028 105.535,194.487 104.643,196.316 105.885 C 197.181 106.471,197.607 106.587,197.885 106.309 C 198.439 105.755,198.419 125.804,197.865 127.020 C 197.643 127.506,197.344 127.903,197.200 127.903 C 197.055 127.903,196.590 128.465,196.165 129.152 C 195.741 129.838,194.958 130.552,194.425 130.738 C 193.304 131.129,193.398 131.786,194.656 132.359 C 195.128 132.574,195.610 133.024,195.728 133.359 C 195.846 133.694,196.338 134.398,196.823 134.922 C 197.307 135.446,197.518 135.875,197.292 135.875 C 197.066 135.875,196.880 136.175,196.880 136.541 C 196.880 138.024,193.900 139.845,191.768 139.666 C 191.625 139.654,191.548 139.328,191.596 138.941 C 191.678 138.287,191.609 138.301,190.616 139.136 C 189.403 140.157,188.784 140.237,187.454 139.543 C 186.767 139.185,186.476 139.162,186.355 139.458 C 186.264 139.680,186.178 139.601,186.163 139.284 C 186.147 138.966,186.018 138.654,185.875 138.590 C 185.125 138.257,184.425 136.176,184.839 135.513 C 185.431 134.564,185.724 134.669,185.517 135.756 C 185.364 136.555,185.436 136.651,186.072 136.485 C 186.474 136.379,186.971 136.495,187.176 136.742 C 187.466 137.092,187.778 137.105,188.583 136.801 C 189.371 136.503,189.483 136.363,189.051 136.211 C 188.513 136.023,187.812 134.528,187.184 132.236 L 186.899 131.196 186.864 132.344 C 186.837 133.230,186.690 133.472,186.222 133.404 C 185.439 133.290,183.965 133.779,183.592 134.275 C 183.420 134.505,183.372 134.345,183.473 133.882 C 183.567 133.452,183.510 133.184,183.345 133.286 C 182.994 133.503,181.113 129.690,181.420 129.383 C 181.535 129.268,181.629 129.357,181.629 129.581 C 181.629 129.885,181.806 129.878,182.322 129.556 C 182.704 129.317,183.016 128.917,183.016 128.666 C 183.016 128.414,183.158 128.297,183.332 128.404 C 183.506 128.512,183.610 128.342,183.564 128.028 C 183.518 127.713,182.961 127.284,182.327 127.073 C 180.772 126.556,179.925 125.307,179.671 123.156 C 179.467 121.439,179.406 121.352,178.204 121.074 C 177.008 120.798,176.834 120.555,174.441 115.836 L 171.932 110.887 173.362 109.083 C 176.152 105.561,177.213 101.787,176.086 99.390 C 172.841 92.487,161.111 90.384,147.228 94.215 C 143.801 95.161,143.500 95.410,144.201 96.721 C 144.574 97.417,142.478 99.133,141.255 99.133 C 140.915 99.133,140.721 99.473,140.710 100.087 L 140.692 101.040 140.148 100.260 C 139.848 99.831,139.389 99.480,139.126 99.480 C 138.863 99.480,138.648 99.324,138.648 99.133 C 138.648 98.943,138.326 98.787,137.932 98.787 C 137.377 98.787,137.264 98.633,137.431 98.105 C 137.632 97.472,137.565 97.450,136.502 97.808 C 134.420 98.509,134.362 98.738,135.876 100.298 C 137.466 101.936,137.436 101.836,136.647 102.852 L 136.049 103.625 134.402 102.551 C 133.497 101.961,132.753 101.379,132.750 101.259 C 132.682 98.448,123.816 105.143,121.207 109.975 C 117.808 116.270,123.385 124.090,131.274 124.090 C 132.099 124.090,132.430 124.228,132.317 124.523 C 132.226 124.762,131.950 125.854,131.705 126.950 C 131.460 128.046,131.148 128.943,131.012 128.943 C 130.454 128.943,125.279 127.141,124.974 126.841 C 123.864 125.747,124.461 127.081,126.922 131.190 C 129.568 135.607,130.329 136.410,130.329 134.786 C 130.329 134.400,130.659 132.810,131.062 131.254 C 132.763 124.679,132.930 123.219,131.937 123.600 C 131.199 123.883,128.249 123.085,125.917 121.973 C 121.974 120.091,119.593 115.349,120.891 111.960 C 121.173 111.223,121.223 111.351,121.228 112.827 C 121.240 116.225,122.275 118.544,123.779 118.544 C 124.113 118.544,124.673 118.909,125.024 119.355 C 126.034 120.639,132.246 121.535,133.024 120.509 C 133.462 119.932,134.835 115.984,134.835 115.302 C 134.835 114.928,135.127 114.731,135.679 114.731 C 136.144 114.731,136.931 114.576,137.430 114.387 C 137.928 114.197,143.125 113.263,148.977 112.311 C 154.830 111.359,161.334 110.270,163.432 109.893 C 169.333 108.830,170.567 108.827,171.127 109.879 C 171.922 111.375,183.861 135.874,185.618 139.614 C 186.804 142.140,187.385 143.050,187.613 142.734 C 187.841 142.417,187.875 142.468,187.732 142.911 C 187.608 143.295,188.510 145.563,190.075 148.804 C 194.991 158.983,199.102 167.246,199.337 167.418 C 199.467 167.513,199.632 167.900,199.703 168.277 C 199.848 169.041,201.454 169.352,202.399 168.799 C 202.797 168.566,202.555 168.476,201.511 168.468 C 200.255 168.459,200.047 168.344,199.847 167.550 C 199.555 166.387,201.344 164.608,202.501 164.910 L 203.229 165.101 202.481 164.353 C 201.982 163.853,201.733 163.173,201.732 162.305 C 201.731 161.068,200.311 149.618,199.100 141.075 C 198.509 136.905,198.436 125.440,198.915 111.785 L 199.133 105.546 200.173 105.629 C 200.745 105.674,203.787 105.878,206.932 106.081 C 217.235 106.747,234.431 108.686,245.061 110.380 C 246.872 110.669,250.225 111.148,252.513 111.444 C 254.801 111.741,257.764 112.216,259.099 112.499 C 264.556 113.658,270.060 114.731,270.543 114.731 C 271.163 114.731,271.242 114.043,270.624 114.027 C 269.646 114.003,268.840 112.310,269.550 111.773 C 270.374 111.148,270.328 111.145,271.924 111.958 C 272.672 112.340,273.718 112.652,274.250 112.652 C 274.878 112.652,275.217 112.834,275.217 113.172 C 275.217 113.458,274.978 113.692,274.686 113.692 C 274.394 113.692,274.065 113.925,273.956 114.211 C 273.846 114.497,273.344 114.753,272.840 114.779 L 271.924 114.826 272.790 114.978 C 273.267 115.062,274.325 115.352,275.142 115.624 C 275.959 115.896,277.051 116.097,277.568 116.071 C 278.386 116.030,278.407 116.004,277.730 115.873 C 277.198 115.771,276.950 115.476,276.950 114.947 C 276.950 114.520,276.721 113.868,276.441 113.498 C 275.097 111.722,276.218 111.040,278.007 112.546 C 278.617 113.060,279.414 113.502,279.778 113.529 C 280.685 113.595,284.534 117.254,284.338 117.863 C 284.303 117.973,284.732 118.235,285.291 118.447 C 285.851 118.658,286.308 118.701,286.308 118.543 C 286.308 118.385,286.164 118.203,285.988 118.140 C 285.812 118.076,284.285 116.698,282.594 115.078 C 255.267 88.891,220.128 76.990,180.416 80.472 M223.946 80.213 C 224.197 80.463,229.883 81.845,230.035 81.692 C 230.115 81.612,228.855 81.215,227.234 80.808 C 224.236 80.056,223.689 79.957,223.946 80.213 M261.274 80.670 C 262.090 80.743,263.337 80.742,264.047 80.668 C 264.757 80.593,264.090 80.534,262.565 80.535 C 261.040 80.536,260.459 80.597,261.274 80.670 M20.922 81.377 C 21.196 81.821,23.224 83.321,23.224 83.080 C 23.224 82.995,22.651 82.488,21.951 81.954 C 21.251 81.420,20.788 81.160,20.922 81.377 M233.449 82.846 C 235.165 83.410,236.724 83.862,236.915 83.851 C 237.459 83.819,232.797 82.245,231.496 82.022 C 230.854 81.911,231.733 82.283,233.449 82.846 M74.675 83.768 C 74.141 84.468,73.881 84.931,74.098 84.798 C 74.541 84.523,76.042 82.496,75.801 82.496 C 75.716 82.496,75.209 83.068,74.675 83.768 M237.435 83.987 C 237.435 84.222,241.675 85.651,241.850 85.475 C 241.925 85.400,241.157 85.067,240.144 84.734 C 239.131 84.400,238.107 84.056,237.868 83.968 C 237.630 83.880,237.435 83.888,237.435 83.987 M25.303 84.400 C 25.303 84.634,28.119 86.035,28.276 85.878 C 28.348 85.805,27.709 85.407,26.855 84.992 C 26.002 84.577,25.303 84.311,25.303 84.400 M71.413 87.391 C 66.721 91.766,60.191 93.813,51.993 93.477 C 49.303 93.367,48.570 93.405,49.740 93.594 C 57.883 94.907,66.240 92.601,71.598 87.561 C 72.921 86.317,73.925 85.299,73.830 85.299 C 73.735 85.299,72.647 86.241,71.413 87.391 M106.586 87.704 C 105.442 88.869,104.077 90.078,103.553 90.393 C 102.374 91.099,102.359 91.548,103.473 92.788 C 104.516 93.951,104.427 94.032,107.133 89.441 C 109.379 85.628,109.196 85.046,106.586 87.704 M333.540 85.864 C 334.067 85.944,334.847 85.942,335.273 85.859 C 335.700 85.777,335.269 85.712,334.315 85.714 C 333.362 85.717,333.013 85.784,333.540 85.864 M29.269 86.487 C 29.639 86.770,30.146 87.002,30.396 87.002 C 31.168 87.002,30.899 86.740,29.723 86.347 C 28.692 86.003,28.653 86.015,29.269 86.487 M245.019 86.836 C 246.044 87.323,246.948 87.657,247.026 87.578 C 247.105 87.499,246.500 87.165,245.682 86.834 C 243.310 85.875,242.996 85.876,245.019 86.836 M74.177 88.215 C 73.335 89.073,72.724 89.775,72.819 89.775 C 72.915 89.775,73.681 89.073,74.523 88.215 C 75.365 87.357,75.976 86.655,75.881 86.655 C 75.786 86.655,75.019 87.357,74.177 88.215 M31.542 87.290 C 31.828 87.467,32.452 87.715,32.929 87.843 C 33.531 88.004,33.637 87.977,33.276 87.753 C 32.990 87.577,32.366 87.328,31.889 87.200 C 31.287 87.039,31.181 87.067,31.542 87.290 M68.044 88.240 L 67.071 89.132 68.198 88.348 C 68.817 87.917,69.324 87.516,69.324 87.456 C 69.324 87.183,68.941 87.418,68.044 88.240 M248.527 88.388 C 249.194 88.754,249.896 89.052,250.087 89.052 C 250.277 89.052,249.887 88.754,249.220 88.388 C 248.553 88.023,247.851 87.724,247.660 87.724 C 247.470 87.724,247.860 88.023,248.527 88.388 M195.031 90.679 C 195.587 91.134,195.806 91.488,195.535 91.495 C 194.882 91.512,192.720 89.171,192.723 88.450 C 192.725 88.051,192.933 88.184,193.387 88.872 C 193.751 89.423,194.491 90.237,195.031 90.679 M251.300 89.601 C 251.776 89.874,252.322 90.097,252.513 90.097 C 252.704 90.097,252.470 89.874,251.993 89.601 C 251.516 89.329,250.971 89.106,250.780 89.106 C 250.589 89.106,250.823 89.329,251.300 89.601 M330.549 89.347 C 330.765 89.487,331.020 89.913,331.116 90.295 C 331.248 90.826,331.298 90.765,331.329 90.035 C 331.358 89.341,331.204 89.083,330.763 89.087 C 330.378 89.090,330.300 89.185,330.549 89.347 M71.231 90.672 L 70.191 91.565 71.317 90.820 C 71.937 90.410,72.444 90.007,72.444 89.924 C 72.444 89.665,72.297 89.755,71.231 90.672 M253.033 90.287 C 253.033 90.382,254.281 91.088,255.806 91.854 C 257.331 92.621,258.579 93.171,258.579 93.075 C 258.579 92.980,257.331 92.275,255.806 91.508 C 254.281 90.741,253.033 90.192,253.033 90.287 M299.393 91.065 C 300.013 91.142,301.027 91.142,301.646 91.065 C 302.266 90.988,301.759 90.926,300.520 90.926 C 299.281 90.926,298.774 90.988,299.393 91.065 M60.659 91.508 C 59.945 91.736,59.914 91.790,60.485 91.815 C 60.867 91.831,61.412 91.693,61.698 91.508 C 62.306 91.115,61.884 91.115,60.659 91.508 M101.000 92.932 C 101.689 93.954,102.253 94.998,102.253 95.250 C 102.253 95.502,102.383 95.628,102.542 95.530 C 102.701 95.431,102.831 95.791,102.831 96.329 C 102.831 97.659,103.619 98.511,104.259 97.871 C 104.648 97.481,104.373 96.923,102.576 94.448 C 100.156 91.119,99.084 90.086,101.000 92.932 M104.045 91.735 C 104.717 92.343,104.900 93.241,104.352 93.241 C 104.173 93.241,103.783 92.894,103.486 92.471 C 102.559 91.147,102.900 90.699,104.045 91.735 M331.380 91.379 C 331.361 92.068,332.338 92.602,333.341 92.451 C 334.288 92.309,334.284 92.303,333.206 92.253 C 332.558 92.223,331.950 91.949,331.744 91.594 C 331.549 91.261,331.385 91.164,331.380 91.379 M44.194 92.712 C 45.147 92.966,46.395 93.173,46.967 93.172 C 48.327 93.169,46.491 92.703,44.026 92.426 L 42.461 92.250 44.194 92.712 M344.986 93.761 C 344.989 94.714,345.056 95.063,345.136 94.536 C 345.216 94.009,345.214 93.229,345.131 92.803 C 345.049 92.377,344.984 92.808,344.986 93.761 M66.898 93.068 C 66.421 93.340,66.187 93.563,66.378 93.563 C 66.568 93.563,67.114 93.340,67.591 93.068 C 68.068 92.795,68.302 92.572,68.111 92.572 C 67.920 92.572,67.374 92.795,66.898 93.068 M323.138 93.761 C 323.142 94.523,323.213 94.795,323.295 94.363 C 323.378 93.932,323.375 93.308,323.288 92.977 C 323.202 92.645,323.134 92.998,323.138 93.761 M200.647 93.519 C 201.515 93.297,202.311 95.238,201.631 95.918 C 200.693 96.856,199.848 96.113,199.731 94.245 C 199.672 93.298,199.750 92.892,199.936 93.173 C 200.102 93.421,200.421 93.577,200.647 93.519 M312.478 93.494 C 313.155 94.137,315.543 95.446,315.289 95.035 C 315.147 94.805,314.379 94.291,313.581 93.891 C 312.784 93.492,312.288 93.313,312.478 93.494 M196.868 94.605 C 197.699 96.156,197.019 98.926,195.701 99.360 C 194.716 99.684,192.302 99.500,191.768 99.059 C 190.920 98.360,191.258 97.675,192.334 97.912 C 193.682 98.208,194.920 96.734,194.725 95.065 C 194.567 93.708,196.201 93.357,196.868 94.605 M212.461 94.711 C 213.503 95.137,213.594 95.157,217.071 95.718 C 218.549 95.957,219.757 96.277,219.757 96.430 C 219.757 96.582,220.065 96.707,220.440 96.707 C 222.825 96.707,229.772 99.853,231.938 101.914 C 233.415 103.318,233.817 105.532,232.756 106.412 C 232.470 106.650,232.236 107.059,232.236 107.321 C 232.236 107.934,228.906 107.935,225.477 107.324 L 223.050 106.892 226.126 106.688 C 235.391 106.073,232.051 101.727,218.981 97.389 C 217.887 97.026,216.530 96.490,215.965 96.198 C 214.357 95.366,208.143 95.460,206.703 96.338 C 203.747 98.141,205.570 100.986,211.438 103.724 C 214.232 105.028,216.172 105.601,220.971 106.543 C 222.899 106.921,218.332 106.691,214.883 106.236 C 212.703 105.949,208.739 105.614,206.074 105.492 C 200.316 105.229,198.692 104.923,200.954 104.529 L 202.428 104.271 201.647 103.281 C 201.218 102.737,200.672 102.283,200.433 102.272 C 199.702 102.240,199.949 101.558,201.017 100.659 C 201.576 100.189,202.393 99.008,202.833 98.036 C 204.456 94.444,208.438 93.069,212.461 94.711 M61.352 94.845 L 59.445 95.313 61.117 95.146 C 62.036 95.055,63.050 94.828,63.370 94.641 C 64.093 94.220,63.762 94.253,61.352 94.845 M385.570 94.780 C 384.974 95.040,384.359 95.463,384.204 95.720 C 383.982 96.088,384.029 96.102,384.422 95.787 C 384.697 95.568,385.468 95.151,386.135 94.863 C 386.802 94.574,387.192 94.331,387.002 94.323 C 386.811 94.315,386.167 94.520,385.570 94.780 M389.948 94.627 C 390.234 94.812,390.858 94.963,391.334 94.963 C 392.020 94.963,392.093 94.893,391.681 94.627 C 391.395 94.443,390.771 94.291,390.295 94.291 C 389.609 94.291,389.536 94.361,389.948 94.627 M171.924 95.704 C 171.924 95.875,172.158 96.014,172.444 96.014 C 176.216 96.014,176.854 105.148,173.303 108.319 C 172.635 108.916,172.669 108.773,173.555 107.279 C 176.173 102.864,175.917 99.826,172.669 96.772 C 171.592 95.759,170.984 95.034,171.317 95.162 C 171.651 95.290,171.924 95.534,171.924 95.704 M391.768 95.219 C 390.839 95.398,390.855 95.294,391.542 96.672 C 393.609 100.815,385.878 102.686,382.767 98.795 C 382.402 98.339,382.343 98.371,382.333 99.024 C 382.298 101.433,385.723 105.178,387.380 104.542 C 387.648 104.439,387.868 104.506,387.868 104.690 C 387.868 104.875,388.813 105.026,389.968 105.026 C 391.416 105.026,391.995 104.907,391.831 104.642 C 391.672 104.384,391.835 104.335,392.331 104.492 C 393.160 104.755,395.296 103.467,394.952 102.911 C 394.841 102.730,394.942 102.625,395.177 102.678 C 395.413 102.730,395.832 102.197,396.109 101.494 C 396.686 100.028,396.053 97.139,395.196 97.322 C 394.950 97.375,394.839 97.272,394.949 97.094 C 395.149 96.771,393.224 94.932,392.781 95.021 C 392.653 95.047,392.197 95.136,391.768 95.219 M52.600 95.577 C 53.791 95.645,55.741 95.645,56.932 95.577 C 58.124 95.510,57.149 95.454,54.766 95.454 C 52.383 95.454,51.408 95.510,52.600 95.577 M84.315 95.569 C 84.840 95.648,85.698 95.648,86.222 95.569 C 86.746 95.489,86.317 95.424,85.269 95.424 C 84.220 95.424,83.791 95.489,84.315 95.569 M316.411 96.206 C 316.794 96.788,317.171 97.879,317.248 98.632 L 317.388 100.000 317.444 98.614 C 317.487 97.571,317.279 96.969,316.607 96.187 L 315.714 95.147 316.411 96.206 M201.040 97.841 C 201.040 98.314,199.971 98.550,199.584 98.163 C 198.903 97.482,199.530 96.624,200.339 97.129 C 200.724 97.370,201.040 97.690,201.040 97.841 M209.359 101.663 C 209.776 101.814,209.761 101.857,209.284 101.879 C 208.709 101.906,206.586 100.110,206.586 99.597 C 206.586 99.458,207.093 99.823,207.712 100.409 C 208.332 100.995,209.073 101.560,209.359 101.663 M190.581 100.967 C 191.115 101.610,190.298 103.092,189.333 103.230 C 188.909 103.291,188.562 103.187,188.562 102.999 C 188.562 102.810,188.475 102.430,188.368 102.153 C 187.954 101.073,189.833 100.065,190.581 100.967 M196.610 101.968 C 196.395 102.184,195.750 102.162,194.801 101.906 C 193.089 101.445,193.317 100.962,195.321 100.803 C 196.725 100.692,197.336 101.243,196.610 101.968 M82.256 103.120 C 82.258 104.263,82.323 104.690,82.400 104.067 C 82.477 103.444,82.476 102.508,82.397 101.987 C 82.318 101.466,82.255 101.976,82.256 103.120 M42.721 102.501 C 43.245 102.581,44.103 102.581,44.627 102.501 C 45.152 102.422,44.723 102.357,43.674 102.357 C 42.626 102.357,42.197 102.422,42.721 102.501 M131.023 102.563 C 131.023 102.733,130.789 102.962,130.503 103.072 C 130.186 103.193,129.983 103.072,129.983 102.762 C 129.983 102.482,130.217 102.253,130.503 102.253 C 130.789 102.253,131.023 102.392,131.023 102.563 M194.834 102.848 C 196.347 103.742,196.175 104.679,194.497 104.679 C 192.970 104.679,192.210 104.012,192.542 102.963 C 192.817 102.097,193.504 102.062,194.834 102.848 M81.204 104.679 C 81.204 105.537,81.271 105.888,81.354 105.459 C 81.436 105.030,81.436 104.328,81.354 103.899 C 81.271 103.471,81.204 103.821,81.204 104.679 M191.219 104.532 C 191.894 106.290,190.102 108.836,188.885 107.850 C 187.935 107.081,188.384 104.522,189.521 104.224 C 190.662 103.925,191.010 103.988,191.219 104.532 M182.530 105.581 C 182.377 105.981,182.184 106.066,181.953 105.835 C 181.762 105.645,181.710 105.218,181.837 104.887 C 181.991 104.487,182.183 104.402,182.414 104.633 C 182.605 104.823,182.657 105.250,182.530 105.581 M298.700 104.928 C 298.176 105.007,297.318 105.007,296.794 104.928 C 296.269 104.848,296.698 104.783,297.747 104.783 C 298.795 104.783,299.224 104.848,298.700 104.928 M305.806 104.930 C 305.186 105.007,304.172 105.007,303.553 104.930 C 302.933 104.853,303.440 104.790,304.679 104.790 C 305.919 104.790,306.425 104.853,305.806 104.930 M82.590 106.759 C 82.590 107.617,82.658 107.968,82.740 107.539 C 82.823 107.110,82.823 106.408,82.740 105.979 C 82.658 105.550,82.590 105.901,82.590 106.759 M114.210 105.722 C 113.948 106.145,114.899 106.564,115.408 106.249 C 115.608 106.126,115.771 105.878,115.771 105.699 C 115.771 105.262,114.483 105.281,114.210 105.722 M292.758 106.768 C 292.005 108.650,291.995 109.577,292.737 108.645 C 293.712 107.423,292.973 110.104,291.467 113.258 C 290.031 116.266,289.744 116.492,288.604 115.511 C 288.216 115.178,288.411 115.568,289.039 116.378 C 289.666 117.188,290.303 117.851,290.453 117.851 C 290.736 117.851,294.122 109.816,294.616 107.972 C 294.769 107.400,295.003 106.620,295.136 106.239 C 295.361 105.591,295.345 105.586,294.877 106.153 C 294.270 106.890,293.934 106.928,293.934 106.260 C 293.934 105.171,293.284 105.452,292.758 106.768 M92.413 106.499 C 92.552 106.737,93.107 107.584,93.647 108.381 C 94.691 109.924,94.868 110.415,94.240 110.027 C 93.965 109.857,93.917 110.228,94.076 111.306 C 94.568 114.652,94.677 120.476,94.277 122.010 C 93.376 125.465,93.393 125.947,94.410 125.692 C 95.968 125.301,95.411 126.013,93.383 127.006 C 92.317 127.528,91.516 128.027,91.604 128.115 C 91.784 128.294,98.418 125.092,100.981 123.588 C 101.902 123.047,102.511 122.511,102.335 122.395 C 101.854 122.077,101.529 119.999,101.939 119.862 C 102.398 119.709,96.113 111.408,95.634 111.534 C 95.433 111.586,95.364 111.475,95.480 111.288 C 95.666 110.987,92.671 106.066,92.303 106.066 C 92.224 106.066,92.274 106.261,92.413 106.499 M238.151 108.146 C 238.711 108.146,239.168 108.302,239.168 108.492 C 239.168 108.683,238.622 108.839,237.955 108.839 C 236.775 108.839,236.743 108.803,236.794 107.539 C 236.835 106.493,236.874 106.426,236.990 107.192 C 237.110 107.983,237.308 108.146,238.151 108.146 M201.537 108.600 C 201.441 108.850,201.413 110.839,201.474 113.019 L 201.585 116.984 201.659 112.761 L 201.733 108.538 202.686 108.394 L 203.640 108.249 202.675 108.198 C 202.145 108.169,201.633 108.350,201.537 108.600 M57.018 109.185 C 57.525 110.092,59.422 112.782,60.052 113.489 C 61.153 114.723,60.683 113.476,59.427 111.832 C 58.713 110.896,58.299 110.038,58.443 109.789 C 58.579 109.552,58.561 109.476,58.403 109.619 C 58.245 109.763,57.803 109.607,57.421 109.273 C 56.922 108.837,56.809 108.812,57.018 109.185 M183.969 109.213 C 183.327 109.587,183.105 111.409,183.727 111.201 C 183.927 111.135,184.410 110.576,184.801 109.959 C 185.545 108.783,185.215 108.487,183.969 109.213 M210.485 109.078 C 210.819 109.165,211.365 109.165,211.698 109.078 C 212.032 108.991,211.759 108.919,211.092 108.919 C 210.425 108.919,210.152 108.991,210.485 109.078 M267.780 110.572 C 268.057 110.572,268.284 110.738,268.284 110.942 C 268.284 111.506,266.854 110.938,266.149 110.094 C 265.217 108.979,265.392 108.688,266.394 109.690 C 266.879 110.175,267.503 110.572,267.780 110.572 M83.223 111.814 C 83.242 112.370,83.391 113.215,83.553 113.692 C 83.751 114.276,83.782 113.994,83.647 112.825 C 83.422 110.875,83.171 110.276,83.223 111.814 M192.904 111.250 C 192.791 111.432,192.938 112.153,193.230 112.852 C 194.334 115.494,193.890 116.195,190.819 116.655 L 189.091 116.914 190.725 117.391 C 192.902 118.026,193.210 118.684,192.957 122.161 C 192.725 125.344,193.435 124.855,193.923 121.495 C 194.062 120.544,194.414 119.303,194.707 118.737 C 195.079 118.018,195.121 117.669,194.847 117.577 C 194.173 117.353,194.418 116.464,195.154 116.464 C 195.721 116.464,195.814 116.623,195.643 117.303 C 195.481 117.950,195.617 118.238,196.243 118.568 C 196.689 118.802,197.162 119.162,197.295 119.366 C 197.427 119.570,197.653 119.620,197.797 119.476 C 198.157 119.116,197.284 115.978,196.774 115.802 C 195.589 115.394,194.107 113.374,194.107 112.166 C 194.107 110.956,193.412 110.427,192.904 111.250 M168.284 111.856 C 168.666 111.947,169.255 112.358,169.594 112.769 C 170.206 113.514,170.207 113.513,169.798 112.565 C 169.491 111.855,169.157 111.622,168.489 111.652 C 167.775 111.684,167.733 111.726,168.284 111.856 M58.384 113.112 C 58.918 113.812,59.424 114.385,59.510 114.385 C 59.751 114.385,58.250 112.357,57.807 112.083 C 57.590 111.949,57.850 112.412,58.384 113.112 M270.017 112.478 C 270.017 112.764,270.173 112.998,270.364 112.998 C 270.555 112.998,270.711 112.764,270.711 112.478 C 270.711 112.192,270.555 111.958,270.364 111.958 C 270.173 111.958,270.017 112.192,270.017 112.478 M157.712 113.345 C 156.547 113.718,157.806 113.718,159.272 113.345 C 160.206 113.107,160.224 113.080,159.445 113.074 C 158.969 113.070,158.189 113.192,157.712 113.345 M276.083 114.731 C 276.201 114.922,275.976 115.078,275.584 115.078 C 275.191 115.078,274.870 114.922,274.870 114.731 C 274.870 114.541,275.095 114.385,275.369 114.385 C 275.644 114.385,275.965 114.541,276.083 114.731 M135.573 115.396 C 135.311 115.558,135.155 115.860,135.226 116.067 C 135.304 116.293,135.544 116.325,135.831 116.147 C 136.092 115.984,136.248 115.682,136.177 115.476 C 136.100 115.249,135.860 115.217,135.573 115.396 M33.774 117.938 L 32.756 119.064 33.882 118.046 C 34.502 117.486,35.009 116.979,35.009 116.920 C 35.009 116.652,34.723 116.888,33.774 117.938 M61.352 116.920 C 61.352 116.979,61.859 117.486,62.478 118.046 L 63.605 119.064 62.587 117.938 C 61.638 116.888,61.352 116.652,61.352 116.920 M84.288 117.158 C 84.305 118.058,84.851 119.538,84.863 118.718 C 84.869 118.336,84.739 117.712,84.575 117.331 C 84.393 116.906,84.281 116.839,84.288 117.158 M118.946 118.198 C 119.368 118.769,119.772 119.237,119.842 119.237 C 119.912 119.237,119.693 118.769,119.356 118.198 C 119.018 117.626,118.614 117.158,118.459 117.158 C 118.304 117.158,118.523 117.626,118.946 118.198 M54.939 118.544 C 54.056 118.924,54.967 118.924,56.153 118.544 C 56.849 118.321,56.883 118.265,56.326 118.256 C 55.945 118.251,55.321 118.380,54.939 118.544 M64.804 120.711 C 66.240 122.241,66.551 122.516,66.551 122.256 C 66.551 122.200,65.810 121.459,64.905 120.609 L 63.258 119.064 64.804 120.711 M48.354 120.463 C 47.487 120.880,47.458 120.928,48.180 120.752 C 49.162 120.512,50.266 119.949,49.740 119.957 C 49.549 119.960,48.925 120.187,48.354 120.463 M196.290 121.568 C 194.637 122.391,194.524 123.063,196.131 122.512 C 196.829 122.273,197.451 121.828,197.512 121.524 C 197.645 120.870,197.695 120.868,196.290 121.568 M85.328 121.664 C 85.345 122.564,85.891 124.044,85.903 123.224 C 85.909 122.842,85.779 122.218,85.615 121.837 C 85.433 121.412,85.321 121.345,85.328 121.664 M281.197 122.530 C 281.200 123.293,281.271 123.564,281.354 123.133 C 281.437 122.702,281.434 122.078,281.347 121.746 C 281.261 121.415,281.193 121.768,281.197 122.530 M69.479 125.726 C 71.185 127.483,72.654 128.848,72.743 128.759 C 72.833 128.669,72.836 128.557,72.751 128.510 C 72.666 128.462,71.197 127.097,69.487 125.477 L 66.378 122.530 69.479 125.726 M85.994 124.263 C 85.982 124.454,86.194 125.312,86.464 126.170 C 86.734 127.028,86.954 127.418,86.952 127.036 C 86.949 126.313,86.030 123.657,85.994 124.263 M201.170 127.730 C 201.170 129.827,201.227 130.640,201.296 129.537 C 201.365 128.434,201.365 126.718,201.295 125.724 C 201.225 124.730,201.169 125.633,201.170 127.730 M180.375 126.699 C 181.370 128.800,181.449 129.086,180.946 128.776 C 180.594 128.558,179.203 125.613,179.203 125.086 C 179.203 124.443,179.502 124.854,180.375 126.699 M117.686 138.733 C 117.550 145.836,117.505 152.348,117.584 153.206 C 117.664 154.064,117.757 152.673,117.790 150.116 C 117.868 144.183,118.318 144.545,118.544 150.721 L 118.718 155.459 119.654 155.567 C 120.214 155.632,120.677 155.946,120.804 156.347 C 121.004 156.976,121.405 157.183,122.153 157.041 C 123.304 156.824,124.292 157.774,124.216 159.025 C 124.172 159.733,124.211 159.922,124.301 159.445 C 124.392 158.969,124.598 158.267,124.760 157.886 C 125.071 157.151,125.616 154.837,126.351 151.127 C 126.596 149.887,127.280 147.024,127.870 144.764 C 129.125 139.955,129.086 140.345,128.404 139.494 C 127.890 138.853,127.883 138.860,128.260 139.634 C 128.826 140.797,128.386 142.568,127.794 141.510 C 126.757 139.659,122.860 133.622,122.173 132.803 C 121.752 132.300,120.625 130.524,119.670 128.855 L 117.932 125.820 117.686 138.733 M280.843 127.210 C 280.843 127.877,280.914 128.150,281.001 127.816 C 281.089 127.483,281.089 126.937,281.001 126.603 C 280.914 126.269,280.843 126.542,280.843 127.210 M278.444 128.769 C 278.446 129.913,278.510 130.339,278.587 129.716 C 278.665 129.093,278.663 128.158,278.584 127.637 C 278.505 127.116,278.442 127.626,278.444 128.769 M62.416 127.730 C 62.416 127.920,62.639 128.466,62.912 128.943 C 63.184 129.419,63.407 129.653,63.407 129.463 C 63.407 129.272,63.184 128.726,62.912 128.250 C 62.639 127.773,62.416 127.539,62.416 127.730 M87.161 128.596 C 87.259 129.073,87.341 129.580,87.344 129.723 C 87.346 129.866,87.533 129.983,87.759 129.983 C 88.337 129.983,91.231 128.550,91.040 128.359 C 90.953 128.272,90.228 128.535,89.428 128.943 C 88.629 129.351,87.942 129.635,87.903 129.574 C 87.863 129.513,87.640 129.073,87.407 128.596 L 86.984 127.730 87.161 128.596 M74.003 129.951 C 75.052 131.096,77.643 133.281,77.643 133.020 C 77.643 132.942,76.590 131.964,75.303 130.847 C 74.016 129.729,73.432 129.326,74.003 129.951 M197.920 131.043 C 197.920 133.280,197.455 133.560,197.078 131.551 C 196.880 130.493,197.285 128.943,197.759 128.943 C 197.848 128.943,197.920 129.888,197.920 131.043 M280.503 130.503 C 280.507 131.265,280.578 131.536,280.661 131.105 C 280.744 130.674,280.741 130.050,280.654 129.719 C 280.567 129.387,280.500 129.740,280.503 130.503 M30.069 131.614 C 30.498 131.696,31.200 131.696,31.629 131.614 C 32.058 131.531,31.707 131.464,30.849 131.464 C 29.991 131.464,29.640 131.531,30.069 131.614 M278.084 132.756 C 278.084 133.614,278.152 133.964,278.234 133.536 C 278.317 133.107,278.317 132.405,278.234 131.976 C 278.152 131.547,278.084 131.898,278.084 132.756 M280.150 134.142 C 280.150 134.809,280.221 135.082,280.308 134.749 C 280.395 134.415,280.395 133.869,280.308 133.536 C 280.221 133.202,280.150 133.475,280.150 134.142 M27.427 133.822 C 26.614 134.148,26.622 134.166,28.120 135.357 C 29.791 136.685,30.720 136.938,30.342 135.962 C 30.213 135.628,30.021 134.926,29.915 134.402 C 29.708 133.374,28.973 133.203,27.427 133.822 M78.453 133.885 C 78.990 134.277,78.919 134.389,77.739 135.009 C 75.095 136.400,71.750 138.366,71.750 138.530 C 71.750 138.623,72.647 138.197,73.744 137.584 C 74.840 136.971,76.562 136.009,77.571 135.445 C 79.305 134.477,79.644 133.449,78.228 133.449 C 78.024 133.449,78.125 133.645,78.453 133.885 M29.116 134.153 C 29.116 134.647,28.201 134.953,27.683 134.633 C 27.376 134.444,27.445 134.295,27.926 134.107 C 28.874 133.735,29.116 133.745,29.116 134.153 M67.244 137.262 C 67.633 138.024,68.030 138.648,68.125 138.648 C 68.220 138.648,67.980 138.024,67.591 137.262 C 67.202 136.499,66.806 135.875,66.710 135.875 C 66.615 135.875,66.855 136.499,67.244 137.262 M277.730 137.782 C 277.734 138.544,277.805 138.815,277.888 138.384 C 277.971 137.953,277.968 137.329,277.881 136.998 C 277.794 136.666,277.727 137.019,277.730 137.782 M82.622 140.208 C 82.623 142.114,82.681 142.850,82.752 141.843 C 82.822 140.836,82.821 139.276,82.750 138.377 C 82.679 137.477,82.621 138.302,82.622 140.208 M242.288 138.231 C 242.288 138.383,242.951 139.124,243.761 139.878 L 245.234 141.248 243.902 139.814 C 242.964 138.804,242.708 138.326,243.036 138.195 C 243.352 138.069,243.306 138.001,242.894 137.982 C 242.561 137.967,242.288 138.079,242.288 138.231 M85.009 139.515 C 85.013 140.277,85.084 140.548,85.167 140.117 C 85.250 139.686,85.247 139.062,85.160 138.731 C 85.073 138.399,85.006 138.752,85.009 139.515 M279.463 141.594 C 279.467 142.357,279.538 142.628,279.621 142.197 C 279.704 141.766,279.701 141.142,279.614 140.811 C 279.527 140.479,279.460 140.832,279.463 141.594 M204.314 142.548 C 204.613 144.363,205.429 151.389,205.933 156.499 C 206.140 158.596,206.488 160.693,206.707 161.158 C 207.166 162.133,211.768 165.390,212.258 165.087 C 212.438 164.975,212.474 165.064,212.338 165.284 C 212.202 165.504,212.263 165.685,212.473 165.685 C 212.682 165.685,213.043 165.842,213.273 166.035 C 213.503 166.228,214.298 166.852,215.039 167.422 C 217.169 169.059,216.139 168.638,212.341 166.319 C 208.432 163.932,207.978 163.681,208.492 164.198 C 209.910 165.620,217.437 169.754,218.453 169.668 C 219.075 169.616,222.080 169.544,225.130 169.508 C 229.425 169.457,230.453 169.362,229.688 169.083 C 228.800 168.760,228.724 168.612,228.943 167.637 C 229.793 163.856,229.793 163.843,228.872 162.989 C 227.692 161.896,228.177 161.529,229.399 162.590 C 229.932 163.053,229.503 162.624,228.445 161.638 C 227.388 160.651,226.458 159.908,226.380 159.986 C 226.301 160.065,226.659 160.461,227.175 160.867 C 227.691 161.272,228.025 161.692,227.918 161.799 C 227.662 162.055,225.629 160.106,225.823 159.792 C 225.905 159.660,225.476 159.099,224.871 158.545 C 224.265 157.992,223.978 157.812,224.232 158.146 C 225.010 159.165,224.169 158.795,222.704 157.472 C 221.439 156.331,221.524 156.194,222.900 157.158 C 223.198 157.368,222.904 157.036,222.246 156.421 C 221.587 155.807,220.910 155.389,220.741 155.494 C 220.572 155.599,220.476 155.478,220.529 155.225 C 220.581 154.973,220.429 154.805,220.191 154.853 C 219.952 154.900,219.757 154.705,219.757 154.419 C 219.757 153.950,219.346 153.746,218.631 153.858 C 218.488 153.881,218.410 153.754,218.458 153.576 C 218.591 153.077,209.819 145.350,209.291 145.503 C 209.109 145.555,209.060 145.437,209.182 145.240 C 209.303 145.043,209.185 144.799,208.918 144.697 C 208.652 144.594,207.610 143.738,206.604 142.793 C 204.342 140.669,203.998 140.632,204.314 142.548 M263.085 141.768 C 263.371 141.953,264.151 142.088,264.818 142.068 L 266.031 142.032 264.991 141.768 C 263.366 141.354,262.445 141.354,263.085 141.768 M191.681 142.481 C 191.681 142.661,191.252 142.790,190.728 142.767 C 190.141 142.743,190.008 142.666,190.381 142.569 C 190.715 142.482,190.988 142.256,190.988 142.069 C 190.988 141.881,191.144 141.823,191.334 141.941 C 191.525 142.059,191.681 142.302,191.681 142.481 M259.201 144.785 C 259.103 146.646,258.888 147.846,258.637 147.930 C 258.099 148.109,258.119 148.948,258.666 149.144 C 258.904 149.229,258.981 149.424,258.837 149.578 C 258.694 149.732,258.187 149.493,257.711 149.046 C 257.235 148.598,256.846 148.392,256.846 148.586 C 256.846 149.236,266.237 159.120,266.626 158.879 C 266.834 158.750,266.916 158.789,266.808 158.964 C 266.699 159.140,267.083 159.827,267.661 160.491 C 268.495 161.449,268.595 161.502,268.143 160.745 C 267.831 160.221,267.732 159.792,267.924 159.792 C 268.290 159.792,269.745 157.115,270.184 155.633 C 270.605 154.214,272.410 150.124,274.062 146.845 C 274.912 145.158,275.559 143.743,275.499 143.701 C 275.011 143.364,268.652 142.475,268.137 142.672 C 267.757 142.818,267.561 142.789,267.675 142.605 C 267.791 142.418,266.482 142.275,264.526 142.262 C 262.685 142.250,260.769 142.136,260.269 142.008 L 259.359 141.776 259.201 144.785 M277.348 142.735 C 277.320 143.362,276.974 144.508,276.579 145.281 C 276.184 146.055,275.924 146.750,276.000 146.826 C 276.351 147.177,277.688 143.540,277.551 142.612 C 277.400 141.596,277.400 141.596,277.348 142.735 M36.626 143.039 C 36.114 143.551,36.398 144.887,37.019 144.887 C 37.818 144.887,38.475 144.230,38.475 143.432 C 38.475 142.810,37.139 142.526,36.626 143.039 M279.110 145.234 C 279.110 145.901,279.181 146.174,279.268 145.841 C 279.356 145.507,279.356 144.961,279.268 144.627 C 279.181 144.294,279.110 144.567,279.110 145.234 M251.473 148.007 C 252.797 149.341,253.959 150.433,254.054 150.433 C 254.150 150.433,253.144 149.341,251.820 148.007 C 250.495 146.672,249.334 145.581,249.239 145.581 C 249.143 145.581,250.149 146.672,251.473 148.007 M85.394 150.087 C 85.394 151.898,85.452 152.639,85.523 151.733 C 85.595 150.828,85.595 149.346,85.523 148.440 C 85.452 147.535,85.394 148.276,85.394 150.087 M277.606 148.210 C 277.146 149.381,277.127 149.733,277.497 150.239 C 277.901 150.791,277.967 150.733,278.171 149.648 C 278.587 147.430,278.250 146.572,277.606 148.210 M174.177 147.561 C 173.106 147.818,172.708 148.354,173.588 148.354 C 174.898 148.354,174.088 149.552,172.587 149.835 C 171.925 149.959,171.991 150.002,172.900 150.039 C 174.322 150.098,175.386 149.560,175.402 148.775 C 175.411 148.333,175.542 148.403,175.910 149.047 C 176.182 149.523,176.411 149.789,176.418 149.636 C 176.438 149.164,175.386 147.311,175.121 147.354 C 174.983 147.376,174.558 147.469,174.177 147.561 M82.946 149.740 C 82.946 150.789,83.011 151.218,83.091 150.693 C 83.170 150.169,83.170 149.311,83.091 148.787 C 83.011 148.263,82.946 148.692,82.946 149.740 M83.819 154.159 C 83.764 158.551,83.722 158.906,83.519 156.672 L 83.284 154.073 83.343 157.096 C 83.409 160.488,83.428 160.539,84.538 160.249 C 85.311 160.047,85.331 159.949,85.130 157.316 C 85.016 155.818,84.828 153.345,84.712 151.820 C 84.374 147.353,83.887 148.626,83.819 154.159 M278.569 150.742 C 278.441 151.382,278.357 152.940,278.383 154.203 L 278.430 156.499 278.730 153.380 C 279.044 150.101,278.963 148.770,278.569 150.742 M203.547 152.166 C 203.547 152.834,203.618 153.107,203.705 152.773 C 203.792 152.439,203.792 151.893,203.705 151.560 C 203.618 151.226,203.547 151.499,203.547 152.166 M153.557 154.679 C 154.076 156.252,154.701 158.290,154.945 159.209 C 155.207 160.193,155.494 160.710,155.644 160.467 C 155.825 160.174,155.998 160.234,156.244 160.673 C 157.058 162.127,157.187 157.588,156.375 156.071 C 156.157 155.664,155.979 155.009,155.979 154.616 C 155.979 154.222,155.803 153.899,155.587 153.899 C 155.331 153.899,155.258 154.371,155.377 155.261 C 155.521 156.333,155.457 156.583,155.076 156.437 C 154.810 156.335,154.593 156.019,154.593 155.735 C 154.593 155.450,154.375 154.726,154.110 154.125 C 153.844 153.524,153.537 152.760,153.428 152.426 C 153.318 152.093,153.090 151.820,152.921 151.820 C 152.752 151.820,153.039 153.107,153.557 154.679 M85.738 156.846 C 85.737 158.562,85.796 159.307,85.869 158.503 C 85.941 157.698,85.942 156.294,85.870 155.383 C 85.799 154.472,85.739 155.130,85.738 156.846 M300.547 155.179 C 300.532 155.978,300.643 156.708,300.794 156.801 C 300.945 156.894,301.012 156.396,300.942 155.695 C 300.753 153.777,300.578 153.548,300.547 155.179 M260.139 157.019 C 261.078 157.972,261.924 158.752,262.019 158.752 C 262.114 158.752,261.424 157.972,260.485 157.019 C 259.546 156.066,258.700 155.286,258.605 155.286 C 258.510 155.286,259.200 156.066,260.139 157.019 M204.219 156.672 C 204.208 157.149,204.328 158.163,204.486 158.925 C 204.670 159.815,204.780 160.001,204.793 159.445 C 204.804 158.969,204.684 157.955,204.526 157.192 C 204.342 156.303,204.232 156.117,204.219 156.672 M270.074 158.594 C 269.493 159.868,269.604 160.140,270.232 158.981 C 270.525 158.440,270.700 157.933,270.621 157.854 C 270.541 157.774,270.295 158.107,270.074 158.594 M278.089 159.619 C 278.091 160.572,278.159 160.921,278.238 160.394 C 278.318 159.867,278.316 159.087,278.234 158.661 C 278.151 158.234,278.086 158.666,278.089 159.619 M117.640 164.645 C 117.640 167.218,117.695 168.271,117.761 166.984 C 117.828 165.698,117.828 163.592,117.761 162.305 C 117.695 161.018,117.640 162.071,117.640 164.645 M56.607 164.125 C 56.608 165.269,56.673 165.695,56.750 165.072 C 56.827 164.449,56.826 163.513,56.747 162.992 C 56.668 162.471,56.605 162.981,56.607 164.125 M59.383 164.645 C 59.383 165.884,59.446 166.391,59.523 165.771 C 59.600 165.152,59.600 164.138,59.523 163.518 C 59.446 162.899,59.383 163.406,59.383 164.645 M277.531 165.686 C 277.405 166.734,277.323 168.527,277.348 169.671 C 277.383 171.279,277.461 170.925,277.691 168.111 C 278.013 164.190,277.905 162.567,277.531 165.686 M336.649 165.338 C 336.649 166.005,336.720 166.278,336.807 165.945 C 336.895 165.611,336.895 165.065,336.807 164.731 C 336.720 164.398,336.649 164.671,336.649 165.338 M238.128 170.364 C 239.164 171.412,240.089 172.270,240.184 172.270 C 240.280 172.270,239.510 171.412,238.475 170.364 C 237.439 169.315,236.514 168.458,236.419 168.458 C 236.324 168.458,237.093 169.315,238.128 170.364 M337.128 170.675 C 337.202 171.799,337.262 174.126,337.262 175.845 C 337.262 177.565,337.373 178.860,337.509 178.724 C 337.646 178.588,337.716 176.846,337.665 174.854 C 337.573 171.282,337.586 171.218,338.543 170.316 C 339.378 169.530,339.402 169.460,338.715 169.818 C 338.276 170.048,337.808 170.499,337.675 170.820 C 337.507 171.229,337.369 170.990,337.215 170.017 C 337.064 169.069,337.037 169.277,337.128 170.675 M56.950 171.577 C 56.950 172.626,57.015 173.055,57.094 172.530 C 57.173 172.006,57.173 171.148,57.094 170.624 C 57.015 170.100,56.950 170.529,56.950 171.577 M370.320 174.523 C 370.321 176.620,370.378 177.434,370.447 176.330 C 370.516 175.227,370.516 173.512,370.446 172.518 C 370.376 171.524,370.320 172.426,370.320 174.523 M274.414 171.924 C 274.877 172.454,275.223 173.396,275.306 174.350 L 275.442 175.910 275.503 174.324 C 275.554 172.988,275.413 172.606,274.610 171.898 L 273.657 171.057 274.414 171.924 M197.661 173.137 C 197.665 173.899,197.736 174.171,197.819 173.739 C 197.902 173.308,197.899 172.684,197.812 172.353 C 197.725 172.022,197.657 172.374,197.661 173.137 M210.326 172.527 C 211.525 172.595,213.396 172.595,214.485 172.526 C 215.574 172.458,214.593 172.402,212.305 172.403 C 210.017 172.403,209.127 172.459,210.326 172.527 M218.111 172.519 C 218.635 172.598,219.493 172.598,220.017 172.519 C 220.542 172.439,220.113 172.374,219.064 172.374 C 218.016 172.374,217.587 172.439,218.111 172.519 M59.718 174.177 C 59.720 175.130,59.788 175.479,59.867 174.952 C 59.947 174.425,59.945 173.645,59.863 173.219 C 59.780 172.792,59.715 173.224,59.718 174.177 M236.994 172.867 C 237.609 172.944,238.701 172.945,239.420 172.870 C 240.140 172.795,239.636 172.732,238.302 172.731 C 236.967 172.729,236.379 172.791,236.994 172.867 M117.945 175.390 C 117.945 176.248,118.013 176.599,118.096 176.170 C 118.178 175.741,118.178 175.039,118.096 174.610 C 118.013 174.181,117.945 174.532,117.945 175.390 M277.057 176.256 C 277.059 177.400,277.124 177.826,277.201 177.203 C 277.278 176.580,277.276 175.645,277.197 175.124 C 277.118 174.603,277.055 175.113,277.057 176.256 M339.218 177.210 C 338.975 179.527,338.844 179.896,338.272 179.896 C 337.641 179.896,337.611 180.196,337.673 186.049 C 337.725 191.007,337.780 191.629,337.955 189.255 C 338.160 186.479,338.176 186.432,338.237 188.432 C 338.331 191.533,339.634 192.423,339.737 189.457 L 339.786 188.042 340.059 189.428 C 340.233 190.313,340.261 189.811,340.138 188.042 C 340.031 186.516,339.844 182.851,339.722 179.896 C 339.504 174.607,339.497 174.565,339.218 177.210 M200.284 179.405 C 200.228 183.135,200.203 183.286,200.024 180.963 C 199.715 176.941,198.960 177.271,198.960 181.427 C 198.960 184.694,199.384 185.679,200.213 184.338 C 200.387 184.057,200.544 184.139,200.715 184.598 C 200.852 184.967,200.882 183.085,200.782 180.416 C 200.556 174.385,200.366 174.000,200.284 179.405 M57.273 177.470 C 57.273 178.137,57.344 178.410,57.431 178.076 C 57.518 177.743,57.518 177.197,57.431 176.863 C 57.344 176.529,57.273 176.802,57.273 177.470 M198.181 180.589 C 198.281 182.972,198.420 184.987,198.488 185.066 C 198.739 185.356,198.565 178.990,198.286 177.643 C 198.107 176.779,198.067 177.889,198.181 180.589 M274.964 178.163 C 274.964 179.021,275.032 179.372,275.115 178.943 C 275.197 178.514,275.197 177.812,275.115 177.383 C 275.032 176.954,274.964 177.305,274.964 178.163 M60.053 178.683 C 60.057 179.445,60.128 179.717,60.210 179.285 C 60.293 178.854,60.290 178.230,60.203 177.899 C 60.117 177.568,60.049 177.920,60.053 178.683 M299.560 178.510 C 299.560 179.177,299.632 179.450,299.719 179.116 C 299.806 178.782,299.806 178.237,299.719 177.903 C 299.632 177.569,299.560 177.842,299.560 178.510 M356.406 178.510 C 356.406 179.177,356.478 179.450,356.565 179.116 C 356.652 178.782,356.652 178.237,356.565 177.903 C 356.478 177.569,356.406 177.842,356.406 178.510 M118.292 180.243 C 118.292 181.101,118.360 181.451,118.442 181.023 C 118.525 180.594,118.525 179.892,118.442 179.463 C 118.360 179.034,118.292 179.385,118.292 180.243 M314.326 180.854 C 314.659 181.093,314.369 181.256,313.286 181.439 C 311.849 181.682,311.822 181.708,312.652 182.060 C 313.452 182.400,313.465 182.441,312.825 182.594 C 312.313 182.716,312.540 182.882,313.692 183.226 C 314.549 183.483,315.525 183.608,315.859 183.504 C 316.193 183.400,316.710 183.558,317.007 183.856 C 317.497 184.345,317.652 184.299,318.653 183.361 C 319.260 182.791,319.991 182.314,320.277 182.301 C 320.563 182.287,320.022 182.068,319.074 181.813 C 318.127 181.559,316.801 181.416,316.128 181.496 C 315.166 181.611,315.053 181.571,315.598 181.313 C 316.160 181.047,316.182 180.980,315.713 180.960 C 315.395 180.947,314.849 180.843,314.500 180.730 C 314.034 180.579,313.988 180.612,314.326 180.854 M276.691 183.536 C 276.694 184.298,276.765 184.569,276.848 184.138 C 276.931 183.707,276.928 183.083,276.841 182.752 C 276.755 182.420,276.687 182.773,276.691 183.536 M274.611 183.882 C 274.615 184.645,274.686 184.916,274.769 184.485 C 274.851 184.054,274.848 183.430,274.762 183.098 C 274.675 182.767,274.607 183.120,274.611 183.882 M118.625 185.095 C 118.625 185.763,118.696 186.036,118.783 185.702 C 118.870 185.368,118.870 184.822,118.783 184.489 C 118.696 184.155,118.625 184.428,118.625 185.095 M88.215 184.749 C 88.097 184.939,87.692 185.095,87.314 185.095 C 86.558 185.095,86.581 185.139,88.405 187.175 C 89.023 187.865,89.403 188.114,89.287 187.753 C 89.174 187.404,89.081 186.507,89.081 185.760 C 89.081 184.468,88.679 183.998,88.215 184.749 M274.264 188.388 C 274.268 189.151,274.339 189.422,274.422 188.991 C 274.505 188.560,274.502 187.936,274.415 187.604 C 274.328 187.273,274.260 187.626,274.264 188.388 M276.360 189.255 C 276.360 190.303,276.425 190.732,276.505 190.208 C 276.584 189.684,276.584 188.826,276.505 188.302 C 276.425 187.777,276.360 188.206,276.360 189.255 M41.303 188.149 C 41.273 188.398,41.106 188.515,40.932 188.407 C 40.758 188.300,39.003 189.280,37.032 190.585 C 30.109 195.169,26.324 197.603,25.816 197.798 C 24.645 198.247,26.623 200.017,30.843 202.296 C 31.593 202.701,32.096 203.155,31.961 203.305 C 31.826 203.454,31.987 203.479,32.318 203.361 C 32.650 203.242,32.884 203.256,32.838 203.392 C 32.793 203.528,32.912 203.709,33.102 203.795 C 33.293 203.880,33.717 204.270,34.044 204.661 C 34.380 205.063,34.644 205.184,34.651 204.939 C 34.657 204.701,34.480 204.506,34.258 204.506 C 34.035 204.506,33.953 204.406,34.076 204.283 C 34.366 203.993,35.399 204.849,35.182 205.199 C 35.091 205.347,35.288 205.680,35.619 205.940 C 36.165 206.368,36.177 206.355,35.746 205.806 C 35.115 205.002,35.535 205.040,36.951 205.915 C 37.829 206.458,38.259 206.544,38.725 206.272 C 39.064 206.075,39.168 205.909,38.955 205.903 C 38.743 205.897,38.041 205.427,37.395 204.858 C 36.750 204.289,36.105 203.821,35.962 203.818 C 35.819 203.815,35.702 203.646,35.702 203.443 C 35.702 203.239,36.131 203.369,36.655 203.732 C 37.982 204.651,38.475 204.921,38.475 204.728 C 38.475 204.410,35.872 202.954,35.468 203.046 C 35.244 203.096,34.947 202.954,34.808 202.729 C 34.649 202.472,34.704 202.411,34.955 202.567 C 35.175 202.703,35.355 202.746,35.355 202.664 C 35.355 202.581,34.107 201.695,32.582 200.693 C 29.170 198.453,29.168 198.505,32.762 196.249 C 34.379 195.234,35.702 194.233,35.702 194.025 C 35.702 193.816,35.800 193.744,35.921 193.864 C 36.245 194.189,37.488 193.433,37.253 193.054 C 37.143 192.875,37.278 192.816,37.554 192.922 C 37.843 193.032,38.293 192.777,38.612 192.321 C 38.918 191.884,39.168 191.645,39.168 191.789 C 39.168 191.934,39.484 191.883,39.871 191.676 C 40.259 191.468,40.467 191.126,40.334 190.912 C 40.177 190.657,40.297 190.601,40.684 190.750 C 41.418 191.031,41.690 190.399,41.501 188.854 C 41.423 188.217,41.334 187.899,41.303 188.149 M198.713 190.121 C 198.715 191.075,198.783 191.423,198.862 190.896 C 198.942 190.370,198.940 189.590,198.858 189.163 C 198.775 188.737,198.710 189.168,198.713 190.121 M201.127 189.775 C 201.131 190.537,201.202 190.808,201.285 190.377 C 201.368 189.946,201.365 189.322,201.278 188.991 C 201.191 188.659,201.123 189.012,201.127 189.775 M89.508 190.295 C 89.508 190.962,89.580 191.235,89.667 190.901 C 89.754 190.568,89.754 190.022,89.667 189.688 C 89.580 189.354,89.508 189.627,89.508 190.295 M15.031 193.588 C 15.032 195.494,15.090 196.230,15.161 195.222 C 15.231 194.215,15.230 192.655,15.159 191.756 C 15.088 190.857,15.030 191.681,15.031 193.588 M273.918 193.241 C 273.921 194.003,273.992 194.275,274.075 193.843 C 274.158 193.412,274.155 192.788,274.068 192.457 C 273.982 192.126,273.914 192.478,273.918 193.241 M89.862 193.588 C 89.866 194.350,89.937 194.621,90.020 194.190 C 90.103 193.759,90.100 193.135,90.013 192.804 C 89.926 192.472,89.858 192.825,89.862 193.588 M198.585 193.037 C 198.416 194.012,196.226 194.860,189.601 196.518 C 187.409 197.067,183.784 197.997,181.547 198.585 C 179.309 199.172,177.409 199.653,177.325 199.653 C 175.726 199.653,175.990 201.041,180.117 214.346 C 180.288 214.897,180.177 214.973,179.415 214.827 C 178.917 214.732,178.510 214.774,178.510 214.920 C 178.510 215.067,179.328 215.293,180.329 215.423 C 183.566 215.843,187.524 217.187,188.055 218.046 C 188.310 218.458,190.250 218.425,191.161 217.994 C 191.670 217.754,191.439 217.710,190.295 217.832 C 188.981 217.972,188.872 217.942,189.601 217.639 C 190.078 217.441,191.092 217.355,191.854 217.447 C 192.617 217.539,192.966 217.539,192.630 217.446 C 191.847 217.231,192.199 216.638,193.109 216.638 C 193.490 216.638,193.705 216.794,193.588 216.984 C 193.342 217.382,193.905 217.422,195.129 217.095 C 195.909 216.886,195.923 216.848,195.302 216.624 C 194.893 216.477,195.316 216.389,196.375 216.401 C 198.589 216.427,198.960 216.184,198.960 214.711 C 198.960 213.411,198.897 213.355,198.002 213.855 C 196.282 214.818,188.318 217.085,188.069 216.682 C 187.833 216.301,189.949 214.640,193.110 212.727 C 197.263 210.213,197.614 209.914,197.923 208.606 C 198.168 207.569,198.200 207.645,198.237 209.359 C 198.342 214.264,198.947 211.949,198.936 206.682 C 198.930 203.589,198.791 200.976,198.626 200.874 C 198.304 200.675,198.454 194.927,198.805 194.011 C 198.923 193.705,198.954 193.173,198.875 192.828 C 198.761 192.334,198.700 192.378,198.585 193.037 M201.481 194.454 C 201.481 195.312,201.548 195.663,201.631 195.234 C 201.714 194.805,201.714 194.103,201.631 193.674 C 201.548 193.245,201.481 193.596,201.481 194.454 M275.997 194.974 C 276.001 195.737,276.072 196.008,276.155 195.577 C 276.238 195.145,276.235 194.521,276.148 194.190 C 276.061 193.859,275.993 194.211,275.997 194.974 M87.429 195.841 C 87.429 196.508,87.500 196.781,87.587 196.447 C 87.674 196.114,87.674 195.568,87.587 195.234 C 87.500 194.900,87.429 195.173,87.429 195.841 M340.476 196.187 C 340.476 197.045,340.543 197.396,340.626 196.967 C 340.709 196.538,340.709 195.836,340.626 195.407 C 340.543 194.978,340.476 195.329,340.476 196.187 M117.205 195.494 C 117.174 195.780,117.051 196.404,116.933 196.880 C 116.766 197.550,116.813 197.658,117.138 197.356 C 117.369 197.141,117.492 196.517,117.410 195.969 C 117.328 195.422,117.236 195.208,117.205 195.494 M338.078 199.133 C 338.077 200.849,338.136 201.595,338.208 200.790 C 338.281 199.986,338.282 198.582,338.210 197.671 C 338.139 196.759,338.079 197.418,338.078 199.133 M149.087 196.939 C 149.065 197.257,148.957 197.803,148.847 198.152 C 148.658 198.754,148.668 198.755,149.044 198.169 C 149.262 197.830,149.370 197.284,149.284 196.956 C 149.143 196.420,149.123 196.418,149.087 196.939 M149.819 197.932 C 149.585 198.682,149.393 199.532,149.393 199.821 C 149.393 200.545,148.787 200.484,148.590 199.740 C 148.502 199.406,148.488 199.913,148.560 200.867 C 148.659 202.181,148.616 202.390,148.383 201.733 L 148.076 200.867 148.041 201.813 C 148.022 202.334,148.943 204.728,150.087 207.134 C 151.231 209.540,152.177 211.687,152.191 211.907 C 152.204 212.126,152.363 211.993,152.543 211.612 C 152.821 211.023,152.844 211.056,152.695 211.831 C 152.577 212.445,152.979 213.737,153.925 215.783 C 155.021 218.156,155.229 218.887,154.874 219.112 C 154.583 219.296,154.872 219.402,155.676 219.405 C 156.367 219.408,157.381 219.469,157.929 219.539 C 158.477 219.610,158.703 219.593,158.430 219.502 C 157.188 219.086,156.934 218.334,156.754 214.540 C 156.625 211.822,156.687 210.745,156.970 210.745 C 157.496 210.745,157.463 208.775,156.883 205.485 C 156.368 202.563,155.307 199.307,154.871 199.307 C 154.718 199.307,154.593 198.926,154.593 198.461 C 154.593 197.995,154.446 197.524,154.267 197.413 C 154.073 197.293,154.021 197.708,154.139 198.432 C 154.384 199.946,153.912 200.008,152.739 198.614 C 152.258 198.042,151.750 197.574,151.609 197.574 C 151.469 197.574,151.105 197.348,150.799 197.071 C 150.303 196.622,150.200 196.713,149.819 197.932 M90.202 197.920 C 90.202 198.588,90.273 198.860,90.360 198.527 C 90.447 198.193,90.447 197.647,90.360 197.314 C 90.273 196.980,90.202 197.253,90.202 197.920 M117.709 197.646 C 117.619 198.083,117.473 198.830,117.383 199.307 C 117.293 199.783,117.112 200.563,116.980 201.040 C 116.849 201.516,116.659 202.374,116.559 202.946 C 116.459 203.518,116.260 204.142,116.117 204.333 C 115.537 205.105,115.356 208.899,115.934 208.166 C 116.226 207.796,116.464 207.142,116.464 206.713 C 116.464 206.284,116.598 205.851,116.762 205.749 C 116.926 205.648,117.168 204.515,117.299 203.231 C 117.431 201.947,117.665 200.734,117.821 200.535 C 118.281 199.946,118.577 197.288,118.208 197.060 C 118.023 196.946,117.798 197.209,117.709 197.646 M57.626 198.674 C 57.006 199.057,56.499 199.521,56.499 199.706 C 56.499 199.890,56.372 199.962,56.216 199.866 C 55.819 199.620,52.973 201.558,53.280 201.865 C 53.419 202.003,53.297 202.026,53.010 201.916 C 52.723 201.806,52.143 202.038,51.721 202.431 C 51.299 202.825,50.953 203.066,50.953 202.967 C 50.953 202.731,45.643 205.933,45.369 206.334 C 45.253 206.504,46.734 207.463,48.662 208.464 C 57.660 213.137,61.222 215.052,61.739 215.492 C 62.238 215.916,62.282 215.872,62.133 215.094 C 62.039 214.604,61.807 214.317,61.605 214.442 C 61.394 214.573,61.349 214.497,61.496 214.259 C 61.634 214.035,61.554 212.655,61.318 211.192 C 60.996 209.196,60.815 208.699,60.594 209.205 C 60.389 209.673,60.355 209.515,60.483 208.688 C 60.739 207.032,59.933 201.397,59.566 202.279 C 59.398 202.684,59.369 202.435,59.492 201.646 C 59.711 200.248,59.397 197.902,58.996 197.949 C 58.862 197.965,58.245 198.291,57.626 198.674 M273.571 199.133 C 273.575 199.896,273.646 200.167,273.729 199.736 C 273.812 199.305,273.808 198.681,273.722 198.350 C 273.635 198.018,273.567 198.371,273.571 199.133 M358.657 199.948 C 358.745 200.834,358.957 202.106,359.129 202.773 C 359.301 203.440,359.442 204.493,359.443 205.113 C 359.446 206.364,359.606 206.475,360.342 205.739 C 360.617 205.464,361.921 204.436,363.241 203.455 C 364.560 202.474,365.566 201.490,365.476 201.269 C 365.237 200.681,362.927 199.603,362.487 199.875 C 362.272 200.008,362.210 199.947,362.343 199.732 C 362.570 199.365,361.315 198.737,360.696 198.908 C 360.525 198.955,359.961 198.845,359.442 198.664 L 358.498 198.335 358.657 199.948 M87.782 199.827 C 87.786 200.589,87.857 200.860,87.940 200.429 C 88.023 199.998,88.020 199.374,87.933 199.043 C 87.846 198.711,87.779 199.064,87.782 199.827 M201.814 199.653 C 201.814 200.321,201.885 200.594,201.972 200.260 C 202.059 199.926,202.059 199.380,201.972 199.047 C 201.885 198.713,201.814 198.986,201.814 199.653 M276.341 200.635 C 276.233 202.049,276.036 202.326,267.504 213.130 C 263.739 217.897,260.659 221.925,260.659 222.080 C 260.659 222.236,262.179 222.646,264.038 222.992 C 265.897 223.339,268.510 223.839,269.844 224.105 C 279.429 226.013,283.304 226.657,284.298 226.505 C 285.072 226.386,285.232 226.422,284.794 226.616 C 283.944 226.990,288.039 227.739,289.775 227.526 C 290.591 227.426,290.777 227.470,290.342 227.659 C 289.861 227.868,290.254 228.043,291.886 228.347 C 293.542 228.655,294.137 228.656,294.324 228.353 C 294.511 228.050,295.023 228.053,296.419 228.364 C 297.435 228.591,299.037 228.814,299.977 228.860 L 301.688 228.943 302.107 227.519 C 302.338 226.735,303.425 224.630,304.521 222.839 C 305.618 221.049,307.210 218.180,308.060 216.464 C 309.804 212.942,312.988 207.512,313.411 207.337 C 314.658 206.822,311.191 205.799,309.359 206.140 C 308.787 206.247,308.444 206.200,308.597 206.037 C 309.014 205.593,305.403 204.866,303.813 205.074 C 302.942 205.188,302.590 205.139,302.866 204.943 C 303.446 204.531,299.746 203.841,298.094 204.053 C 297.293 204.156,297.035 204.100,297.336 203.890 C 297.955 203.457,294.298 202.728,292.800 202.986 C 292.063 203.112,291.835 203.068,292.133 202.857 C 292.702 202.452,288.641 201.728,287.154 201.969 C 286.491 202.076,286.289 202.025,286.576 201.822 C 287.152 201.414,283.066 200.663,281.629 200.913 C 280.994 201.024,280.753 200.977,281.010 200.794 C 281.281 200.602,280.535 200.311,278.931 199.985 L 276.430 199.476 276.341 200.635 M116.165 200.405 C 116.139 200.723,116.017 201.269,115.894 201.618 C 115.720 202.108,115.767 202.163,116.096 201.860 C 116.331 201.643,116.453 201.097,116.368 200.647 C 116.282 200.196,116.191 200.087,116.165 200.405 M361.796 203.120 C 362.158 203.120,361.949 203.472,361.181 204.157 C 360.542 204.728,359.989 205.157,359.953 205.110 C 359.916 205.064,359.789 203.934,359.669 202.600 L 359.451 200.173 360.350 201.646 C 360.844 202.457,361.495 203.120,361.796 203.120 M90.572 202.773 C 90.572 203.821,90.637 204.250,90.716 203.726 C 90.796 203.202,90.796 202.344,90.716 201.820 C 90.637 201.295,90.572 201.724,90.572 202.773 M340.832 203.813 C 340.832 204.861,340.897 205.290,340.976 204.766 C 341.056 204.242,341.056 203.384,340.976 202.860 C 340.897 202.335,340.832 202.764,340.832 203.813 M204.142 202.686 C 204.003 204.726,204.271 212.355,204.501 212.927 C 204.804 213.681,204.810 213.679,204.868 212.825 L 204.926 211.958 205.303 212.912 C 205.510 213.436,205.793 213.865,205.932 213.865 C 206.071 213.865,206.286 214.331,206.412 214.901 C 206.537 215.470,206.793 216.032,206.980 216.148 C 207.168 216.264,207.452 216.700,207.611 217.118 C 207.978 218.085,212.051 218.576,223.917 219.081 C 228.397 219.271,236.976 219.715,242.981 220.066 C 248.986 220.418,254.396 220.632,255.003 220.542 C 256.392 220.336,258.050 218.485,263.746 210.782 C 264.395 209.904,265.643 208.328,266.519 207.279 C 268.540 204.859,269.671 203.247,269.671 202.787 C 269.671 202.364,204.171 202.264,204.142 202.686 M269.133 203.051 C 268.952 203.204,258.276 203.235,245.407 203.119 L 222.010 202.907 245.737 202.840 C 258.786 202.803,269.315 202.898,269.133 203.051 M115.271 204.419 C 115.145 205.134,114.954 206.031,114.847 206.412 C 114.718 206.873,114.769 206.989,114.999 206.759 C 115.349 206.407,115.944 203.120,115.658 203.120 C 115.572 203.120,115.398 203.705,115.271 204.419 M88.122 204.506 C 88.122 205.173,88.193 205.446,88.281 205.113 C 88.368 204.779,88.368 204.233,88.281 203.899 C 88.193 203.566,88.122 203.839,88.122 204.506 M268.034 204.419 C 267.823 204.980,265.039 208.494,263.918 209.615 C 262.854 210.679,263.519 209.503,264.924 207.836 C 265.744 206.863,266.769 205.559,267.200 204.939 C 268.070 203.691,268.382 203.496,268.034 204.419 M117.380 205.272 C 117.263 205.709,117.181 206.378,117.197 206.759 C 117.214 207.140,117.370 206.844,117.545 206.100 C 117.883 204.660,117.738 203.934,117.380 205.272 M88.476 208.492 C 88.479 209.255,88.550 209.526,88.633 209.095 C 88.716 208.664,88.713 208.040,88.626 207.708 C 88.540 207.377,88.472 207.730,88.476 208.492 M176.479 207.972 C 176.479 208.258,176.613 208.804,176.776 209.185 C 176.964 209.622,177.074 209.686,177.074 209.359 C 177.074 209.073,176.940 208.527,176.776 208.146 C 176.589 207.709,176.479 207.645,176.479 207.972 M132.582 208.210 C 126.779 209.528,120.642 211.082,120.321 211.314 C 120.170 211.424,123.236 215.009,126.652 218.718 C 127.969 220.147,129.920 222.409,130.988 223.744 C 132.055 225.078,133.124 226.376,133.362 226.628 C 133.601 226.880,133.795 227.240,133.795 227.428 C 133.795 227.617,133.601 227.650,133.362 227.503 C 133.124 227.356,133.449 227.893,134.085 228.696 C 135.305 230.238,135.350 230.679,134.156 229.397 C 133.026 228.185,133.340 228.968,134.525 230.317 C 136.313 232.354,137.678 231.921,137.036 229.520 C 136.869 228.897,136.743 228.817,136.490 229.173 C 136.260 229.498,136.217 229.388,136.347 228.803 C 136.607 227.628,135.845 224.464,135.439 225.035 C 135.238 225.319,135.200 225.135,135.335 224.519 C 135.450 223.993,135.363 222.155,135.143 220.436 C 134.922 218.716,134.810 217.241,134.893 217.158 C 135.424 216.627,150.893 218.106,153.465 218.934 C 153.829 219.051,153.925 219.012,153.704 218.837 C 153.502 218.676,152.591 217.034,151.681 215.188 L 150.027 211.832 146.677 211.978 C 144.835 212.058,142.896 212.302,142.369 212.519 C 139.632 213.646,133.420 210.902,133.948 208.800 C 134.161 207.950,134.012 207.885,132.582 208.210 M313.712 209.229 C 313.304 209.920,313.027 210.543,313.096 210.612 C 313.165 210.681,313.571 210.115,313.999 209.355 C 314.969 207.628,314.721 207.519,313.712 209.229 M319.237 208.431 C 319.237 208.599,318.302 210.277,317.158 212.160 C 316.014 214.042,315.078 215.706,315.078 215.856 C 315.078 216.007,314.709 216.673,314.258 217.337 C 313.808 218.001,312.621 220.026,311.620 221.837 C 310.620 223.648,309.055 226.233,308.142 227.580 C 306.665 229.761,306.545 230.073,307.054 230.419 C 307.551 230.758,307.513 230.816,306.759 230.864 C 306.276 230.895,306.814 231.124,307.972 231.380 C 309.116 231.633,310.754 231.770,311.612 231.685 C 312.640 231.583,312.944 231.629,312.503 231.822 C 311.554 232.237,315.143 232.930,317.181 232.726 C 318.319 232.611,318.538 232.656,318.024 232.899 C 317.582 233.108,317.512 233.236,317.832 233.251 C 318.628 233.290,320.254 231.543,320.023 230.896 C 319.911 230.584,319.950 230.448,320.110 230.592 C 320.269 230.737,320.762 230.515,321.205 230.099 C 322.058 229.298,322.309 228.549,321.577 228.989 C 321.279 229.168,321.291 229.067,321.616 228.667 C 321.876 228.346,322.205 228.155,322.346 228.243 C 322.487 228.330,322.965 228.016,323.407 227.546 C 323.849 227.075,324.092 226.690,323.946 226.690 C 323.800 226.690,323.389 227.041,323.031 227.470 C 322.673 227.899,322.380 228.094,322.380 227.903 C 322.380 227.343,323.697 225.927,324.027 226.131 C 324.194 226.234,324.783 225.817,325.337 225.204 L 326.343 224.090 325.217 225.108 C 324.025 226.186,323.672 225.904,324.697 224.692 C 326.270 222.833,326.448 222.578,326.290 222.420 C 326.014 222.144,331.553 215.751,335.121 212.228 C 335.902 211.457,336.125 211.040,335.814 210.936 C 334.051 210.347,332.552 210.129,331.475 210.303 C 330.685 210.432,330.300 210.380,330.434 210.162 C 330.739 209.670,327.549 209.007,325.950 209.229 C 325.047 209.355,324.763 209.308,325.078 209.085 C 325.415 208.847,325.076 208.676,323.865 208.474 C 321.544 208.086,319.237 208.065,319.237 208.431 M266.689 209.099 C 265.212 210.803,264.664 211.547,265.053 211.320 C 265.277 211.189,265.953 210.460,266.555 209.701 C 267.722 208.227,267.818 207.797,266.689 209.099 M118.044 211.460 C 118.796 212.330,119.481 212.988,119.567 212.922 C 119.653 212.855,119.038 212.144,118.200 211.340 L 116.676 209.879 118.044 211.460 M173.362 211.621 C 173.391 212.378,173.308 213.331,173.179 213.738 C 172.987 214.339,173.114 214.521,173.860 214.708 C 175.092 215.017,175.163 214.874,174.657 213.119 C 173.950 210.668,173.296 209.912,173.362 211.621 M202.140 214.645 C 202.107 217.075,202.197 219.064,202.340 219.065 C 202.483 219.065,202.558 217.701,202.507 216.032 C 202.342 210.647,202.202 210.118,202.140 214.645 M315.788 211.752 C 315.390 212.533,315.130 213.172,315.210 213.172 C 315.471 213.172,316.844 210.663,316.676 210.495 C 316.586 210.405,316.187 210.970,315.788 211.752 M88.815 212.478 C 88.815 213.146,88.887 213.419,88.974 213.085 C 89.061 212.751,89.061 212.205,88.974 211.872 C 88.887 211.538,88.815 211.811,88.815 212.478 M91.588 214.211 C 91.588 214.879,91.660 215.152,91.747 214.818 C 91.834 214.484,91.834 213.938,91.747 213.605 C 91.660 213.271,91.588 213.544,91.588 214.211 M333.132 215.730 L 332.295 216.811 333.287 215.868 C 333.832 215.350,334.209 214.864,334.124 214.788 C 334.039 214.712,333.592 215.136,333.132 215.730 M260.793 216.535 C 260.058 217.432,259.638 218.053,259.859 217.917 C 260.330 217.625,262.526 214.905,262.289 214.905 C 262.201 214.905,261.527 215.638,260.793 216.535 M99.480 217.120 C 97.669 217.749,95.981 218.331,95.729 218.413 C 95.472 218.496,96.914 219.876,99.022 221.564 C 103.143 224.864,104.511 226.061,107.642 229.111 C 108.795 230.233,111.056 232.103,112.668 233.266 C 115.994 235.667,115.552 235.630,120.971 233.966 C 122.972 233.351,125.546 232.577,126.690 232.245 C 129.297 231.489,129.300 231.512,126.170 228.034 C 119.768 220.920,118.287 219.411,117.714 219.411 C 117.599 219.411,117.502 219.762,117.499 220.191 C 117.488 221.824,117.079 221.997,112.926 222.128 C 108.145 222.279,105.334 221.811,103.931 220.630 C 103.360 220.150,102.710 219.756,102.486 219.755 C 102.113 219.752,101.213 218.243,101.213 217.619 C 101.213 217.472,101.876 217.040,102.686 216.661 C 105.005 215.573,103.173 215.836,99.480 217.120 M89.169 217.851 C 89.173 218.614,89.244 218.885,89.327 218.453 C 89.410 218.022,89.406 217.398,89.320 217.067 C 89.233 216.736,89.165 217.088,89.169 217.851 M312.616 217.418 C 312.393 217.847,311.816 218.899,311.334 219.757 C 310.852 220.615,310.622 221.161,310.823 220.971 C 311.327 220.492,313.457 216.638,313.217 216.638 C 313.110 216.638,312.840 216.989,312.616 217.418 M43.408 218.024 C 43.408 218.692,43.479 218.964,43.566 218.631 C 43.654 218.297,43.654 217.751,43.566 217.418 C 43.479 217.084,43.408 217.357,43.408 218.024 M91.895 217.537 C 91.873 217.937,92.205 218.561,92.634 218.924 C 93.408 219.579,93.410 219.578,92.843 218.891 C 92.529 218.510,92.197 217.886,92.104 217.504 C 91.941 216.838,91.933 216.839,91.895 217.537 M267.547 217.585 C 266.444 218.977,264.471 220.911,264.471 220.601 C 264.471 220.238,267.483 216.984,267.819 216.984 C 267.931 216.984,267.808 217.255,267.547 217.585 M331.174 218.111 L 330.156 219.237 331.282 218.219 C 331.902 217.659,332.409 217.153,332.409 217.093 C 332.409 216.825,332.123 217.061,331.174 218.111 M206.153 219.315 C 206.772 219.392,207.786 219.392,208.406 219.315 C 209.025 219.238,208.518 219.175,207.279 219.175 C 206.040 219.175,205.533 219.238,206.153 219.315 M214.309 219.666 C 215.220 219.738,216.624 219.737,217.428 219.664 C 218.233 219.591,217.487 219.533,215.771 219.534 C 214.055 219.535,213.397 219.594,214.309 219.666 M223.050 220.119 C 225.147 220.253,228.033 220.358,229.463 220.353 L 232.062 220.343 229.116 220.085 C 227.496 219.943,224.610 219.837,222.704 219.851 L 219.237 219.875 223.050 220.119 M257.450 220.639 C 256.996 221.247,256.425 221.486,255.197 221.582 L 253.553 221.712 255.139 221.775 C 256.589 221.832,258.792 220.532,258.205 219.966 C 258.125 219.889,257.785 220.191,257.450 220.639 M44.714 221.164 C 44.714 221.879,44.583 222.144,44.313 221.977 C 44.032 221.803,43.978 221.978,44.135 222.563 C 44.258 223.022,44.381 223.709,44.408 224.090 C 44.437 224.484,44.581 224.259,44.743 223.570 C 44.972 222.590,44.999 222.723,44.882 224.263 C 44.803 225.312,44.903 226.794,45.104 227.556 C 45.306 228.319,45.620 230.191,45.804 231.716 C 46.227 235.235,46.575 235.930,48.049 236.207 C 48.693 236.328,49.222 236.536,49.224 236.671 C 49.234 237.259,60.785 241.425,61.382 241.056 C 61.847 240.768,64.125 241.279,64.125 241.670 C 64.125 241.863,63.857 241.905,63.518 241.766 C 62.376 241.295,61.456 241.196,62.392 241.644 C 64.906 242.847,67.685 244.021,68.020 244.021 C 68.229 244.021,68.305 244.116,68.189 244.231 C 68.073 244.347,66.059 243.876,63.712 243.185 C 56.779 241.143,46.042 238.128,45.703 238.128 C 45.153 238.128,36.049 244.364,36.049 244.741 C 36.049 244.939,35.916 245.020,35.754 244.919 C 35.449 244.731,33.325 246.153,32.912 246.822 C 32.783 247.030,32.540 247.209,32.370 247.220 C 31.991 247.246,29.597 248.731,28.423 249.669 C 27.556 250.361,27.556 250.361,28.361 250.163 C 28.803 250.054,29.895 250.177,30.787 250.436 C 31.679 250.694,35.841 251.783,40.035 252.856 C 44.229 253.929,49.766 255.373,52.340 256.067 C 57.699 257.510,59.285 257.668,59.792 256.806 C 59.983 256.483,61.075 255.212,62.218 253.982 C 63.362 252.752,64.764 251.139,65.334 250.397 C 67.049 248.162,70.447 245.018,70.942 245.208 C 71.196 245.306,71.404 245.326,71.404 245.254 C 71.404 245.060,67.862 243.330,67.436 243.316 C 67.235 243.309,66.447 242.989,65.685 242.603 C 64.652 242.081,64.534 241.951,65.222 242.094 L 66.146 242.286 65.395 240.900 C 64.983 240.138,64.347 239.418,63.984 239.301 C 63.621 239.183,62.942 238.676,62.477 238.174 C 62.011 237.672,61.346 237.308,61.000 237.365 C 60.595 237.432,60.280 237.186,60.119 236.679 C 59.894 235.971,58.710 234.071,58.214 233.622 C 58.109 233.527,57.572 232.825,57.021 232.062 C 56.471 231.300,54.966 229.584,53.677 228.250 C 52.389 226.915,50.088 224.536,48.565 222.964 C 45.554 219.855,44.714 219.462,44.714 221.164 M140.815 220.343 C 141.148 220.430,141.694 220.430,142.028 220.343 C 142.361 220.256,142.088 220.184,141.421 220.184 C 140.754 220.184,140.481 220.256,140.815 220.343 M341.155 221.144 C 341.155 221.811,341.226 222.084,341.313 221.750 C 341.401 221.417,341.401 220.871,341.313 220.537 C 341.226 220.204,341.155 220.477,341.155 221.144 M234.575 220.704 C 235.386 220.777,236.711 220.777,237.522 220.704 C 238.332 220.631,237.669 220.572,236.049 220.572 C 234.428 220.572,233.765 220.631,234.575 220.704 M239.890 220.929 C 239.970 221.001,242.608 221.142,245.754 221.241 C 249.284 221.353,250.611 221.318,249.220 221.150 C 246.888 220.869,239.635 220.697,239.890 220.929 M327.015 222.964 L 325.997 224.090 327.123 223.072 C 328.173 222.123,328.409 221.837,328.141 221.837 C 328.081 221.837,327.575 222.344,327.015 222.964 M85.442 223.382 C 83.726 224.022,80.607 225.261,78.510 226.134 C 76.412 227.008,74.424 227.725,74.090 227.726 C 72.532 227.735,73.973 228.939,79.923 232.603 C 83.464 234.784,87.863 237.543,89.697 238.735 C 93.603 241.272,93.284 241.241,99.659 239.704 C 104.949 238.429,107.106 237.682,107.106 237.127 C 107.106 236.195,90.246 222.170,89.163 222.201 C 88.832 222.211,87.158 222.742,85.442 223.382 M128.250 223.332 C 128.250 223.392,128.756 223.899,129.376 224.459 L 130.503 225.477 129.485 224.350 C 128.536 223.300,128.250 223.064,128.250 223.332 M168.299 224.870 C 168.202 225.124,168.664 225.525,169.416 225.839 C 170.443 226.268,170.596 226.444,170.185 226.716 C 169.816 226.961,169.965 226.998,170.711 226.846 C 171.503 226.684,171.627 226.722,171.231 227.003 C 170.704 227.377,171.129 227.582,172.065 227.406 C 172.238 227.373,172.475 227.499,172.590 227.686 C 172.830 228.075,179.302 231.196,179.868 231.196 C 180.074 231.196,180.243 231.352,180.243 231.542 C 180.243 231.733,180.416 231.889,180.629 231.889 C 181.037 231.889,185.901 234.789,186.893 235.624 C 187.215 235.895,187.668 235.999,187.900 235.856 C 188.162 235.693,188.233 235.740,188.085 235.978 C 187.955 236.189,188.202 236.548,188.638 236.781 C 189.355 237.163,189.384 237.149,188.952 236.625 C 188.543 236.129,188.555 236.049,189.039 236.049 C 189.370 236.049,189.601 235.764,189.601 235.355 C 189.601 234.974,189.796 234.657,190.035 234.651 C 190.454 234.641,188.408 233.228,187.002 232.557 C 186.620 232.375,184.593 231.292,182.496 230.150 C 176.057 226.643,173.091 225.279,172.397 225.505 C 171.907 225.664,171.866 225.633,172.230 225.374 C 172.612 225.101,172.551 224.983,171.927 224.784 C 170.584 224.358,168.476 224.408,168.299 224.870 M307.972 225.650 C 307.677 226.222,307.513 226.690,307.608 226.690 C 307.703 226.690,308.023 226.222,308.319 225.650 C 308.615 225.078,308.779 224.610,308.683 224.610 C 308.588 224.610,308.268 225.078,307.972 225.650 M131.542 227.036 C 132.287 227.799,132.961 228.423,133.039 228.423 C 133.331 228.423,130.837 225.707,130.519 225.679 C 130.337 225.663,130.798 226.274,131.542 227.036 M341.191 228.769 C 341.191 230.199,341.252 230.784,341.327 230.069 C 341.402 229.354,341.402 228.185,341.327 227.470 C 341.252 226.755,341.191 227.340,341.191 228.769 M201.989 227.512 C 200.704 227.818,200.185 228.159,199.640 229.054 C 198.748 230.522,197.790 230.426,197.638 228.853 C 197.567 228.118,197.345 227.730,196.995 227.730 C 196.614 227.730,196.537 227.904,196.728 228.336 C 197.151 229.289,196.903 233.951,196.321 236.012 C 195.548 238.744,195.917 239.019,199.673 238.514 C 205.348 237.750,214.053 238.407,220.867 240.114 C 225.147 241.186,224.998 240.961,223.367 243.878 C 222.683 245.100,222.201 246.101,222.294 246.101 C 222.388 246.101,222.941 245.256,223.524 244.223 C 224.107 243.190,224.731 242.254,224.911 242.143 C 225.370 241.859,224.934 243.442,224.469 243.747 C 224.224 243.908,224.322 244.160,224.750 244.473 C 226.018 245.400,224.797 247.582,222.249 248.944 C 220.830 249.702,220.846 250.088,222.296 250.082 C 223.604 250.076,225.108 248.621,226.473 246.040 C 227.156 244.748,227.461 244.513,228.794 244.250 C 229.639 244.084,230.413 243.813,230.516 243.649 C 231.024 242.837,232.929 244.706,232.921 246.009 C 232.913 247.468,231.954 249.837,231.077 250.562 C 230.301 251.205,230.350 251.993,231.167 251.993 C 231.532 251.993,231.896 252.188,231.975 252.426 C 232.116 252.847,234.662 251.777,234.662 251.296 C 234.662 250.850,236.726 249.929,237.263 250.135 C 237.849 250.360,237.847 250.663,237.242 253.120 C 237.021 254.018,237.075 254.073,238.178 254.073 C 239.419 254.073,240.430 255.098,240.265 256.190 C 240.219 256.497,240.565 257.000,241.034 257.308 C 241.810 257.816,241.851 257.964,241.489 258.925 C 240.941 260.376,241.495 261.197,242.974 261.124 C 245.828 260.984,246.917 265.039,244.783 267.860 C 243.825 269.127,243.931 269.582,245.044 268.986 C 246.050 268.448,247.332 268.849,246.770 269.527 C 246.546 269.796,246.148 270.017,245.887 270.017 C 244.165 270.017,242.599 275.100,243.752 276.946 C 244.473 278.100,243.475 278.750,242.610 277.691 C 241.754 276.644,241.765 276.948,242.655 278.901 C 243.399 280.535,243.375 280.658,242.025 282.089 C 241.784 282.343,241.677 282.696,241.786 282.873 C 241.896 283.049,241.637 283.682,241.212 284.279 L 240.439 285.364 241.623 285.188 C 244.143 284.812,246.275 286.833,244.691 288.095 C 242.919 289.507,242.308 289.820,241.269 289.850 C 240.288 289.878,240.241 289.930,240.722 290.461 C 241.438 291.253,241.382 291.951,240.555 292.548 C 240.173 292.822,239.861 293.247,239.861 293.491 C 239.861 293.735,239.705 293.954,239.515 293.977 C 239.324 294.001,238.973 294.041,238.735 294.066 C 238.497 294.091,238.302 294.443,238.302 294.850 C 238.302 295.839,237.402 296.779,235.148 298.145 C 234.118 298.769,233.276 299.468,233.276 299.698 C 233.276 299.928,233.102 300.173,232.889 300.244 C 232.677 300.315,232.435 300.991,232.352 301.746 C 232.162 303.466,232.036 303.586,230.142 303.840 C 228.404 304.072,226.690 303.563,226.690 302.814 C 226.690 302.482,226.118 302.239,224.957 302.080 C 223.467 301.875,222.453 301.213,223.628 301.213 C 223.850 301.213,223.933 301.114,223.812 300.993 C 223.691 300.872,223.196 301.032,222.712 301.349 C 216.201 305.615,202.254 306.166,200.080 302.244 C 198.823 299.976,198.721 299.905,198.239 300.962 C 197.916 301.672,197.635 301.863,197.144 301.707 C 196.780 301.591,196.016 301.690,195.446 301.926 C 194.186 302.448,193.394 301.862,193.245 300.297 C 193.105 298.827,192.716 298.094,192.077 298.091 C 191.764 298.090,191.079 297.866,190.555 297.592 C 189.642 297.116,189.601 297.130,189.601 297.920 C 189.601 298.374,189.445 298.842,189.255 298.960 C 189.064 299.078,188.908 298.948,188.908 298.671 C 188.908 298.394,188.664 298.074,188.366 297.960 C 188.068 297.845,187.922 297.594,188.042 297.400 C 188.161 297.207,188.015 296.955,187.717 296.841 C 187.419 296.727,187.175 296.328,187.175 295.956 C 187.175 295.584,187.320 295.369,187.498 295.479 C 188.114 295.860,188.248 294.975,187.745 293.851 C 185.220 288.216,186.833 282.884,191.075 282.848 C 191.408 282.845,191.681 282.686,191.681 282.496 C 191.681 282.090,190.413 282.024,190.170 282.417 C 190.079 282.564,187.636 282.722,184.741 282.767 L 179.477 282.849 177.268 281.112 C 174.609 279.023,174.846 279.018,173.137 281.189 C 170.707 284.275,168.558 285.876,167.929 285.069 C 164.110 280.175,161.173 274.290,159.753 268.691 C 158.823 265.024,158.646 264.647,157.063 262.972 C 154.876 260.658,152.608 258.007,151.931 256.973 C 151.638 256.525,151.234 256.259,151.035 256.382 C 150.836 256.505,150.770 256.450,150.888 256.258 C 151.252 255.669,149.095 253.041,148.423 253.256 C 147.962 253.404,147.937 253.371,148.311 253.104 C 148.576 252.916,148.673 252.576,148.528 252.341 C 148.327 252.016,148.191 252.027,147.937 252.389 C 147.671 252.769,147.637 252.760,147.760 252.340 C 148.011 251.488,147.316 250.405,146.897 250.993 C 146.630 251.367,146.598 251.340,146.749 250.870 C 146.861 250.521,146.488 249.535,145.863 248.530 C 144.676 246.620,144.077 246.120,145.133 247.920 C 146.132 249.623,146.407 250.455,145.806 249.957 C 145.419 249.636,145.242 249.751,144.917 250.535 C 143.520 253.908,131.656 253.942,129.202 250.580 C 127.963 248.882,127.799 245.061,128.966 245.061 C 129.132 245.061,129.178 245.295,129.068 245.581 C 128.827 246.209,128.786 246.209,130.503 245.591 C 131.265 245.316,132.622 245.084,133.519 245.076 C 135.524 245.057,141.421 243.586,141.421 243.105 C 141.421 243.012,141.255 242.625,141.052 242.246 C 139.880 240.055,141.216 241.252,142.578 243.612 C 143.477 245.171,144.304 246.447,144.417 246.447 C 144.529 246.447,144.394 246.096,144.118 245.667 C 143.842 245.238,142.877 243.525,141.973 241.859 C 141.070 240.194,140.186 238.742,140.009 238.632 C 139.833 238.523,139.688 238.140,139.688 237.782 C 139.688 237.015,139.016 236.494,138.695 237.012 C 138.573 237.210,137.928 237.482,137.261 237.617 C 135.727 237.927,131.270 240.239,131.096 240.815 C 131.009 241.101,131.170 241.169,131.570 241.016 C 131.984 240.857,132.096 240.912,131.925 241.189 C 131.787 241.412,130.978 241.770,130.127 241.985 C 129.092 242.245,128.298 242.733,127.734 243.453 C 127.063 244.311,126.802 244.445,126.460 244.103 C 125.738 243.381,124.517 243.609,117.504 245.774 C 113.787 246.921,110.121 248.019,109.359 248.214 C 108.596 248.408,107.824 248.714,107.643 248.893 C 107.229 249.304,106.066 249.323,106.066 248.919 C 106.066 248.753,106.768 248.420,107.626 248.180 C 109.929 247.535,109.432 246.078,106.990 246.315 C 105.581 246.451,105.026 247.053,105.026 248.441 C 105.026 250.933,102.133 249.642,100.509 246.425 L 99.515 244.456 97.924 244.820 C 96.964 245.039,96.395 245.343,96.488 245.587 C 96.573 245.809,96.510 246.205,96.348 246.467 C 96.175 246.747,96.211 247.133,96.435 247.403 C 97.320 248.469,94.997 248.998,93.042 248.176 C 91.432 247.499,90.438 247.952,89.066 249.991 C 87.411 252.450,86.976 252.456,86.131 250.033 C 85.474 248.145,84.575 247.159,84.575 248.325 C 84.575 248.627,84.419 248.873,84.229 248.873 C 84.038 248.873,83.881 249.068,83.880 249.307 C 83.878 249.545,83.318 250.121,82.633 250.588 C 81.094 251.636,79.573 253.766,80.121 254.104 C 80.332 254.235,80.396 254.518,80.263 254.733 C 80.130 254.948,79.894 255.045,79.738 254.949 C 78.764 254.347,78.015 258.529,78.664 260.938 C 79.459 263.885,82.457 266.104,83.813 264.749 C 84.136 264.425,84.229 264.611,84.229 265.584 C 84.229 266.550,84.467 267.036,85.269 267.711 C 85.841 268.192,86.308 268.813,86.308 269.091 C 86.308 269.369,86.542 269.686,86.828 269.796 C 87.114 269.906,87.348 270.243,87.348 270.545 C 87.348 271.164,88.689 274.256,89.072 274.523 C 89.209 274.619,89.424 275.115,89.549 275.626 C 89.673 276.137,90.009 276.788,90.295 277.074 C 90.581 277.360,90.815 277.839,90.815 278.138 C 90.815 278.831,91.466 278.849,91.729 278.163 C 92.061 277.298,92.640 277.575,92.410 278.490 C 92.158 279.494,92.811 281.109,93.470 281.109 C 93.756 281.109,93.934 280.704,93.934 280.052 C 93.934 279.173,94.137 278.909,95.136 278.492 C 96.562 277.896,96.707 277.882,96.707 278.336 C 96.707 278.527,96.540 278.683,96.336 278.683 C 96.131 278.683,95.749 278.898,95.486 279.161 C 95.079 279.568,95.171 279.627,96.098 279.554 C 97.026 279.481,97.241 279.281,97.554 278.201 C 99.957 269.896,112.169 272.028,113.216 280.936 C 113.343 282.013,113.692 283.140,113.993 283.441 C 114.303 283.751,114.495 284.415,114.436 284.975 C 114.329 285.991,115.405 286.889,115.693 286.024 C 115.768 285.799,116.067 285.615,116.357 285.615 C 116.729 285.615,116.808 285.794,116.622 286.222 C 114.043 292.165,122.079 301.989,130.846 303.610 C 131.887 303.802,133.202 304.199,133.770 304.493 C 135.021 305.140,136.040 305.189,134.881 304.546 C 134.103 304.115,134.157 304.079,135.921 303.864 C 136.944 303.739,138.172 303.558,138.648 303.461 C 139.125 303.364,139.320 303.378,139.081 303.491 C 137.652 304.171,140.778 306.759,143.029 306.759 C 143.456 306.759,143.903 306.915,144.021 307.106 C 144.139 307.296,144.513 307.452,144.852 307.452 C 145.192 307.452,145.650 307.848,145.870 308.332 C 146.204 309.064,146.383 309.151,146.943 308.852 C 148.192 308.183,149.599 308.470,151.685 309.819 C 153.959 311.288,154.606 311.315,154.565 309.936 C 154.550 309.428,154.459 309.207,154.363 309.445 C 154.177 309.906,153.189 310.058,153.231 309.619 C 153.349 308.356,153.856 307.972,155.408 307.972 C 156.294 307.972,157.019 308.089,157.019 308.232 C 157.019 308.375,157.413 308.492,157.894 308.492 C 158.509 308.492,158.867 308.750,159.099 309.359 C 159.280 309.835,159.627 310.226,159.870 310.227 C 160.113 310.229,160.709 310.437,161.194 310.690 C 163.144 311.707,164.302 311.698,163.768 310.669 C 162.733 308.674,163.849 308.717,166.122 310.761 C 169.592 313.881,175.942 315.894,179.541 315.015 C 180.668 314.739,181.518 314.631,181.429 314.775 C 181.340 314.918,181.544 315.191,181.882 315.382 C 183.206 316.129,181.787 316.597,178.428 316.521 C 176.662 316.482,174.749 316.583,174.177 316.746 C 173.462 316.949,175.362 317.119,180.243 317.289 C 194.003 317.767,208.777 316.205,220.971 312.984 C 227.193 311.340,227.711 311.168,227.498 310.824 C 227.368 310.614,227.445 310.569,227.684 310.717 C 228.693 311.340,242.905 305.652,249.163 302.120 C 250.624 301.296,252.756 300.106,253.899 299.477 C 256.045 298.297,265.843 291.809,266.628 291.048 C 266.872 290.812,268.085 289.856,269.324 288.922 C 270.563 287.989,271.835 286.980,272.150 286.680 C 272.466 286.380,274.002 285.043,275.565 283.709 C 278.677 281.052,287.695 272.118,287.695 271.692 C 287.695 271.171,286.678 271.826,286.470 272.479 C 286.187 273.371,284.361 274.335,284.086 273.738 C 283.977 273.503,283.982 273.681,284.096 274.134 C 284.235 274.687,284.177 274.879,283.919 274.720 C 283.690 274.578,283.536 274.748,283.536 275.143 C 283.536 275.508,282.616 276.644,281.487 277.677 C 276.225 282.486,274.983 283.583,274.177 284.138 C 273.259 284.769,272.200 285.635,270.781 286.915 C 269.704 287.886,269.112 287.902,268.615 286.973 C 267.876 285.590,269.576 284.415,270.763 285.489 C 271.557 286.208,272.128 285.193,271.451 284.268 C 271.226 283.961,270.717 283.201,270.320 282.580 C 269.924 281.959,269.201 281.351,268.714 281.229 C 267.923 281.030,267.890 280.961,268.403 280.586 C 269.117 280.064,269.139 279.723,268.458 279.723 C 267.712 279.723,267.817 279.119,268.638 278.679 C 269.484 278.226,270.017 278.495,270.017 279.373 C 270.017 280.029,271.158 280.634,272.060 280.457 C 272.326 280.405,272.674 280.570,272.835 280.823 C 273.068 281.191,273.127 281.181,273.132 280.770 C 273.135 280.488,273.780 279.670,274.566 278.951 C 276.490 277.192,274.721 275.502,272.455 276.935 C 271.700 277.413,271.057 276.702,271.057 275.390 C 271.057 274.109,271.731 273.365,272.592 273.695 C 272.958 273.836,273.432 273.644,273.863 273.181 C 274.612 272.377,275.563 272.197,275.563 272.860 C 275.563 273.165,275.666 273.173,275.949 272.890 C 276.428 272.411,276.002 271.641,275.389 271.876 C 274.663 272.155,274.472 271.677,275.132 271.233 C 275.465 271.009,276.516 270.795,277.470 270.757 C 280.617 270.631,284.999 268.601,285.720 266.934 C 285.935 266.438,286.515 265.630,287.009 265.139 C 290.033 262.135,290.632 258.636,288.799 254.677 C 287.640 252.172,287.357 251.944,284.635 251.305 C 283.620 251.066,282.706 250.656,282.605 250.392 C 282.504 250.129,282.061 249.913,281.621 249.913 C 281.181 249.913,280.768 249.796,280.705 249.653 C 280.641 249.510,280.043 249.136,279.376 248.821 L 278.163 248.249 279.029 247.866 C 279.986 247.444,279.930 247.447,276.560 248.025 L 275.304 248.241 275.066 246.652 C 274.809 244.939,274.979 244.367,275.745 244.367 C 276.937 244.367,277.450 240.708,276.382 239.822 C 275.892 239.415,275.745 239.457,275.300 240.126 C 275.017 240.552,274.605 240.901,274.383 240.901 C 274.003 240.901,272.929 237.978,273.188 237.647 C 273.899 236.738,269.926 234.589,266.055 233.789 C 263.026 233.164,260.659 232.320,260.659 231.865 C 260.659 231.703,259.996 231.396,259.185 231.184 C 258.375 230.971,256.854 230.565,255.806 230.281 C 254.635 229.964,252.074 229.740,249.170 229.700 C 245.098 229.645,244.341 229.546,243.726 228.990 C 243.207 228.520,242.699 228.397,241.870 228.540 C 238.837 229.061,236.841 229.451,236.096 229.670 C 235.359 229.887,235.314 229.841,235.649 229.215 C 236.185 228.213,235.484 227.453,233.779 227.188 C 231.852 226.889,231.079 227.711,232.183 228.886 L 232.925 229.676 231.211 229.676 C 229.502 229.676,229.496 229.672,229.393 228.460 L 229.289 227.243 226.524 227.135 C 224.426 227.054,223.213 227.205,221.498 227.761 C 219.746 228.330,218.765 228.447,217.136 228.282 C 215.337 228.101,214.793 228.192,213.361 228.917 C 211.144 230.040,209.236 229.968,209.066 228.755 C 208.814 226.967,206.202 226.508,201.989 227.512 M302.612 228.398 C 302.230 229.147,301.642 229.825,301.305 229.905 C 300.823 230.020,300.839 230.044,301.381 230.017 C 301.981 229.987,304.078 227.036,303.499 227.036 C 303.393 227.036,302.994 227.649,302.612 228.398 M306.899 227.659 C 306.705 227.984,306.174 228.862,305.720 229.611 C 305.265 230.359,305.065 230.866,305.274 230.737 C 305.736 230.452,307.566 227.381,307.383 227.198 C 307.311 227.127,307.094 227.334,306.899 227.659 M293.501 227.969 C 293.167 228.056,292.621 228.056,292.288 227.969 C 291.954 227.881,292.227 227.810,292.894 227.810 C 293.562 227.810,293.834 227.881,293.501 227.969 M104.679 228.859 C 104.679 228.941,105.498 229.691,106.499 230.525 C 107.500 231.360,108.100 231.769,107.832 231.433 C 107.295 230.759,104.679 228.624,104.679 228.859 M296.014 229.073 C 297.263 229.474,300.154 229.847,299.307 229.498 C 298.925 229.341,297.834 229.118,296.880 229.003 C 295.813 228.875,295.480 228.902,296.014 229.073 M129.289 229.225 C 129.289 229.284,129.796 229.791,130.416 230.351 L 131.542 231.369 130.524 230.243 C 129.575 229.193,129.289 228.957,129.289 229.225 M182.124 230.567 C 183.176 231.546,182.382 232.036,180.913 231.315 C 179.655 230.697,179.217 230.248,179.208 229.567 C 179.201 229.011,181.184 229.691,182.124 230.567 M136.915 230.936 C 136.915 231.079,136.612 231.196,136.242 231.196 C 135.872 231.196,135.497 231.079,135.409 230.936 C 135.320 230.793,135.623 230.676,136.082 230.676 C 136.540 230.676,136.915 230.793,136.915 230.936 M194.202 232.236 C 194.202 233.094,194.269 233.445,194.352 233.016 C 194.435 232.587,194.435 231.885,194.352 231.456 C 194.269 231.027,194.202 231.378,194.202 232.236 M48.007 233.622 C 49.257 236.105,49.228 236.298,47.683 235.710 C 46.935 235.426,46.794 235.154,46.794 233.998 C 46.794 233.242,46.638 232.527,46.447 232.409 C 45.999 232.132,45.996 231.196,46.443 231.196 C 46.631 231.196,47.335 232.288,48.007 233.622 M128.076 233.276 C 127.193 233.655,128.104 233.655,129.289 233.276 C 129.986 233.052,130.020 232.996,129.463 232.988 C 129.081 232.982,128.458 233.112,128.076 233.276 M124.263 234.315 C 123.826 234.503,123.762 234.613,124.090 234.613 C 124.376 234.613,124.922 234.479,125.303 234.315 C 125.740 234.128,125.804 234.018,125.477 234.018 C 125.191 234.018,124.645 234.152,124.263 234.315 M113.150 235.962 C 113.724 236.597,114.480 237.071,114.883 237.048 C 115.579 237.009,115.580 237.004,114.905 236.841 C 114.523 236.749,113.744 236.261,113.172 235.755 L 112.132 234.835 113.150 235.962 M138.835 238.701 C 139.370 238.907,136.051 240.203,135.009 240.195 C 134.358 240.190,136.393 238.855,137.262 238.717 C 137.738 238.641,138.154 238.555,138.187 238.527 C 138.219 238.498,138.510 238.577,138.835 238.701 M224.437 240.270 C 224.811 240.630,223.724 240.461,221.317 239.784 C 218.931 239.113,219.205 238.844,221.705 239.403 C 223.017 239.696,224.246 240.086,224.437 240.270 M341.529 241.075 C 341.530 242.218,341.595 242.645,341.672 242.022 C 341.749 241.399,341.748 240.463,341.669 239.942 C 341.590 239.421,341.527 239.931,341.529 241.075 M133.865 240.624 C 133.541 240.947,133.356 240.947,133.033 240.624 C 132.709 240.300,132.802 240.208,133.449 240.208 C 134.096 240.208,134.188 240.300,133.865 240.624 M266.729 240.970 C 268.851 241.663,270.583 245.776,270.008 248.753 L 269.750 250.087 269.711 248.608 C 269.616 245.115,268.034 241.594,266.558 241.594 C 266.195 241.594,265.802 241.438,265.685 241.248 C 264.795 239.808,259.362 241.436,257.398 243.731 C 256.713 244.531,256.153 245.004,256.153 244.783 C 256.153 244.293,258.065 242.321,259.314 241.524 C 261.405 240.189,263.791 240.011,266.729 240.970 M200.076 241.540 C 199.763 241.739,200.273 242.318,201.809 243.506 C 204.485 245.575,208.414 248.994,211.531 251.964 C 213.448 253.789,213.956 254.114,214.304 253.738 C 214.644 253.373,214.641 253.329,214.292 253.526 C 214.027 253.676,213.403 253.320,212.712 252.624 C 212.085 251.991,210.337 250.381,208.829 249.047 C 204.291 245.031,203.624 244.387,203.990 244.377 C 204.182 244.372,204.733 244.718,205.214 245.147 C 206.253 246.074,209.981 249.210,210.805 249.850 C 211.459 250.358,214.143 249.835,214.667 249.098 C 214.823 248.879,214.841 249.090,214.707 249.567 C 214.574 250.043,214.252 250.741,213.991 251.117 C 213.731 251.493,213.518 251.933,213.518 252.095 C 213.518 252.628,214.907 250.850,215.493 249.567 C 215.624 249.281,216.247 248.163,216.877 247.082 C 218.283 244.673,218.293 244.833,216.724 244.581 C 210.844 243.636,204.584 243.389,203.898 244.074 C 203.510 244.463,200.385 242.512,200.357 241.863 C 200.351 241.725,202.881 241.565,205.979 241.507 L 211.612 241.403 206.066 241.331 C 203.016 241.291,200.320 241.385,200.076 241.540 M329.054 243.328 C 329.054 244.567,329.117 245.074,329.194 244.454 C 329.270 243.834,329.270 242.821,329.194 242.201 C 329.117 241.581,329.054 242.088,329.054 243.328 M256.766 242.721 C 255.332 244.103,254.766 245.322,254.761 247.042 C 254.757 248.137,254.651 248.536,254.449 248.217 C 254.203 247.828,254.110 247.862,253.975 248.390 C 253.873 248.789,253.791 248.605,253.766 247.920 C 253.744 247.301,253.882 246.794,254.073 246.794 C 254.263 246.794,254.420 246.365,254.422 245.841 C 254.424 244.800,255.306 243.259,256.354 242.467 C 257.389 241.683,257.666 241.853,256.766 242.721 M242.758 243.159 C 242.647 243.447,242.764 243.933,243.018 244.239 C 243.416 244.719,243.387 244.776,242.801 244.663 C 241.989 244.507,241.682 243.358,242.340 242.941 C 242.969 242.543,242.990 242.554,242.758 243.159 M244.670 244.056 C 243.805 244.603,243.556 244.379,244.218 243.648 C 244.639 243.183,244.918 243.074,245.007 243.341 C 245.083 243.568,244.931 243.890,244.670 244.056 M69.822 246.880 L 68.804 248.007 69.931 246.989 C 70.981 246.040,71.217 245.754,70.949 245.754 C 70.889 245.754,70.382 246.261,69.822 246.880 M329.482 248.180 C 329.617 249.419,329.762 250.745,329.804 251.127 C 329.863 251.654,330.122 251.810,330.885 251.779 C 331.437 251.756,334.190 251.623,337.002 251.483 L 342.114 251.228 342.058 249.097 L 342.001 246.967 341.768 248.873 C 341.639 249.922,341.509 250.564,341.478 250.301 C 341.436 249.951,341.072 249.872,340.121 250.008 C 339.406 250.111,336.973 250.466,334.713 250.797 C 329.986 251.491,330.000 251.497,329.983 248.700 C 329.977 247.747,329.807 246.733,329.605 246.447 C 329.340 246.072,329.305 246.555,329.482 248.180 M221.161 247.800 C 220.763 248.581,220.502 249.220,220.583 249.220 C 220.843 249.220,222.217 246.712,222.049 246.543 C 221.959 246.453,221.559 247.019,221.161 247.800 M66.362 250.693 L 64.991 252.166 66.464 250.796 C 67.834 249.522,68.097 249.220,67.835 249.220 C 67.778 249.220,67.115 249.883,66.362 250.693 M186.281 252.726 C 186.670 253.437,187.070 254.013,187.169 254.005 C 188.494 253.900,189.045 254.324,191.197 257.106 C 192.488 258.774,195.641 262.205,198.203 264.731 L 202.862 269.324 206.544 269.251 L 210.225 269.178 206.615 269.065 L 203.004 268.952 201.872 267.752 C 200.678 266.486,200.657 266.322,201.762 266.913 C 202.361 267.234,205.015 265.560,206.239 264.090 C 207.030 263.140,209.277 262.171,210.055 262.444 L 210.919 262.746 210.052 262.037 C 207.438 259.897,199.154 256.528,192.550 254.920 C 190.003 254.299,188.928 253.869,188.485 253.294 C 187.642 252.200,187.721 251.945,188.821 252.209 C 189.346 252.334,189.672 252.326,189.547 252.190 C 189.422 252.053,188.476 251.828,187.446 251.688 L 185.573 251.434 186.281 252.726 M218.232 253.031 C 217.713 253.985,217.361 254.766,217.450 254.766 C 217.707 254.766,219.488 251.608,219.324 251.444 C 219.243 251.363,218.751 252.077,218.232 253.031 M190.468 252.686 C 190.849 252.850,191.473 252.984,191.854 252.984 L 192.548 252.984 191.854 252.686 C 191.473 252.522,190.849 252.388,190.468 252.388 L 189.775 252.388 190.468 252.686 M127.240 255.546 C 130.968 259.461,130.663 262.124,126.393 262.925 C 125.307 263.129,125.022 263.013,123.883 261.907 C 123.176 261.220,122.777 260.659,122.997 260.659 C 123.558 260.659,123.495 260.013,122.872 259.391 C 122.115 258.633,122.429 254.530,123.296 253.873 C 124.406 253.031,125.142 253.343,127.240 255.546 M194.454 253.726 C 194.740 253.911,195.286 254.054,195.667 254.043 L 196.360 254.024 195.667 253.726 C 194.631 253.281,193.765 253.281,194.454 253.726 M62.543 254.853 L 61.525 255.979 62.652 254.961 C 63.702 254.012,63.937 253.726,63.670 253.726 C 63.610 253.726,63.103 254.233,62.543 254.853 M197.400 254.591 C 198.570 255.143,199.893 255.322,198.960 254.802 C 198.674 254.643,197.972 254.420,197.400 254.307 L 196.360 254.101 197.400 254.591 M146.343 255.806 C 147.642 255.806,147.048 257.045,145.706 257.136 C 144.383 257.225,142.571 255.970,143.570 255.656 C 143.818 255.578,144.255 255.443,144.541 255.357 C 144.827 255.270,145.209 255.336,145.390 255.503 C 145.571 255.669,146.000 255.806,146.343 255.806 M199.682 255.257 C 199.961 255.535,204.614 257.200,204.745 257.068 C 204.819 256.995,203.772 256.525,202.419 256.024 C 200.035 255.140,199.382 254.957,199.682 255.257 M286.920 256.300 C 289.457 258.628,288.253 263.284,284.614 265.214 C 282.343 266.419,282.423 266.417,283.000 265.251 C 284.139 262.949,284.312 262.355,284.356 260.599 C 284.391 259.168,284.242 258.571,283.709 258.014 C 282.958 257.230,280.873 256.529,281.288 257.201 C 281.452 257.467,281.156 257.514,280.315 257.356 C 279.347 257.175,278.914 257.291,278.135 257.941 C 276.640 259.190,275.563 260.376,275.563 260.774 C 275.563 260.972,275.246 261.471,274.859 261.884 C 273.315 263.527,275.661 266.059,278.427 265.736 C 281.414 265.387,279.232 267.499,275.921 268.161 C 273.564 268.632,272.199 264.889,273.617 261.844 C 275.585 257.618,278.978 255.628,285.014 255.160 C 285.350 255.134,286.208 255.647,286.920 256.300 M60.463 257.279 L 59.445 258.406 60.572 257.387 C 61.622 256.439,61.858 256.153,61.590 256.153 C 61.530 256.153,61.023 256.659,60.463 257.279 M142.548 256.382 C 142.309 256.478,142.114 256.778,142.114 257.048 C 142.114 257.575,141.515 257.613,139.861 257.192 C 138.892 256.946,138.922 256.925,140.315 256.887 C 141.214 256.862,141.723 256.708,141.594 256.499 C 141.474 256.304,141.730 256.164,142.181 256.180 C 142.621 256.195,142.786 256.286,142.548 256.382 M161.695 258.663 C 161.567 259.858,161.531 261.302,161.615 261.873 C 161.699 262.444,161.791 261.913,161.820 260.692 C 161.907 256.948,163.028 258.571,163.534 263.174 C 164.001 267.425,164.713 269.618,167.306 274.790 L 169.264 278.697 170.059 277.950 C 170.991 277.074,174.507 271.238,174.787 270.102 C 174.972 269.352,170.017 264.723,164.875 260.841 C 163.768 260.006,163.569 259.671,163.691 258.844 C 163.805 258.064,163.632 257.705,162.882 257.171 L 161.928 256.492 161.695 258.663 M74.227 257.658 C 73.500 258.432,73.492 259.619,74.214 259.619 C 74.384 259.619,74.523 259.781,74.523 259.979 C 74.523 260.390,75.949 262.505,76.343 262.681 C 76.486 262.744,76.603 262.950,76.603 263.139 C 76.603 263.327,76.798 263.696,77.036 263.958 C 77.275 264.221,78.484 265.842,79.723 267.562 C 80.962 269.281,82.150 270.693,82.362 270.699 C 82.575 270.705,83.165 271.038,83.673 271.437 C 84.677 272.228,85.617 271.897,85.614 270.755 C 85.612 269.913,84.310 267.938,83.756 267.938 C 82.882 267.938,82.312 268.950,82.771 269.686 C 83.091 270.198,83.085 270.302,82.743 270.171 C 82.503 270.079,82.104 269.679,81.856 269.281 C 81.575 268.831,81.553 268.650,81.798 268.802 C 82.074 268.972,82.160 268.616,82.084 267.619 C 81.966 266.059,81.251 265.785,81.334 267.331 C 81.362 267.855,81.245 268.284,81.074 268.284 C 80.903 268.284,80.759 268.167,80.755 268.024 C 80.750 267.881,80.183 267.140,79.495 266.378 C 76.683 263.264,74.656 259.619,75.737 259.619 C 76.112 259.619,76.256 259.234,76.256 258.232 C 76.256 256.579,75.455 256.352,74.227 257.658 M189.288 257.392 C 190.271 258.846,193.249 262.353,193.517 262.372 C 193.669 262.383,192.830 261.261,191.653 259.879 C 189.221 257.022,188.587 256.355,189.288 257.392 M158.698 258.752 C 158.630 259.610,158.692 260.312,158.836 260.312 C 158.981 260.312,159.099 259.610,159.099 258.752 C 159.099 257.894,159.037 257.192,158.960 257.192 C 158.884 257.192,158.766 257.894,158.698 258.752 M280.195 258.059 C 279.984 258.609,279.376 258.780,279.376 258.290 C 279.376 257.923,279.755 257.539,280.116 257.539 C 280.269 257.539,280.304 257.773,280.195 258.059 M303.293 258.328 C 303.293 258.657,303.432 258.925,303.602 258.925 C 303.772 258.925,304.009 259.315,304.128 259.792 C 304.248 260.269,304.487 260.659,304.658 260.659 C 304.830 260.659,305.074 261.127,305.199 261.698 C 305.325 262.270,305.559 262.738,305.719 262.738 C 305.880 262.738,306.114 263.206,306.239 263.778 C 306.365 264.350,306.594 264.818,306.748 264.818 C 306.902 264.818,307.131 265.364,307.256 266.031 C 307.381 266.698,307.633 267.244,307.815 267.244 C 307.997 267.244,308.146 267.478,308.146 267.764 C 308.146 268.050,308.306 268.284,308.503 268.284 C 308.699 268.284,308.554 267.699,308.180 266.984 C 307.807 266.269,306.782 264.221,305.904 262.431 C 303.994 258.543,303.293 257.441,303.293 258.328 M135.875 258.554 C 135.875 258.971,134.881 259.965,134.464 259.965 C 133.993 259.965,134.067 259.701,134.749 258.954 C 135.418 258.221,135.875 258.059,135.875 258.554 M164.309 258.492 C 164.315 258.635,164.744 259.052,165.262 259.418 L 166.205 260.083 165.364 259.158 C 164.481 258.185,164.291 258.065,164.309 258.492 M207.308 258.364 C 207.662 258.686,211.092 260.306,211.092 260.150 C 211.092 259.955,207.782 258.232,207.406 258.232 C 207.273 258.232,207.228 258.291,207.308 258.364 M195.528 264.857 C 197.262 266.859,202.832 272.162,203.412 272.364 C 203.560 272.415,201.494 270.271,198.821 267.598 C 193.486 262.263,192.749 261.649,195.528 264.857 M162.287 266.378 C 162.287 266.759,162.412 267.461,162.565 267.938 C 162.785 268.624,162.843 268.660,162.843 268.111 C 162.843 267.730,162.718 267.028,162.565 266.551 C 162.345 265.865,162.287 265.829,162.287 266.378 M266.786 270.699 C 267.324 271.784,267.091 272.032,266.250 271.271 C 265.891 270.947,265.035 270.590,264.348 270.478 C 262.662 270.205,263.131 269.607,264.928 269.739 C 266.049 269.821,266.454 270.030,266.786 270.699 M283.622 270.103 C 282.886 270.339,282.496 270.687,282.496 271.107 C 282.496 272.096,283.792 271.902,285.148 270.711 C 286.474 269.547,285.974 269.348,283.622 270.103 M84.922 272.401 C 84.922 272.569,85.156 272.900,85.442 273.137 C 85.728 273.374,85.962 273.783,85.962 274.046 C 85.962 274.309,86.105 274.523,86.281 274.523 C 86.456 274.523,86.697 274.963,86.815 275.500 C 87.023 276.450,94.072 283.883,95.052 284.187 C 95.617 284.362,94.487 283.076,90.858 279.416 C 89.261 277.805,87.585 275.773,87.133 274.899 C 85.924 272.562,84.922 271.430,84.922 272.401 M163.976 272.270 C 163.976 272.461,164.199 273.007,164.471 273.484 C 164.744 273.960,164.967 274.194,164.967 274.003 C 164.967 273.813,164.744 273.267,164.471 272.790 C 164.199 272.314,163.976 272.080,163.976 272.270 M137.919 272.761 C 138.721 273.268,138.084 274.177,136.926 274.177 C 135.767 274.177,135.711 274.091,136.234 273.114 C 136.622 272.389,137.156 272.277,137.919 272.761 M279.173 272.770 C 275.929 273.546,275.335 277.643,278.466 277.643 C 281.294 277.643,283.359 274.370,281.398 272.997 C 280.964 272.692,280.526 272.460,280.425 272.479 C 280.325 272.499,279.761 272.630,279.173 272.770 M78.683 273.930 C 80.299 274.743,79.905 277.296,78.163 277.296 C 77.310 277.296,76.788 276.812,76.478 275.737 C 76.369 275.355,76.343 275.966,76.422 277.094 C 76.526 278.590,76.763 279.341,77.295 279.867 C 77.973 280.538,78.007 280.542,77.774 279.922 C 77.564 279.366,77.633 279.300,78.189 279.525 C 80.449 280.436,80.712 280.465,81.570 279.903 C 82.043 279.593,82.545 278.919,82.686 278.405 L 82.942 277.470 83.233 278.336 C 83.445 278.965,83.476 278.792,83.349 277.705 C 83.048 275.143,81.251 273.476,78.804 273.489 L 77.816 273.494 78.683 273.930 M281.233 274.243 C 281.925 275.349,279.515 277.213,278.250 276.550 C 277.362 276.085,277.508 275.026,278.576 274.187 C 279.633 273.355,280.690 273.378,281.233 274.243 M177.131 275.201 L 176.397 276.639 177.193 277.284 C 177.631 277.639,178.066 277.854,178.160 277.760 C 178.254 277.667,178.059 277.439,177.727 277.253 C 176.974 276.832,176.955 275.957,177.678 274.925 C 177.984 274.489,178.151 274.049,178.049 273.947 C 177.948 273.846,177.535 274.410,177.131 275.201 M178.015 275.666 C 177.860 276.199,177.830 276.732,177.948 276.850 C 178.336 277.238,178.564 276.685,178.430 275.682 L 178.298 274.697 178.015 275.666 M102.652 276.481 C 100.293 277.678,100.077 280.705,102.214 282.632 C 103.119 283.448,106.336 282.906,107.162 281.799 C 109.610 278.515,106.311 274.624,102.652 276.481 M104.316 276.941 C 105.996 277.840,105.378 280.416,103.482 280.416 C 101.713 280.416,101.213 280.108,101.213 279.018 C 101.213 277.441,103.007 276.240,104.316 276.941 M129.289 283.490 C 130.388 283.857,131.196 284.332,131.196 284.611 C 131.196 284.877,131.352 285.210,131.542 285.350 C 132.119 285.773,130.597 285.647,128.479 285.095 C 126.156 284.490,121.972 284.405,121.426 284.952 C 121.154 285.223,120.846 285.155,120.325 284.709 L 119.601 284.090 120.719 283.597 C 123.518 282.365,125.829 282.336,129.289 283.490 M133.449 285.615 C 133.449 286.046,133.220 286.306,132.842 286.303 C 132.363 286.299,132.336 286.235,132.713 285.995 C 132.976 285.829,133.084 285.519,132.953 285.307 C 132.822 285.095,132.880 284.922,133.082 284.922 C 133.284 284.922,133.449 285.234,133.449 285.615 M129.001 285.828 C 132.090 286.615,135.911 289.135,135.864 290.354 C 135.858 290.512,135.663 290.399,135.431 290.103 C 133.269 287.345,126.972 285.418,124.003 286.604 C 123.042 286.988,122.981 287.187,122.961 290.035 C 122.958 290.464,122.821 290.815,122.656 290.815 C 122.492 290.815,122.356 290.542,122.354 290.208 C 122.352 289.630,120.960 288.735,120.064 288.735 C 119.475 288.735,119.270 287.988,119.653 287.243 C 120.653 285.301,124.594 284.705,129.001 285.828 M61.703 289.516 C 62.146 289.881,62.164 290.191,61.818 291.508 L 61.408 293.068 61.331 291.334 C 61.271 289.964,61.164 290.362,60.821 293.241 C 60.583 295.243,60.438 298.284,60.500 300.000 C 60.576 302.099,60.532 302.609,60.366 301.560 L 60.120 300.000 59.906 302.080 C 59.709 303.990,59.763 304.230,60.569 305.026 C 61.203 305.651,61.388 305.724,61.237 305.286 C 60.980 304.542,61.467 304.497,62.169 305.199 C 62.834 305.865,63.118 305.863,62.862 305.195 C 62.752 304.907,62.889 303.932,63.168 303.029 C 63.989 300.371,65.858 293.115,65.858 292.587 C 65.858 292.412,65.351 291.929,64.731 291.514 L 63.605 290.759 64.644 290.988 C 66.071 291.303,65.704 291.037,63.258 289.981 C 62.114 289.488,61.415 289.279,61.703 289.516 M61.256 296.788 C 61.179 297.411,61.115 296.984,61.113 295.841 C 61.111 294.697,61.174 294.187,61.253 294.708 C 61.332 295.229,61.334 296.165,61.256 296.788 M242.585 294.801 C 242.656 295.182,242.891 295.607,243.108 295.745 C 243.584 296.049,242.783 297.651,241.870 298.221 C 240.545 299.049,239.009 296.349,239.732 294.464 C 240.064 293.600,242.412 293.877,242.585 294.801 M309.532 294.734 C 309.532 295.333,309.719 295.667,310.052 295.667 C 310.699 295.667,310.696 295.340,310.041 294.474 C 309.553 293.829,309.532 293.840,309.532 294.734 M204.867 297.347 C 202.504 299.595,202.904 301.594,205.806 302.036 C 207.512 302.297,207.625 302.025,206.412 300.583 C 205.359 299.331,205.294 297.801,206.253 296.772 C 207.458 295.479,206.347 295.939,204.867 297.347 M239.538 298.452 C 240.313 298.868,240.476 300.928,239.775 301.452 C 237.849 302.891,233.731 302.529,234.036 300.948 C 234.355 299.289,238.007 297.633,239.538 298.452 M310.572 300.769 C 310.572 301.181,310.738 301.622,310.942 301.747 C 311.595 302.151,311.699 301.628,311.127 300.812 L 310.572 300.019 310.572 300.769 M141.768 301.362 C 141.768 301.661,140.668 302.600,140.318 302.600 C 140.120 302.600,140.326 302.293,140.776 301.918 C 141.645 301.195,141.768 301.125,141.768 301.362 M115.594 302.933 C 116.125 304.606,114.328 305.616,112.834 304.486 C 112.241 304.039,112.208 303.865,112.591 303.198 C 113.007 302.471,112.991 302.474,112.322 303.245 C 111.416 304.288,111.425 305.042,112.356 306.226 C 113.568 307.767,116.406 306.687,116.962 304.473 C 117.077 304.015,117.345 303.640,117.558 303.640 C 117.770 303.640,117.548 303.328,117.063 302.946 C 115.930 302.055,115.313 302.050,115.594 302.933 M83.990 302.840 C 84.281 303.311,87.002 305.507,87.002 305.270 C 87.002 305.182,86.268 304.508,85.371 303.774 C 84.475 303.039,83.853 302.619,83.990 302.840 M159.272 305.719 C 159.154 305.910,158.716 306.063,158.298 306.061 C 157.681 306.056,157.636 305.992,158.059 305.719 C 158.742 305.278,159.545 305.278,159.272 305.719 M61.698 305.813 C 61.698 305.896,63.219 307.246,65.078 308.812 C 67.016 310.445,67.571 310.827,66.378 309.709 C 64.100 307.574,61.698 305.574,61.698 305.813 M87.389 305.806 C 87.476 305.854,89.958 308.232,92.906 311.092 L 98.267 316.291 93.072 311.005 C 90.215 308.098,87.732 305.719,87.555 305.719 C 87.378 305.719,87.303 305.758,87.389 305.806 M85.269 306.807 C 85.269 307.182,82.292 310.674,79.108 314.035 C 78.294 314.894,77.442 316.015,77.216 316.524 C 76.746 317.582,76.243 317.451,74.295 315.759 C 73.020 314.652,69.595 312.307,70.364 313.068 C 72.192 314.876,80.471 320.977,80.811 320.767 C 81.039 320.626,81.124 320.666,81.005 320.858 C 80.804 321.184,87.399 326.875,87.951 326.853 C 88.096 326.847,87.942 326.683,87.608 326.489 C 86.740 325.983,86.858 325.586,87.955 325.324 C 90.368 324.749,97.986 321.883,98.551 321.338 C 99.158 320.752,99.106 320.634,97.137 318.157 C 93.384 313.434,91.228 311.357,90.729 311.985 C 90.490 312.285,88.345 313.869,85.962 315.504 C 83.579 317.139,81.210 318.866,80.697 319.341 C 79.826 320.149,79.730 320.167,79.232 319.617 C 78.680 319.006,80.656 316.764,84.749 313.357 C 85.511 312.722,86.813 311.585,87.643 310.829 L 89.150 309.455 87.657 307.934 C 86.202 306.451,85.269 306.011,85.269 306.807 M139.948 308.342 C 140.758 308.827,141.421 309.372,141.421 309.552 C 141.421 309.732,141.616 309.874,141.854 309.869 C 142.093 309.864,141.705 309.318,140.993 308.656 C 140.281 307.994,139.423 307.454,139.087 307.456 C 138.724 307.458,139.076 307.819,139.948 308.342 M62.748 309.470 C 63.507 310.085,63.511 310.128,62.920 311.030 C 62.586 311.541,62.390 311.958,62.485 311.958 C 62.581 311.958,62.923 311.555,63.246 311.063 C 63.846 310.146,63.290 308.839,62.300 308.839 C 62.117 308.839,62.319 309.123,62.748 309.470 M65.156 314.584 C 63.331 320.068,65.750 324.247,70.267 323.412 C 71.343 323.213,72.274 323.050,72.334 323.050 C 72.394 323.050,72.444 322.769,72.444 322.425 C 72.444 321.446,74.631 319.483,75.147 320.000 C 75.408 320.261,75.563 320.279,75.563 320.050 C 75.563 319.569,69.350 314.045,67.517 312.895 C 66.112 312.015,65.979 312.110,65.156 314.584 M159.237 313.518 C 159.899 314.019,160.485 313.928,160.485 313.324 C 160.485 313.145,160.056 313.003,159.532 313.009 C 158.629 313.020,158.613 313.046,159.237 313.518 M154.870 314.454 C 155.194 314.778,155.378 314.778,155.702 314.454 C 156.025 314.131,155.933 314.038,155.286 314.038 C 154.639 314.038,154.547 314.131,154.870 314.454 M71.944 317.080 C 71.738 317.285,70.486 316.545,69.509 315.639 C 68.044 314.281,68.525 314.292,70.355 315.658 C 71.303 316.366,72.018 317.006,71.944 317.080 M136.485 316.296 C 136.722 317.540,137.166 317.672,136.986 316.446 C 136.904 315.884,136.720 315.425,136.577 315.425 C 136.435 315.425,136.393 315.817,136.485 316.296 M60.073 320.104 C 60.075 321.248,60.139 321.674,60.217 321.051 C 60.294 320.428,60.292 319.492,60.213 318.971 C 60.134 318.450,60.071 318.960,60.073 320.104 M137.477 319.151 C 137.670 319.754,137.787 320.044,138.770 322.357 C 139.054 323.024,139.398 323.960,139.534 324.437 C 139.903 325.730,140.728 326.860,140.728 326.074 C 140.728 325.745,140.574 325.477,140.385 325.477 C 140.197 325.477,139.943 324.853,139.821 324.090 C 139.699 323.328,139.470 322.704,139.313 322.704 C 139.155 322.704,138.924 322.158,138.799 321.490 C 138.673 320.823,138.432 320.277,138.263 320.277 C 138.094 320.277,137.955 319.887,137.955 319.411 C 137.955 318.934,137.804 318.544,137.619 318.544 C 137.435 318.544,137.371 318.817,137.477 319.151 M102.596 321.777 C 103.005 322.317,103.002 322.456,102.577 322.725 C 102.265 322.922,102.233 323.042,102.493 323.045 C 103.242 323.055,103.386 322.300,102.746 321.717 C 102.155 321.178,102.146 321.181,102.596 321.777 M81.456 324.804 C 81.456 325.006,81.636 325.060,81.856 324.924 C 82.106 324.769,82.162 324.829,82.005 325.082 C 81.867 325.305,81.634 325.413,81.487 325.322 C 81.340 325.231,80.687 325.735,80.038 326.443 L 78.856 327.728 80.035 326.689 L 81.213 325.650 80.581 326.752 C 79.952 327.849,79.953 327.858,80.877 329.070 C 81.422 329.784,81.662 330.375,81.457 330.502 C 81.266 330.620,81.109 330.870,81.109 331.057 C 81.109 331.266,81.276 331.256,81.542 331.032 C 81.781 330.832,82.388 330.360,82.893 329.982 C 83.397 329.605,84.129 328.755,84.519 328.094 L 85.228 326.892 83.555 325.665 C 81.770 324.354,81.456 324.225,81.456 324.804 M88.908 326.516 C 88.471 326.704,88.407 326.814,88.735 326.814 C 89.021 326.814,89.567 326.680,89.948 326.516 C 90.385 326.329,90.449 326.219,90.121 326.219 C 89.835 326.219,89.289 326.353,88.908 326.516 M140.768 327.130 C 140.746 327.372,141.125 328.199,141.609 328.967 C 142.094 329.735,142.647 330.706,142.837 331.126 C 143.603 332.812,144.184 333.634,144.189 333.040 C 144.192 332.720,143.981 332.245,143.720 331.984 C 143.459 331.724,143.127 331.135,142.981 330.676 C 142.835 330.217,142.503 329.628,142.242 329.367 C 141.981 329.107,141.768 328.670,141.768 328.398 C 141.768 328.126,141.623 327.903,141.447 327.903 C 141.270 327.903,141.054 327.630,140.967 327.296 C 140.880 326.963,140.790 326.888,140.768 327.130 M144.563 333.687 C 144.536 334.183,148.257 339.813,148.720 339.977 C 148.900 340.040,149.047 340.283,149.047 340.515 C 149.047 340.748,149.593 341.468,150.260 342.114 C 150.927 342.761,151.473 343.194,151.473 343.076 C 151.473 342.958,151.005 342.393,150.433 341.821 C 149.861 341.249,149.393 340.648,149.393 340.485 C 149.393 340.322,149.081 339.922,148.700 339.595 C 148.319 339.269,148.007 338.783,148.007 338.515 C 148.007 338.248,147.773 337.939,147.487 337.830 C 147.201 337.720,146.967 337.391,146.967 337.099 C 146.967 336.807,146.814 336.568,146.627 336.568 C 146.440 336.568,146.189 336.179,146.070 335.702 C 145.950 335.225,145.708 334.835,145.532 334.835 C 145.356 334.835,145.071 334.484,144.898 334.055 C 144.726 333.627,144.575 333.461,144.563 333.687 M152.756 345.218 C 153.466 345.972,154.108 346.527,154.183 346.452 C 154.349 346.287,152.018 343.847,151.694 343.847 C 151.568 343.847,152.046 344.464,152.756 345.218 ",stroke:"none",fill:"#877262",fillRule:"evenodd"}),/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{id:"path2",d:"M308.232 0.432 C 307.613 0.631,307.106 0.910,307.106 1.052 C 307.106 1.195,306.725 1.407,306.260 1.524 C 305.448 1.727,301.213 5.525,301.213 6.049 C 301.213 6.189,300.901 6.700,300.520 7.184 C 300.139 7.669,299.827 8.422,299.827 8.857 C 299.827 9.292,299.632 9.713,299.393 9.792 C 298.677 10.031,298.831 17.573,299.579 18.891 C 299.903 19.463,300.170 20.059,300.171 20.215 C 300.172 20.372,300.416 20.743,300.712 21.039 C 301.251 21.577,300.440 22.877,299.565 22.877 C 299.405 22.877,298.892 23.338,298.424 23.902 C 297.956 24.466,297.401 24.934,297.189 24.942 C 296.977 24.950,296.238 25.464,295.546 26.083 C 292.278 29.011,291.728 29.463,291.436 29.463 C 291.263 29.463,290.677 29.950,290.132 30.546 C 289.139 31.634,285.530 31.824,284.906 30.822 C 284.802 30.654,283.359 30.413,281.700 30.286 C 280.041 30.158,278.683 29.921,278.683 29.758 C 278.683 29.350,268.072 29.384,267.326 29.794 C 266.995 29.976,265.204 30.225,263.345 30.346 C 261.486 30.468,259.965 30.686,259.965 30.832 C 259.965 30.978,259.006 31.197,257.834 31.320 C 256.662 31.442,255.532 31.679,255.321 31.845 C 255.111 32.012,254.198 32.255,253.293 32.387 C 252.387 32.518,251.646 32.754,251.646 32.911 C 251.646 33.068,250.948 33.302,250.095 33.430 C 249.241 33.558,248.461 33.796,248.360 33.959 C 248.259 34.122,247.554 34.360,246.792 34.489 C 246.030 34.618,245.407 34.865,245.407 35.039 C 245.407 35.213,245.080 35.355,244.681 35.355 C 244.281 35.355,243.540 35.571,243.034 35.835 C 242.141 36.301,241.039 36.801,238.422 37.929 C 237.726 38.229,236.999 38.475,236.805 38.475 C 236.611 38.475,236.401 38.619,236.337 38.796 C 235.972 39.810,234.315 39.578,234.315 38.512 C 234.315 37.920,234.169 37.435,233.990 37.435 C 233.811 37.435,233.559 36.733,233.431 35.875 C 233.302 35.017,233.071 34.315,232.917 34.315 C 232.763 34.315,232.535 33.847,232.409 33.276 C 232.283 32.704,232.054 32.236,231.899 32.236 C 231.744 32.236,231.520 31.846,231.400 31.369 C 231.281 30.893,231.030 30.503,230.843 30.503 C 230.656 30.503,230.503 30.328,230.503 30.115 C 230.503 29.628,227.936 27.036,227.453 27.036 C 227.255 27.036,227.029 26.841,226.949 26.603 C 226.701 25.864,220.481 26.028,220.057 26.785 C 219.873 27.114,219.563 27.383,219.367 27.383 C 218.897 27.383,217.180 29.125,216.889 29.896 C 216.763 30.230,216.516 30.503,216.340 30.503 C 216.164 30.503,215.922 30.893,215.802 31.369 C 215.683 31.846,215.439 32.236,215.260 32.236 C 215.082 32.236,214.834 32.782,214.708 33.449 C 214.583 34.116,214.360 34.662,214.211 34.662 C 214.063 34.662,213.836 35.227,213.706 35.918 C 213.577 36.609,213.337 37.427,213.174 37.738 C 212.753 38.536,211.783 42.972,211.784 44.091 C 211.785 44.606,211.637 45.386,211.457 45.824 C 211.276 46.262,211.027 48.453,210.903 50.693 C 210.778 52.933,210.538 54.766,210.367 54.766 C 209.965 54.766,206.978 57.046,205.996 58.104 C 205.576 58.556,205.124 58.925,204.992 58.925 C 204.699 58.925,202.068 61.263,198.726 64.494 C 197.358 65.816,196.135 66.898,196.007 66.898 C 195.704 66.898,187.868 74.732,187.868 75.035 C 187.868 75.955,186.642 76.242,181.754 76.463 C 178.921 76.591,176.447 76.813,176.256 76.956 C 176.066 77.099,174.077 77.327,171.837 77.463 C 169.597 77.600,167.764 77.834,167.764 77.983 C 167.764 78.132,166.439 78.365,164.819 78.500 C 163.200 78.634,161.796 78.872,161.700 79.026 C 161.605 79.181,160.551 79.419,159.359 79.554 C 158.168 79.689,157.036 79.921,156.846 80.069 C 156.655 80.217,155.680 80.448,154.680 80.583 C 153.679 80.717,152.776 80.964,152.672 81.132 C 152.569 81.299,151.711 81.538,150.766 81.664 C 149.820 81.789,149.047 82.010,149.047 82.154 C 149.047 82.299,148.345 82.522,147.487 82.651 C 146.629 82.780,145.927 83.013,145.927 83.171 C 145.927 83.328,145.225 83.562,144.367 83.691 C 143.510 83.819,142.808 84.071,142.808 84.250 C 142.808 84.429,142.457 84.576,142.028 84.578 C 141.599 84.579,140.858 84.783,140.381 85.032 C 139.905 85.280,138.696 85.778,137.695 86.138 C 136.694 86.498,135.875 86.904,135.875 87.040 C 135.875 87.176,135.251 87.393,134.489 87.522 C 133.726 87.650,133.102 87.886,133.102 88.045 C 133.102 88.203,132.634 88.436,132.062 88.562 C 131.490 88.687,131.023 88.934,131.023 89.109 C 131.023 89.284,130.828 89.433,130.589 89.440 C 130.351 89.446,129.532 89.753,128.769 90.121 C 128.007 90.490,127.188 90.796,126.950 90.803 C 126.711 90.809,126.516 90.968,126.516 91.155 C 126.516 91.342,126.127 91.592,125.650 91.712 C 125.173 91.832,124.783 92.056,124.783 92.211 C 124.783 92.366,124.315 92.595,123.744 92.721 C 123.172 92.847,122.704 93.081,122.704 93.241 C 122.704 93.401,122.249 93.632,121.693 93.754 C 121.137 93.877,120.596 94.201,120.490 94.475 C 120.385 94.750,120.060 94.974,119.768 94.974 C 119.476 94.974,119.237 95.130,119.237 95.321 C 119.237 95.511,119.015 95.667,118.742 95.667 C 118.470 95.667,118.034 95.881,117.773 96.141 C 117.512 96.402,116.917 96.737,116.450 96.885 C 115.983 97.033,115.408 97.405,115.173 97.711 C 114.795 98.202,114.702 98.206,114.381 97.747 C 113.980 97.174,114.288 90.074,114.727 89.775 C 114.867 89.679,115.097 88.821,115.237 87.868 C 115.523 85.926,115.810 85.628,117.397 85.621 C 118.006 85.618,118.589 85.477,118.693 85.308 C 118.798 85.139,119.431 84.898,120.100 84.772 C 120.770 84.647,121.317 84.395,121.317 84.213 C 121.317 84.031,121.491 83.882,121.705 83.882 C 122.209 83.882,124.783 81.307,124.783 80.803 C 124.783 80.590,124.927 80.416,125.102 80.416 C 125.278 80.416,125.524 79.950,125.649 79.380 C 125.774 78.810,126.021 78.255,126.197 78.146 C 126.608 77.892,126.618 72.097,126.207 72.097 C 126.037 72.097,125.791 71.670,125.660 71.147 C 125.529 70.625,125.313 70.118,125.181 70.021 C 124.420 69.461,123.743 67.938,124.255 67.938 C 124.546 67.938,124.783 67.785,124.783 67.598 C 124.783 67.411,125.173 67.160,125.650 67.040 C 126.127 66.920,126.516 66.679,126.516 66.503 C 126.516 66.327,126.789 66.082,127.123 65.959 C 127.457 65.837,128.043 65.413,128.426 65.017 C 128.809 64.622,129.705 63.908,130.417 63.432 C 131.129 62.955,131.712 62.457,131.713 62.326 C 131.715 62.194,132.730 61.083,133.969 59.856 C 135.208 58.629,136.222 57.516,136.222 57.384 C 136.222 56.534,137.389 56.225,141.069 56.099 C 143.773 56.006,145.052 55.831,145.150 55.538 C 145.228 55.304,145.489 55.113,145.730 55.113 C 145.971 55.113,146.491 54.840,146.886 54.506 C 147.281 54.172,148.007 53.605,148.499 53.244 C 148.991 52.884,149.393 52.377,149.393 52.118 C 149.393 51.859,149.546 51.646,149.733 51.646 C 149.920 51.646,150.171 51.256,150.291 50.780 C 150.411 50.303,150.640 49.913,150.802 49.913 C 150.963 49.913,151.198 49.366,151.323 48.696 C 151.449 48.027,151.690 47.394,151.859 47.289 C 152.261 47.041,152.261 39.168,151.859 39.168 C 151.690 39.168,151.447 38.466,151.318 37.608 C 151.189 36.750,150.938 36.049,150.759 36.049 C 150.580 36.049,150.745 35.737,151.127 35.355 C 151.508 34.974,151.964 34.662,152.140 34.662 C 152.316 34.662,152.927 34.195,153.498 33.624 C 154.149 32.972,154.589 32.744,154.677 33.010 C 154.867 33.580,160.219 33.556,160.409 32.984 C 160.483 32.763,160.769 32.582,161.045 32.582 C 161.321 32.582,161.637 32.348,161.746 32.062 C 161.856 31.776,162.106 31.542,162.302 31.542 C 163.950 31.542,166.339 24.923,164.991 24.090 C 164.801 23.972,164.645 23.503,164.645 23.047 C 164.645 22.591,164.450 22.093,164.211 21.941 C 163.973 21.789,163.612 21.362,163.408 20.994 C 163.205 20.625,162.744 20.157,162.383 19.954 C 162.023 19.750,161.515 19.389,161.255 19.151 C 160.995 18.912,160.482 18.718,160.114 18.718 C 159.746 18.718,159.445 18.562,159.445 18.371 C 159.445 18.180,158.588 18.024,157.539 18.024 C 156.490 18.024,155.633 18.161,155.633 18.328 C 155.633 18.494,155.154 18.727,154.569 18.843 C 152.324 19.293,150.295 21.960,150.142 24.664 C 150.021 26.808,149.929 27.063,149.206 27.244 C 148.765 27.355,148.319 27.665,148.216 27.934 C 148.113 28.203,147.790 28.423,147.498 28.423 C 147.206 28.423,146.967 28.562,146.967 28.732 C 146.967 29.516,145.867 29.349,144.943 28.425 C 144.389 27.872,143.526 27.316,143.025 27.190 C 142.524 27.064,142.114 26.822,142.114 26.652 C 142.114 26.482,141.919 26.342,141.681 26.341 C 141.443 26.340,140.780 26.075,140.208 25.752 C 138.927 25.030,131.170 24.852,130.747 25.536 C 130.609 25.759,130.068 26.049,129.546 26.180 C 129.024 26.311,128.596 26.547,128.596 26.704 C 128.596 26.861,128.260 27.096,127.849 27.227 C 126.969 27.506,125.477 29.030,125.477 29.650 C 125.477 29.887,125.243 30.172,124.957 30.281 C 124.671 30.391,124.437 30.720,124.437 31.012 C 124.437 31.304,124.290 31.542,124.111 31.542 C 123.932 31.542,123.680 32.246,123.551 33.107 C 123.422 33.967,123.179 34.756,123.010 34.860 C 122.842 34.964,122.704 35.316,122.704 35.641 C 122.704 36.176,120.513 37.435,119.582 37.435 C 119.392 37.435,119.237 37.579,119.237 37.754 C 119.237 37.930,118.769 38.176,118.198 38.302 C 117.626 38.427,117.158 38.657,117.158 38.811 C 117.158 38.966,116.768 39.191,116.291 39.310 C 115.815 39.430,115.425 39.669,115.425 39.840 C 115.425 40.012,114.957 40.256,114.385 40.381 C 113.813 40.507,113.345 40.758,113.345 40.940 C 113.345 41.121,113.072 41.373,112.738 41.499 C 112.405 41.626,111.942 41.894,111.710 42.095 C 110.555 43.099,110.231 43.328,109.964 43.328 C 109.804 43.328,109.290 43.789,108.823 44.353 C 108.355 44.917,107.816 45.386,107.626 45.397 C 107.134 45.424,104.663 47.821,103.665 49.239 C 103.203 49.896,102.618 50.558,102.365 50.710 C 102.113 50.863,101.906 51.214,101.906 51.490 C 101.906 51.767,101.753 51.993,101.566 51.993 C 101.379 51.993,101.129 52.383,101.009 52.860 C 100.889 53.336,100.668 53.726,100.517 53.726 C 100.126 53.726,98.787 56.395,98.787 57.174 C 98.787 57.534,98.592 57.893,98.354 57.972 C 97.690 58.193,97.756 66.467,98.432 67.797 C 99.128 69.166,100.908 70.914,101.932 71.234 C 102.394 71.379,102.867 71.644,102.983 71.823 C 103.098 72.003,103.839 72.236,104.629 72.342 C 105.419 72.448,106.066 72.670,106.066 72.836 C 106.066 73.001,106.534 73.137,107.106 73.137 C 108.127 73.137,108.482 73.581,107.799 74.003 C 107.608 74.121,107.452 75.307,107.452 76.638 C 107.452 78.597,107.304 79.263,106.672 80.135 C 105.791 81.353,101.628 85.615,101.320 85.615 C 101.210 85.615,100.775 85.987,100.354 86.441 C 99.933 86.896,99.220 87.384,98.770 87.527 C 98.321 87.670,97.739 88.000,97.478 88.261 C 97.218 88.521,96.781 88.735,96.509 88.735 C 96.237 88.735,96.014 88.884,96.014 89.066 C 96.014 89.248,95.468 89.499,94.801 89.624 C 94.133 89.749,93.588 89.973,93.588 90.121 C 93.588 90.268,92.847 90.500,91.941 90.634 C 91.036 90.769,90.116 91.026,89.898 91.206 C 89.324 91.678,82.496 92.048,82.496 91.607 C 82.496 91.414,82.961 90.727,83.530 90.082 C 84.099 89.436,84.567 88.815,84.570 88.701 C 84.573 88.587,84.887 88.135,85.269 87.695 C 85.650 87.255,85.962 86.702,85.962 86.466 C 85.962 86.229,86.196 85.946,86.482 85.837 C 86.768 85.727,87.002 85.398,87.002 85.106 C 87.002 84.814,87.158 84.575,87.348 84.575 C 87.539 84.575,87.695 84.341,87.695 84.055 C 87.695 83.769,87.848 83.536,88.035 83.536 C 88.222 83.536,88.473 83.146,88.592 82.669 C 88.712 82.192,88.937 81.802,89.091 81.802 C 89.246 81.802,89.476 81.334,89.601 80.763 C 89.727 80.191,89.961 79.723,90.121 79.723 C 90.282 79.723,90.516 79.255,90.641 78.683 C 90.767 78.111,91.001 77.643,91.161 77.643 C 91.322 77.643,91.555 77.175,91.681 76.603 C 91.807 76.031,92.046 75.563,92.213 75.563 C 92.380 75.563,92.619 75.017,92.744 74.350 C 92.869 73.683,93.110 73.137,93.279 73.137 C 93.449 73.137,93.588 72.786,93.590 72.357 C 93.591 71.928,93.815 71.149,94.088 70.626 C 94.361 70.103,94.690 68.972,94.819 68.113 C 94.947 67.254,95.180 66.551,95.336 66.551 C 95.492 66.551,95.728 65.303,95.861 63.778 C 95.995 62.253,96.239 61.005,96.405 61.005 C 96.571 61.005,96.707 58.666,96.707 55.806 C 96.707 52.946,96.574 50.607,96.411 50.607 C 96.248 50.607,96.018 49.575,95.900 48.314 C 95.782 47.053,95.546 45.844,95.375 45.627 C 95.204 45.411,94.959 44.649,94.830 43.934 C 94.701 43.219,94.459 42.634,94.293 42.634 C 94.126 42.634,93.886 42.166,93.761 41.594 C 93.635 41.023,93.389 40.555,93.213 40.555 C 93.038 40.555,92.894 40.316,92.894 40.024 C 92.894 39.732,92.660 39.403,92.374 39.293 C 92.088 39.184,91.854 38.889,91.854 38.638 C 91.854 38.387,91.386 37.714,90.815 37.142 C 90.243 36.570,89.775 36.012,89.775 35.902 C 89.775 35.642,88.448 34.315,88.188 34.315 C 88.078 34.315,87.520 33.847,86.948 33.276 C 86.376 32.704,85.703 32.236,85.452 32.236 C 85.201 32.236,84.906 32.002,84.797 31.716 C 84.687 31.430,84.358 31.196,84.066 31.196 C 83.774 31.196,83.536 31.043,83.536 30.856 C 83.536 30.669,83.146 30.418,82.669 30.298 C 82.192 30.179,81.802 29.954,81.802 29.799 C 81.802 29.644,81.334 29.415,80.763 29.289 C 80.191 29.164,79.723 28.917,79.723 28.742 C 79.723 28.566,79.528 28.418,79.289 28.411 C 79.051 28.405,78.232 28.098,77.470 27.730 C 76.707 27.361,75.732 27.055,75.303 27.048 C 74.874 27.042,74.523 26.893,74.523 26.717 C 74.523 26.542,74.016 26.290,73.397 26.157 C 72.777 26.025,72.114 25.793,71.924 25.642 C 71.733 25.492,70.836 25.258,69.931 25.123 C 69.025 24.988,68.284 24.754,68.284 24.603 C 68.284 24.452,67.505 24.221,66.552 24.090 C 65.599 23.959,64.741 23.726,64.646 23.572 C 64.551 23.418,63.536 23.183,62.392 23.050 C 61.248 22.918,60.312 22.681,60.312 22.524 C 60.312 22.367,59.298 22.130,58.059 21.998 C 56.820 21.865,55.806 21.634,55.806 21.484 C 55.806 21.334,54.870 21.103,53.726 20.971 C 52.582 20.838,51.646 20.604,51.646 20.451 C 51.646 20.297,50.672 20.061,49.480 19.926 C 48.289 19.791,47.158 19.559,46.967 19.411 C 46.776 19.263,45.802 19.032,44.801 18.897 C 43.800 18.763,42.981 18.526,42.981 18.371 C 42.981 18.216,42.201 17.982,41.248 17.851 C 40.295 17.720,39.437 17.486,39.341 17.331 C 39.246 17.176,38.388 16.942,37.435 16.811 C 36.482 16.680,35.702 16.441,35.702 16.280 C 35.702 16.119,35.000 15.882,34.142 15.753 C 33.284 15.624,32.582 15.398,32.582 15.251 C 32.582 15.103,32.036 14.879,31.369 14.754 C 30.702 14.629,30.156 14.391,30.156 14.226 C 30.156 14.061,29.532 13.820,28.769 13.692 C 28.007 13.563,27.383 13.327,27.383 13.169 C 27.383 13.010,26.915 12.777,26.343 12.652 C 25.771 12.526,25.302 12.319,25.299 12.191 C 25.297 12.063,24.634 11.649,23.826 11.270 C 23.018 10.892,22.279 10.502,22.184 10.404 C 22.088 10.306,21.659 10.030,21.231 9.792 C 19.272 8.704,18.888 8.465,18.446 8.059 C 18.187 7.821,17.822 7.626,17.636 7.626 C 17.450 7.626,16.937 7.236,16.495 6.759 C 16.053 6.282,15.554 5.891,15.385 5.890 C 15.216 5.888,14.118 4.959,12.944 3.825 C 10.561 1.522,9.012 0.820,9.012 2.042 C 9.012 2.444,9.136 2.773,9.287 2.773 C 9.567 2.773,10.129 5.483,10.761 9.879 C 11.862 17.531,11.887 17.921,11.479 21.189 C 11.256 22.975,10.930 25.607,10.755 27.036 C 10.581 28.466,10.201 30.728,9.913 32.062 C 9.624 33.397,9.206 35.425,8.985 36.568 C 8.763 37.712,8.445 38.820,8.278 39.030 C 8.110 39.240,7.874 40.137,7.752 41.023 C 7.631 41.909,7.408 42.634,7.257 42.634 C 7.106 42.634,6.875 43.492,6.744 44.541 C 6.613 45.589,6.382 46.447,6.230 46.447 C 6.078 46.447,5.844 47.110,5.711 47.920 C 5.577 48.731,5.347 49.549,5.199 49.740 C 5.052 49.931,4.822 50.749,4.688 51.558 C 4.555 52.367,4.308 53.115,4.139 53.219 C 3.971 53.323,3.730 54.182,3.605 55.127 C 3.480 56.072,3.252 56.846,3.100 56.846 C 2.948 56.846,2.716 57.704,2.585 58.752 C 2.454 59.801,2.226 60.659,2.080 60.659 C 1.933 60.659,1.702 61.555,1.566 62.652 C 1.431 63.748,1.194 64.801,1.041 64.991 C -0.246 66.589,-0.283 85.109,0.999 85.947 C 1.157 86.050,1.394 86.720,1.526 87.435 C 1.657 88.150,1.901 88.735,2.068 88.735 C 2.235 88.735,2.474 89.203,2.600 89.775 C 2.725 90.347,2.961 90.815,3.124 90.815 C 3.286 90.815,3.511 91.102,3.622 91.453 C 3.866 92.220,7.510 96.014,8.003 96.014 C 8.195 96.014,8.695 96.382,9.115 96.832 C 9.535 97.282,10.261 97.771,10.729 97.918 C 11.197 98.065,11.793 98.398,12.054 98.659 C 12.314 98.920,12.751 99.133,13.023 99.133 C 13.295 99.133,13.518 99.282,13.518 99.464 C 13.518 99.646,14.064 99.898,14.731 100.023 C 15.399 100.148,15.945 100.387,15.945 100.554 C 15.945 100.722,16.568 100.958,17.331 101.080 C 18.094 101.202,18.718 101.431,18.718 101.588 C 18.718 101.746,19.263 101.977,19.931 102.103 C 20.598 102.228,21.144 102.451,21.144 102.598 C 21.144 102.746,22.002 102.974,23.050 103.105 C 24.099 103.236,24.957 103.472,24.957 103.630 C 24.957 103.789,25.932 104.029,27.123 104.164 C 28.315 104.299,29.452 104.541,29.650 104.700 C 29.848 104.860,31.447 105.099,33.203 105.231 C 34.959 105.364,36.395 105.606,36.395 105.769 C 36.395 105.932,37.448 106.068,38.735 106.070 C 43.069 106.077,44.576 106.566,42.721 107.364 C 41.698 107.804,40.490 108.532,40.208 108.879 C 40.113 108.996,39.684 109.202,39.255 109.335 C 38.826 109.469,38.475 109.724,38.475 109.902 C 38.475 110.080,38.280 110.228,38.042 110.231 C 37.803 110.234,37.062 110.700,36.395 111.267 C 35.728 111.834,34.994 112.455,34.763 112.648 C 34.533 112.841,34.233 112.998,34.097 112.998 C 33.961 112.998,33.177 113.700,32.355 114.558 C 31.533 115.416,30.733 116.118,30.576 116.118 C 30.194 116.118,28.080 118.317,28.062 118.734 C 28.054 118.916,27.586 119.447,27.022 119.914 C 26.458 120.382,25.997 120.954,25.997 121.185 C 25.997 121.417,25.880 121.658,25.737 121.722 C 25.342 121.897,23.917 124.012,23.917 124.423 C 23.917 124.621,23.779 124.783,23.610 124.783 C 23.441 124.783,23.197 125.485,23.068 126.343 C 22.940 127.201,22.688 127.903,22.509 127.903 C 22.330 127.903,22.184 128.748,22.184 129.781 C 22.184 132.007,21.947 132.756,21.245 132.756 C 20.103 132.756,16.638 134.635,16.638 135.254 C 16.638 135.596,16.872 135.875,17.158 135.875 C 17.444 135.875,17.678 136.014,17.678 136.184 C 17.678 136.354,18.107 136.594,18.631 136.717 C 19.606 136.946,26.030 140.030,26.343 140.419 C 26.438 140.537,26.867 140.744,27.296 140.878 C 27.725 141.012,28.076 141.267,28.076 141.445 C 28.076 141.622,28.315 141.768,28.607 141.768 C 28.899 141.768,29.225 141.996,29.332 142.275 C 29.439 142.553,29.840 142.881,30.222 143.002 C 31.415 143.381,32.134 144.388,32.380 146.026 C 32.510 146.894,32.843 147.791,33.119 148.021 C 33.396 148.251,33.622 148.582,33.622 148.757 C 33.622 149.599,36.588 151.473,37.921 151.473 C 38.225 151.473,38.475 151.629,38.475 151.820 C 38.475 152.245,40.787 152.285,41.047 151.865 C 41.149 151.699,41.725 151.464,42.327 151.344 C 43.588 151.092,45.754 148.967,45.754 147.982 C 45.754 147.615,45.910 147.314,46.101 147.314 C 46.635 147.314,46.512 145.599,45.852 143.873 C 45.237 142.261,42.913 139.688,42.073 139.688 C 41.810 139.688,41.594 139.532,41.594 139.341 C 41.594 139.151,40.878 138.995,40.002 138.995 C 38.701 138.995,38.377 138.868,38.229 138.302 C 38.129 137.920,37.910 137.608,37.741 137.608 C 37.573 137.608,37.435 137.218,37.435 136.742 C 37.435 136.265,37.279 135.875,37.088 135.875 C 36.898 135.875,36.742 135.017,36.742 133.969 C 36.742 132.920,36.898 132.062,37.088 132.062 C 37.279 132.062,37.435 131.904,37.435 131.711 C 37.435 131.181,40.743 128.000,41.567 127.738 C 41.963 127.613,42.288 127.377,42.288 127.214 C 42.288 127.051,42.756 126.815,43.328 126.690 C 43.899 126.564,44.367 126.318,44.367 126.142 C 44.367 125.967,44.562 125.818,44.801 125.811 C 45.039 125.805,45.858 125.498,46.620 125.130 C 47.383 124.762,48.358 124.455,48.787 124.449 C 49.216 124.442,49.567 124.290,49.567 124.111 C 49.567 123.932,50.308 123.677,51.213 123.543 C 52.119 123.410,52.938 123.185,53.033 123.045 C 53.437 122.448,56.153 122.275,56.153 122.846 C 56.153 123.149,56.291 123.397,56.461 123.397 C 56.630 123.397,56.871 123.943,56.996 124.610 C 57.121 125.277,57.360 125.823,57.527 125.823 C 57.694 125.823,57.933 126.291,58.059 126.863 C 58.185 127.435,58.431 127.903,58.606 127.903 C 58.782 127.903,58.925 128.146,58.925 128.443 C 58.925 129.084,62.021 135.502,62.649 136.160 C 62.889 136.412,63.085 136.841,63.085 137.113 C 63.085 137.385,63.229 137.608,63.404 137.608 C 63.579 137.608,63.826 138.076,63.951 138.648 C 64.077 139.220,64.323 139.688,64.499 139.688 C 64.674 139.688,64.818 139.927,64.818 140.219 C 64.818 140.511,65.052 140.839,65.338 140.949 C 66.124 141.251,65.962 141.728,64.991 141.972 C 64.515 142.092,64.125 142.329,64.125 142.499 C 64.125 142.669,63.886 142.808,63.594 142.808 C 63.302 142.808,62.977 143.032,62.872 143.306 C 62.767 143.581,62.225 143.905,61.669 144.027 C 61.113 144.149,60.659 144.382,60.659 144.545 C 60.659 144.708,60.315 144.950,59.895 145.083 C 59.475 145.216,58.918 145.539,58.657 145.800 C 58.396 146.060,57.977 146.274,57.725 146.274 C 57.473 146.274,57.177 146.508,57.067 146.794 C 56.957 147.080,56.629 147.314,56.337 147.314 C 56.045 147.314,55.806 147.470,55.806 147.660 C 55.806 147.851,55.596 148.007,55.339 148.007 C 54.929 148.007,54.552 148.261,52.833 149.691 C 52.628 149.862,52.121 150.109,51.706 150.241 C 51.292 150.372,50.953 150.625,50.953 150.803 C 50.953 150.981,50.754 151.127,50.510 151.127 C 50.267 151.127,49.800 151.438,49.474 151.820 C 49.147 152.201,48.661 152.513,48.394 152.513 C 48.127 152.513,47.818 152.747,47.708 153.033 C 47.599 153.319,47.283 153.553,47.007 153.553 C 46.731 153.553,46.453 153.670,46.389 153.813 C 46.326 153.956,45.377 154.684,44.281 155.430 C 43.185 156.177,42.288 156.918,42.288 157.077 C 42.288 157.236,42.052 157.366,41.764 157.366 C 41.477 157.366,40.974 157.678,40.647 158.059 C 40.321 158.440,39.934 158.752,39.788 158.752 C 39.516 158.752,38.709 159.365,37.166 160.745 C 36.686 161.174,36.140 161.525,35.951 161.525 C 35.762 161.525,35.247 161.915,34.805 162.392 C 34.363 162.868,33.850 163.258,33.665 163.258 C 33.480 163.258,32.861 163.726,32.289 164.298 C 31.717 164.870,31.089 165.338,30.893 165.338 C 30.697 165.338,30.412 165.533,30.260 165.771 C 30.107 166.010,29.437 166.583,28.769 167.045 C 28.102 167.508,27.432 168.093,27.279 168.345 C 27.127 168.598,26.842 168.804,26.646 168.804 C 26.450 168.804,25.822 169.272,25.250 169.844 C 24.678 170.416,24.098 170.884,23.960 170.884 C 23.822 170.884,23.061 171.508,22.267 172.270 C 21.473 173.033,20.717 173.657,20.586 173.657 C 20.455 173.657,19.817 174.203,19.169 174.870 C 18.521 175.537,17.877 176.083,17.737 176.083 C 17.597 176.083,16.690 176.824,15.720 177.730 C 14.751 178.635,13.469 179.764,12.872 180.239 L 11.785 181.102 11.796 193.584 C 11.804 202.606,11.946 207.027,12.309 209.532 C 12.585 211.438,12.815 213.817,12.818 214.818 C 12.822 215.819,12.962 216.638,13.130 216.638 C 13.298 216.638,13.547 218.120,13.683 219.931 C 13.818 221.742,14.051 223.224,14.199 223.224 C 14.347 223.224,14.577 224.469,14.710 225.990 C 14.843 227.512,15.081 228.838,15.240 228.936 C 15.400 229.034,15.638 230.051,15.771 231.196 C 15.904 232.340,16.135 233.352,16.285 233.445 C 16.434 233.537,16.664 234.471,16.795 235.519 C 16.926 236.567,17.167 237.507,17.331 237.608 C 17.495 237.710,17.736 238.648,17.867 239.694 C 17.997 240.739,18.224 241.594,18.371 241.594 C 18.518 241.594,18.744 242.293,18.871 243.146 C 18.999 244.000,19.237 244.780,19.398 244.880 C 19.560 244.980,19.800 245.841,19.931 246.794 C 20.062 247.747,20.301 248.527,20.462 248.527 C 20.623 248.527,20.860 249.229,20.989 250.087 C 21.117 250.945,21.361 251.646,21.530 251.646 C 21.699 251.646,21.837 251.846,21.837 252.089 C 21.837 252.927,23.168 253.669,25.101 253.911 C 26.165 254.044,27.036 254.275,27.036 254.425 C 27.036 254.575,27.972 254.807,29.116 254.939 C 30.260 255.072,31.196 255.303,31.196 255.453 C 31.196 255.603,32.051 255.833,33.097 255.964 C 34.142 256.094,35.076 256.328,35.172 256.483 C 35.268 256.638,36.206 256.872,37.257 257.003 C 38.308 257.135,39.168 257.372,39.168 257.530 C 39.168 257.688,40.104 257.926,41.248 258.059 C 42.392 258.192,43.328 258.426,43.328 258.579 C 43.328 258.732,44.263 258.966,45.407 259.099 C 46.551 259.232,47.487 259.481,47.487 259.653 C 47.487 259.825,47.924 259.965,48.458 259.965 C 48.991 259.965,49.576 260.104,49.757 260.273 C 49.938 260.443,50.945 260.750,51.993 260.955 C 55.518 261.646,57.837 262.227,58.093 262.484 C 59.086 263.477,63.073 261.401,63.083 259.886 C 63.084 259.747,63.952 258.780,65.011 257.738 C 67.032 255.749,67.782 255.586,68.151 257.057 C 68.266 257.513,68.498 257.886,68.668 257.886 C 68.838 257.886,68.977 258.124,68.977 258.416 C 68.977 258.708,69.211 259.037,69.497 259.147 C 69.783 259.256,70.017 259.621,70.017 259.956 C 70.017 260.291,70.329 260.962,70.711 261.446 C 71.092 261.931,71.404 262.498,71.404 262.706 C 71.404 262.915,71.557 263.085,71.744 263.085 C 71.931 263.085,72.179 263.464,72.295 263.926 C 72.411 264.389,72.726 264.852,72.995 264.955 C 73.264 265.059,73.484 265.382,73.484 265.674 C 73.484 265.966,73.629 266.205,73.807 266.205 C 73.985 266.205,74.217 266.477,74.323 266.811 C 74.429 267.145,74.876 267.808,75.317 268.284 C 76.395 269.450,76.727 270.364,76.072 270.364 C 75.792 270.364,75.563 270.520,75.563 270.711 C 75.563 270.901,75.324 271.057,75.032 271.057 C 74.741 271.057,74.398 271.330,74.272 271.664 C 74.146 271.997,73.839 272.476,73.590 272.728 C 73.341 272.980,73.137 273.409,73.137 273.682 C 73.137 273.954,72.981 274.177,72.790 274.177 C 72.588 274.177,72.444 275.332,72.444 276.950 C 72.444 278.475,72.583 279.723,72.753 279.723 C 72.923 279.723,73.167 280.144,73.297 280.658 C 73.426 281.173,73.911 281.945,74.374 282.375 C 75.215 283.155,75.512 284.229,74.886 284.229 C 74.704 284.229,74.452 284.775,74.327 285.442 C 74.202 286.109,73.981 286.655,73.836 286.655 C 73.691 286.655,73.470 287.294,73.345 288.076 C 73.044 289.959,72.313 290.733,71.552 289.973 C 71.253 289.673,70.785 289.428,70.513 289.428 C 70.240 289.428,70.017 289.272,70.017 289.081 C 70.017 288.891,69.822 288.730,69.584 288.723 C 69.346 288.717,68.527 288.410,67.764 288.042 C 67.002 287.673,66.105 287.367,65.771 287.360 C 65.438 287.354,65.165 287.192,65.165 287.002 C 65.165 286.811,64.970 286.654,64.731 286.653 C 64.493 286.652,63.863 286.424,63.330 286.146 C 62.798 285.868,61.823 285.540,61.164 285.416 C 60.505 285.293,59.965 285.053,59.965 284.883 C 59.965 284.714,59.497 284.575,58.925 284.575 L 57.886 284.575 57.886 287.002 C 57.886 288.336,57.753 289.428,57.592 289.428 C 57.430 289.428,57.126 291.651,56.917 294.367 C 56.294 302.439,56.104 303.413,54.842 304.983 C 54.228 305.747,53.726 306.537,53.726 306.739 C 53.726 306.941,53.606 307.106,53.459 307.106 C 53.312 307.106,52.808 307.808,52.340 308.666 C 51.871 309.523,51.367 310.225,51.220 310.225 C 51.073 310.225,50.952 310.420,50.951 310.659 C 50.950 310.897,50.731 311.510,50.464 312.022 C 50.197 312.533,49.866 313.469,49.729 314.101 C 49.592 314.734,49.304 315.363,49.090 315.499 C 48.830 315.664,48.700 317.480,48.700 320.970 C 48.700 324.461,48.830 326.277,49.090 326.442 C 49.304 326.578,49.590 327.197,49.724 327.816 C 49.858 328.436,50.095 328.943,50.250 328.943 C 50.405 328.943,50.637 329.364,50.766 329.878 C 50.895 330.393,51.380 331.166,51.844 331.595 C 52.307 332.025,52.686 332.528,52.686 332.714 C 52.686 333.492,57.707 337.955,58.582 337.955 C 58.771 337.955,58.925 338.075,58.925 338.223 C 58.925 338.733,64.032 341.075,65.146 341.075 C 65.537 341.075,65.858 341.231,65.858 341.421 C 65.858 341.634,67.533 341.768,70.191 341.768 C 72.574 341.768,74.523 341.629,74.523 341.461 C 74.523 341.292,75.225 341.048,76.083 340.919 C 76.941 340.791,77.643 340.551,77.643 340.388 C 77.643 340.224,78.111 339.987,78.683 339.861 C 79.255 339.736,79.723 339.502,79.723 339.341 C 79.723 339.181,80.191 338.947,80.763 338.821 C 81.334 338.696,81.802 338.483,81.802 338.349 C 81.802 338.214,82.262 337.833,82.823 337.501 C 83.385 337.170,84.556 336.161,85.427 335.260 C 86.297 334.359,87.397 333.231,87.872 332.752 C 88.347 332.273,88.735 331.766,88.735 331.625 C 88.735 330.981,90.241 329.972,91.503 329.770 C 92.268 329.648,92.894 329.429,92.894 329.285 C 92.894 329.141,93.752 328.915,94.801 328.784 C 95.849 328.653,96.707 328.422,96.707 328.269 C 96.707 328.117,97.487 327.889,98.440 327.762 C 99.393 327.636,100.173 327.400,100.173 327.238 C 100.173 327.076,101.031 326.836,102.080 326.705 C 103.128 326.574,103.986 326.343,103.986 326.192 C 103.986 326.041,104.721 325.817,105.619 325.694 C 108.988 325.232,109.890 324.327,108.406 322.900 C 107.977 322.488,107.247 321.612,106.785 320.954 C 106.322 320.296,105.737 319.633,105.485 319.480 C 105.233 319.328,105.026 319.037,105.026 318.833 C 105.026 318.630,104.414 317.869,103.665 317.143 C 101.633 315.170,101.332 314.455,102.419 314.182 C 102.900 314.062,103.293 313.836,103.293 313.681 C 103.293 313.527,103.761 313.297,104.333 313.172 C 104.905 313.046,105.373 312.812,105.373 312.652 C 105.373 312.491,105.841 312.257,106.412 312.132 C 106.984 312.006,107.452 311.760,107.452 311.584 C 107.452 311.409,107.770 311.265,108.158 311.265 C 108.546 311.265,109.260 311.005,109.746 310.687 C 110.569 310.147,110.693 310.147,111.607 310.687 C 112.145 311.005,112.922 311.265,113.335 311.265 C 113.747 311.265,114.405 311.437,114.797 311.647 C 115.293 311.912,115.737 311.921,116.248 311.675 C 116.653 311.481,117.517 311.230,118.167 311.117 C 119.007 310.973,119.836 310.386,121.025 309.096 C 121.946 308.097,122.700 307.457,122.702 307.675 C 122.703 307.892,123.131 308.178,123.653 308.309 C 124.176 308.440,124.683 308.652,124.780 308.780 C 125.052 309.137,127.520 310.225,128.059 310.225 C 128.323 310.225,128.590 310.352,128.654 310.507 C 128.757 310.757,131.292 311.794,134.835 313.034 C 135.503 313.268,136.540 313.667,137.141 313.922 C 137.742 314.176,138.551 314.385,138.940 314.385 C 139.329 314.385,139.738 314.532,139.849 314.711 C 139.960 314.891,140.751 315.143,141.607 315.271 C 142.463 315.400,143.242 315.634,143.340 315.791 C 143.437 315.949,144.254 316.184,145.155 316.315 C 146.056 316.445,146.950 316.674,147.140 316.822 C 147.331 316.971,148.267 317.197,149.220 317.324 C 150.173 317.451,151.343 317.699,151.820 317.875 C 152.707 318.203,154.567 318.533,160.659 319.442 C 167.548 320.470,169.479 320.614,179.203 320.825 C 203.303 321.348,222.633 317.739,240.836 309.318 C 242.302 308.640,244.437 307.693,245.581 307.213 C 249.764 305.459,259.827 300.091,261.525 298.707 C 261.716 298.551,263.456 297.375,265.391 296.093 C 267.327 294.810,269.408 293.371,270.016 292.894 C 271.851 291.456,275.378 288.587,275.563 288.383 C 275.659 288.277,276.161 287.865,276.681 287.467 C 283.311 282.382,293.896 271.147,299.487 263.258 C 300.433 261.924,301.364 260.643,301.557 260.413 C 301.749 260.183,301.906 259.827,301.906 259.622 C 301.906 259.418,302.140 259.161,302.426 259.051 C 302.712 258.941,302.946 258.645,302.946 258.393 C 302.946 258.141,303.141 257.722,303.380 257.462 C 303.931 256.860,304.568 255.869,305.111 254.766 C 305.346 254.289,305.735 253.693,305.975 253.441 C 306.216 253.190,306.412 252.761,306.412 252.488 C 306.412 252.216,306.556 251.993,306.732 251.993 C 306.907 251.993,307.153 251.525,307.279 250.953 C 307.405 250.381,307.639 249.913,307.799 249.913 C 307.959 249.913,308.193 249.445,308.319 248.873 C 308.445 248.302,308.678 247.834,308.839 247.834 C 308.999 247.834,309.233 247.366,309.359 246.794 C 309.484 246.222,309.718 245.754,309.879 245.754 C 310.039 245.754,310.273 245.286,310.399 244.714 C 310.524 244.142,310.758 243.674,310.919 243.674 C 311.079 243.674,311.313 243.206,311.438 242.634 C 311.564 242.062,311.810 241.594,311.986 241.594 C 312.161 241.594,312.310 241.321,312.316 240.988 C 312.322 240.654,312.556 240.079,312.836 239.708 C 313.116 239.338,313.345 238.675,313.345 238.235 C 313.345 237.795,313.501 237.435,313.692 237.435 C 313.882 237.435,314.038 237.184,314.038 236.877 C 314.038 236.278,314.508 236.300,318.024 237.068 C 319.741 237.443,319.764 237.436,320.704 236.314 C 321.226 235.691,322.045 234.763,322.525 234.251 C 323.004 233.739,323.397 233.119,323.397 232.874 C 323.397 232.626,323.608 232.731,323.874 233.112 C 324.192 233.566,324.437 235.481,324.606 238.821 C 324.746 241.586,324.981 244.003,325.128 244.194 C 325.276 244.385,325.509 246.880,325.646 249.740 C 325.784 252.600,326.055 255.134,326.249 255.373 C 326.653 255.869,333.795 256.003,333.795 255.514 C 333.795 255.353,336.242 255.120,339.232 254.997 C 342.223 254.873,344.757 254.630,344.865 254.457 C 344.973 254.283,345.802 254.030,346.707 253.894 C 347.613 253.758,348.354 253.524,348.354 253.373 C 348.354 253.222,349.133 252.991,350.086 252.860 C 351.039 252.729,351.901 252.489,352.001 252.327 C 352.101 252.165,352.881 251.928,353.734 251.800 C 354.588 251.672,355.286 251.450,355.286 251.305 C 355.286 251.161,356.066 250.939,357.019 250.813 C 357.972 250.686,358.752 250.443,358.752 250.273 C 358.752 250.103,359.610 249.856,360.659 249.725 C 361.707 249.594,362.565 249.354,362.565 249.192 C 362.565 249.030,363.347 248.794,364.303 248.667 C 366.218 248.413,366.690 247.715,366.220 245.834 C 366.090 245.313,365.829 243.640,365.640 242.114 C 365.451 240.589,365.199 239.107,365.080 238.821 C 364.960 238.536,364.667 236.898,364.427 235.182 C 364.187 233.466,363.740 230.503,363.434 228.596 C 363.128 226.690,362.792 224.389,362.688 223.484 C 362.583 222.578,362.376 221.837,362.226 221.837 C 362.077 221.837,361.841 220.316,361.702 218.458 C 361.563 216.599,361.334 215.000,361.192 214.905 C 360.543 214.467,360.446 210.045,361.081 209.803 C 361.787 209.533,362.367 209.100,363.186 208.232 C 363.501 207.899,363.901 207.626,364.075 207.626 C 364.249 207.626,364.729 207.275,365.142 206.846 C 365.554 206.417,366.430 205.687,367.088 205.225 C 367.746 204.762,368.409 204.178,368.561 203.925 C 368.714 203.673,368.998 203.466,369.193 203.466 C 369.895 203.466,370.522 202.466,370.748 200.988 C 370.875 200.158,371.096 199.324,371.239 199.133 C 371.383 198.943,371.613 197.773,371.750 196.534 C 371.888 195.295,372.127 194.123,372.282 193.931 C 372.436 193.739,372.673 192.023,372.808 190.118 C 372.943 188.214,373.194 186.477,373.366 186.260 C 373.538 186.042,373.713 182.046,373.754 177.380 L 373.830 168.896 372.444 167.535 C 371.681 166.786,370.433 165.404,369.671 164.463 C 367.970 162.363,359.816 154.246,359.408 154.246 C 359.245 154.246,357.961 153.076,356.555 151.646 C 355.148 150.217,353.885 149.047,353.747 149.047 C 353.610 149.047,352.796 148.345,351.938 147.487 C 351.080 146.629,350.240 145.927,350.071 145.927 C 349.902 145.927,349.233 145.420,348.586 144.801 C 346.797 143.089,345.126 141.769,344.726 141.753 C 344.529 141.745,343.985 141.277,343.517 140.713 C 343.049 140.149,342.531 139.688,342.366 139.688 C 342.200 139.688,341.861 139.493,341.612 139.255 C 341.363 139.016,340.814 138.588,340.391 138.302 C 339.969 138.016,339.302 137.509,338.909 137.175 C 338.517 136.841,338.063 136.568,337.902 136.568 C 337.740 136.568,337.320 136.295,336.967 135.962 C 335.864 134.918,334.838 134.142,334.562 134.142 C 334.416 134.142,334.029 133.830,333.703 133.449 C 333.015 132.646,331.484 132.542,330.493 133.231 C 330.117 133.493,329.302 133.817,328.683 133.952 C 328.063 134.087,327.556 134.341,327.556 134.516 C 327.556 134.692,327.166 134.835,326.690 134.835 C 326.213 134.835,325.823 134.692,325.823 134.516 C 325.823 134.341,325.355 134.094,324.783 133.969 C 324.211 133.843,323.744 133.597,323.744 133.421 C 323.744 133.246,323.579 133.102,323.378 133.102 C 323.047 133.102,321.593 132.509,318.718 131.200 C 316.319 130.109,315.124 129.636,314.766 129.636 C 314.556 129.636,314.385 129.482,314.385 129.294 C 314.385 129.105,313.761 128.851,312.998 128.729 C 312.236 128.607,311.612 128.379,311.612 128.221 C 311.612 128.063,311.066 127.832,310.399 127.707 C 309.731 127.582,309.185 127.342,309.185 127.175 C 309.185 127.008,308.562 126.772,307.799 126.650 C 307.036 126.528,306.412 126.299,306.412 126.141 C 306.412 125.984,305.867 125.752,305.199 125.627 C 303.344 125.279,303.747 124.890,306.239 124.623 C 307.478 124.490,308.492 124.258,308.492 124.107 C 308.492 123.956,309.584 123.725,310.919 123.594 C 312.253 123.462,313.345 123.227,313.345 123.070 C 313.345 122.913,314.357 122.676,315.594 122.544 C 316.831 122.411,317.921 122.177,318.016 122.024 C 318.111 121.870,319.046 121.638,320.094 121.507 C 321.142 121.376,322.076 121.144,322.170 120.992 C 322.265 120.840,323.125 120.611,324.082 120.484 C 325.040 120.357,325.823 120.121,325.823 119.959 C 325.823 119.797,326.681 119.557,327.730 119.426 C 328.778 119.295,329.636 119.063,329.636 118.911 C 329.636 118.758,330.416 118.530,331.369 118.404 C 332.322 118.277,333.102 118.041,333.102 117.878 C 333.102 117.716,333.804 117.478,334.662 117.349 C 335.520 117.220,336.222 116.969,336.222 116.790 C 336.222 116.611,336.651 116.464,337.175 116.462 C 337.699 116.461,338.547 116.242,339.058 115.975 C 339.570 115.708,340.505 115.379,341.138 115.244 C 341.770 115.109,342.444 114.878,342.634 114.731 C 342.825 114.585,343.488 114.356,344.107 114.224 C 344.727 114.091,345.234 113.839,345.234 113.664 C 345.234 113.488,345.541 113.345,345.917 113.345 C 346.292 113.345,347.189 113.051,347.910 112.691 C 348.630 112.332,349.727 111.826,350.347 111.567 C 350.966 111.308,351.473 110.990,351.473 110.861 C 351.473 110.733,351.941 110.524,352.513 110.399 C 353.085 110.273,353.553 110.044,353.553 109.889 C 353.553 109.734,353.943 109.509,354.419 109.390 C 354.896 109.270,355.286 109.032,355.286 108.860 C 355.286 108.688,355.754 108.445,356.326 108.319 C 356.898 108.193,357.366 107.942,357.366 107.761 C 357.366 107.579,357.639 107.328,357.972 107.202 C 358.306 107.076,359.020 106.535,359.559 105.999 C 360.098 105.464,360.683 105.026,360.859 105.026 C 361.200 105.026,362.565 103.767,362.565 103.452 C 362.565 103.348,362.891 102.919,363.290 102.499 C 363.688 102.078,364.329 101.070,364.714 100.260 L 365.414 98.787 369.796 98.789 C 372.205 98.791,375.214 98.890,376.482 99.010 L 378.788 99.227 379.020 101.087 C 379.148 102.110,379.397 102.946,379.574 102.946 C 379.751 102.946,379.896 103.123,379.896 103.339 C 379.896 103.941,383.124 106.984,384.078 107.282 C 384.542 107.427,385.033 107.720,385.169 107.932 C 385.329 108.183,386.947 108.319,389.774 108.319 C 392.599 108.319,394.218 108.183,394.379 107.932 C 394.516 107.720,395.012 107.426,395.482 107.279 C 396.693 106.900,399.107 104.376,399.591 102.981 C 400.347 100.804,399.890 96.014,398.926 96.014 C 398.754 96.014,398.614 95.840,398.614 95.626 C 398.614 95.122,396.039 92.548,395.535 92.548 C 395.322 92.548,395.147 92.392,395.147 92.201 C 395.147 92.010,394.952 91.853,394.714 91.852 C 394.476 91.851,393.813 91.596,393.241 91.285 C 391.997 90.609,385.574 90.400,385.168 91.023 C 385.033 91.231,384.493 91.506,383.969 91.634 C 383.445 91.763,383.016 92.021,383.016 92.208 C 383.016 92.395,382.789 92.548,382.512 92.548 C 382.236 92.548,381.489 93.083,380.853 93.738 L 379.698 94.928 372.518 94.724 C 366.833 94.563,365.338 94.423,365.338 94.054 C 365.338 93.797,365.182 93.588,364.991 93.588 C 364.801 93.588,364.645 93.265,364.645 92.870 C 364.645 91.699,359.823 85.615,358.894 85.615 C 358.800 85.615,358.388 85.303,357.979 84.922 C 357.570 84.541,356.797 84.035,356.261 83.798 C 355.725 83.560,355.286 83.261,355.286 83.132 C 355.286 83.003,354.818 82.795,354.246 82.669 C 353.674 82.543,353.206 82.304,353.206 82.137 C 353.206 81.970,352.621 81.726,351.906 81.595 C 351.192 81.463,350.512 81.211,350.397 81.033 C 350.281 80.855,349.540 80.623,348.750 80.517 C 347.960 80.411,347.314 80.199,347.314 80.045 C 347.314 79.891,346.573 79.658,345.667 79.527 C 344.762 79.396,343.863 79.164,343.671 79.012 C 343.478 78.860,342.308 78.626,341.071 78.491 C 339.834 78.356,338.655 78.115,338.451 77.954 C 338.248 77.794,336.332 77.557,334.193 77.427 C 332.055 77.297,330.223 77.058,330.123 76.897 C 330.023 76.735,325.027 76.603,319.020 76.603 L 308.099 76.603 308.337 72.877 C 308.468 70.828,308.712 69.003,308.880 68.821 C 309.048 68.640,309.188 66.145,309.191 63.276 C 309.197 57.568,309.246 57.364,310.726 56.993 C 311.283 56.853,312.139 56.530,312.629 56.274 C 313.118 56.019,313.713 55.809,313.951 55.808 C 314.190 55.807,314.385 55.668,314.385 55.499 C 314.385 55.330,315.087 55.086,315.945 54.957 C 316.802 54.829,317.504 54.595,317.504 54.438 C 317.504 54.280,318.206 54.046,319.064 53.918 C 319.922 53.789,320.624 53.548,320.624 53.383 C 320.624 53.218,321.482 52.976,322.530 52.845 C 323.579 52.714,324.437 52.484,324.437 52.334 C 324.437 52.184,325.373 51.953,326.516 51.820 C 327.660 51.687,328.596 51.451,328.596 51.295 C 328.596 51.140,329.805 50.901,331.282 50.764 C 332.760 50.627,334.047 50.394,334.143 50.246 C 334.536 49.639,337.771 49.736,337.891 50.358 C 337.954 50.686,338.150 50.953,338.327 50.953 C 338.504 50.953,338.648 51.170,338.648 51.435 C 338.648 52.157,342.335 55.761,343.329 56.010 C 343.805 56.130,344.194 56.365,344.194 56.533 C 344.194 56.700,344.818 56.937,345.581 57.059 C 346.343 57.181,346.967 57.417,346.967 57.583 C 346.967 57.750,348.917 57.886,351.300 57.886 C 353.683 57.886,355.633 57.750,355.633 57.585 C 355.633 57.419,356.279 57.197,357.069 57.091 C 357.859 56.985,358.602 56.743,358.719 56.553 C 358.836 56.363,359.360 56.100,359.882 55.969 C 360.405 55.838,360.832 55.602,360.832 55.445 C 360.832 55.288,361.183 55.049,361.612 54.914 C 362.041 54.779,363.094 53.919,363.951 53.004 C 366.086 50.726,366.255 50.500,366.555 49.540 C 366.700 49.078,366.978 48.598,367.173 48.472 C 368.506 47.617,367.393 37.435,365.966 37.435 C 365.811 37.435,365.685 37.219,365.685 36.955 C 365.685 36.359,363.198 34.080,361.940 33.524 C 361.426 33.296,360.799 32.914,360.547 32.673 C 360.295 32.432,359.801 32.236,359.450 32.236 C 359.098 32.236,358.745 32.041,358.665 31.802 C 358.471 31.220,347.756 31.178,347.388 31.759 C 347.252 31.973,346.633 32.259,346.014 32.393 C 345.394 32.527,344.887 32.764,344.887 32.919 C 344.887 33.074,344.501 33.297,344.029 33.416 C 343.002 33.674,339.173 37.366,338.838 38.423 C 338.708 38.833,338.463 39.168,338.294 39.168 C 338.125 39.168,337.884 39.714,337.759 40.381 C 337.634 41.049,337.393 41.594,337.223 41.594 C 337.054 41.594,336.915 42.530,336.915 43.674 L 336.915 45.754 335.355 45.754 C 334.497 45.754,333.795 45.890,333.795 46.056 C 333.795 46.222,332.550 46.466,331.029 46.599 C 329.507 46.732,328.181 46.970,328.083 47.130 C 327.985 47.289,326.968 47.527,325.824 47.660 C 324.680 47.793,323.744 48.022,323.744 48.170 C 323.744 48.317,322.964 48.541,322.010 48.667 C 321.057 48.794,320.277 49.028,320.277 49.187 C 320.277 49.347,319.504 49.580,318.558 49.705 C 317.613 49.831,316.757 50.067,316.656 50.231 C 316.555 50.394,315.924 50.631,315.255 50.756 C 314.586 50.882,314.038 51.114,314.038 51.271 C 314.038 51.429,313.414 51.658,312.652 51.780 C 311.889 51.901,311.265 52.155,311.265 52.344 C 311.265 52.532,310.992 52.687,310.659 52.688 C 310.325 52.690,309.623 52.914,309.099 53.188 C 308.162 53.676,308.146 53.667,308.146 52.666 C 308.146 52.105,308.007 51.646,307.838 51.646 C 307.669 51.646,307.426 50.945,307.297 50.087 C 307.168 49.229,306.929 48.527,306.765 48.527 C 306.602 48.527,306.365 48.059,306.239 47.487 C 306.114 46.915,305.880 46.447,305.719 46.447 C 305.559 46.447,305.325 45.979,305.199 45.407 C 305.074 44.835,304.827 44.367,304.652 44.367 C 304.476 44.367,304.333 44.132,304.333 43.844 C 304.333 43.556,304.021 43.054,303.640 42.727 C 303.258 42.401,302.946 42.003,302.946 41.843 C 302.946 41.499,298.631 37.088,298.295 37.088 C 298.167 37.088,297.641 36.695,297.125 36.214 C 296.609 35.733,295.524 35.017,294.714 34.623 C 293.904 34.229,293.241 33.832,293.241 33.741 C 293.241 33.421,295.769 31.196,296.149 31.181 C 296.361 31.173,296.916 30.705,297.384 30.141 C 297.852 29.577,298.380 29.116,298.558 29.116 C 298.735 29.116,299.218 28.765,299.630 28.336 C 300.043 27.907,300.918 27.178,301.576 26.715 C 302.235 26.253,302.898 25.668,303.050 25.416 C 303.444 24.764,304.477 24.847,305.975 25.650 C 306.687 26.031,307.535 26.343,307.860 26.343 C 308.185 26.343,308.548 26.499,308.666 26.690 C 308.946 27.144,315.664 27.144,315.945 26.690 C 316.062 26.499,316.470 26.343,316.851 26.343 C 317.775 26.343,320.624 25.028,320.624 24.601 C 320.624 24.416,320.846 24.263,321.116 24.263 C 321.736 24.263,324.783 21.247,324.783 20.634 C 324.783 20.383,325.017 20.088,325.303 19.979 C 325.589 19.869,325.823 19.540,325.823 19.248 C 325.823 18.956,325.970 18.718,326.149 18.718 C 326.328 18.718,326.580 18.014,326.709 17.153 C 326.838 16.293,327.081 15.504,327.250 15.400 C 327.647 15.154,327.652 9.359,327.254 9.359 C 327.088 9.359,326.852 8.735,326.730 7.972 C 326.608 7.210,326.354 6.586,326.166 6.586 C 325.977 6.586,325.823 6.350,325.823 6.062 C 325.823 5.775,325.511 5.272,325.130 4.946 C 324.749 4.619,324.437 4.232,324.437 4.086 C 324.437 3.620,323.259 2.426,322.800 2.426 C 322.556 2.426,322.357 2.273,322.357 2.086 C 322.357 1.899,321.967 1.648,321.490 1.529 C 321.014 1.409,320.624 1.197,320.624 1.057 C 320.624 0.094,310.826 -0.400,308.232 0.432 M318.544 3.734 C 324.968 6.703,326.050 15.168,320.652 20.217 C 313.297 27.097,302.426 23.412,302.426 14.038 C 302.426 5.868,311.127 0.305,318.544 3.734 M16.860 11.246 C 23.720 15.866,34.491 19.959,48.354 23.213 C 50.069 23.616,53.189 24.346,55.286 24.836 C 82.013 31.078,90.222 36.504,92.700 49.564 C 96.349 68.803,79.925 96.975,62.492 101.377 C 49.678 104.613,28.927 102.641,16.322 96.989 C 2.947 90.992,0.064 80.161,6.190 58.925 C 6.933 56.352,8.398 51.282,9.446 47.660 C 10.495 44.038,11.432 40.763,11.529 40.381 C 11.626 40.000,12.027 38.512,12.420 37.075 C 14.155 30.740,14.692 26.253,14.712 17.938 C 14.723 13.601,14.811 10.052,14.909 10.052 C 15.007 10.052,15.885 10.589,16.860 11.246 M159.424 22.124 C 163.460 24.288,161.886 29.983,157.252 29.983 C 153.815 29.983,151.985 26.103,154.109 23.318 C 155.560 21.417,157.354 21.014,159.424 22.124 M138.584 27.594 C 140.629 28.162,144.400 30.405,144.327 31.010 C 144.237 31.763,143.167 32.064,142.376 31.559 C 135.626 27.253,128.795 29.322,127.614 36.032 C 127.096 38.973,127.201 39.123,129.726 39.053 C 131.713 38.998,131.858 39.048,132.078 39.861 L 132.312 40.728 132.692 39.792 C 132.975 39.095,133.451 38.761,134.560 38.481 C 138.768 37.418,141.610 36.142,147.405 32.711 C 151.795 30.112,152.108 30.016,149.862 31.955 C 146.096 35.207,140.761 40.884,139.174 43.328 C 137.097 46.526,137.271 46.321,136.983 45.910 C 136.730 45.549,134.835 44.629,134.835 44.867 C 134.835 44.942,135.395 45.350,136.080 45.773 C 137.437 46.612,137.470 46.934,136.439 49.295 C 135.711 50.961,136.387 51.402,139.674 51.402 C 145.409 51.402,148.969 46.362,147.704 40.035 C 147.200 37.511,148.351 36.169,149.225 38.261 C 152.985 47.260,145.948 56.241,136.945 53.934 C 135.728 53.623,134.708 53.409,134.679 53.460 C 131.068 59.752,120.798 67.095,112.998 68.961 C 99.288 72.241,96.532 61.414,108.078 49.633 C 112.214 45.413,119.837 40.484,123.084 39.929 L 124.577 39.674 124.984 36.829 C 126.051 29.358,131.535 25.634,138.584 27.594 M226.549 30.881 C 228.645 32.912,230.483 37.266,231.549 42.721 C 231.763 43.817,231.983 44.714,232.038 44.714 C 232.094 44.714,234.227 43.717,236.780 42.499 C 267.464 27.855,295.011 30.452,303.055 48.749 C 305.463 54.224,306.349 64.706,305.073 72.617 C 303.854 80.181,301.820 89.145,301.122 90.035 C 300.935 90.273,300.918 90.469,301.084 90.469 C 303.529 90.481,310.264 92.072,312.825 93.244 C 323.904 98.313,315.079 106.569,299.183 106.007 L 295.934 105.893 293.461 112.043 C 292.101 115.425,290.846 118.194,290.672 118.195 C 290.498 118.196,288.704 116.594,286.685 114.635 C 283.098 111.152,278.511 107.207,275.737 105.218 L 274.350 104.224 275.720 105.664 C 277.068 107.082,277.139 108.617,275.806 107.510 C 275.542 107.291,275.237 107.201,275.128 107.310 C 275.019 107.419,276.203 108.620,277.759 109.978 C 281.468 113.215,287.528 119.173,287.322 119.380 C 287.232 119.469,285.759 119.079,284.048 118.513 C 278.844 116.792,267.866 114.714,269.314 115.724 C 270.267 116.390,269.427 116.483,266.063 116.086 C 264.215 115.868,262.608 115.786,262.490 115.904 C 262.372 116.022,262.760 116.118,263.351 116.118 C 263.942 116.118,264.834 116.273,265.332 116.462 C 265.831 116.652,267.050 116.957,268.041 117.141 C 269.033 117.324,270.936 117.717,272.270 118.013 C 273.605 118.309,275.633 118.750,276.776 118.993 L 278.856 119.436 278.962 121.266 L 279.067 123.096 280.405 121.633 L 281.742 120.170 282.951 120.744 C 283.616 121.059,284.283 121.317,284.433 121.317 C 284.746 121.317,299.996 126.999,302.080 127.892 C 302.842 128.219,304.012 128.692,304.679 128.943 C 306.526 129.637,308.942 130.661,309.614 131.035 C 309.945 131.219,310.374 131.369,310.566 131.369 C 310.883 131.369,314.784 133.058,316.152 133.787 C 316.457 133.949,318.250 134.738,320.138 135.540 C 322.026 136.342,324.194 137.282,324.957 137.628 C 325.719 137.974,326.946 138.501,327.684 138.799 C 328.890 139.286,329.002 139.435,328.805 140.294 C 328.685 140.819,328.359 142.496,328.080 144.021 C 327.540 146.974,326.827 150.718,326.178 154.006 C 325.960 155.112,325.845 156.438,325.923 156.952 C 326.022 157.595,326.082 157.433,326.118 156.433 C 326.146 155.634,326.326 154.884,326.516 154.766 C 326.707 154.648,326.865 154.210,326.868 153.792 C 326.876 152.722,327.734 150.380,328.015 150.661 C 328.381 151.026,328.290 153.487,327.903 153.726 C 327.712 153.844,327.556 154.486,327.556 155.154 C 327.556 157.171,328.151 156.147,328.416 153.672 C 328.552 152.398,328.788 151.109,328.940 150.808 C 329.092 150.506,329.486 148.700,329.814 146.794 C 330.143 144.887,330.626 142.392,330.888 141.248 C 331.150 140.104,331.399 138.643,331.443 138.001 C 331.563 136.243,332.127 136.321,335.080 138.504 C 336.566 139.603,338.328 140.895,338.995 141.374 C 346.525 146.783,356.308 155.546,366.638 166.133 L 370.537 170.129 370.536 174.579 C 370.535 182.567,369.886 188.683,368.024 198.239 L 367.591 200.464 363.685 203.525 C 359.082 207.131,359.330 207.070,358.651 204.766 C 358.356 203.765,358.102 203.297,358.087 203.726 C 358.032 205.261,356.672 204.258,356.672 202.683 C 356.672 202.138,356.545 201.771,356.390 201.867 C 356.235 201.963,356.237 203.025,356.395 204.227 C 356.833 207.553,358.321 217.777,358.921 221.576 C 359.583 225.771,360.469 231.350,361.688 238.995 C 361.992 240.901,362.333 243.183,362.446 244.065 L 362.652 245.669 360.095 246.431 C 358.689 246.849,357.149 247.323,356.672 247.484 C 356.196 247.645,354.246 248.241,352.340 248.810 C 350.433 249.379,347.782 250.182,346.447 250.596 C 345.113 251.009,343.007 251.415,341.768 251.498 C 340.529 251.581,337.350 251.816,334.704 252.019 C 332.058 252.222,329.781 252.260,329.646 252.104 C 329.371 251.787,328.424 242.378,327.890 234.662 C 327.699 231.898,327.465 229.246,327.371 228.769 C 327.234 228.077,327.673 227.345,329.556 225.130 C 330.852 223.605,333.742 220.126,335.978 217.400 C 338.316 214.548,340.114 212.634,340.210 212.894 C 340.302 213.142,340.420 216.620,340.473 220.624 C 340.526 224.627,340.582 222.054,340.597 214.905 C 340.619 204.189,340.565 202.598,340.288 205.847 C 339.973 209.548,339.376 210.664,339.336 207.626 C 339.323 206.636,339.256 206.524,338.968 207.016 C 338.775 207.349,338.642 207.817,338.673 208.056 C 338.832 209.272,338.555 210.091,337.629 211.145 C 337.069 211.783,336.328 212.638,335.983 213.046 C 320.329 231.520,318.406 233.663,317.652 233.473 C 316.977 233.304,309.274 231.885,306.153 231.356 C 304.786 231.124,304.734 230.605,305.893 228.769 C 306.369 228.015,306.759 227.297,306.759 227.175 C 306.759 227.053,307.289 226.075,307.937 225.002 C 309.816 221.888,311.267 219.084,311.238 218.623 C 311.221 218.367,311.130 218.402,311.009 218.710 C 310.898 218.992,310.365 219.835,309.823 220.582 C 309.282 221.330,308.839 222.152,308.839 222.409 C 308.839 222.666,308.662 222.877,308.447 222.877 C 308.013 222.877,308.269 220.481,308.740 220.132 C 309.126 219.846,311.021 215.931,310.854 215.764 C 310.778 215.688,310.332 216.361,309.864 217.258 C 309.395 218.156,308.895 218.943,308.752 219.006 C 308.609 219.070,308.492 219.292,308.492 219.499 C 308.492 219.706,308.278 220.122,308.017 220.423 C 307.756 220.724,307.116 221.750,306.595 222.704 C 306.074 223.657,305.262 225.061,304.790 225.823 C 304.319 226.586,303.469 227.969,302.902 228.896 C 301.933 230.481,301.805 230.568,300.762 230.349 C 300.152 230.221,298.406 229.881,296.880 229.594 C 295.355 229.308,293.016 228.865,291.681 228.610 C 290.347 228.356,287.929 227.902,286.308 227.602 C 284.688 227.302,279.619 226.341,275.043 225.466 C 270.468 224.592,265.400 223.640,263.782 223.351 C 260.105 222.693,259.971 222.581,260.085 220.247 C 260.199 217.914,260.066 217.916,258.379 220.270 C 256.799 222.476,257.343 222.382,249.314 221.834 C 246.498 221.642,240.529 221.333,236.049 221.147 C 226.813 220.764,209.700 219.845,205.026 219.481 L 201.906 219.237 201.719 214.313 C 201.616 211.605,201.421 209.278,201.286 209.143 C 201.151 209.007,201.040 209.365,201.040 209.936 C 201.040 211.532,200.566 211.651,200.113 210.170 C 199.739 208.946,199.705 209.122,199.680 212.371 C 199.649 216.532,200.081 216.104,194.481 217.522 C 189.725 218.725,189.464 218.912,191.090 219.938 C 192.233 220.659,193.583 220.540,198.354 219.299 C 199.261 219.063,199.307 219.110,199.307 220.282 C 199.307 221.808,199.161 221.765,205.026 221.976 C 207.695 222.071,213.778 222.324,218.544 222.537 C 227.467 222.937,232.800 222.903,231.196 222.457 C 230.719 222.324,227.717 222.114,224.523 221.989 C 218.125 221.740,216.597 221.144,222.357 221.144 C 224.359 221.144,225.997 221.275,225.997 221.435 C 225.997 221.596,229.361 221.828,233.473 221.952 C 241.720 222.200,244.853 222.832,238.128 222.891 C 235.570 222.913,234.390 223.032,234.835 223.224 C 235.217 223.387,236.620 223.528,237.955 223.536 C 244.344 223.574,256.854 224.687,261.698 225.648 C 264.463 226.197,273.588 227.988,281.976 229.629 C 290.364 231.270,299.489 233.067,302.253 233.622 C 305.017 234.178,308.020 234.735,308.925 234.860 C 309.831 234.985,310.572 235.117,310.572 235.154 C 310.572 235.429,306.660 244.590,305.898 246.101 C 294.983 267.725,275.614 287.368,251.792 300.971 C 246.579 303.948,239.495 307.452,238.691 307.452 C 238.458 307.452,238.119 307.594,237.938 307.768 C 237.258 308.419,224.648 312.398,218.718 313.833 C 190.119 320.753,156.869 318.452,131.196 307.778 C 127.005 306.036,121.664 303.347,121.664 302.979 C 121.664 301.696,117.536 299.156,115.425 299.139 C 114.088 299.129,111.341 297.426,104.228 292.201 C 99.632 288.825,99.919 289.235,101.136 287.781 C 102.047 286.693,102.128 286.668,103.464 287.041 C 110.724 289.069,116.440 279.400,110.225 275.604 L 109.359 275.075 110.139 275.948 C 111.116 277.043,111.133 277.643,110.185 277.643 C 109.581 277.643,109.495 277.781,109.701 278.423 C 110.842 281.983,109.277 284.229,105.657 284.229 C 102.701 284.229,99.732 281.182,100.337 278.770 L 100.572 277.835 99.821 278.514 C 99.103 279.165,99.051 279.167,98.616 278.572 C 97.327 276.809,97.670 281.160,99.024 283.751 C 99.592 284.838,98.737 287.002,97.740 287.002 C 96.997 287.002,86.902 276.730,86.112 275.170 C 85.254 273.478,83.456 271.544,82.434 271.214 C 82.114 271.111,80.617 269.356,79.107 267.315 C 75.335 262.216,74.580 261.059,71.947 256.354 L 69.653 252.255 70.514 251.171 C 70.987 250.575,72.161 249.232,73.122 248.188 C 75.228 245.901,75.213 246.619,73.310 239.285 C 72.452 235.979,71.750 233.186,71.750 233.078 C 71.750 232.970,72.179 233.182,72.704 233.549 C 73.738 234.273,85.610 241.248,85.809 241.248 C 85.875 241.248,87.485 242.187,89.385 243.335 C 92.791 245.393,92.862 245.417,94.341 245.047 C 95.166 244.840,96.776 244.454,97.920 244.189 C 100.123 243.679,110.362 241.071,114.731 239.907 C 116.161 239.527,119.515 238.649,122.184 237.956 C 124.853 237.264,128.128 236.405,129.463 236.048 C 131.886 235.400,138.229 233.969,138.681 233.969 C 138.812 233.969,139.016 234.352,139.133 234.821 C 139.472 236.171,142.255 241.920,143.993 244.859 C 144.866 246.336,145.581 247.687,145.581 247.862 C 145.581 248.037,145.698 248.180,145.841 248.181 C 145.984 248.181,146.522 248.922,147.037 249.827 C 148.275 252.005,153.197 258.291,156.640 262.093 C 159.044 264.747,159.430 265.352,159.637 266.798 C 159.962 269.057,161.649 274.097,162.955 276.709 C 164.211 279.222,168.129 285.269,168.501 285.269 C 168.903 285.269,173.166 281.041,173.831 279.983 C 174.160 279.458,174.581 279.029,174.765 279.029 C 175.055 279.029,178.026 281.257,178.510 281.837 C 178.995 282.420,180.231 282.672,181.629 282.474 C 182.487 282.353,182.994 282.230,182.756 282.201 C 182.095 282.122,182.239 280.835,182.929 280.655 C 183.263 280.568,182.912 280.477,182.149 280.453 C 181.118 280.420,180.363 280.090,179.203 279.163 C 178.345 278.477,177.287 277.633,176.851 277.287 L 176.060 276.658 177.457 273.944 C 178.226 272.452,178.849 271.075,178.842 270.884 C 178.828 270.519,175.956 268.284,175.501 268.284 C 175.355 268.284,175.582 268.527,176.006 268.824 C 176.430 269.121,176.776 269.628,176.776 269.950 C 176.776 270.592,173.209 276.757,172.089 278.051 C 171.706 278.494,170.947 279.441,170.404 280.156 C 169.044 281.944,168.871 281.859,166.866 278.419 C 162.938 271.676,160.996 264.942,161.226 258.865 C 161.326 256.221,160.553 254.213,159.746 255.020 C 159.398 255.368,159.226 259.861,159.548 260.183 C 159.682 260.318,159.792 259.354,159.792 258.042 C 159.792 255.949,159.854 255.719,160.299 256.165 C 160.693 256.559,160.760 257.228,160.598 259.160 L 160.389 261.648 159.333 260.893 C 158.752 260.478,157.799 259.605,157.215 258.952 C 156.630 258.300,155.989 257.598,155.790 257.392 C 154.887 256.464,149.713 249.502,148.299 247.314 C 143.181 239.390,140.235 232.272,138.265 223.069 C 137.900 221.363,137.416 219.853,137.190 219.713 C 136.963 219.573,137.394 219.523,138.146 219.602 C 146.564 220.489,149.757 220.875,150.780 221.130 C 151.447 221.296,152.695 221.536,153.553 221.663 C 154.411 221.789,155.581 222.031,156.153 222.200 C 156.724 222.369,158.069 222.762,159.141 223.072 L 161.089 223.637 162.433 222.243 C 163.173 221.476,164.634 220.421,165.680 219.897 C 166.812 219.331,167.380 218.878,167.084 218.779 C 166.810 218.688,166.526 218.793,166.453 219.012 C 166.380 219.231,166.136 219.411,165.911 219.411 C 165.685 219.411,164.919 219.723,164.208 220.104 C 162.622 220.954,161.715 221.014,162.008 220.249 C 162.124 219.947,162.218 219.586,162.218 219.446 C 162.218 219.306,162.842 218.841,163.604 218.413 C 164.367 217.984,165.134 217.365,165.310 217.036 C 165.640 216.420,168.727 204.863,169.517 201.284 C 169.959 199.284,170.429 198.504,170.668 199.371 C 170.737 199.622,171.863 203.128,173.171 207.164 L 175.549 214.501 176.704 214.636 C 177.339 214.710,177.904 214.684,177.961 214.578 C 178.051 214.407,173.488 199.154,172.822 197.400 C 172.677 197.019,172.353 196.161,172.101 195.494 C 171.345 193.487,170.173 190.513,169.848 189.775 C 169.539 189.075,167.686 184.544,164.781 177.386 C 163.910 175.240,163.064 173.172,162.901 172.790 C 162.738 172.409,161.789 170.147,160.792 167.764 C 158.753 162.888,158.840 163.055,158.505 163.390 C 158.370 163.525,158.453 163.948,158.690 164.328 C 158.928 164.708,159.030 165.169,158.917 165.352 C 158.571 165.911,157.715 165.722,157.672 165.078 C 157.651 164.744,157.511 165.017,157.363 165.685 C 157.214 166.352,156.824 167.834,156.495 168.977 C 156.167 170.121,155.777 171.603,155.630 172.270 C 155.483 172.938,155.107 174.653,154.795 176.083 C 154.483 177.513,154.144 178.956,154.041 179.289 C 153.937 179.623,153.993 179.896,154.165 179.896 C 154.336 179.896,154.757 178.687,155.099 177.210 C 155.960 173.498,156.298 172.673,157.056 172.432 C 157.837 172.184,157.933 171.577,157.192 171.577 C 156.869 171.577,156.672 171.250,156.672 170.711 C 156.672 170.234,156.819 169.844,156.997 169.844 C 157.176 169.844,157.371 169.337,157.432 168.718 L 157.542 167.591 158.285 169.201 C 158.693 170.087,159.098 171.257,159.183 171.801 C 159.268 172.345,159.273 172.595,159.193 172.357 C 159.113 172.119,158.812 171.924,158.525 171.924 C 158.237 171.924,158.058 172.041,158.128 172.184 C 158.198 172.327,159.012 174.003,159.936 175.910 C 161.340 178.804,161.667 179.262,161.917 178.683 C 162.125 178.201,162.153 178.346,162.007 179.159 C 161.862 179.970,161.916 180.256,162.181 180.092 C 162.414 179.948,162.565 180.135,162.565 180.569 C 162.565 180.961,162.709 181.282,162.884 181.282 C 163.060 181.282,163.310 181.767,163.440 182.359 C 163.570 182.951,164.036 184.160,164.477 185.045 C 164.917 185.931,165.990 188.190,166.861 190.066 L 168.443 193.477 167.927 195.438 C 167.643 196.517,166.332 201.786,165.014 207.145 C 161.794 220.238,161.989 219.601,160.995 220.252 C 160.187 220.781,159.941 220.782,157.618 220.257 C 150.658 218.685,144.774 217.858,138.562 217.579 C 135.622 217.447,135.182 217.500,135.183 217.986 C 135.185 219.014,136.539 226.494,137.073 228.423 C 138.166 232.375,136.807 233.201,134.129 230.212 C 132.142 227.993,132.222 227.975,132.306 230.635 L 132.376 232.848 130.746 233.260 C 129.850 233.487,128.336 233.882,127.383 234.139 C 126.430 234.396,123.700 235.100,121.317 235.703 C 118.934 236.306,116.532 236.943,115.979 237.117 C 114.477 237.592,114.351 237.547,112.510 235.865 C 110.504 234.033,110.595 234.007,110.902 236.325 C 111.192 238.513,111.609 238.202,106.646 239.498 C 101.791 240.766,95.093 242.540,94.046 242.836 C 93.531 242.981,92.815 242.727,91.793 242.037 C 90.419 241.109,81.802 235.783,79.980 234.735 C 79.553 234.489,76.486 232.615,73.166 230.571 L 67.130 226.854 66.662 224.605 C 66.405 223.369,65.876 220.719,65.487 218.718 C 65.098 216.716,64.566 213.986,64.304 212.652 C 64.042 211.317,63.571 208.666,63.258 206.759 C 62.945 204.853,62.466 202.045,62.193 200.520 C 61.921 198.995,61.688 196.967,61.676 196.014 C 61.657 194.491,61.612 194.386,61.301 195.147 C 61.060 195.738,61.063 196.565,61.309 197.747 C 61.508 198.700,61.775 200.926,61.903 202.694 C 62.031 204.461,62.271 205.991,62.437 206.094 C 62.856 206.353,62.816 208.319,62.392 208.319 C 62.201 208.319,62.045 207.938,62.045 207.473 C 62.045 207.007,61.889 206.530,61.698 206.412 C 61.508 206.295,61.352 205.615,61.352 204.902 C 61.352 204.188,61.207 203.457,61.030 203.276 C 60.853 203.094,60.635 202.400,60.546 201.733 C 60.457 201.066,60.432 201.300,60.490 202.253 C 60.594 203.952,61.072 207.178,62.229 213.975 C 62.547 215.846,62.727 217.458,62.629 217.556 C 62.530 217.655,59.746 216.333,56.441 214.619 C 46.717 209.574,44.906 208.667,44.560 208.666 C 44.147 208.665,46.786 210.294,49.052 211.438 C 49.996 211.915,50.976 212.500,51.232 212.738 C 51.487 212.977,51.919 213.172,52.191 213.172 C 52.463 213.172,52.686 213.328,52.686 213.518 C 52.686 213.709,52.904 213.865,53.169 213.865 C 53.435 213.865,53.749 214.118,53.868 214.427 C 54.039 214.875,53.924 214.944,53.298 214.770 C 52.866 214.651,52.123 214.472,51.646 214.374 L 50.780 214.195 51.596 214.552 C 52.045 214.749,52.825 215.197,53.329 215.549 C 53.834 215.901,56.274 217.250,58.752 218.546 C 61.231 219.843,63.302 220.936,63.354 220.976 C 63.407 221.015,63.760 222.668,64.138 224.649 C 64.845 228.353,64.887 228.429,67.207 230.156 C 68.156 230.862,71.874 245.218,71.275 245.863 C 71.060 246.096,69.325 247.999,67.419 250.093 C 65.513 252.186,63.227 254.679,62.339 255.633 C 61.450 256.586,60.415 257.750,60.038 258.220 L 59.353 259.074 43.108 255.006 C 34.173 252.768,26.590 250.941,26.256 250.945 C 25.923 250.950,25.347 250.650,24.976 250.279 C 24.264 249.567,24.064 248.999,21.646 240.815 C 21.351 239.814,20.725 237.435,20.256 235.529 C 19.787 233.622,19.256 231.516,19.075 230.849 C 16.432 221.084,14.650 203.292,14.997 190.121 C 15.208 182.111,15.074 182.612,17.549 180.589 C 18.598 179.731,19.722 178.795,20.045 178.510 C 21.032 177.637,25.096 174.243,26.540 173.084 C 32.037 168.678,34.221 166.982,38.239 164.001 C 48.740 156.210,55.963 151.315,56.482 151.636 C 56.707 151.775,56.864 153.930,56.893 157.299 C 56.919 160.291,57.046 165.234,57.177 168.284 L 57.414 173.830 57.502 168.977 C 57.650 160.871,58.459 158.479,58.674 165.511 C 58.733 167.418,58.833 165.585,58.896 161.438 C 58.960 157.292,59.032 152.950,59.055 151.789 C 59.107 149.259,58.778 149.578,65.660 145.387 C 68.459 143.682,71.169 142.016,71.683 141.685 C 72.197 141.353,72.851 140.975,73.137 140.844 C 74.476 140.230,76.299 138.922,76.097 138.720 C 75.973 138.596,75.764 138.646,75.631 138.832 C 74.997 139.717,71.057 141.267,71.057 140.631 C 71.057 140.187,71.366 139.915,73.310 138.641 C 74.965 137.557,74.003 137.845,71.554 139.168 C 68.771 140.671,68.923 140.682,67.957 138.908 C 64.668 132.869,62.611 128.732,60.589 124.090 L 58.248 118.718 56.767 118.785 C 55.952 118.822,54.740 119.009,54.073 119.202 C 53.406 119.394,51.924 119.817,50.780 120.142 C 42.361 122.534,36.418 126.208,34.323 130.314 C 33.918 131.108,33.348 131.725,33.009 131.737 C 31.878 131.778,27.556 132.358,26.603 132.597 L 25.650 132.836 25.650 130.867 C 25.650 123.868,34.978 114.681,48.776 108.089 C 53.710 105.732,53.663 105.739,54.679 107.193 C 55.108 107.807,55.459 108.146,55.459 107.947 C 55.459 107.748,55.230 107.282,54.950 106.912 C 54.160 105.868,54.265 105.789,56.759 105.551 C 63.155 104.940,67.912 103.416,71.928 100.690 C 74.978 98.621,75.245 98.551,73.310 100.328 C 72.357 101.203,71.065 102.171,70.438 102.478 C 69.154 103.108,69.124 103.509,70.403 102.951 C 72.320 102.114,77.677 98.315,79.017 96.842 C 79.887 95.886,80.320 95.655,80.949 95.813 C 81.395 95.925,81.857 95.860,81.975 95.669 C 82.093 95.477,83.078 95.321,84.163 95.321 C 88.171 95.320,95.137 93.491,98.404 91.580 L 99.928 90.689 100.791 91.692 C 101.532 92.555,101.619 92.588,101.410 91.928 C 101.272 91.495,101.313 91.161,101.504 91.161 C 101.690 91.161,101.766 90.872,101.674 90.519 C 101.558 90.075,101.833 89.669,102.567 89.205 C 103.948 88.331,107.072 85.313,109.121 82.874 C 110.014 81.810,110.940 80.733,111.179 80.480 C 111.714 79.911,111.718 79.642,111.210 78.527 C 110.075 76.036,112.152 72.304,115.084 71.564 C 116.129 71.300,117.646 70.890,118.454 70.653 C 122.780 69.385,124.245 76.633,120.386 80.212 C 119.337 81.184,116.767 81.911,114.937 81.754 C 113.357 81.618,113.268 81.731,112.021 85.442 C 110.711 89.342,110.102 93.138,110.280 96.295 C 110.371 97.903,110.297 98.662,110.062 98.526 C 108.630 97.696,105.776 95.622,105.232 95.016 C 104.496 94.196,104.366 94.161,103.680 94.595 C 103.293 94.840,103.388 95.144,104.165 96.163 L 105.129 97.428 104.124 98.489 C 102.571 100.130,99.278 102.361,95.760 104.155 C 91.951 106.098,91.815 105.176,96.965 112.278 C 98.097 113.839,104.307 121.260,104.668 121.483 C 105.164 121.790,105.117 122.622,104.593 122.798 C 104.354 122.878,104.559 122.883,105.047 122.810 C 105.535 122.737,106.315 122.829,106.780 123.015 C 107.384 123.256,107.452 123.359,107.019 123.375 C 106.685 123.387,106.412 123.553,106.412 123.744 C 106.412 123.934,106.247 124.090,106.044 124.090 C 105.436 124.090,101.806 125.838,102.003 126.035 C 102.103 126.136,102.474 126.057,102.826 125.859 C 103.178 125.662,104.246 125.175,105.199 124.777 C 106.153 124.378,107.244 123.920,107.626 123.758 C 108.007 123.597,109.333 123.113,110.572 122.684 C 111.811 122.254,112.973 121.771,113.154 121.610 C 113.335 121.449,113.725 121.316,114.021 121.315 C 114.316 121.314,115.005 121.080,115.551 120.795 C 116.917 120.083,117.463 120.145,117.864 121.057 C 118.052 121.486,118.533 122.383,118.933 123.050 C 122.913 129.698,126.372 135.387,126.517 135.529 C 126.616 135.624,127.007 136.298,127.386 137.027 C 127.766 137.756,128.278 138.522,128.525 138.729 C 128.781 138.944,128.707 138.598,128.352 137.924 C 128.010 137.274,127.613 136.690,127.470 136.626 C 127.327 136.563,127.210 136.350,127.210 136.154 C 127.210 135.958,126.453 134.529,125.528 132.977 C 124.603 131.425,123.746 129.922,123.624 129.636 C 123.501 129.350,123.248 128.882,123.060 128.596 C 122.873 128.310,121.984 126.828,121.086 125.303 C 120.187 123.778,119.347 122.452,119.218 122.357 C 119.089 122.262,118.864 121.794,118.718 121.317 C 118.571 120.841,118.303 120.355,118.122 120.239 C 117.940 120.122,118.117 119.942,118.515 119.838 C 118.994 119.713,119.237 119.813,119.237 120.136 C 119.237 120.405,119.377 120.624,119.546 120.624 C 119.716 120.624,119.949 120.998,120.064 121.455 C 120.248 122.187,122.814 126.412,123.681 127.410 C 123.859 127.615,124.113 128.122,124.244 128.536 C 124.376 128.950,124.629 129.289,124.807 129.289 C 124.985 129.289,125.130 129.460,125.130 129.668 C 125.130 129.876,125.442 130.443,125.823 130.928 C 127.081 132.527,126.547 131.341,124.437 127.847 C 123.293 125.954,122.357 124.322,122.357 124.221 C 122.357 124.121,121.655 122.953,120.797 121.627 C 119.939 120.301,119.237 119.089,119.237 118.934 C 119.237 118.144,117.931 117.491,117.033 117.833 C 115.844 118.284,115.848 118.687,117.038 118.388 C 117.636 118.238,118.059 118.316,118.246 118.611 C 118.680 119.296,118.601 119.714,118.111 119.319 C 116.909 118.349,114.889 118.480,111.714 119.736 C 109.996 120.415,108.352 120.971,108.059 120.971 C 107.576 120.971,104.112 117.120,101.791 114.001 L 100.860 112.751 103.376 110.677 C 109.858 105.337,112.592 103.558,113.424 104.141 C 114.553 104.932,114.787 104.809,114.551 103.551 L 114.339 102.423 119.648 99.249 C 125.060 96.014,130.793 93.029,134.835 91.342 C 136.075 90.825,137.556 90.190,138.128 89.932 C 145.455 86.618,158.361 83.007,168.284 81.493 C 177.516 80.085,180.380 79.913,194.714 79.905 C 208.097 79.897,209.012 79.857,209.012 79.289 C 209.012 78.842,209.308 78.675,210.139 78.653 L 211.265 78.623 210.252 78.320 C 209.020 77.952,196.887 76.950,193.659 76.950 C 192.380 76.950,191.334 76.826,191.334 76.674 C 191.334 75.727,204.733 63.410,211.525 58.114 L 214.558 55.748 214.558 53.022 C 214.558 37.632,221.083 25.583,226.549 30.881 M138.590 31.929 C 138.654 32.098,138.927 32.236,139.197 32.236 C 140.130 32.236,139.685 33.221,138.648 33.449 C 138.076 33.574,137.608 33.790,137.608 33.928 C 137.608 34.279,134.356 35.039,131.976 35.245 C 130.616 35.362,129.983 35.292,129.983 35.022 C 129.983 34.501,132.195 32.236,132.704 32.236 C 132.923 32.236,133.102 32.090,133.102 31.912 C 133.102 31.205,138.323 31.221,138.590 31.929 M62.912 33.934 C 55.344 36.852,50.951 41.547,48.909 48.896 C 48.106 51.784,48.007 53.226,48.518 54.570 C 49.021 55.893,49.567 55.646,49.567 54.094 C 49.567 44.568,57.947 35.290,67.025 34.765 C 78.635 34.095,85.551 41.087,85.608 53.553 C 85.618 55.665,85.791 57.598,85.995 57.886 C 86.265 58.266,86.309 57.864,86.157 56.388 C 86.037 55.220,86.082 54.453,86.263 54.565 C 87.595 55.388,86.870 48.117,85.178 43.674 C 82.004 35.343,71.347 30.681,62.912 33.934 M357.673 35.129 C 362.487 36.788,365.388 41.394,364.312 45.669 C 361.227 57.921,340.282 57.543,340.242 45.234 C 340.218 37.710,349.517 32.320,357.673 35.129 M145.927 42.634 C 145.927 43.790,145.773 44.714,145.581 44.714 C 145.390 44.714,145.234 45.049,145.234 45.459 C 145.234 46.375,143.195 48.416,141.973 48.723 C 141.479 48.847,141.075 49.088,141.075 49.258 C 141.075 49.428,140.841 49.567,140.555 49.567 C 140.269 49.567,140.035 49.411,140.035 49.220 C 140.035 49.029,140.184 48.873,140.366 48.873 C 140.548 48.873,140.799 48.328,140.924 47.660 C 141.049 46.993,141.280 46.447,141.436 46.447 C 141.593 46.447,141.829 46.108,141.960 45.694 C 142.220 44.875,142.242 44.844,144.012 42.808 C 144.675 42.045,145.222 41.226,145.226 40.988 C 145.256 39.392,145.927 40.968,145.927 42.634 M69.757 47.711 C 70.091 47.806,70.364 48.018,70.364 48.182 C 70.364 48.345,70.715 48.528,71.144 48.589 C 71.573 48.650,71.937 48.856,71.953 49.047 C 71.969 49.237,72.176 49.861,72.413 50.433 C 74.260 54.890,66.963 58.577,64.858 54.251 C 64.541 53.599,64.517 53.611,64.495 54.433 C 64.416 57.395,68.780 58.829,71.518 56.741 C 75.144 53.976,74.519 48.228,70.537 47.715 C 69.775 47.617,69.424 47.615,69.757 47.711 M68.284 51.532 C 68.284 52.042,68.011 52.766,67.678 53.143 C 67.089 53.807,67.094 53.815,67.851 53.418 C 68.547 53.053,69.075 50.607,68.458 50.607 C 68.362 50.607,68.284 51.023,68.284 51.532 M28.068 51.970 C 14.984 54.391,8.313 64.438,13.220 74.330 C 14.426 76.761,14.872 77.358,15.287 77.101 C 15.453 76.998,15.496 77.158,15.382 77.456 C 15.225 77.864,15.326 77.939,15.789 77.761 C 16.244 77.587,16.331 77.645,16.121 77.984 C 15.919 78.311,15.970 78.361,16.297 78.160 C 16.627 77.955,16.695 78.033,16.541 78.435 C 16.394 78.817,16.477 78.936,16.802 78.812 C 17.064 78.711,17.451 78.953,17.663 79.349 C 17.875 79.745,18.228 80.069,18.448 80.069 C 18.668 80.069,18.448 79.640,17.959 79.116 C 7.973 68.394,13.938 55.481,29.960 53.136 C 33.825 52.570,34.326 52.586,42.634 53.537 C 43.111 53.592,43.267 53.564,42.981 53.474 C 42.695 53.385,42.313 53.171,42.132 52.999 C 41.951 52.827,41.319 52.686,40.728 52.686 C 40.137 52.686,39.485 52.518,39.279 52.312 C 38.807 51.840,30.192 51.576,28.068 51.970 M265.733 57.712 C 265.842 57.998,266.056 58.232,266.208 58.232 C 267.024 58.232,267.665 62.936,266.917 63.431 C 266.539 63.682,265.697 65.291,265.784 65.598 C 265.825 65.741,265.741 65.827,265.598 65.789 C 265.455 65.751,264.560 66.222,263.610 66.837 C 259.571 69.450,252.285 69.372,249.931 66.691 C 249.333 66.010,248.873 65.705,248.873 65.988 C 248.873 67.639,253.309 69.766,256.846 69.811 C 264.914 69.913,270.537 63.658,266.896 58.631 C 265.822 57.149,265.383 56.802,265.733 57.712 M84.933 58.752 C 84.933 59.133,85.084 59.679,85.269 59.965 C 85.547 60.396,85.605 60.366,85.605 59.792 C 85.605 59.411,85.453 58.865,85.269 58.579 C 84.990 58.148,84.933 58.178,84.933 58.752 M114.743 59.999 C 114.146 60.971,113.711 61.930,113.778 62.130 C 113.845 62.331,114.357 61.620,114.917 60.550 L 115.935 58.606 118.366 58.488 L 120.797 58.370 118.314 58.301 L 115.831 58.232 114.743 59.999 M84.586 61.005 C 84.586 61.291,84.737 61.759,84.922 62.045 C 85.221 62.507,85.258 62.507,85.258 62.045 C 85.258 61.759,85.107 61.291,84.922 61.005 C 84.623 60.543,84.586 60.543,84.586 61.005 M111.620 61.203 C 111.605 61.874,112.857 64.151,113.104 63.904 C 113.456 63.552,113.399 62.664,113.039 62.886 C 112.871 62.990,112.485 62.570,112.181 61.954 C 111.876 61.337,111.624 60.999,111.620 61.203 M32.929 65.144 L 31.716 65.385 33.449 65.663 C 35.420 65.979,37.317 67.235,37.819 68.555 C 38.855 71.280,34.905 73.734,31.652 72.386 C 31.115 72.164,30.546 71.969,30.388 71.953 C 30.230 71.937,29.879 71.621,29.608 71.251 C 29.239 70.746,29.116 70.708,29.116 71.098 C 29.116 73.041,33.060 74.635,35.945 73.858 C 42.326 72.140,39.457 63.848,32.929 65.144 M283.009 67.890 C 283.157 68.149,283.110 68.465,282.905 68.592 C 282.686 68.727,282.652 69.017,282.823 69.292 C 283.044 69.651,283.171 69.579,283.359 68.988 C 283.508 68.519,283.435 68.058,283.172 67.816 C 282.841 67.510,282.803 67.527,283.009 67.890 M32.497 69.154 C 32.362 69.858,32.421 69.949,32.803 69.631 C 33.331 69.193,33.443 68.284,32.969 68.284 C 32.801 68.284,32.588 68.676,32.497 69.154 M282.039 69.883 C 282.206 70.318,282.144 70.402,281.808 70.194 C 281.513 70.012,281.432 70.045,281.581 70.286 C 281.709 70.493,281.655 70.761,281.461 70.880 C 281.268 71.000,281.109 70.950,281.109 70.769 C 281.109 70.588,280.156 71.359,278.990 72.482 C 277.824 73.605,276.694 74.526,276.477 74.529 C 276.259 74.532,276.315 74.700,276.603 74.905 C 277.021 75.204,276.970 75.243,276.343 75.106 C 275.914 75.012,275.563 75.076,275.563 75.249 C 275.563 75.422,275.290 75.576,274.957 75.591 C 274.476 75.612,274.457 75.660,274.866 75.820 C 275.196 75.950,274.883 76.172,274.000 76.436 C 272.933 76.756,272.753 76.909,273.211 77.106 C 274.886 77.826,283.613 70.402,282.153 69.500 C 281.949 69.374,281.903 69.530,282.039 69.883 M118.677 71.123 C 118.536 71.350,118.614 71.600,118.849 71.679 C 120.935 72.374,121.908 77.003,120.342 78.784 C 119.842 79.353,119.846 79.387,120.383 79.181 C 120.706 79.057,120.971 78.928,120.971 78.894 C 120.971 78.860,121.281 77.950,121.660 76.871 C 122.337 74.944,122.338 74.883,121.701 73.397 C 120.881 71.484,119.224 70.238,118.677 71.123 M279.908 72.582 C 279.221 73.269,278.555 73.830,278.428 73.830 C 278.300 73.830,278.802 73.209,279.543 72.450 C 280.284 71.691,280.950 71.129,281.023 71.202 C 281.096 71.275,280.594 71.896,279.908 72.582 M271.947 77.680 C 272.107 77.940,271.938 77.986,271.422 77.822 C 270.644 77.575,268.526 78.233,268.779 78.643 C 268.856 78.767,268.308 78.811,267.562 78.739 C 266.724 78.660,266.205 78.757,266.205 78.993 C 266.205 79.250,264.897 79.376,262.218 79.376 C 259.792 79.376,258.232 79.512,258.232 79.723 C 258.232 80.848,268.122 79.909,271.283 78.482 C 271.884 78.211,272.547 77.990,272.756 77.990 C 272.966 77.990,273.137 77.834,273.137 77.643 C 273.137 77.452,272.816 77.296,272.423 77.296 C 271.990 77.296,271.803 77.447,271.947 77.680 M212.392 78.927 C 212.821 79.010,213.523 79.010,213.951 78.927 C 214.380 78.845,214.029 78.777,213.172 78.777 C 212.314 78.777,211.963 78.845,212.392 78.927 M328.250 80.586 C 345.619 82.040,356.533 86.099,360.395 92.539 C 364.135 98.775,359.917 103.473,344.887 109.815 C 332.274 115.136,299.183 123.486,295.382 122.306 C 292.870 121.526,292.871 121.432,295.534 114.778 L 297.920 108.813 302.426 108.673 C 323.277 108.027,327.871 93.004,308.441 89.004 C 306.467 88.598,304.813 88.241,304.765 88.210 C 304.717 88.180,305.121 86.453,305.663 84.372 L 306.648 80.589 309.390 80.393 C 314.752 80.009,322.270 80.086,328.250 80.586 M331.542 85.269 C 329.526 85.630,331.663 85.644,333.969 85.285 C 335.614 85.028,335.632 85.015,334.315 85.018 C 333.553 85.019,332.305 85.132,331.542 85.269 M337.262 85.269 C 336.213 85.432,336.016 85.528,336.660 85.563 C 337.187 85.592,337.889 85.748,338.220 85.910 C 341.304 87.423,342.276 87.988,343.084 88.735 C 346.770 92.144,346.288 96.291,341.807 99.731 C 335.365 104.676,322.951 100.724,322.951 93.726 C 322.951 92.697,322.799 91.854,322.614 91.854 C 321.934 91.854,322.508 96.151,323.344 97.326 C 323.778 97.936,324.034 98.597,323.912 98.794 C 323.584 99.325,325.746 101.206,327.740 102.124 C 337.220 106.490,349.002 99.757,346.550 91.375 C 345.771 88.714,340.666 84.623,339.231 85.510 C 339.039 85.629,338.996 85.546,339.135 85.322 C 339.271 85.102,339.256 84.945,339.102 84.974 C 338.948 85.003,338.120 85.135,337.262 85.269 M327.591 86.558 C 326.049 87.318,323.043 90.337,323.078 91.091 C 323.100 91.571,323.142 91.584,323.306 91.161 C 323.612 90.371,326.630 87.360,327.123 87.354 C 327.361 87.351,327.556 87.208,327.556 87.036 C 327.556 86.864,328.141 86.569,328.856 86.379 C 329.571 86.189,329.844 86.021,329.463 86.006 C 329.081 85.990,328.239 86.239,327.591 86.558 M328.302 90.651 C 324.198 94.104,331.196 99.063,335.609 95.829 C 337.099 94.737,337.596 91.161,336.257 91.161 C 335.797 91.161,335.182 91.994,335.182 92.617 C 335.182 93.141,334.881 93.241,333.295 93.241 C 331.024 93.241,330.202 92.468,330.685 90.784 C 331.069 89.443,329.820 89.373,328.302 90.651 M391.328 94.309 C 395.681 95.312,397.943 99.820,395.621 102.865 C 391.723 107.975,381.821 104.817,382.414 98.652 C 382.754 95.114,386.627 93.226,391.328 94.309 M108.200 101.662 C 108.508 102.141,108.169 102.946,107.659 102.946 C 107.194 102.946,106.133 103.705,104.632 105.113 C 104.073 105.637,103.477 106.066,103.308 106.066 C 103.138 106.066,102.532 106.534,101.960 107.106 C 101.388 107.678,100.747 108.146,100.536 108.146 C 100.324 108.146,100.062 108.380,99.952 108.666 C 99.442 109.994,97.885 108.525,98.053 106.873 C 98.075 106.650,98.562 106.365,99.133 106.239 C 99.705 106.114,100.173 105.870,100.173 105.698 C 100.173 105.526,100.552 105.291,101.015 105.175 C 101.478 105.058,101.941 104.744,102.044 104.475 C 102.147 104.206,102.413 103.986,102.636 103.986 C 102.858 103.986,103.378 103.635,103.791 103.206 C 105.808 101.113,107.474 100.530,108.200 101.662 M210.665 108.743 C 211.288 108.821,212.224 108.819,212.745 108.740 C 213.265 108.661,212.756 108.598,211.612 108.600 C 210.468 108.602,210.042 108.666,210.665 108.743 M216.031 109.087 C 216.555 109.167,217.413 109.167,217.938 109.087 C 218.462 109.008,218.033 108.943,216.984 108.943 C 215.936 108.943,215.507 109.008,216.031 109.087 M221.410 109.783 C 222.033 109.860,222.969 109.859,223.490 109.780 C 224.011 109.701,223.501 109.638,222.357 109.639 C 221.213 109.641,220.787 109.706,221.410 109.783 M230.416 110.817 C 230.845 110.899,231.547 110.899,231.976 110.817 C 232.405 110.734,232.054 110.666,231.196 110.666 C 230.338 110.666,229.987 110.734,230.416 110.817 M251.733 113.930 C 252.067 114.018,252.613 114.018,252.946 113.930 C 253.280 113.843,253.007 113.772,252.340 113.772 C 251.672 113.772,251.399 113.843,251.733 113.930 M257.456 114.977 C 257.888 115.059,258.511 115.056,258.843 114.970 C 259.174 114.883,258.821 114.815,258.059 114.819 C 257.296 114.823,257.025 114.894,257.456 114.977 M266.898 115.078 C 267.576 115.516,268.284 115.516,268.284 115.078 C 268.284 114.887,267.855 114.734,267.331 114.737 C 266.588 114.741,266.493 114.816,266.898 115.078 M260.485 115.425 C 261.432 115.831,261.698 115.831,261.698 115.425 C 261.698 115.234,261.269 115.089,260.745 115.102 C 259.901 115.124,259.871 115.161,260.485 115.425 M83.970 118.024 C 83.973 118.787,84.044 119.058,84.127 118.627 C 84.210 118.196,84.207 117.572,84.120 117.240 C 84.034 116.909,83.966 117.262,83.970 118.024 M84.253 120.364 C 84.240 120.888,84.385 121.317,84.575 121.317 C 84.982 121.317,84.982 121.051,84.575 120.104 C 84.311 119.490,84.275 119.519,84.253 120.364 M85.103 123.431 C 85.191 124.498,85.498 126.039,85.785 126.854 C 86.073 127.670,86.308 128.683,86.308 129.106 C 86.308 129.529,86.634 130.169,87.031 130.529 L 87.754 131.183 87.225 129.803 C 86.748 128.558,86.049 126.060,85.237 122.704 C 85.002 121.728,84.975 121.871,85.103 123.431 M200.812 127.383 C 200.813 128.908,200.874 129.489,200.947 128.674 C 201.021 127.858,201.020 126.611,200.945 125.901 C 200.871 125.191,200.811 125.858,200.812 127.383 M72.444 127.665 C 72.444 128.014,75.342 130.666,78.576 133.276 C 78.812 133.466,79.255 133.833,79.560 134.090 C 79.865 134.348,80.196 134.478,80.294 134.379 C 80.532 134.142,79.501 133.150,77.805 131.984 C 76.516 131.099,75.736 130.448,73.397 128.301 C 72.873 127.820,72.444 127.534,72.444 127.665 M178.017 129.289 C 178.144 129.766,179.067 131.872,180.068 133.969 C 181.069 136.066,182.394 138.873,183.012 140.208 C 183.630 141.542,184.993 144.428,186.040 146.620 C 194.474 164.274,197.700 170.873,197.832 170.741 C 198.075 170.498,197.133 167.418,196.816 167.418 C 196.635 167.418,196.592 167.086,196.721 166.681 C 196.878 166.185,196.829 166.022,196.571 166.182 C 196.357 166.314,196.187 166.193,196.187 165.907 C 196.187 165.626,196.070 165.344,195.927 165.280 C 195.536 165.107,194.316 162.588,194.522 162.381 C 194.803 162.100,195.841 162.597,195.841 163.013 C 195.841 163.470,197.261 166.484,197.590 166.724 C 197.720 166.820,197.946 167.280,198.093 167.748 C 198.239 168.216,198.592 168.832,198.878 169.118 C 199.340 169.581,199.369 169.544,199.133 168.788 C 198.988 168.320,198.733 167.886,198.568 167.822 C 198.402 167.759,198.267 167.537,198.267 167.330 C 198.267 167.122,197.817 166.004,197.266 164.845 C 196.716 163.687,195.603 161.334,194.793 159.619 C 191.467 152.574,189.907 149.299,187.392 144.090 C 185.938 141.077,184.749 138.465,184.749 138.284 C 184.749 138.103,184.605 137.955,184.430 137.955 C 184.254 137.955,184.004 137.472,183.875 136.881 C 183.726 136.203,183.517 135.928,183.309 136.136 C 183.102 136.344,183.310 137.085,183.874 138.147 C 184.805 139.896,184.826 141.164,183.912 140.406 C 183.647 140.186,183.325 139.585,183.195 139.071 C 183.066 138.556,182.851 138.056,182.717 137.958 C 182.583 137.861,181.419 135.676,180.130 133.102 C 178.841 130.529,177.891 128.813,178.017 129.289 M87.435 132.450 C 86.815 132.629,86.308 132.927,86.308 133.112 C 86.308 133.297,86.099 133.449,85.842 133.449 C 85.103 133.449,84.298 134.569,84.223 135.702 C 84.121 137.269,84.191 137.608,84.620 137.608 C 84.880 137.608,84.939 137.157,84.795 136.262 C 84.546 134.701,84.665 134.563,87.554 133.086 C 89.565 132.057,89.526 131.847,87.435 132.450 M32.109 133.222 C 32.738 133.267,32.878 133.550,33.037 135.087 C 33.462 139.207,35.918 142.651,38.326 142.503 C 41.136 142.330,43.451 145.754,41.705 147.500 C 39.818 149.387,35.871 147.092,36.160 144.277 C 36.299 142.912,36.215 142.724,35.053 141.825 C 32.890 140.148,27.588 136.723,26.075 136.024 C 24.397 135.249,24.278 134.944,25.477 134.489 C 25.953 134.308,26.343 133.948,26.343 133.691 C 26.343 133.367,26.665 133.270,27.383 133.375 C 28.063 133.475,28.423 133.378,28.423 133.096 C 28.423 132.780,28.817 132.732,29.896 132.916 C 30.706 133.055,31.702 133.193,32.109 133.222 M182.371 134.142 C 182.371 134.428,182.505 134.974,182.669 135.355 C 182.857 135.792,182.967 135.856,182.967 135.529 C 182.967 135.243,182.833 134.697,182.669 134.315 C 182.481 133.878,182.371 133.814,182.371 134.142 M81.456 135.529 C 81.456 135.719,81.768 135.875,82.149 135.875 C 82.530 135.875,82.842 136.031,82.842 136.222 C 82.842 136.412,83.076 136.568,83.362 136.568 C 84.173 136.568,83.974 136.028,82.999 135.584 C 81.916 135.091,81.456 135.074,81.456 135.529 M329.809 137.794 C 328.364 138.456,327.515 138.442,328.402 137.771 C 328.773 137.491,329.474 137.274,329.962 137.290 C 330.847 137.318,330.846 137.319,329.809 137.794 M242.663 138.392 C 242.743 138.442,243.181 138.793,243.638 139.172 L 244.468 139.861 244.059 139.081 C 243.834 138.653,243.395 138.302,243.084 138.302 C 242.773 138.302,242.584 138.342,242.663 138.392 M130.923 141.075 C 130.796 141.360,130.525 142.530,130.320 143.674 C 130.116 144.818,129.861 146.183,129.753 146.707 C 129.645 147.234,129.710 147.660,129.899 147.660 C 130.086 147.660,130.350 146.687,130.484 145.497 C 130.619 144.308,130.884 143.147,131.074 142.919 C 131.264 142.690,131.360 142.065,131.287 141.529 C 131.195 140.856,131.083 140.715,130.923 141.075 M40.751 146.807 C 40.188 147.666,40.191 147.677,40.884 147.244 C 41.275 147.000,41.594 146.604,41.594 146.364 C 41.594 145.720,41.395 145.825,40.751 146.807 M129.181 149.116 C 129.077 149.745,128.885 150.689,128.754 151.213 C 128.613 151.777,128.657 152.166,128.862 152.166 C 129.053 152.166,129.318 151.295,129.451 150.231 C 129.712 148.142,129.491 147.232,129.181 149.116 M271.924 156.184 C 270.399 159.310,268.959 161.869,268.724 161.870 C 268.489 161.871,268.196 162.278,268.071 162.774 C 267.855 163.636,267.646 163.479,263.339 159.221 C 258.099 154.040,257.807 154.000,262.640 159.124 C 269.461 166.357,277.838 174.595,273.722 170.022 C 273.265 169.514,273.151 169.017,273.305 168.194 C 273.493 167.186,273.328 166.865,271.774 165.222 L 270.032 163.380 271.584 159.852 C 272.438 157.911,273.137 156.012,273.137 155.631 C 273.137 155.251,273.288 154.939,273.473 154.939 C 273.657 154.939,273.719 154.705,273.609 154.419 C 273.499 154.133,273.550 153.899,273.721 153.899 C 274.009 153.899,275.014 150.803,274.795 150.593 C 274.741 150.542,273.449 153.058,271.924 156.184 M128.330 153.899 C 128.330 154.567,128.401 154.840,128.489 154.506 C 128.576 154.172,128.576 153.627,128.489 153.293 C 128.401 152.959,128.330 153.232,128.330 153.899 M58.579 154.329 C 58.579 154.861,57.899 154.572,57.531 153.884 C 57.180 153.229,57.206 153.209,57.865 153.620 C 58.258 153.866,58.579 154.185,58.579 154.329 M127.816 155.486 C 127.673 155.630,127.556 156.065,127.556 156.453 C 127.556 156.963,127.661 157.053,127.935 156.779 C 128.144 156.570,128.261 156.135,128.195 155.812 C 128.130 155.488,127.959 155.342,127.816 155.486 M327.257 157.648 C 327.231 158.281,327.065 159.068,326.888 159.399 C 326.711 159.729,326.485 161.006,326.385 162.235 C 326.236 164.063,326.259 164.218,326.511 163.085 C 327.399 159.090,327.585 157.938,327.451 157.252 C 327.353 156.751,327.288 156.884,327.257 157.648 M127.290 158.752 C 127.290 159.419,127.361 159.692,127.449 159.359 C 127.536 159.025,127.536 158.479,127.449 158.146 C 127.361 157.812,127.290 158.085,127.290 158.752 M203.893 159.099 C 203.893 159.766,203.965 160.039,204.052 159.705 C 204.139 159.372,204.139 158.826,204.052 158.492 C 203.965 158.159,203.893 158.432,203.893 159.099 M325.329 158.855 C 325.174 159.388,325.143 159.921,325.262 160.039 C 325.650 160.427,325.878 159.874,325.743 158.871 L 325.611 157.886 325.329 158.855 M265.511 159.103 C 265.511 159.317,266.056 160.066,266.721 160.768 C 267.387 161.471,267.932 161.889,267.933 161.698 C 267.934 161.508,267.389 160.758,266.723 160.033 C 266.056 159.307,265.511 158.889,265.511 159.103 M126.776 160.339 C 126.633 160.483,126.516 160.918,126.516 161.306 C 126.516 161.816,126.621 161.906,126.896 161.631 C 127.104 161.423,127.221 160.988,127.156 160.664 C 127.090 160.341,126.919 160.194,126.776 160.339 M324.871 161.698 C 324.875 162.461,324.946 162.732,325.029 162.301 C 325.111 161.870,325.108 161.246,325.022 160.915 C 324.935 160.583,324.867 160.936,324.871 161.698 M126.250 163.605 C 126.250 164.272,126.322 164.545,126.409 164.211 C 126.496 163.878,126.496 163.332,126.409 162.998 C 126.322 162.665,126.250 162.938,126.250 163.605 M321.664 164.608 C 321.664 164.970,322.513 165.339,323.339 165.336 C 323.695 165.335,323.537 165.135,322.924 164.816 C 321.765 164.211,321.664 164.195,321.664 164.608 M208.760 165.338 C 209.245 165.719,209.793 166.031,209.978 166.031 C 210.162 166.031,210.508 166.265,210.745 166.551 C 210.983 166.837,211.335 167.071,211.528 167.071 C 211.721 167.071,211.482 166.759,210.997 166.378 C 210.513 165.997,210.012 165.685,209.886 165.685 C 209.759 165.685,209.422 165.451,209.136 165.165 C 208.850 164.879,208.450 164.645,208.247 164.645 C 208.045 164.645,208.275 164.957,208.760 165.338 M125.737 165.191 C 125.594 165.336,125.477 165.771,125.477 166.158 C 125.477 166.668,125.581 166.758,125.856 166.484 C 126.064 166.275,126.181 165.840,126.116 165.517 C 126.050 165.194,125.880 165.047,125.737 165.191 M125.177 168.350 C 125.151 168.959,124.986 169.545,124.811 169.654 C 124.635 169.762,124.383 170.864,124.250 172.101 C 124.118 173.338,123.872 174.350,123.703 174.350 C 123.535 174.350,123.397 174.649,123.397 175.015 C 123.397 175.381,123.181 176.590,122.917 177.702 C 121.702 182.818,121.330 184.723,121.167 186.655 C 120.930 189.479,121.368 187.829,123.191 179.029 C 123.427 177.886,123.719 176.716,123.838 176.430 C 123.957 176.144,124.207 174.974,124.393 173.830 C 124.579 172.686,124.906 171.059,125.119 170.214 C 125.333 169.370,125.444 168.356,125.366 167.961 C 125.276 167.507,125.207 167.650,125.177 168.350 M201.473 170.100 C 202.569 170.169,204.363 170.169,205.459 170.100 C 206.555 170.031,205.659 169.975,203.466 169.975 C 201.274 169.975,200.377 170.031,201.473 170.100 M208.617 170.153 C 209.047 170.426,210.399 170.292,210.399 169.977 C 210.399 169.904,209.892 169.846,209.272 169.849 C 208.506 169.853,208.297 169.950,208.617 170.153 M238.827 171.494 C 238.838 172.036,239.452 172.696,239.829 172.570 C 240.068 172.490,239.947 172.201,239.523 171.838 C 239.137 171.508,238.824 171.353,238.827 171.494 M201.560 171.944 C 202.322 172.101,208.562 172.214,215.425 172.194 C 222.775 172.173,226.835 172.057,225.303 171.913 C 221.581 171.562,199.849 171.590,201.560 171.944 M59.393 174.697 C 59.393 176.317,59.453 176.980,59.526 176.170 C 59.599 175.360,59.599 174.034,59.526 173.224 C 59.453 172.413,59.393 173.076,59.393 174.697 M275.651 173.830 C 275.655 174.593,275.726 174.864,275.808 174.433 C 275.891 174.002,275.888 173.378,275.801 173.046 C 275.715 172.715,275.647 173.068,275.651 173.830 M58.340 184.922 C 58.342 186.066,58.406 186.492,58.483 185.869 C 58.561 185.246,58.559 184.310,58.480 183.789 C 58.401 183.268,58.338 183.778,58.340 184.922 M60.416 187.522 C 60.416 188.570,60.481 188.999,60.560 188.475 C 60.640 187.951,60.640 187.093,60.560 186.568 C 60.481 186.044,60.416 186.473,60.416 187.522 M87.096 187.868 C 87.096 188.726,87.164 189.077,87.246 188.648 C 87.329 188.219,87.329 187.517,87.246 187.088 C 87.164 186.659,87.096 187.010,87.096 187.868 M276.004 187.868 C 276.004 188.726,276.072 189.077,276.155 188.648 C 276.237 188.219,276.237 187.517,276.155 187.088 C 276.072 186.659,276.004 187.010,276.004 187.868 M59.013 190.121 C 59.017 190.884,59.088 191.155,59.171 190.724 C 59.254 190.293,59.250 189.669,59.164 189.337 C 59.077 189.006,59.009 189.359,59.013 190.121 M120.537 189.108 C 120.394 189.252,120.282 189.773,120.288 190.266 C 120.297 191.051,120.342 191.085,120.658 190.544 C 121.053 189.866,120.954 188.688,120.537 189.108 M274.627 190.641 C 274.627 191.690,274.692 192.119,274.772 191.594 C 274.851 191.070,274.851 190.212,274.772 189.688 C 274.692 189.164,274.627 189.593,274.627 190.641 M89.181 190.815 C 89.183 191.768,89.251 192.117,89.330 191.590 C 89.410 191.063,89.408 190.283,89.325 189.857 C 89.243 189.430,89.178 189.861,89.181 190.815 M60.746 192.201 C 60.750 192.964,60.821 193.235,60.904 192.804 C 60.987 192.372,60.983 191.749,60.897 191.417 C 60.810 191.086,60.742 191.438,60.746 192.201 M59.376 194.454 C 59.376 195.503,59.441 195.932,59.520 195.407 C 59.600 194.883,59.600 194.025,59.520 193.501 C 59.441 192.977,59.376 193.406,59.376 194.454 M275.651 194.974 C 275.655 195.737,275.726 196.008,275.808 195.577 C 275.891 195.145,275.888 194.521,275.801 194.190 C 275.715 193.859,275.647 194.211,275.651 194.974 M201.156 197.574 C 201.156 199.003,201.218 199.588,201.292 198.873 C 201.367 198.159,201.367 196.989,201.292 196.274 C 201.218 195.559,201.156 196.144,201.156 197.574 M355.019 195.905 C 355.191 196.423,355.979 196.709,355.979 196.253 C 355.979 196.067,355.732 195.820,355.430 195.704 C 355.093 195.575,354.934 195.652,355.019 195.905 M59.840 196.802 C 59.749 196.950,59.802 197.613,59.958 198.275 L 60.241 199.480 60.276 198.007 C 60.311 196.583,60.187 196.241,59.840 196.802 M355.720 199.480 C 355.724 200.243,355.795 200.514,355.878 200.083 C 355.961 199.651,355.957 199.028,355.871 198.696 C 355.784 198.365,355.716 198.718,355.720 199.480 M338.415 200.867 C 338.417 202.201,338.479 202.704,338.555 201.985 C 338.630 201.266,338.628 200.174,338.552 199.559 C 338.475 198.944,338.414 199.532,338.415 200.867 M91.269 215.771 C 91.271 216.915,91.335 217.341,91.412 216.718 C 91.490 216.095,91.488 215.159,91.409 214.639 C 91.330 214.118,91.267 214.627,91.269 215.771 M118.549 215.656 C 118.546 215.783,119.168 216.556,119.931 217.373 C 120.693 218.191,121.317 218.757,121.317 218.631 C 121.317 218.326,118.554 215.357,118.549 215.656 M89.802 218.264 C 89.787 219.063,89.898 219.793,90.049 219.886 C 90.200 219.979,90.266 219.481,90.197 218.780 C 90.008 216.862,89.833 216.633,89.802 218.264 M139.515 218.718 C 139.636 218.913,139.352 219.064,138.862 219.064 C 138.386 219.064,137.899 218.908,137.782 218.718 C 137.661 218.522,137.945 218.371,138.434 218.371 C 138.911 218.371,139.397 218.527,139.515 218.718 M305.938 226.913 L 305.421 228.596 305.397 227.296 C 305.383 226.581,305.529 225.997,305.719 225.997 C 305.910 225.997,306.066 225.737,306.066 225.419 C 306.066 225.101,306.153 224.929,306.260 225.036 C 306.367 225.143,306.222 225.987,305.938 226.913 M195.494 238.761 C 195.494 238.962,195.643 239.219,195.825 239.332 C 197.120 240.132,195.610 240.485,194.265 239.697 C 191.574 238.120,192.218 238.769,196.750 242.203 C 203.785 247.532,208.058 250.986,212.019 254.547 C 213.656 256.017,213.714 256.629,212.421 258.752 C 211.570 260.150,211.613 260.385,212.855 261.092 C 214.290 261.909,214.558 261.860,214.558 260.779 C 214.558 259.630,215.623 257.352,219.151 250.953 C 220.675 248.189,222.394 245.069,222.971 244.021 C 223.548 242.972,224.188 242.006,224.392 241.873 C 225.087 241.422,221.996 240.541,215.425 239.317 C 211.983 238.676,199.991 238.518,198.094 239.089 C 197.336 239.317,196.842 239.266,196.274 238.899 C 195.813 238.601,195.494 238.545,195.494 238.761 M215.425 241.727 C 216.759 241.998,218.436 242.320,219.151 242.442 C 220.071 242.600,220.444 242.838,220.429 243.257 C 220.398 244.095,214.460 254.246,214.000 254.246 C 213.791 254.246,212.156 252.862,210.366 251.171 C 207.066 248.051,200.641 242.726,199.779 242.395 C 196.217 241.028,209.237 240.473,215.425 241.727 M184.402 248.891 C 184.402 249.025,184.636 249.329,184.922 249.567 C 185.208 249.804,185.442 250.291,185.442 250.649 C 185.442 251.017,185.685 251.300,186.002 251.300 C 186.517 251.300,186.517 251.232,186.002 250.445 C 185.302 249.377,185.304 249.301,186.049 249.139 C 186.405 249.062,186.191 248.933,185.529 248.827 C 184.909 248.728,184.402 248.757,184.402 248.891 M220.491 267.022 C 220.266 267.293,219.658 267.602,219.140 267.708 C 218.621 267.813,216.638 268.223,214.731 268.618 C 212.482 269.083,209.676 269.364,206.739 269.416 C 202.290 269.496,202.216 269.510,202.356 270.257 C 202.585 271.472,203.573 272.171,204.544 271.803 C 205.000 271.631,206.776 271.305,208.492 271.079 C 216.423 270.034,223.770 267.484,221.261 266.648 C 221.063 266.582,220.717 266.750,220.491 267.022 M81.372 273.828 C 85.721 276.480,84.030 283.238,79.367 281.841 C 75.949 280.817,74.640 275.499,77.392 273.821 C 78.810 272.956,79.945 272.958,81.372 273.828 M89.187 283.969 C 90.405 285.160,92.206 286.883,93.188 287.796 C 94.992 289.474,95.332 290.205,94.541 290.711 C 94.302 290.863,93.729 291.534,93.267 292.201 C 92.804 292.868,92.219 293.539,91.967 293.691 C 91.714 293.844,91.508 294.138,91.508 294.345 C 91.508 294.552,91.136 295.066,90.682 295.487 C 90.227 295.908,89.754 296.574,89.629 296.968 C 89.504 297.361,89.174 297.770,88.895 297.877 C 88.616 297.984,88.388 298.239,88.388 298.444 C 88.388 300.081,86.423 300.374,85.063 298.940 C 84.664 298.519,84.015 298.072,83.622 297.948 C 83.228 297.823,82.819 297.493,82.712 297.214 C 82.605 296.935,82.335 296.707,82.113 296.707 C 81.891 296.707,81.364 296.335,80.943 295.881 C 80.522 295.427,79.841 294.948,79.430 294.818 C 79.019 294.687,78.683 294.435,78.683 294.257 C 78.683 294.080,78.444 293.934,78.152 293.934 C 77.860 293.934,77.531 293.700,77.422 293.414 C 77.312 293.128,76.993 292.894,76.712 292.894 C 76.180 292.894,76.355 291.054,76.959 290.295 C 77.110 290.104,77.344 289.363,77.477 288.648 C 77.611 287.933,77.848 287.348,78.004 287.348 C 78.160 287.348,78.338 286.997,78.399 286.568 C 78.498 285.873,78.759 285.767,80.827 285.589 C 83.262 285.380,83.621 285.194,85.602 283.114 C 86.276 282.406,86.861 281.821,86.900 281.814 C 86.939 281.808,87.968 282.777,89.187 283.969 M67.879 291.930 C 78.975 297.457,90.404 306.747,100.119 318.135 C 104.165 322.878,104.138 322.794,101.832 323.372 C 100.824 323.625,99.376 324.025,98.614 324.261 C 97.851 324.497,95.979 325.040,94.454 325.468 C 92.929 325.895,90.979 326.467,90.121 326.739 C 89.263 327.010,88.172 327.188,87.695 327.134 C 87.012 327.057,86.828 327.192,86.828 327.773 C 86.828 328.721,84.079 332.269,82.113 333.858 C 73.894 340.501,63.879 339.643,56.256 331.641 C 50.182 325.265,50.176 317.787,56.239 308.941 C 58.653 305.419,58.665 305.413,60.272 306.804 C 63.004 309.170,63.514 309.482,63.969 309.061 C 64.475 308.591,63.925 308.111,63.199 308.390 C 62.888 308.509,62.799 308.390,62.935 308.037 C 63.074 307.675,62.574 307.082,61.367 306.179 L 59.596 304.853 59.771 301.906 C 59.899 299.744,60.744 290.872,60.988 289.131 C 61.041 288.748,63.482 289.739,67.879 291.930 M100.487 293.876 C 101.021 294.385,101.807 295.035,102.234 295.321 C 102.956 295.804,103.921 296.547,104.925 297.394 C 105.155 297.588,105.511 297.747,105.715 297.747 C 105.920 297.747,106.172 297.967,106.275 298.236 C 106.378 298.504,106.841 298.819,107.304 298.935 C 107.767 299.052,108.146 299.300,108.146 299.487 C 108.146 299.674,108.370 299.827,108.645 299.827 C 109.505 299.827,109.573 300.436,108.848 301.626 C 108.360 302.426,108.148 303.379,108.147 304.775 C 108.146 306.602,108.068 306.806,107.260 307.113 C 105.826 307.658,102.441 309.329,102.250 309.587 C 102.152 309.717,101.645 309.931,101.123 310.062 C 100.601 310.193,100.173 310.423,100.173 310.572 C 100.173 310.721,99.779 310.942,99.298 311.063 C 98.528 311.256,97.926 310.780,94.296 307.107 L 90.169 302.931 91.012 302.021 C 91.475 301.521,91.854 300.971,91.854 300.799 C 91.854 300.627,92.244 300.125,92.721 299.684 C 93.198 299.242,93.588 298.699,93.588 298.476 C 93.588 298.254,93.816 297.984,94.094 297.877 C 94.373 297.770,94.698 297.377,94.816 297.004 C 94.935 296.631,95.448 295.886,95.956 295.350 C 96.465 294.813,97.177 293.960,97.540 293.454 C 98.312 292.379,99.019 292.480,100.487 293.876 M117.169 302.432 C 119.841 303.814,119.573 307.055,116.722 307.823 C 112.617 308.928,109.655 304.342,113.172 302.325 C 114.149 301.765,115.973 301.814,117.169 302.432 M63.121 311.777 C 62.492 312.814,62.059 313.864,62.157 314.110 C 62.302 314.472,62.342 314.471,62.364 314.104 C 62.379 313.855,62.530 313.736,62.700 313.841 C 63.062 314.065,64.820 311.868,64.813 311.202 C 64.796 309.802,64.194 310.007,63.121 311.777 M80.780 323.008 C 80.550 323.563,79.740 324.518,78.979 325.129 C 78.086 325.847,77.667 326.426,77.797 326.764 C 77.944 327.149,77.839 327.226,77.398 327.057 C 77.068 326.930,76.902 326.931,77.030 327.059 C 77.389 327.418,76.370 328.271,75.831 328.064 C 75.568 327.964,74.782 328.120,74.083 328.412 C 73.384 328.704,71.755 328.954,70.462 328.967 C 67.299 329.000,66.399 329.345,67.879 329.958 C 70.228 330.931,75.293 329.888,77.728 327.930 C 80.930 325.355,82.514 323.091,81.628 322.356 C 81.310 322.092,81.089 322.263,80.780 323.008 ",stroke:"none",fill:"#1a1c1b",fillRule:"evenodd"}),/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{id:"path3",d:"M305.070 6.751 C 304.283 7.605,303.640 8.411,303.640 8.542 C 303.640 8.674,303.691 8.716,303.754 8.637 C 303.817 8.557,304.538 7.751,305.358 6.846 C 306.177 5.940,306.769 5.199,306.674 5.199 C 306.579 5.199,305.857 5.898,305.070 6.751 M14.731 18.416 C 14.731 22.681,14.833 25.312,14.957 24.263 C 15.261 21.699,15.270 13.673,14.971 12.004 C 14.839 11.266,14.731 14.152,14.731 18.416 M18.718 12.638 C 18.718 12.733,19.341 13.129,20.104 13.518 C 20.867 13.907,21.490 14.148,21.490 14.052 C 21.490 13.957,20.867 13.561,20.104 13.172 C 19.341 12.783,18.718 12.542,18.718 12.638 M321.860 18.631 C 321.111 19.588,321.051 19.749,321.632 19.241 C 322.327 18.634,323.244 17.331,322.976 17.331 C 322.921 17.331,322.419 17.916,321.860 18.631 M303.912 19.588 C 304.108 19.971,304.634 20.594,305.081 20.972 C 305.864 21.635,305.862 21.622,305.031 20.621 C 303.651 18.959,303.535 18.852,303.912 19.588 M38.128 20.753 C 38.414 20.924,39.194 21.161,39.861 21.279 C 40.680 21.424,40.849 21.397,40.381 21.197 C 39.309 20.738,37.513 20.384,38.128 20.753 M41.768 21.790 C 42.149 21.957,43.007 22.193,43.674 22.314 C 44.507 22.465,44.670 22.439,44.194 22.230 C 43.813 22.064,42.955 21.828,42.288 21.707 C 41.455 21.556,41.292 21.582,41.768 21.790 M156.759 21.729 C 157.093 21.817,157.639 21.817,157.972 21.729 C 158.306 21.642,158.033 21.571,157.366 21.571 C 156.698 21.571,156.425 21.642,156.759 21.729 M308.319 23.063 C 308.891 23.325,309.593 23.534,309.879 23.528 C 310.165 23.522,309.853 23.307,309.185 23.050 C 307.603 22.441,306.980 22.450,308.319 23.063 M47.140 23.224 C 48.326 23.603,49.237 23.603,48.354 23.224 C 47.972 23.060,47.348 22.930,46.967 22.936 C 46.410 22.944,46.444 23.000,47.140 23.224 M161.194 24.477 C 161.392 24.998,161.463 25.904,161.351 26.490 C 161.181 27.386,161.211 27.455,161.543 26.921 C 161.971 26.233,161.716 24.076,161.166 23.736 C 160.969 23.614,160.980 23.914,161.194 24.477 M51.646 24.263 C 52.832 24.643,53.743 24.643,52.860 24.263 C 52.478 24.100,51.854 23.970,51.473 23.976 C 50.916 23.984,50.950 24.040,51.646 24.263 M54.593 24.957 C 54.974 25.121,55.598 25.250,55.979 25.244 C 56.536 25.236,56.503 25.180,55.806 24.957 C 54.621 24.577,53.709 24.577,54.593 24.957 M59.099 25.997 C 59.480 26.160,60.104 26.290,60.485 26.284 C 61.043 26.276,61.009 26.220,60.312 25.997 C 59.127 25.617,58.216 25.617,59.099 25.997 M63.258 27.036 C 63.640 27.200,64.185 27.334,64.471 27.334 C 64.799 27.334,64.735 27.224,64.298 27.036 C 63.917 26.873,63.371 26.738,63.085 26.738 C 62.757 26.738,62.821 26.849,63.258 27.036 M59.099 28.264 C 61.960 29.436,62.866 29.911,63.181 30.401 C 63.363 30.686,64.398 30.798,66.392 30.748 C 69.648 30.668,69.493 30.419,65.511 29.330 C 64.463 29.043,62.526 28.488,61.207 28.096 C 57.759 27.071,56.443 27.176,59.099 28.264 M67.071 28.076 C 67.452 28.240,67.998 28.374,68.284 28.374 C 68.612 28.374,68.548 28.264,68.111 28.076 C 67.730 27.912,67.184 27.778,66.898 27.778 C 66.570 27.778,66.634 27.888,67.071 28.076 M159.805 28.784 C 159.145 29.348,158.757 29.809,158.942 29.809 C 159.284 29.809,161.179 28.182,161.179 27.889 C 161.179 27.632,161.067 27.705,159.805 28.784 M13.707 31.038 C 13.575 31.922,13.537 32.717,13.624 32.803 C 13.710 32.890,13.890 32.238,14.022 31.353 C 14.155 30.469,14.193 29.675,14.106 29.588 C 14.019 29.502,13.840 30.154,13.707 31.038 M222.248 29.812 C 221.807 29.998,221.542 30.306,221.660 30.496 C 221.780 30.690,221.653 30.757,221.371 30.648 C 220.665 30.378,218.987 32.641,219.264 33.490 C 219.435 34.015,219.406 34.042,219.115 33.632 C 218.665 32.994,218.142 34.012,218.567 34.699 C 218.724 34.953,218.678 35.025,218.451 34.885 C 217.956 34.579,216.535 38.258,216.504 39.928 C 216.491 40.631,216.382 41.049,216.263 40.855 C 215.787 40.086,214.558 48.841,214.558 52.997 C 214.558 54.950,214.410 55.753,213.951 56.299 C 213.345 57.018,213.346 57.018,214.125 56.359 C 214.554 55.996,214.905 55.479,214.905 55.212 C 214.905 54.944,215.052 54.816,215.231 54.927 C 215.411 55.038,217.087 54.094,218.957 52.830 C 223.030 50.076,222.862 50.223,221.816 50.339 C 219.499 50.597,219.240 40.080,221.457 35.781 C 223.623 31.579,224.826 32.348,226.882 39.247 C 227.207 40.339,227.609 41.149,227.775 41.047 C 227.941 40.944,228.076 41.324,228.076 41.892 C 228.076 42.459,228.255 42.983,228.473 43.055 C 229.267 43.320,228.500 46.214,227.461 46.873 C 222.584 49.965,222.781 50.270,227.903 47.558 C 231.137 45.847,233.828 44.102,232.530 44.560 C 231.983 44.753,231.255 42.642,231.171 40.624 C 231.151 40.134,231.092 40.151,230.820 40.728 C 230.551 41.297,230.526 41.248,230.681 40.455 C 230.927 39.190,230.161 36.542,229.728 37.163 C 229.521 37.459,229.486 37.361,229.624 36.868 C 229.873 35.977,229.157 34.249,228.665 34.553 C 228.469 34.674,228.422 34.597,228.559 34.376 C 228.854 33.898,228.158 32.491,227.751 32.742 C 227.592 32.841,227.483 32.650,227.509 32.319 C 227.535 31.985,227.351 31.758,227.097 31.811 C 226.845 31.863,226.723 31.769,226.827 31.601 C 227.485 30.536,223.876 29.126,222.248 29.812 M156.759 30.048 C 157.093 30.135,157.639 30.135,157.972 30.048 C 158.306 29.961,158.033 29.890,157.366 29.890 C 156.698 29.890,156.425 29.961,156.759 30.048 M76.918 31.562 C 78.139 32.127,79.195 32.532,79.264 32.463 C 79.416 32.311,75.434 30.496,75.000 30.519 C 74.833 30.527,75.696 30.997,76.918 31.562 M149.411 31.468 C 148.564 31.960,148.053 32.424,148.277 32.499 C 148.500 32.574,147.400 33.736,145.832 35.082 C 144.264 36.428,142.929 37.665,142.865 37.831 C 142.801 37.997,142.629 38.059,142.482 37.968 C 142.336 37.878,141.218 38.733,139.999 39.870 C 138.779 41.006,137.320 42.160,136.757 42.434 L 135.732 42.931 136.841 43.563 C 137.869 44.148,138.359 45.061,137.646 45.061 C 136.217 45.061,132.653 40.175,133.309 39.114 C 133.408 38.953,133.414 38.821,133.321 38.821 C 133.229 38.821,132.906 39.317,132.603 39.923 C 132.010 41.114,133.192 44.325,134.141 44.099 C 134.361 44.046,134.455 44.141,134.352 44.308 C 134.248 44.476,134.510 44.928,134.933 45.314 C 135.846 46.145,137.439 47.014,137.128 46.511 C 137.009 46.318,137.035 46.107,137.186 46.043 C 137.337 45.980,138.226 44.757,139.162 43.328 C 140.763 40.880,146.119 35.187,149.862 31.955 C 151.770 30.307,151.644 30.171,149.411 31.468 M64.606 32.247 C 61.811 32.801,60.294 33.313,60.493 33.634 C 60.604 33.814,60.465 33.873,60.184 33.765 C 59.497 33.501,58.152 34.252,58.449 34.733 C 58.591 34.961,58.528 35.018,58.293 34.873 C 57.754 34.540,56.423 35.299,56.716 35.773 C 56.862 36.009,56.794 36.057,56.538 35.899 C 56.053 35.600,55.031 36.330,55.308 36.777 C 55.411 36.944,55.273 36.995,55.001 36.891 C 54.357 36.644,51.140 40.361,51.497 40.940 C 51.671 41.221,51.606 41.264,51.294 41.071 C 50.958 40.863,50.897 40.947,51.064 41.382 C 51.193 41.718,51.150 41.890,50.967 41.776 C 50.503 41.489,49.877 42.811,50.121 43.562 C 50.282 44.059,50.251 44.089,49.976 43.701 C 49.698 43.310,49.524 43.453,49.132 44.395 C 48.382 46.195,47.191 49.980,47.073 50.939 C 47.002 51.506,46.677 51.872,46.101 52.031 C 45.278 52.258,45.274 52.272,46.014 52.305 C 46.443 52.324,46.794 52.514,46.794 52.727 C 46.794 52.962,46.488 53.028,46.014 52.895 C 45.585 52.774,43.597 52.353,41.597 51.959 C 39.597 51.565,37.862 51.083,37.741 50.888 C 36.735 49.260,22.946 51.156,19.013 53.464 C 9.422 59.091,7.374 70.450,14.385 79.129 C 15.663 80.711,16.350 80.849,15.185 79.289 C 14.202 77.972,12.557 75.230,13.054 75.737 C 13.242 75.927,13.919 76.785,14.560 77.643 C 18.334 82.694,24.078 86.318,33.161 89.382 C 53.755 96.328,66.534 94.549,74.819 83.583 C 81.121 75.241,86.651 61.601,87.135 53.206 L 87.314 50.087 86.898 52.460 C 86.669 53.765,86.360 54.708,86.211 54.557 C 86.062 54.406,86.035 55.210,86.152 56.344 C 86.307 57.850,86.265 58.265,85.995 57.886 C 85.792 57.600,85.599 55.494,85.567 53.206 L 85.509 49.047 85.254 53.553 C 85.111 56.076,85.135 58.316,85.307 58.643 C 85.477 58.964,85.603 59.510,85.587 59.856 C 85.567 60.297,85.428 60.189,85.120 59.491 C 84.684 58.505,84.675 58.517,84.089 60.877 C 83.202 64.451,82.267 66.205,81.252 66.205 C 80.792 66.205,80.416 66.350,80.416 66.528 C 80.416 66.706,80.065 66.921,79.636 67.005 C 79.207 67.089,79.519 67.102,80.329 67.034 C 81.140 66.967,81.802 67.051,81.802 67.223 C 81.802 67.394,81.907 67.807,82.035 68.139 C 82.182 68.524,82.133 68.662,81.898 68.517 C 81.686 68.386,81.308 68.840,81.008 69.586 C 78.214 76.546,77.342 77.570,76.291 75.130 C 74.656 71.334,73.614 69.454,73.217 69.586 C 72.527 69.816,72.626 70.087,76.135 77.525 C 76.625 78.561,76.602 78.699,75.707 80.124 C 72.108 85.857,67.912 89.367,62.218 91.407 C 59.766 92.285,49.556 92.288,45.656 91.411 C 40.749 90.307,37.271 89.328,36.578 88.855 C 36.202 88.598,35.566 88.388,35.165 88.388 C 33.551 88.388,27.544 85.908,24.491 83.980 C 23.701 83.481,22.865 83.073,22.634 83.073 C 22.403 83.073,22.284 82.960,22.370 82.821 C 22.566 82.503,21.491 82.017,20.797 82.109 C 20.392 82.163,20.377 82.110,20.727 81.873 C 21.332 81.463,20.333 80.588,19.686 80.962 C 19.439 81.104,19.345 81.101,19.476 80.955 C 19.656 80.754,16.919 77.130,15.665 75.910 C 15.325 75.580,16.073 76.781,16.858 77.829 C 17.574 78.784,17.589 78.881,17.020 78.881 C 16.672 78.881,16.409 78.644,16.429 78.349 C 16.450 78.035,16.205 77.838,15.834 77.868 C 15.415 77.903,15.268 77.752,15.397 77.417 C 15.503 77.140,15.453 76.998,15.287 77.101 C 14.872 77.358,14.426 76.761,13.220 74.330 C 8.776 65.373,13.997 55.861,25.130 52.631 C 28.393 51.685,38.384 51.417,39.220 52.253 C 39.458 52.491,40.159 52.686,40.777 52.686 C 41.395 52.686,41.997 52.842,42.114 53.033 C 42.232 53.224,42.657 53.380,43.059 53.380 C 43.461 53.380,43.717 53.453,43.627 53.542 C 43.538 53.632,41.426 53.452,38.934 53.142 C 35.423 52.706,33.829 52.659,31.847 52.929 L 29.289 53.279 33.815 53.329 C 38.311 53.379,43.786 54.155,47.565 55.277 C 49.743 55.924,49.780 55.887,50.005 52.860 C 50.110 51.442,50.071 50.793,49.911 51.300 C 49.760 51.776,49.620 52.907,49.601 53.813 C 49.564 55.612,49.051 55.971,48.518 54.570 C 48.007 53.226,48.106 51.784,48.909 48.896 C 53.197 33.462,71.170 27.770,81.860 38.461 L 84.179 40.780 83.351 39.146 C 80.766 34.044,71.937 30.795,64.606 32.247 M79.723 32.738 C 79.723 32.833,80.191 33.153,80.763 33.449 C 81.334 33.745,81.802 33.909,81.802 33.813 C 81.802 33.718,81.334 33.398,80.763 33.102 C 80.191 32.806,79.723 32.643,79.723 32.738 M271.144 33.185 C 272.240 33.254,274.034 33.254,275.130 33.185 C 276.226 33.116,275.329 33.060,273.137 33.060 C 270.945 33.060,270.048 33.116,271.144 33.185 M266.638 33.514 C 266.971 33.602,267.517 33.602,267.851 33.514 C 268.185 33.427,267.912 33.356,267.244 33.356 C 266.577 33.356,266.304 33.427,266.638 33.514 M278.076 33.514 C 278.410 33.602,278.956 33.602,279.289 33.514 C 279.623 33.427,279.350 33.356,278.683 33.356 C 278.016 33.356,277.743 33.427,278.076 33.514 M260.312 34.315 C 259.147 34.689,260.406 34.689,261.872 34.315 C 262.806 34.078,262.823 34.050,262.045 34.044 C 261.568 34.041,260.789 34.163,260.312 34.315 M352.604 34.564 C 353.131 34.644,353.911 34.642,354.338 34.559 C 354.764 34.477,354.333 34.412,353.380 34.415 C 352.426 34.417,352.078 34.484,352.604 34.564 M65.945 34.901 C 66.278 34.988,66.824 34.988,67.158 34.901 C 67.491 34.814,67.218 34.742,66.551 34.742 C 65.884 34.742,65.611 34.814,65.945 34.901 M69.588 34.907 C 70.019 34.990,70.643 34.987,70.975 34.900 C 71.306 34.813,70.953 34.746,70.191 34.749 C 69.428 34.753,69.157 34.824,69.588 34.907 M12.652 36.049 C 12.520 36.648,12.485 37.210,12.573 37.299 C 12.661 37.387,12.833 36.961,12.955 36.352 C 13.244 34.907,12.964 34.627,12.652 36.049 M63.085 35.371 C 62.705 35.628,62.845 35.660,63.605 35.490 C 64.879 35.205,65.156 35.007,64.269 35.014 C 63.904 35.017,63.371 35.178,63.085 35.371 M72.790 35.355 C 73.975 35.735,74.887 35.735,74.003 35.355 C 73.622 35.191,72.998 35.062,72.617 35.068 C 72.060 35.076,72.094 35.132,72.790 35.355 M75.563 36.222 C 76.040 36.494,76.586 36.717,76.776 36.717 C 76.967 36.717,76.733 36.494,76.256 36.222 C 75.780 35.949,75.234 35.726,75.043 35.726 C 74.853 35.726,75.087 35.949,75.563 36.222 M86.308 37.608 C 87.344 38.657,88.269 39.515,88.365 39.515 C 88.460 39.515,87.691 38.657,86.655 37.608 C 85.620 36.560,84.694 35.702,84.599 35.702 C 84.504 35.702,85.273 36.560,86.308 37.608 M124.783 38.161 C 124.783 39.266,124.637 39.618,124.121 39.753 C 122.994 40.048,124.725 45.287,127.077 48.700 C 127.339 49.081,128.501 50.346,129.657 51.511 L 131.760 53.628 130.785 54.656 C 125.305 60.432,123.566 62.031,120.818 63.823 C 119.113 64.935,117.554 65.904,117.352 65.977 C 117.150 66.050,117.108 66.242,117.260 66.404 C 117.412 66.566,117.856 66.498,118.247 66.254 C 118.638 66.010,119.022 65.874,119.100 65.952 C 119.303 66.155,116.579 67.479,114.646 68.115 C 112.432 68.845,109.081 69.198,106.759 68.948 C 104.436 68.697,104.181 68.807,105.947 69.297 C 112.983 71.251,128.577 63.069,133.988 54.584 C 134.350 54.017,134.806 53.438,135.001 53.298 C 135.205 53.152,135.095 53.041,134.742 53.038 C 130.858 53.005,125.031 44.692,125.080 39.255 C 125.093 37.873,125.031 36.742,124.943 36.742 C 124.855 36.742,124.783 37.380,124.783 38.161 M138.475 37.274 C 137.903 37.536,137.669 37.752,137.955 37.754 C 138.241 37.756,138.865 37.534,139.341 37.262 C 140.437 36.635,139.852 36.644,138.475 37.274 M148.147 37.489 C 148.001 37.726,148.051 37.795,148.272 37.659 C 148.491 37.523,148.813 37.939,149.053 38.668 C 149.278 39.350,149.534 39.836,149.622 39.749 C 149.805 39.565,148.821 37.088,148.565 37.088 C 148.471 37.088,148.283 37.268,148.147 37.489 M343.291 38.215 C 342.228 39.367,340.985 41.007,341.649 40.381 C 342.389 39.683,344.617 37.088,344.476 37.088 C 344.396 37.088,343.862 37.595,343.291 38.215 M80.416 39.341 C 81.063 40.009,81.670 40.555,81.765 40.555 C 81.860 40.555,81.409 40.009,80.763 39.341 C 80.116 38.674,79.509 38.128,79.413 38.128 C 79.318 38.128,79.769 38.674,80.416 39.341 M134.489 38.475 C 133.792 38.698,133.758 38.754,134.315 38.763 C 134.697 38.768,135.321 38.639,135.702 38.475 C 136.585 38.095,135.674 38.095,134.489 38.475 M127.348 38.995 C 127.448 39.376,127.696 40.442,127.898 41.364 C 128.657 44.824,131.319 48.328,134.506 50.062 C 135.506 50.607,136.233 50.906,136.123 50.727 C 136.013 50.549,136.224 49.708,136.592 48.858 C 136.960 48.009,137.050 47.587,136.790 47.920 C 135.024 50.193,127.342 41.995,128.833 39.428 C 129.128 38.920,131.658 39.145,131.828 39.695 C 131.941 40.058,131.973 40.031,131.930 39.608 C 131.877 39.091,131.543 39.002,129.799 39.042 C 128.596 39.070,127.611 38.925,127.447 38.696 C 127.280 38.464,127.240 38.586,127.348 38.995 M11.612 39.861 C 11.480 40.461,11.445 41.023,11.533 41.111 C 11.621 41.200,11.793 40.774,11.915 40.165 C 12.204 38.720,11.924 38.440,11.612 39.861 M85.975 39.787 C 85.968 40.032,86.181 40.578,86.448 41.000 C 89.958 46.545,88.962 60.996,84.385 70.936 C 84.108 71.537,83.882 72.139,83.882 72.275 C 83.882 72.411,82.757 74.805,81.381 77.595 C 80.005 80.386,78.926 82.825,78.984 83.016 C 79.041 83.206,78.971 83.246,78.829 83.104 C 78.461 82.736,77.553 84.150,77.850 84.630 C 77.999 84.870,77.945 84.935,77.714 84.793 C 77.274 84.521,76.501 85.744,76.875 86.118 C 77.012 86.255,76.967 86.328,76.776 86.282 C 76.586 86.235,75.401 87.197,74.144 88.419 C 67.346 95.030,55.511 97.472,44.021 94.635 C 43.354 94.471,41.872 94.268,40.728 94.185 C 39.584 94.103,39.077 94.100,39.601 94.180 C 40.126 94.259,40.555 94.471,40.555 94.649 C 40.555 94.828,40.906 94.986,41.334 95.001 C 41.855 95.020,41.942 95.094,41.594 95.226 C 41.308 95.335,40.615 95.806,40.054 96.273 C 39.493 96.740,38.640 97.272,38.160 97.454 C 37.454 97.722,37.384 97.848,37.793 98.102 C 38.501 98.541,37.380 99.635,35.529 100.311 C 34.368 100.735,34.286 100.822,35.026 100.842 C 35.512 100.856,36.058 101.013,36.239 101.191 C 36.420 101.370,37.192 101.583,37.955 101.665 C 38.718 101.747,37.951 101.743,36.251 101.657 C 34.551 101.570,32.835 101.378,32.438 101.231 C 32.041 101.084,30.702 100.874,29.463 100.764 C 26.260 100.480,28.457 101.000,34.315 101.913 C 37.518 102.413,39.979 102.595,42.114 102.492 C 44.059 102.397,44.646 102.434,43.674 102.589 C 41.117 102.996,50.949 102.995,55.286 102.587 C 62.719 101.889,66.899 100.472,71.404 97.124 C 76.320 93.471,83.659 85.271,82.987 84.183 C 82.840 83.945,82.884 83.867,83.093 83.996 C 83.557 84.283,85.370 81.553,85.055 81.043 C 84.923 80.830,84.969 80.751,85.157 80.867 C 85.345 80.983,86.171 79.798,86.993 78.234 C 87.815 76.670,88.327 75.546,88.131 75.737 C 87.935 75.927,87.367 76.862,86.868 77.814 C 86.370 78.765,85.962 79.305,85.962 79.013 C 85.962 78.722,86.254 77.910,86.611 77.210 C 87.849 74.781,88.433 72.459,88.198 70.895 C 88.053 69.924,88.114 69.320,88.373 69.160 C 91.838 67.018,92.421 50.503,89.264 43.925 C 88.334 41.988,85.997 39.047,85.975 39.787 M297.920 41.594 C 298.665 42.357,299.352 42.981,299.447 42.981 C 299.543 42.981,299.012 42.357,298.267 41.594 C 297.522 40.832,296.835 40.208,296.740 40.208 C 296.644 40.208,297.176 40.832,297.920 41.594 M54.224 41.681 L 53.206 42.808 54.333 41.790 C 54.952 41.230,55.459 40.723,55.459 40.663 C 55.459 40.395,55.173 40.631,54.224 41.681 M149.854 43.154 C 149.855 44.489,149.918 44.992,149.993 44.273 C 150.068 43.554,150.067 42.462,149.990 41.847 C 149.914 41.231,149.852 41.820,149.854 43.154 M84.229 41.309 C 84.229 41.418,84.635 42.424,85.131 43.544 C 85.628 44.664,86.250 46.594,86.515 47.834 C 86.990 50.062,86.994 50.067,86.844 48.286 C 86.667 46.191,84.229 39.684,84.229 41.309 M10.597 43.526 C 10.469 44.034,10.432 44.516,10.513 44.598 C 10.595 44.679,10.766 44.331,10.894 43.823 C 11.021 43.315,11.059 42.832,10.977 42.751 C 10.895 42.669,10.724 43.018,10.597 43.526 M364.379 44.021 C 364.379 44.688,364.450 44.961,364.537 44.627 C 364.624 44.294,364.624 43.748,364.537 43.414 C 364.450 43.081,364.379 43.354,364.379 44.021 M299.828 43.530 C 299.829 43.705,300.232 44.315,300.724 44.887 L 301.617 45.927 300.834 44.714 C 299.830 43.158,299.826 43.154,299.828 43.530 M340.122 45.234 C 340.126 45.997,340.197 46.268,340.280 45.837 C 340.363 45.405,340.360 44.781,340.273 44.450 C 340.186 44.119,340.118 44.471,340.122 45.234 M84.083 45.061 C 84.416 46.319,84.902 47.143,84.899 46.447 C 84.898 46.161,84.662 45.537,84.375 45.061 L 83.853 44.194 84.083 45.061 M91.216 44.887 C 91.215 45.078,91.424 45.780,91.681 46.447 C 91.938 47.114,92.153 47.426,92.159 47.140 C 92.165 46.854,91.956 46.153,91.694 45.581 C 91.432 45.009,91.217 44.697,91.216 44.887 M136.915 45.830 C 136.915 46.271,136.451 46.129,135.529 45.406 L 134.662 44.728 135.789 45.143 C 136.408 45.372,136.915 45.681,136.915 45.830 M9.557 47.338 C 9.429 47.846,9.392 48.329,9.474 48.411 C 9.555 48.492,9.726 48.144,9.854 47.636 C 9.981 47.128,10.019 46.645,9.937 46.563 C 9.855 46.482,9.684 46.830,9.557 47.338 M67.668 47.716 C 65.511 48.779,64.094 51.270,64.151 53.899 C 64.170 54.769,64.218 54.826,64.444 54.246 L 64.715 53.553 64.940 54.246 C 65.244 55.189,67.251 56.499,68.391 56.499 C 70.708 56.499,73.304 52.583,72.413 50.433 C 72.176 49.861,71.969 49.237,71.953 49.047 C 71.937 48.856,71.573 48.650,71.144 48.589 C 70.715 48.528,70.364 48.345,70.364 48.182 C 70.364 48.018,70.091 47.806,69.757 47.711 C 69.424 47.615,69.775 47.615,70.537 47.711 C 71.575 47.842,71.793 47.793,71.404 47.518 C 70.648 46.984,68.973 47.073,67.668 47.716 M108.480 49.133 L 106.586 51.127 108.579 49.232 C 110.430 47.472,110.731 47.140,110.473 47.140 C 110.419 47.140,109.522 48.037,108.480 49.133 M50.458 48.725 C 50.331 49.233,50.293 49.715,50.375 49.797 C 50.456 49.879,50.628 49.530,50.755 49.022 C 50.883 48.514,50.920 48.032,50.838 47.950 C 50.757 47.868,50.586 48.217,50.458 48.725 M72.789 48.787 C 73.243 49.406,73.668 49.913,73.734 49.913 C 73.997 49.913,73.138 48.613,72.570 48.152 C 72.195 47.848,72.279 48.090,72.789 48.787 M110.623 48.614 C 110.399 48.838,110.225 50.074,110.225 51.441 C 110.225 53.775,110.175 53.922,108.942 55.185 C 107.429 56.734,107.869 56.980,109.427 55.456 C 110.528 54.380,111.186 51.995,110.755 50.639 C 110.632 50.249,110.791 49.743,111.151 49.384 C 111.551 48.984,111.799 48.916,111.888 49.183 C 111.962 49.404,112.640 49.901,113.396 50.286 L 114.769 50.987 116.657 50.123 C 118.761 49.159,119.289 48.539,117.244 49.432 C 115.255 50.301,114.417 50.395,113.766 49.825 C 112.567 48.774,111.048 48.189,110.623 48.614 M282.232 49.783 C 282.438 50.236,282.747 50.607,282.918 50.607 C 283.090 50.607,283.148 50.739,283.048 50.901 C 282.948 51.062,283.134 51.491,283.461 51.854 C 283.788 52.216,284.064 52.669,284.075 52.860 C 284.116 53.602,284.663 55.113,284.890 55.113 C 285.309 55.113,284.942 61.522,284.425 63.238 C 284.153 64.144,284.024 65.130,284.138 65.428 C 284.262 65.751,284.203 65.883,283.992 65.752 C 283.425 65.402,282.737 67.220,283.217 67.799 C 283.435 68.061,283.517 68.550,283.400 68.886 C 283.208 69.437,283.237 69.434,283.684 68.857 C 283.958 68.505,284.087 67.972,283.973 67.674 C 283.842 67.333,283.905 67.218,284.143 67.365 C 284.689 67.702,285.931 64.160,286.307 61.190 C 286.849 56.913,285.843 52.741,283.546 49.740 C 282.740 48.687,281.747 48.719,282.232 49.783 M8.517 50.805 C 8.389 51.313,8.352 51.795,8.434 51.877 C 8.515 51.959,8.687 51.610,8.814 51.102 C 8.942 50.594,8.979 50.111,8.897 50.030 C 8.816 49.948,8.644 50.297,8.517 50.805 M342.461 51.080 C 343.128 51.804,343.986 52.561,344.367 52.762 C 344.749 52.963,344.983 53.054,344.887 52.966 C 342.670 50.904,341.359 49.885,342.461 51.080 M67.938 50.627 C 67.938 50.829,68.094 50.898,68.284 50.780 C 68.490 50.653,68.631 51.059,68.631 51.782 C 68.631 53.133,67.942 53.749,66.762 53.451 C 65.492 53.131,65.289 51.944,66.289 50.693 C 66.711 50.166,67.938 50.117,67.938 50.627 M73.929 51.820 C 73.932 52.773,73.999 53.122,74.079 52.595 C 74.159 52.068,74.156 51.288,74.074 50.862 C 73.992 50.435,73.927 50.867,73.929 51.820 M360.821 51.051 C 360.338 51.474,359.558 52.100,359.087 52.441 C 358.265 53.039,358.276 53.039,359.379 52.441 C 360.010 52.100,360.857 51.469,361.260 51.040 C 362.193 50.047,361.960 50.053,360.821 51.051 M119.469 52.214 C 119.158 54.150,119.690 55.626,120.575 55.286 C 120.878 55.170,120.980 55.282,120.859 55.596 C 120.756 55.866,120.968 56.357,121.332 56.686 C 122.299 57.561,121.869 57.880,119.650 57.932 L 117.678 57.978 119.411 58.248 C 123.936 58.953,124.239 58.622,121.685 55.757 C 120.199 54.090,119.959 53.611,119.864 52.135 L 119.754 50.433 119.469 52.214 M71.897 52.600 C 71.686 53.783,70.581 55.459,70.011 55.459 C 69.391 55.459,70.249 52.837,70.974 52.517 C 71.401 52.329,71.750 51.978,71.750 51.738 C 71.750 51.497,71.835 51.300,71.939 51.300 C 72.043 51.300,72.024 51.885,71.897 52.600 M93.028 55.806 C 93.028 58.189,93.083 59.164,93.151 57.972 C 93.219 56.781,93.219 54.831,93.151 53.640 C 93.083 52.448,93.028 53.423,93.028 55.806 M304.035 51.993 C 304.035 52.279,304.169 52.825,304.333 53.206 C 304.521 53.643,304.631 53.707,304.631 53.380 C 304.631 53.094,304.497 52.548,304.333 52.166 C 304.145 51.729,304.035 51.665,304.035 51.993 M215.144 53.640 C 215.056 53.973,214.985 53.700,214.985 53.033 C 214.985 52.366,215.056 52.093,215.144 52.426 C 215.231 52.760,215.231 53.306,215.144 53.640 M7.477 54.271 C 7.350 54.779,7.312 55.261,7.394 55.343 C 7.476 55.425,7.647 55.076,7.774 54.568 C 7.902 54.060,7.939 53.578,7.857 53.496 C 7.776 53.414,7.605 53.763,7.477 54.271 M26.690 53.607 C 24.887 54.207,22.529 55.226,22.654 55.352 C 22.735 55.433,23.404 55.246,24.139 54.936 C 24.875 54.626,26.334 54.162,27.383 53.905 C 28.722 53.576,28.980 53.437,28.250 53.436 C 27.678 53.435,26.976 53.512,26.690 53.607 M245.304 54.303 C 245.453 54.691,245.392 54.798,245.120 54.629 C 244.897 54.491,244.714 54.544,244.714 54.746 C 244.714 54.947,244.851 55.113,245.018 55.113 C 245.473 55.113,246.129 54.217,245.866 53.954 C 245.429 53.517,245.084 53.731,245.304 54.303 M133.449 54.710 C 133.449 55.064,128.664 59.965,128.319 59.965 C 128.119 59.965,133.078 54.540,133.362 54.448 C 133.410 54.432,133.449 54.550,133.449 54.710 M304.923 56.153 C 305.031 57.201,305.177 58.124,305.246 58.203 C 305.489 58.481,305.301 55.971,305.014 55.113 C 304.828 54.553,304.795 54.922,304.923 56.153 M350.353 54.671 C 350.976 54.748,351.912 54.746,352.433 54.667 C 352.953 54.588,352.444 54.525,351.300 54.527 C 350.156 54.529,349.730 54.593,350.353 54.671 M19.551 56.784 C 16.737 58.606,13.441 63.054,13.543 64.894 C 13.556 65.138,13.781 64.755,14.043 64.042 C 15.072 61.241,18.061 57.857,20.711 56.494 C 21.521 56.077,22.184 55.674,22.184 55.598 C 22.184 55.230,21.423 55.573,19.551 56.784 M64.787 56.094 C 64.974 56.444,65.399 56.951,65.732 57.221 C 66.106 57.525,66.023 57.283,65.512 56.586 C 64.602 55.342,64.261 55.111,64.787 56.094 M244.126 56.172 C 244.223 56.543,244.169 56.764,244.005 56.663 C 243.431 56.308,242.634 60.084,242.634 63.159 C 242.634 68.350,244.251 71.818,248.393 75.509 C 251.424 78.210,258.232 81.126,258.232 79.723 C 258.232 79.512,259.792 79.376,262.218 79.376 C 264.441 79.376,266.205 79.234,266.205 79.054 C 266.205 78.869,264.278 78.765,261.653 78.810 C 259.149 78.852,257.308 78.818,257.562 78.733 C 257.815 78.649,257.173 78.365,256.134 78.102 C 246.593 75.692,241.226 65.488,244.889 56.722 C 245.325 55.678,245.309 55.599,244.653 55.550 C 244.117 55.510,243.992 55.657,244.126 56.172 M71.577 56.716 C 70.954 57.246,70.826 57.457,71.259 57.242 C 71.894 56.927,73.086 55.786,72.746 55.818 C 72.675 55.825,72.149 56.229,71.577 56.716 M262.321 56.102 C 263.196 56.657,261.858 57.280,260.341 57.024 L 258.960 56.791 259.148 57.949 C 259.515 60.208,255.736 61.629,253.680 60.006 C 252.733 59.259,252.180 57.327,252.834 57.055 C 253.039 56.970,252.981 56.888,252.705 56.873 C 250.977 56.779,248.337 60.080,247.975 62.788 C 247.782 64.232,248.433 66.851,248.764 65.964 C 248.857 65.715,249.312 65.991,249.907 66.657 C 251.114 68.008,250.956 68.370,249.663 67.217 C 249.068 66.687,248.909 66.623,249.231 67.044 C 249.908 67.929,252.682 69.677,253.361 69.646 C 253.657 69.633,253.214 69.318,252.376 68.946 C 250.457 68.094,250.697 67.798,252.900 68.298 C 256.854 69.196,260.795 68.658,263.610 66.837 C 264.560 66.222,265.455 65.751,265.598 65.789 C 265.741 65.827,265.825 65.741,265.784 65.598 C 265.697 65.291,266.539 63.682,266.917 63.431 C 267.665 62.936,267.024 58.232,266.208 58.232 C 266.056 58.232,265.842 57.998,265.733 57.712 C 265.383 56.802,265.822 57.149,266.896 58.631 C 267.469 59.422,267.938 59.895,267.938 59.683 C 267.938 58.996,265.728 56.756,264.575 56.274 C 263.333 55.755,261.562 55.620,262.321 56.102 M6.268 58.434 C 5.738 60.538,6.010 60.809,6.586 58.752 C 6.829 57.883,6.949 57.093,6.851 56.996 C 6.754 56.899,6.492 57.546,6.268 58.434 M264.677 58.752 C 265.192 59.229,265.473 59.616,265.302 59.613 C 264.971 59.606,263.226 57.886,263.551 57.886 C 263.656 57.886,264.163 58.276,264.677 58.752 M109.389 58.810 C 110.061 59.146,110.623 59.798,110.901 60.566 C 111.204 61.407,111.428 61.648,111.618 61.341 C 112.017 60.696,110.948 58.668,110.087 58.437 C 108.711 58.068,108.320 58.277,109.389 58.810 M115.049 58.980 C 114.745 59.548,114.756 59.644,115.102 59.430 C 115.417 59.236,115.477 59.328,115.314 59.753 C 115.174 60.119,115.223 60.263,115.443 60.127 C 115.639 60.006,115.705 59.609,115.589 59.245 C 115.430 58.744,115.511 58.634,115.922 58.791 C 116.220 58.906,116.464 58.922,116.464 58.826 C 116.464 58.246,115.378 58.364,115.049 58.980 M305.506 63.432 C 305.506 65.815,305.562 66.789,305.629 65.598 C 305.697 64.406,305.697 62.457,305.629 61.265 C 305.562 60.074,305.506 61.049,305.506 63.432 M120.624 60.292 L 117.331 60.485 119.295 60.766 C 121.319 61.056,123.607 60.813,123.941 60.273 C 124.046 60.104,124.083 59.995,124.024 60.032 C 123.965 60.068,122.435 60.185,120.624 60.292 M268.032 61.698 C 268.032 62.556,268.100 62.907,268.182 62.478 C 268.265 62.049,268.265 61.347,268.182 60.919 C 268.100 60.490,268.032 60.841,268.032 61.698 M5.397 61.550 C 5.270 62.058,5.232 62.540,5.314 62.622 C 5.396 62.704,5.567 62.355,5.694 61.847 C 5.822 61.339,5.859 60.857,5.778 60.775 C 5.696 60.693,5.525 61.042,5.397 61.550 M85.258 62.045 C 85.258 62.507,85.221 62.507,84.922 62.045 C 84.737 61.759,84.586 61.291,84.586 61.005 C 84.586 60.543,84.623 60.543,84.922 61.005 C 85.107 61.291,85.258 61.759,85.258 62.045 M111.825 61.893 C 111.533 62.653,111.955 63.301,112.343 62.689 C 112.580 62.314,112.642 62.311,112.646 62.672 C 112.649 62.927,112.828 63.017,113.053 62.878 C 113.328 62.708,113.393 62.865,113.259 63.377 C 112.953 64.548,113.265 64.260,114.047 62.652 C 114.473 61.774,114.546 61.451,114.227 61.851 C 113.839 62.339,113.690 62.387,113.686 62.025 C 113.682 61.603,113.627 61.606,113.333 62.045 C 113.029 62.499,112.925 62.487,112.513 61.948 C 112.087 61.392,112.019 61.387,111.825 61.893 M100.872 64.154 C 100.875 64.614,101.031 65.225,101.218 65.511 C 101.458 65.877,101.493 65.672,101.336 64.818 C 101.062 63.323,100.865 63.041,100.872 64.154 M202.578 65.598 L 201.560 66.724 202.686 65.706 C 203.306 65.146,203.813 64.640,203.813 64.580 C 203.813 64.312,203.527 64.548,202.578 65.598 M31.627 65.048 C 31.387 65.145,31.286 65.377,31.402 65.564 C 31.517 65.751,31.332 65.855,30.990 65.794 C 30.620 65.729,30.207 66.000,29.971 66.462 C 29.753 66.890,29.475 67.142,29.355 67.021 C 29.234 66.900,28.962 67.252,28.750 67.803 C 28.325 68.906,28.513 71.286,29.069 71.842 C 29.311 72.084,29.361 71.933,29.227 71.367 C 29.034 70.557,29.042 70.553,29.565 71.231 C 29.859 71.612,30.230 71.937,30.388 71.953 C 30.546 71.969,31.115 72.164,31.652 72.386 C 34.905 73.734,38.855 71.280,37.819 68.555 C 37.317 67.235,35.420 65.979,33.449 65.663 L 31.716 65.385 32.929 65.147 C 34.100 64.918,34.106 64.909,33.102 64.891 C 32.530 64.881,31.866 64.952,31.627 65.048 M13.104 66.984 C 13.026 67.795,13.070 69.003,13.201 69.671 C 13.378 70.574,13.449 70.198,13.478 68.198 C 13.522 65.271,13.327 64.642,13.104 66.984 M263.073 66.341 C 262.793 66.606,262.175 66.923,261.698 67.046 C 261.040 67.215,261.123 67.103,262.045 66.578 C 263.495 65.752,263.754 65.692,263.073 66.341 M301.803 66.794 C 301.479 67.404,301.210 68.262,301.205 68.700 C 301.201 69.139,300.897 70.623,300.531 71.999 C 300.165 73.376,299.540 76.339,299.143 78.585 C 298.427 82.630,297.412 86.236,296.494 87.996 C 296.232 88.498,296.017 89.337,296.016 89.861 C 296.015 90.386,295.874 90.815,295.704 90.815 C 295.533 90.815,295.416 91.187,295.444 91.643 L 295.494 92.471 297.129 91.643 C 298.169 91.116,299.429 90.797,300.595 90.767 C 301.602 90.741,302.066 90.651,301.626 90.567 C 301.065 90.460,300.925 90.293,301.157 90.008 C 301.536 89.544,303.653 81.318,303.614 80.461 C 303.600 80.150,303.137 81.690,302.586 83.882 C 301.540 88.039,300.970 89.647,300.654 89.331 C 300.552 89.229,300.018 89.274,299.468 89.432 L 298.467 89.719 299.348 87.407 C 302.029 80.371,303.549 70.787,302.629 66.724 L 302.393 65.685 301.803 66.794 M265.004 67.285 C 263.183 68.653,263.012 68.880,264.408 68.078 C 265.392 67.513,266.938 66.157,266.518 66.228 C 266.441 66.241,265.759 66.717,265.004 67.285 M198.948 68.891 L 197.054 70.884 199.047 68.989 C 200.898 67.229,201.199 66.898,200.941 66.898 C 200.887 66.898,199.990 67.795,198.948 68.891 M36.890 67.789 C 37.933 68.832,37.340 71.404,36.057 71.404 C 35.693 71.404,35.316 71.273,35.217 71.114 C 34.955 70.690,36.002 69.324,36.588 69.324 C 37.290 69.324,37.210 68.753,36.395 67.938 C 36.014 67.556,35.847 67.244,36.024 67.244 C 36.201 67.244,36.591 67.489,36.890 67.789 M32.102 68.089 C 32.207 68.363,32.514 68.502,32.784 68.399 C 33.389 68.166,33.453 69.173,32.857 69.542 C 31.419 70.430,29.498 69.514,30.169 68.260 C 30.588 67.478,31.825 67.368,32.102 68.089 M39.433 69.292 C 39.595 70.975,39.542 71.112,38.213 72.441 C 36.698 73.955,36.648 74.134,37.985 73.259 C 39.556 72.230,40.416 69.349,39.557 67.995 C 39.386 67.725,39.335 68.266,39.433 69.292 M259.185 67.830 C 258.852 67.917,258.306 67.917,257.972 67.830 C 257.639 67.743,257.912 67.671,258.579 67.671 C 259.246 67.671,259.519 67.743,259.185 67.830 M282.149 68.284 C 281.852 68.839,281.843 69.157,282.117 69.431 C 282.325 69.639,282.491 69.973,282.485 70.173 C 282.479 70.373,282.306 70.247,282.100 69.892 C 281.759 69.306,281.515 69.451,279.424 71.491 C 276.862 73.990,274.702 75.538,272.086 76.750 C 270.362 77.549,270.350 77.564,271.303 77.813 L 272.270 78.064 271.440 78.381 C 270.984 78.555,270.690 78.778,270.789 78.877 C 270.887 78.975,271.375 78.870,271.873 78.643 C 272.708 78.262,272.732 78.195,272.178 77.774 C 271.622 77.353,271.634 77.318,272.328 77.307 C 272.741 77.301,273.142 77.485,273.219 77.716 C 273.409 78.287,278.768 74.677,280.748 72.644 C 281.598 71.771,282.131 71.057,281.932 71.057 C 281.734 71.057,281.571 70.826,281.571 70.543 C 281.571 70.182,281.695 70.131,281.988 70.374 C 282.562 70.851,283.257 69.994,282.841 69.322 C 282.644 69.004,282.682 68.730,282.944 68.568 C 283.255 68.376,283.258 68.215,282.958 67.915 C 282.658 67.615,282.458 67.706,282.149 68.284 M90.537 69.567 C 90.024 71.238,90.273 71.486,90.815 69.844 C 91.043 69.151,91.163 68.517,91.080 68.435 C 90.998 68.352,90.754 68.862,90.537 69.567 M304.874 71.079 C 304.740 72.438,304.703 73.623,304.791 73.711 C 304.879 73.799,305.063 72.761,305.199 71.404 C 305.336 70.047,305.373 68.862,305.282 68.772 C 305.192 68.681,305.008 69.719,304.874 71.079 M117.646 70.858 C 117.056 71.114,115.892 71.440,115.058 71.580 C 112.366 72.035,110.054 76.136,111.204 78.420 C 111.550 79.106,111.574 79.047,111.399 77.935 C 111.033 75.602,114.015 74.161,115.595 75.907 C 117.018 77.479,114.120 80.925,112.316 79.806 C 111.929 79.567,111.612 79.516,111.612 79.695 C 111.612 79.874,111.417 80.227,111.179 80.480 C 110.940 80.733,110.014 81.810,109.121 82.874 C 107.072 85.313,103.948 88.331,102.567 89.205 C 101.906 89.624,101.561 90.090,101.654 90.443 C 101.879 91.305,101.033 91.953,100.508 91.320 C 100.277 91.042,99.917 90.815,99.707 90.815 C 99.497 90.815,99.711 91.086,100.183 91.418 C 100.654 91.751,101.164 91.982,101.316 91.933 C 101.468 91.884,101.546 92.065,101.490 92.336 C 101.433 92.606,102.151 93.872,103.085 95.148 C 104.020 96.424,104.644 97.572,104.472 97.700 C 104.300 97.827,103.695 98.475,103.128 99.139 C 102.262 100.153,102.341 100.114,103.620 98.896 L 105.143 97.446 104.172 96.173 C 103.389 95.147,103.294 94.840,103.680 94.595 C 104.366 94.161,104.496 94.196,105.232 95.016 C 105.776 95.622,108.630 97.696,110.062 98.526 C 110.297 98.662,110.371 97.903,110.280 96.295 C 110.102 93.138,110.711 89.342,112.021 85.442 C 113.268 81.731,113.357 81.618,114.937 81.754 C 119.999 82.190,123.664 77.992,122.381 73.228 C 121.716 70.757,119.930 69.863,117.646 70.858 M279.723 73.168 C 277.318 75.427,273.989 77.440,273.211 77.106 C 272.753 76.909,272.933 76.756,274.000 76.436 C 274.883 76.172,275.196 75.950,274.866 75.820 C 274.457 75.660,274.476 75.612,274.957 75.591 C 275.290 75.576,275.563 75.422,275.563 75.249 C 275.563 75.076,275.914 75.012,276.343 75.106 C 276.832 75.213,276.969 75.166,276.711 74.979 C 276.420 74.770,276.625 74.451,277.404 73.903 C 278.012 73.475,279.055 72.532,279.723 71.808 C 280.676 70.773,280.999 70.596,281.232 70.982 C 281.446 71.335,281.021 71.950,279.723 73.168 M120.157 71.297 C 121.887 72.431,122.466 74.578,121.660 76.871 C 121.281 77.950,120.971 78.860,120.971 78.894 C 120.971 78.928,120.706 79.057,120.383 79.181 C 119.846 79.387,119.842 79.353,120.342 78.784 C 121.908 77.003,120.935 72.374,118.849 71.679 C 118.614 71.600,118.536 71.350,118.677 71.123 C 119.007 70.589,119.092 70.599,120.157 71.297 M13.560 71.404 C 13.554 71.690,13.764 72.392,14.026 72.964 C 14.639 74.302,14.648 73.680,14.038 72.097 C 13.781 71.430,13.566 71.118,13.560 71.404 M32.080 71.382 C 32.261 71.561,33.111 71.767,33.969 71.841 L 35.529 71.976 33.948 72.036 C 33.009 72.072,32.095 71.891,31.695 71.588 C 31.325 71.308,31.186 71.074,31.386 71.068 C 31.587 71.062,31.899 71.203,32.080 71.382 M279.543 72.450 C 278.802 73.209,278.300 73.830,278.428 73.830 C 278.751 73.830,281.186 71.365,281.023 71.202 C 280.950 71.129,280.284 71.691,279.543 72.450 M3.219 72.964 C 3.221 73.917,3.289 74.266,3.368 73.739 C 3.448 73.212,3.446 72.432,3.364 72.006 C 3.281 71.579,3.216 72.010,3.219 72.964 M304.194 75.945 C 304.067 76.739,304.031 77.457,304.114 77.539 C 304.196 77.622,304.373 77.045,304.506 76.256 C 304.639 75.468,304.675 74.751,304.587 74.662 C 304.498 74.573,304.321 75.150,304.194 75.945 M192.973 76.853 C 193.589 76.930,194.680 76.931,195.400 76.856 C 196.119 76.781,195.615 76.718,194.281 76.717 C 192.946 76.715,192.358 76.777,192.973 76.853 M200.347 77.307 C 201.776 77.442,203.804 77.549,204.853 77.545 L 206.759 77.537 204.506 77.284 C 203.267 77.145,201.239 77.038,200.000 77.046 L 197.747 77.062 200.347 77.307 M208.804 77.999 C 211.131 78.369,211.730 78.683,210.110 78.683 C 209.274 78.683,209.012 78.835,209.012 79.322 C 209.012 79.931,208.465 79.957,196.967 79.886 L 184.922 79.811 195.147 80.057 C 231.376 80.928,258.302 91.723,282.653 115.140 C 284.373 116.794,285.857 118.071,285.951 117.978 C 286.153 117.775,281.726 113.456,277.759 109.985 C 276.203 108.623,275.019 107.419,275.128 107.310 C 275.237 107.201,275.542 107.291,275.806 107.510 C 277.140 108.617,277.067 107.081,275.720 105.702 C 274.966 104.931,274.427 104.190,274.521 104.056 C 274.946 103.451,263.493 95.904,256.744 92.342 C 242.814 84.989,222.592 78.811,209.341 77.860 C 206.776 77.676,206.773 77.677,208.804 77.999 M267.938 78.138 L 266.378 78.565 267.664 78.726 C 268.372 78.815,268.874 78.810,268.780 78.716 C 268.686 78.622,268.965 78.348,269.400 78.107 C 270.366 77.570,269.982 77.578,267.938 78.138 M3.214 79.376 C 3.214 80.234,3.282 80.585,3.364 80.156 C 3.447 79.727,3.447 79.025,3.364 78.596 C 3.282 78.167,3.214 78.518,3.214 79.376 M213.951 78.927 C 213.523 79.010,212.821 79.010,212.392 78.927 C 211.963 78.845,212.314 78.777,213.172 78.777 C 214.029 78.777,214.380 78.845,213.951 78.927 M268.111 79.562 C 266.744 80.035,266.742 80.039,267.938 79.837 C 269.352 79.599,270.797 79.071,270.017 79.078 C 269.731 79.081,268.873 79.299,268.111 79.562 M176.950 80.416 L 175.217 80.654 177.296 80.668 C 178.440 80.675,180.390 80.568,181.629 80.428 L 183.882 80.175 181.282 80.177 C 179.853 80.178,177.903 80.285,176.950 80.416 M260.930 80.325 C 261.937 80.396,263.497 80.395,264.396 80.324 C 265.296 80.252,264.471 80.195,262.565 80.196 C 260.659 80.197,259.923 80.255,260.930 80.325 M309.390 80.393 L 306.648 80.589 305.663 84.372 C 305.121 86.453,304.717 88.184,304.765 88.218 C 304.813 88.253,306.166 88.538,307.771 88.853 C 310.694 89.426,311.747 89.388,310.189 88.764 C 309.405 88.451,309.400 88.431,310.098 88.410 C 311.012 88.383,311.254 87.575,311.260 84.531 C 311.264 82.917,311.420 82.106,311.785 81.802 C 312.071 81.565,312.305 81.160,312.305 80.902 C 312.305 80.530,313.512 80.411,318.111 80.329 L 323.917 80.225 318.024 80.211 C 314.783 80.203,310.898 80.285,309.390 80.393 M325.036 80.666 C 325.651 80.743,326.743 80.744,327.462 80.669 C 328.181 80.594,327.678 80.531,326.343 80.530 C 325.009 80.528,324.420 80.590,325.036 80.666 M170.364 81.157 C 169.029 81.326,167.782 81.528,167.591 81.606 C 166.872 81.900,169.434 81.734,172.270 81.302 C 175.588 80.797,174.102 80.684,170.364 81.157 M318.816 81.019 C 319.823 81.089,321.383 81.088,322.282 81.017 C 323.181 80.946,322.357 80.888,320.451 80.889 C 318.544 80.890,317.809 80.948,318.816 81.019 M162.565 82.496 C 161.400 82.869,162.659 82.869,164.125 82.496 C 165.059 82.258,165.076 82.230,164.298 82.225 C 163.821 82.221,163.042 82.343,162.565 82.496 M340.728 82.496 C 341.205 82.648,341.906 82.773,342.288 82.773 C 342.837 82.773,342.801 82.715,342.114 82.496 C 341.638 82.343,340.936 82.218,340.555 82.218 C 340.006 82.218,340.042 82.276,340.728 82.496 M158.752 83.293 C 157.785 83.526,157.456 83.712,157.886 83.784 C 158.267 83.847,159.281 83.676,160.139 83.405 C 161.968 82.825,161.010 82.748,158.752 83.293 M343.328 83.189 C 343.445 83.380,343.845 83.536,344.215 83.536 C 344.585 83.536,344.887 83.692,344.887 83.882 C 344.887 84.073,345.103 84.229,345.368 84.229 C 345.632 84.229,346.295 84.462,346.841 84.747 C 347.951 85.326,348.913 85.418,349.189 84.973 C 349.467 84.523,347.676 83.831,346.884 84.082 C 346.462 84.216,346.271 84.167,346.399 83.959 C 346.517 83.769,345.929 83.444,345.076 83.229 C 343.196 82.755,343.058 82.752,343.328 83.189 M152.717 84.837 C 150.350 85.530,149.784 85.807,150.291 86.024 C 150.754 86.221,150.640 86.252,149.913 86.126 C 148.712 85.918,142.707 87.856,138.128 89.931 C 137.556 90.190,136.075 90.825,134.835 91.342 C 127.358 94.463,114.371 101.940,114.407 103.104 C 114.427 103.771,114.447 103.767,114.742 103.033 C 114.915 102.604,115.256 102.255,115.500 102.258 C 115.827 102.262,115.837 102.332,115.539 102.522 C 115.316 102.664,115.034 103.174,114.913 103.657 C 114.723 104.413,114.494 104.538,113.239 104.564 C 112.155 104.587,112.005 104.536,112.648 104.362 C 113.223 104.208,113.370 104.043,113.089 103.869 C 112.567 103.546,110.515 105.000,110.812 105.481 C 110.935 105.680,110.849 105.717,110.610 105.570 C 110.092 105.249,109.113 106.016,109.416 106.505 C 109.549 106.720,109.470 106.762,109.224 106.610 C 108.705 106.289,107.727 107.055,108.030 107.545 C 108.162 107.759,108.084 107.802,107.837 107.649 C 107.319 107.329,106.340 108.095,106.643 108.585 C 106.773 108.795,106.698 108.842,106.464 108.697 C 106.228 108.552,104.980 109.343,103.460 110.599 L 100.860 112.751 101.791 114.001 C 104.112 117.120,107.576 120.971,108.059 120.971 C 108.352 120.971,109.996 120.415,111.714 119.736 C 114.889 118.480,116.909 118.349,118.111 119.319 C 118.601 119.714,118.680 119.296,118.246 118.611 C 118.059 118.316,117.636 118.238,117.038 118.388 C 115.848 118.687,115.844 118.284,117.033 117.833 C 117.754 117.558,118.103 117.612,118.679 118.088 L 119.411 118.692 118.718 117.947 C 117.881 117.047,116.405 117.337,111.372 119.389 C 107.465 120.982,107.904 121.159,104.412 116.585 L 103.209 115.009 103.871 114.123 C 104.707 113.003,105.169 113.056,105.308 114.287 C 105.412 115.216,106.186 116.118,106.879 116.118 C 107.063 116.118,106.955 115.833,106.640 115.484 C 105.551 114.281,106.673 111.958,108.344 111.958 C 108.807 111.958,109.185 111.802,109.185 111.612 C 109.185 111.421,109.429 111.265,109.727 111.265 C 110.025 111.265,111.041 111.012,111.985 110.704 C 114.023 110.037,114.756 109.283,112.966 109.696 C 110.659 110.228,110.052 110.129,110.052 109.223 C 110.052 107.349,114.087 106.006,114.327 107.799 C 114.391 108.276,114.586 108.814,114.761 108.995 C 115.142 109.391,115.185 110.567,114.818 110.583 C 113.930 110.620,113.327 112.302,113.892 113.165 C 114.320 113.818,114.405 114.428,114.230 115.597 C 114.097 116.482,114.133 117.158,114.313 117.158 C 114.488 117.158,114.720 116.105,114.828 114.818 C 116.140 99.283,145.037 84.426,165.449 88.792 C 167.432 89.216,167.818 88.997,166.692 88.085 C 166.111 87.614,165.541 87.472,164.752 87.600 C 164.138 87.699,163.355 87.660,163.013 87.511 C 162.671 87.363,162.080 87.256,161.698 87.273 C 161.195 87.295,161.161 87.257,161.575 87.134 C 161.888 87.041,162.217 86.584,162.306 86.118 L 162.468 85.272 161.645 86.160 C 160.721 87.157,159.349 87.196,159.165 86.230 C 159.102 85.901,159.445 85.238,159.926 84.757 C 160.529 84.154,160.642 83.882,160.291 83.882 C 159.374 83.882,158.492 84.658,158.663 85.313 C 158.889 86.175,157.272 86.950,156.530 86.334 C 156.250 86.102,156.106 85.689,156.210 85.417 C 156.332 85.100,156.168 84.916,155.756 84.906 C 155.307 84.895,155.427 84.747,156.153 84.415 C 157.890 83.619,156.153 83.833,152.717 84.837 M328.783 85.095 C 322.047 87.863,319.636 93.927,323.353 98.747 C 324.382 100.082,324.494 99.032,323.481 97.545 C 322.503 96.109,321.870 91.854,322.634 91.854 C 322.831 91.854,323.047 92.017,323.113 92.216 C 323.179 92.415,323.413 92.103,323.632 91.523 C 323.851 90.943,323.887 90.468,323.713 90.468 C 323.539 90.468,323.385 90.741,323.370 91.075 C 323.352 91.456,323.276 91.516,323.163 91.236 C 322.960 90.730,323.688 89.700,324.079 89.941 C 324.220 90.028,324.710 89.676,325.166 89.157 L 325.997 88.215 325.043 89.055 C 324.519 89.517,324.090 89.717,324.090 89.500 C 324.090 88.687,327.922 86.173,329.239 86.121 C 329.934 86.094,331.516 85.961,332.756 85.825 C 333.995 85.689,335.763 85.725,336.685 85.904 C 337.607 86.084,338.231 86.104,338.072 85.949 C 337.912 85.795,337.314 85.602,336.742 85.521 C 335.915 85.403,336.003 85.362,337.175 85.321 C 338.898 85.260,339.123 84.757,337.565 84.445 C 334.967 83.926,330.894 84.227,328.783 85.095 M333.969 85.285 C 333.016 85.433,331.768 85.546,331.196 85.536 C 329.616 85.507,332.541 85.021,334.315 85.018 C 335.632 85.015,335.614 85.028,333.969 85.285 M349.971 85.153 C 349.518 85.607,349.751 85.894,350.429 85.717 C 350.809 85.618,351.033 85.398,350.929 85.229 C 350.704 84.865,350.292 84.832,349.971 85.153 M107.122 89.441 C 106.165 91.054,105.229 92.638,105.041 92.960 C 104.676 93.585,103.298 93.688,103.404 93.082 C 103.438 92.884,103.310 92.747,103.120 92.778 C 102.275 92.918,102.649 90.935,103.572 90.382 C 104.086 90.073,105.442 88.869,106.586 87.704 C 109.199 85.043,109.381 85.631,107.122 89.441 M350.857 85.907 C 350.535 86.111,350.653 86.297,351.286 86.586 C 352.193 86.999,353.338 86.802,353.020 86.287 C 352.920 86.125,352.583 86.090,352.272 86.209 C 351.894 86.354,351.789 86.292,351.957 86.021 C 352.244 85.556,351.526 85.482,350.857 85.907 M328.163 86.547 C 327.829 86.635,327.556 86.856,327.556 87.039 C 327.556 87.231,327.887 87.201,328.336 86.967 C 329.636 86.291,329.588 86.175,328.163 86.547 M353.206 86.939 C 352.501 87.259,352.562 88.061,353.383 89.279 C 356.023 93.191,353.350 99.989,348.199 102.463 C 346.875 103.099,345.896 104.338,347.075 103.886 C 347.445 103.744,347.566 103.828,347.446 104.141 C 347.216 104.740,343.218 106.698,338.971 108.292 C 337.146 108.977,335.352 109.811,334.984 110.146 C 334.070 110.978,331.892 111.892,329.809 112.317 C 328.856 112.512,327.140 112.879,325.997 113.133 C 323.829 113.615,322.665 113.471,324.118 112.902 C 326.819 111.842,322.532 112.416,317.851 113.740 C 313.697 114.915,311.691 114.986,311.305 113.969 C 311.132 113.515,310.741 112.935,310.435 112.682 C 309.668 112.046,309.739 110.686,310.594 109.599 C 311.271 108.737,311.276 108.678,310.680 108.469 C 310.123 108.273,310.143 108.219,310.858 107.992 C 312.539 107.457,311.267 107.462,308.976 107.999 C 307.662 108.307,304.636 108.615,302.253 108.684 L 297.920 108.809 295.534 114.777 C 292.888 121.391,292.885 121.487,295.293 122.290 C 296.791 122.790,308.803 120.898,307.855 120.312 C 307.670 120.198,308.167 120.095,308.959 120.084 C 311.079 120.054,317.192 118.534,316.926 118.102 C 316.796 117.894,316.873 117.848,317.109 117.994 C 317.723 118.374,321.374 117.530,321.092 117.073 C 320.939 116.826,321.068 116.774,321.459 116.924 C 322.289 117.243,325.181 116.481,324.896 116.019 C 324.753 115.789,324.892 115.739,325.271 115.884 C 326.101 116.203,328.994 115.441,328.708 114.979 C 328.565 114.747,328.707 114.700,329.096 114.849 C 329.896 115.156,332.453 114.390,332.167 113.928 C 332.031 113.707,332.186 113.665,332.578 113.815 C 333.411 114.135,335.607 113.406,335.302 112.911 C 335.149 112.664,335.285 112.617,335.698 112.775 C 336.501 113.084,338.727 112.366,338.435 111.893 C 338.298 111.672,338.473 111.620,338.897 111.754 C 339.740 112.022,342.096 111.112,341.384 110.794 C 341.118 110.675,341.234 110.660,341.641 110.759 C 342.554 110.982,344.253 110.254,343.953 109.769 C 343.820 109.553,343.961 109.502,344.315 109.637 C 345.048 109.919,346.673 109.204,346.379 108.729 C 346.246 108.513,346.388 108.462,346.741 108.597 C 347.474 108.879,349.099 108.164,348.806 107.689 C 348.675 107.478,348.808 107.420,349.135 107.545 C 349.742 107.778,353.271 106.105,353.023 105.703 C 352.937 105.564,353.138 105.472,353.470 105.498 C 353.802 105.525,354.036 105.357,353.990 105.125 C 353.939 104.866,354.127 104.789,354.480 104.924 C 354.836 105.061,354.967 105.005,354.827 104.777 C 354.698 104.569,354.860 104.432,355.203 104.459 C 355.536 104.485,355.763 104.301,355.711 104.047 C 355.658 103.795,355.778 103.688,355.977 103.811 C 356.466 104.114,359.161 101.941,358.874 101.476 C 358.745 101.267,358.808 101.207,359.018 101.336 C 359.523 101.649,361.163 99.496,360.913 98.846 C 360.788 98.519,360.858 98.415,361.102 98.566 C 361.623 98.888,362.011 96.745,361.694 95.302 C 361.510 94.464,361.369 94.307,361.125 94.668 C 360.877 95.035,360.820 94.985,360.883 94.454 C 361.009 93.384,360.492 92.158,360.027 92.425 C 359.802 92.554,359.730 92.535,359.866 92.384 C 360.233 91.979,359.475 90.756,359.028 91.032 C 358.817 91.162,358.742 91.112,358.861 90.918 C 358.980 90.726,358.692 90.207,358.222 89.765 C 357.751 89.322,357.366 89.083,357.366 89.233 C 357.366 89.382,357.059 89.137,356.684 88.687 C 356.309 88.237,355.997 87.985,355.991 88.128 C 355.984 88.271,355.671 88.080,355.294 87.703 C 354.874 87.283,354.382 87.105,354.024 87.242 C 353.629 87.393,353.521 87.334,353.690 87.061 C 353.968 86.610,353.946 86.604,353.206 86.939 M330.603 90.925 C 330.299 92.516,331.142 93.241,333.295 93.241 C 334.910 93.241,335.182 93.147,335.182 92.590 C 335.182 92.232,335.420 91.742,335.710 91.501 C 336.001 91.260,336.173 90.997,336.094 90.917 C 336.014 90.838,335.540 91.182,335.040 91.682 C 333.714 93.008,332.088 92.793,331.335 91.191 L 330.778 90.008 330.603 90.925 M8.492 91.854 C 9.237 92.617,9.924 93.241,10.019 93.241 C 10.115 93.241,9.583 92.617,8.839 91.854 C 8.094 91.092,7.407 90.468,7.312 90.468 C 7.216 90.468,7.748 91.092,8.492 91.854 M303.033 91.053 C 303.367 91.141,303.912 91.141,304.246 91.053 C 304.580 90.966,304.307 90.895,303.640 90.895 C 302.972 90.895,302.699 90.966,303.033 91.053 M345.321 93.761 C 345.325 94.523,345.396 94.795,345.479 94.363 C 345.562 93.932,345.559 93.308,345.472 92.977 C 345.385 92.645,345.318 92.998,345.321 93.761 M387.960 94.183 C 388.487 94.263,389.266 94.260,389.693 94.178 C 390.119 94.096,389.688 94.031,388.735 94.033 C 387.782 94.036,387.433 94.103,387.960 94.183 M391.334 94.397 C 391.334 94.486,391.838 94.735,392.453 94.950 C 393.068 95.164,393.419 95.197,393.233 95.022 C 392.838 94.653,391.334 94.157,391.334 94.397 M172.669 96.772 C 175.917 99.826,176.173 102.864,173.555 107.279 C 172.669 108.773,172.635 108.916,173.303 108.319 C 176.854 105.148,176.216 96.014,172.444 96.014 C 172.158 96.014,171.924 95.875,171.924 95.704 C 171.924 95.534,171.651 95.290,171.317 95.162 C 170.984 95.034,171.592 95.759,172.669 96.772 M323.078 95.341 C 323.063 95.638,323.293 96.184,323.589 96.554 C 324.120 97.216,324.123 97.216,323.809 96.534 C 323.634 96.153,323.404 95.607,323.298 95.321 C 323.131 94.871,323.101 94.874,323.078 95.341 M13.518 95.491 C 13.518 95.726,16.334 97.127,16.490 96.970 C 16.563 96.897,15.924 96.499,15.070 96.084 C 14.217 95.669,13.518 95.402,13.518 95.491 M81.975 95.669 C 81.857 95.860,81.395 95.925,80.949 95.813 C 80.320 95.655,79.887 95.886,79.017 96.842 C 77.677 98.315,72.320 102.114,70.403 102.951 C 69.124 103.509,69.154 103.108,70.438 102.478 C 71.065 102.171,72.357 101.203,73.310 100.328 C 75.245 98.551,74.978 98.621,71.928 100.690 C 67.912 103.416,63.155 104.940,56.759 105.551 C 54.158 105.799,54.205 105.763,54.969 106.929 C 55.272 107.391,55.425 107.921,55.310 108.107 C 55.195 108.293,55.450 108.689,55.877 108.988 C 56.304 109.287,56.538 109.532,56.398 109.532 C 56.258 109.532,56.554 110.153,57.056 110.913 C 57.559 111.672,58.111 112.207,58.283 112.100 C 58.455 111.994,58.554 112.035,58.503 112.193 C 58.332 112.716,60.018 115.086,60.395 114.853 C 60.599 114.727,60.670 114.779,60.553 114.968 C 60.153 115.615,70.865 127.369,71.499 126.978 C 71.696 126.856,71.757 126.918,71.634 127.117 C 71.512 127.315,71.644 127.671,71.928 127.906 C 72.340 128.248,72.444 128.244,72.444 127.885 C 72.444 127.612,72.781 127.752,73.300 128.240 C 73.770 128.682,74.088 129.153,74.005 129.287 C 73.922 129.421,74.354 129.983,74.964 130.536 C 75.595 131.109,75.790 131.207,75.417 130.763 C 75.057 130.334,74.919 129.983,75.109 129.983 C 75.548 129.983,76.663 131.194,76.434 131.423 C 76.340 131.516,76.730 132.040,77.300 132.586 C 77.870 133.132,78.336 133.455,78.336 133.304 C 78.336 133.152,77.938 132.716,77.451 132.333 C 76.183 131.335,76.676 131.151,78.025 132.119 C 79.582 133.235,80.509 134.164,80.288 134.386 C 80.186 134.488,79.850 134.319,79.541 134.010 C 78.837 133.306,78.451 133.272,79.026 133.965 C 79.374 134.384,79.344 134.523,78.866 134.706 C 78.392 134.888,78.368 134.996,78.740 135.263 C 79.080 135.506,79.035 135.539,78.568 135.388 C 77.845 135.153,76.474 135.964,76.865 136.395 C 77.007 136.552,76.927 136.566,76.687 136.428 C 76.311 136.212,71.057 138.782,71.057 139.182 C 71.057 139.392,72.185 138.937,72.954 138.417 C 73.330 138.163,73.798 137.956,73.994 137.957 C 74.190 137.958,73.882 138.266,73.310 138.641 C 71.366 139.915,71.057 140.187,71.057 140.631 C 71.057 141.230,71.164 141.208,73.176 140.188 C 74.138 139.701,75.108 139.368,75.331 139.448 C 75.949 139.671,77.001 139.012,76.729 138.572 C 76.579 138.330,76.680 138.257,76.997 138.379 C 77.276 138.486,77.887 138.350,78.354 138.076 L 79.203 137.579 78.336 137.784 C 77.608 137.955,77.566 137.928,78.074 137.609 C 78.406 137.401,78.952 137.276,79.287 137.333 C 79.622 137.389,79.859 137.246,79.814 137.014 C 79.763 136.755,79.951 136.678,80.304 136.813 C 80.649 136.946,80.790 136.893,80.658 136.680 C 80.530 136.472,80.864 136.315,81.467 136.297 C 82.782 136.260,82.746 136.050,83.029 145.407 C 83.374 156.785,83.754 160.952,83.827 154.159 C 83.887 148.631,84.373 147.345,84.712 151.820 C 84.828 153.345,85.016 155.820,85.130 157.319 C 85.337 160.038,85.335 160.047,84.437 160.272 C 83.941 160.397,83.536 160.651,83.536 160.838 C 83.536 161.279,83.589 161.272,84.782 160.676 L 85.789 160.174 85.558 155.737 C 85.431 153.297,85.275 148.161,85.211 144.325 C 85.121 138.924,84.998 137.387,84.662 137.516 C 83.891 137.812,84.033 134.952,84.834 134.055 C 85.401 133.421,86.505 133.197,86.138 133.792 C 86.011 133.996,86.170 134.041,86.533 133.901 C 86.906 133.758,86.980 133.615,86.724 133.530 C 85.910 133.258,86.330 132.777,87.703 132.407 C 88.470 132.200,89.226 132.111,89.384 132.208 C 89.541 132.305,89.966 132.117,90.329 131.790 C 90.691 131.463,91.183 131.180,91.421 131.161 C 92.427 131.081,92.578 131.005,92.377 130.680 C 92.251 130.476,92.407 130.430,92.760 130.565 C 93.178 130.726,93.276 130.667,93.090 130.365 C 92.924 130.097,93.000 129.970,93.293 130.027 C 94.051 130.175,95.349 129.616,95.118 129.241 C 95.000 129.052,95.115 128.925,95.372 128.961 C 96.277 129.085,96.746 128.939,96.536 128.600 C 96.415 128.404,96.554 128.346,96.862 128.464 C 97.159 128.578,97.400 128.489,97.400 128.266 C 97.400 128.044,97.545 127.951,97.721 128.060 C 98.199 128.356,99.840 127.511,99.586 127.100 C 99.452 126.884,99.594 126.833,99.947 126.968 C 100.627 127.229,102.315 126.551,102.051 126.123 C 101.857 125.809,105.373 124.076,106.130 124.112 C 106.381 124.124,106.212 124.284,105.756 124.466 C 105.299 124.649,105.012 124.885,105.118 124.991 C 105.224 125.097,105.754 124.944,106.295 124.651 C 106.836 124.358,107.084 124.112,106.846 124.104 C 106.173 124.082,106.335 123.400,107.019 123.375 C 107.452 123.359,107.384 123.256,106.780 123.015 C 106.315 122.829,105.535 122.737,105.047 122.810 C 104.559 122.883,104.354 122.878,104.593 122.798 C 105.112 122.624,105.166 121.791,104.678 121.490 C 104.285 121.247,98.207 113.975,97.299 112.661 C 96.974 112.190,96.707 111.935,96.707 112.095 C 96.707 112.256,97.967 114.041,99.506 116.063 C 101.046 118.085,102.144 119.794,101.946 119.860 C 101.530 119.998,101.849 122.074,102.335 122.395 C 102.851 122.735,100.189 124.191,90.778 128.715 C 89.328 129.412,87.947 129.983,87.708 129.983 C 87.443 129.983,87.362 130.211,87.499 130.570 C 87.697 131.084,87.637 131.078,87.017 130.516 C 86.627 130.164,86.308 129.529,86.308 129.106 C 86.308 128.683,86.058 127.654,85.751 126.820 C 85.444 125.986,85.151 124.211,85.100 122.877 C 84.964 119.371,84.542 117.385,84.178 118.544 C 83.979 119.176,83.937 118.989,84.019 117.851 C 84.137 116.230,83.575 112.933,83.219 113.153 C 83.107 113.222,83.011 112.475,83.005 111.492 C 83.000 110.509,82.805 108.384,82.572 106.768 C 81.809 101.467,81.991 95.746,82.929 95.565 C 83.709 95.415,83.709 95.415,82.949 95.368 C 82.532 95.342,82.093 95.477,81.975 95.669 M383.364 96.186 C 382.916 96.662,382.616 97.109,382.696 97.180 C 382.777 97.251,383.205 96.862,383.649 96.315 C 384.641 95.091,384.466 95.012,383.364 96.186 M393.761 95.429 C 393.761 95.489,394.268 95.996,394.887 96.556 L 396.014 97.574 394.996 96.447 C 394.047 95.397,393.761 95.161,393.761 95.429 M331.109 96.955 C 331.633 97.035,332.491 97.035,333.016 96.955 C 333.540 96.876,333.111 96.811,332.062 96.811 C 331.014 96.811,330.585 96.876,331.109 96.955 M18.024 97.688 C 18.310 97.865,18.934 98.114,19.411 98.242 C 20.013 98.403,20.119 98.375,19.757 98.152 C 19.471 97.975,18.847 97.727,18.371 97.599 C 17.769 97.438,17.663 97.465,18.024 97.688 M317.552 98.572 C 317.505 99.910,315.911 101.914,313.863 103.211 C 313.483 103.452,313.649 103.424,314.233 103.150 C 316.539 102.063,318.090 99.813,317.754 98.042 C 317.653 97.514,317.582 97.701,317.552 98.572 M21.317 98.973 C 21.889 99.235,22.591 99.444,22.877 99.438 C 23.163 99.432,22.851 99.217,22.184 98.960 C 20.601 98.351,19.978 98.360,21.317 98.973 M342.630 98.794 C 342.510 98.989,341.603 99.611,340.616 100.177 C 339.629 100.743,338.986 101.208,339.187 101.210 C 339.659 101.214,342.652 99.318,342.960 98.821 C 343.089 98.611,343.117 98.440,343.022 98.440 C 342.927 98.440,342.750 98.599,342.630 98.794 M23.917 99.811 C 24.203 100.004,24.736 100.165,25.101 100.168 C 25.988 100.175,25.711 99.977,24.437 99.692 C 23.677 99.522,23.537 99.554,23.917 99.811 M206.586 99.597 C 206.586 100.110,208.709 101.906,209.284 101.879 C 209.761 101.857,209.776 101.814,209.359 101.663 C 209.073 101.560,208.332 100.995,207.712 100.409 C 207.093 99.823,206.586 99.458,206.586 99.597 M291.750 102.677 C 291.443 103.323,290.830 104.046,290.387 104.283 C 289.944 104.520,289.366 105.213,289.102 105.823 C 288.839 106.433,288.252 107.790,287.800 108.839 C 286.685 111.420,286.440 111.801,285.968 111.690 C 285.709 111.629,285.643 111.847,285.786 112.296 C 286.138 113.407,285.801 113.191,281.870 109.792 C 277.149 105.708,275.229 104.205,275.013 104.421 C 274.918 104.516,275.610 105.146,276.551 105.822 C 279.014 107.592,285.044 112.881,287.859 115.741 C 290.974 118.907,290.603 119.152,293.455 112.043 C 295.744 106.336,295.994 105.877,296.921 105.674 C 297.917 105.455,297.917 105.455,296.748 105.414 C 296.017 105.388,295.331 105.092,294.928 104.626 C 294.572 104.216,294.281 104.071,294.281 104.304 C 294.281 104.963,293.293 103.842,292.764 102.584 L 292.308 101.501 291.750 102.677 M333.025 101.814 C 333.840 101.887,335.088 101.886,335.798 101.812 C 336.508 101.737,335.841 101.677,334.315 101.679 C 332.790 101.680,332.209 101.741,333.025 101.814 M384.131 103.124 C 384.839 103.865,385.475 104.401,385.544 104.315 C 385.612 104.230,385.033 103.623,384.255 102.968 L 382.842 101.777 384.131 103.124 M394.454 103.692 C 393.787 104.277,393.555 104.597,393.938 104.403 C 394.571 104.083,396.141 102.580,395.808 102.614 C 395.730 102.621,395.121 103.107,394.454 103.692 M81.354 105.459 C 81.271 105.888,81.204 105.537,81.204 104.679 C 81.204 103.821,81.271 103.471,81.354 103.899 C 81.436 104.328,81.436 105.030,81.354 105.459 M311.265 104.159 C 310.598 104.416,310.286 104.631,310.572 104.637 C 310.858 104.643,311.560 104.434,312.132 104.172 C 313.470 103.559,312.848 103.550,311.265 104.159 M307.972 105.026 C 307.029 105.266,307.013 105.292,307.799 105.307 C 308.276 105.316,308.977 105.190,309.359 105.026 C 310.213 104.659,309.416 104.659,307.972 105.026 M387.448 105.088 C 387.774 105.218,388.899 105.324,389.948 105.324 C 390.997 105.324,392.122 105.218,392.448 105.088 C 392.775 104.959,391.650 104.853,389.948 104.853 C 388.246 104.853,387.121 104.959,387.448 105.088 M115.771 105.699 C 115.771 105.878,115.608 106.126,115.408 106.249 C 114.899 106.564,113.948 106.145,114.210 105.722 C 114.483 105.281,115.771 105.262,115.771 105.699 M199.120 105.833 C 198.512 107.548,198.437 135.706,199.028 140.208 C 201.075 155.786,201.731 161.144,201.732 162.305 C 201.733 163.173,201.982 163.853,202.481 164.353 L 203.229 165.101 202.501 164.910 C 201.344 164.608,199.555 166.387,199.847 167.550 C 200.047 168.344,200.255 168.459,201.511 168.468 C 202.555 168.476,202.797 168.566,202.399 168.799 C 201.454 169.352,199.848 169.041,199.703 168.277 C 199.632 167.900,199.469 167.513,199.341 167.418 C 199.115 167.249,191.226 151.412,189.874 148.411 C 189.501 147.585,189.129 146.977,189.046 147.060 C 188.963 147.143,190.004 149.535,191.360 152.375 C 192.715 155.215,194.374 158.709,195.045 160.139 C 195.717 161.568,196.717 163.687,197.267 164.845 C 197.817 166.004,198.267 167.122,198.267 167.330 C 198.267 167.537,198.402 167.759,198.568 167.822 C 198.733 167.886,198.988 168.320,199.133 168.788 C 199.369 169.544,199.340 169.581,198.878 169.118 C 198.592 168.832,198.239 168.216,198.093 167.748 C 197.946 167.280,197.720 166.820,197.590 166.724 C 197.261 166.484,195.841 163.470,195.841 163.013 C 195.841 162.597,194.803 162.100,194.522 162.381 C 194.316 162.588,195.536 165.107,195.927 165.280 C 196.070 165.344,196.187 165.626,196.187 165.907 C 196.187 166.193,196.357 166.314,196.571 166.182 C 196.829 166.022,196.878 166.185,196.721 166.681 C 196.592 167.086,196.635 167.418,196.817 167.418 C 197.318 167.418,197.581 168.681,197.758 171.924 C 197.846 173.544,198.068 176.040,198.252 177.470 C 198.645 180.525,199.080 193.872,198.796 194.156 C 198.466 194.486,198.309 200.678,198.626 200.874 C 198.791 200.976,198.930 203.589,198.936 206.682 C 198.947 211.949,198.342 214.264,198.237 209.359 C 198.200 207.645,198.168 207.569,197.923 208.606 C 197.614 209.914,197.263 210.213,193.110 212.727 C 189.949 214.640,187.833 216.301,188.069 216.682 C 188.318 217.085,196.282 214.818,198.002 213.855 C 198.929 213.337,199.010 213.423,198.894 214.804 C 198.789 216.066,198.748 216.100,196.707 216.608 C 195.563 216.892,194.861 217.174,195.147 217.235 C 195.433 217.295,196.525 217.068,197.574 216.731 L 199.480 216.118 199.653 212.478 C 199.794 209.517,199.878 209.083,200.104 210.148 C 200.426 211.667,201.040 211.552,201.040 209.974 C 201.040 209.381,201.151 209.007,201.286 209.143 C 201.421 209.278,201.616 211.605,201.719 214.313 L 201.906 219.237 203.466 219.266 L 205.026 219.294 203.553 219.160 L 202.080 219.026 202.080 211.127 C 202.080 201.823,201.677 194.152,201.386 197.920 C 201.290 199.159,201.196 197.054,201.175 193.241 C 201.137 185.931,200.903 183.707,200.242 184.368 C 199.227 185.383,198.960 184.772,198.960 181.427 C 198.960 177.271,199.715 176.941,200.024 180.963 C 200.169 182.843,200.239 182.019,200.284 177.903 L 200.347 172.270 201.473 172.225 L 202.600 172.179 201.386 171.924 C 199.772 171.584,220.013 171.509,224.437 171.839 L 227.903 172.097 224.263 172.289 C 221.847 172.417,223.728 172.504,229.859 172.549 C 237.927 172.608,239.120 172.549,239.300 172.079 C 239.419 171.771,239.361 171.631,239.164 171.753 C 238.976 171.869,238.821 171.731,238.821 171.445 C 238.821 171.159,238.641 170.814,238.421 170.677 C 238.157 170.514,238.116 170.584,238.302 170.884 C 238.487 171.184,238.447 171.254,238.182 171.090 C 237.962 170.954,237.782 170.632,237.782 170.374 C 237.782 170.117,236.651 168.941,235.269 167.762 C 233.886 166.584,232.288 165.201,231.716 164.690 C 231.144 164.179,229.742 162.985,228.601 162.037 C 227.460 161.088,225.954 159.793,225.254 159.159 C 223.771 157.816,221.787 156.321,221.510 156.337 C 221.404 156.343,221.584 156.551,221.911 156.799 C 222.567 157.297,226.859 161.103,228.620 162.749 C 229.826 163.875,229.818 163.747,228.943 167.637 C 228.724 168.612,228.800 168.760,229.688 169.083 C 230.453 169.361,229.384 169.460,224.957 169.522 C 217.262 169.628,215.144 169.519,214.643 168.990 C 214.501 168.840,214.775 168.823,215.251 168.952 C 216.085 169.178,216.092 169.166,215.443 168.647 C 215.072 168.350,214.526 168.183,214.230 168.275 C 213.934 168.367,213.458 168.279,213.172 168.080 C 212.766 167.798,212.823 167.767,213.432 167.938 C 214.832 168.332,214.269 167.877,210.259 165.374 C 207.593 163.710,206.099 162.975,205.667 163.115 C 205.184 163.272,205.143 163.240,205.501 162.985 C 205.898 162.702,205.890 162.597,205.450 162.346 C 205.053 162.119,204.484 158.984,203.134 149.587 C 202.150 142.735,201.268 137.004,201.174 136.852 C 200.928 136.454,200.991 125.918,201.297 116.464 L 201.560 108.319 202.773 108.397 C 203.440 108.439,206.170 108.503,208.839 108.538 C 211.508 108.574,213.302 108.709,212.825 108.839 C 211.664 109.157,217.983 109.728,221.664 109.638 C 223.479 109.593,224.078 109.661,223.397 109.832 C 222.048 110.172,227.598 110.785,230.676 110.637 C 231.966 110.574,232.585 110.653,232.306 110.844 C 231.688 111.269,236.958 111.992,238.658 111.716 C 239.486 111.582,239.891 111.630,239.757 111.847 C 239.493 112.274,244.574 113.078,245.667 112.782 C 246.101 112.665,246.447 112.726,246.447 112.921 C 246.447 113.407,250.184 114.018,252.029 113.833 C 253.094 113.727,253.344 113.772,252.860 113.985 C 251.972 114.374,255.134 114.922,257.712 114.825 C 259.065 114.775,259.255 114.826,258.579 115.058 C 258.068 115.234,257.943 115.370,258.276 115.390 C 258.585 115.409,259.365 115.506,260.009 115.605 C 260.918 115.744,261.024 115.711,260.485 115.456 C 259.865 115.161,259.896 115.124,260.782 115.102 C 261.547 115.084,261.725 115.203,261.563 115.625 C 261.391 116.072,261.534 116.133,262.340 115.956 C 262.884 115.837,264.696 115.909,266.369 116.117 C 269.423 116.496,270.260 116.385,269.314 115.724 C 267.866 114.714,278.844 116.792,284.048 118.513 C 287.293 119.586,287.748 119.617,286.995 118.709 C 286.746 118.410,286.451 118.304,286.339 118.474 C 286.224 118.648,285.710 118.606,285.158 118.376 C 284.620 118.153,284.230 117.900,284.291 117.815 C 284.629 117.344,280.682 113.595,279.778 113.529 C 279.414 113.502,278.617 113.060,278.007 112.546 C 276.218 111.040,275.097 111.722,276.441 113.498 C 276.721 113.868,276.950 114.520,276.950 114.947 C 276.950 115.476,277.198 115.771,277.730 115.873 C 278.407 116.004,278.386 116.030,277.568 116.071 C 277.051 116.097,275.959 115.896,275.142 115.624 C 274.325 115.352,273.267 115.062,272.790 114.978 L 271.924 114.826 272.840 114.779 C 273.344 114.753,273.846 114.497,273.956 114.211 C 274.065 113.925,274.394 113.692,274.686 113.692 C 274.978 113.692,275.217 113.458,275.217 113.172 C 275.217 112.834,274.878 112.652,274.250 112.652 C 273.718 112.652,272.672 112.340,271.924 111.958 C 270.328 111.145,270.374 111.148,269.550 111.773 C 268.840 112.310,269.646 114.003,270.624 114.027 C 271.242 114.043,271.163 114.731,270.543 114.731 C 270.060 114.731,264.556 113.658,259.099 112.499 C 257.764 112.216,254.801 111.741,252.513 111.444 C 250.225 111.148,246.872 110.669,245.061 110.380 C 234.149 108.641,216.932 106.713,206.586 106.071 C 203.250 105.864,200.237 105.634,199.892 105.560 C 199.547 105.487,199.199 105.609,199.120 105.833 M293.934 106.260 C 293.934 106.928,294.270 106.890,294.877 106.153 C 295.345 105.586,295.361 105.591,295.136 106.239 C 295.003 106.620,294.769 107.400,294.616 107.972 C 294.134 109.770,290.740 117.851,290.466 117.851 C 290.322 117.851,289.611 117.110,288.885 116.205 C 288.135 115.269,287.939 114.895,288.432 115.338 C 289.745 116.519,289.990 116.351,291.467 113.258 C 292.973 110.104,293.712 107.423,292.737 108.645 C 291.995 109.577,292.005 108.650,292.758 106.768 C 293.284 105.452,293.934 105.171,293.934 106.260 M304.943 105.618 C 305.375 105.701,305.998 105.698,306.330 105.611 C 306.661 105.524,306.308 105.456,305.546 105.460 C 304.783 105.464,304.512 105.535,304.943 105.618 M300.096 105.973 C 300.911 106.047,302.159 106.046,302.869 105.971 C 303.579 105.897,302.912 105.837,301.386 105.838 C 299.861 105.839,299.281 105.900,300.096 105.973 M58.403 109.619 C 58.561 109.476,58.579 109.552,58.443 109.789 C 58.299 110.038,58.713 110.896,59.427 111.832 C 60.683 113.476,61.153 114.723,60.052 113.489 C 59.422 112.782,57.525 110.092,57.018 109.185 C 56.809 108.812,56.922 108.837,57.421 109.273 C 57.803 109.607,58.245 109.763,58.403 109.619 M168.284 109.071 C 167.712 109.148,165.529 109.519,163.432 109.895 C 161.334 110.272,154.830 111.359,148.977 112.311 C 143.125 113.263,137.928 114.197,137.430 114.387 C 136.931 114.576,136.144 114.731,135.679 114.731 C 135.127 114.731,134.835 114.928,134.835 115.302 C 134.835 115.984,133.462 119.932,133.024 120.509 C 132.246 121.535,126.034 120.639,125.024 119.355 C 124.673 118.909,124.113 118.544,123.779 118.544 C 122.275 118.544,121.240 116.225,121.228 112.827 C 121.223 111.351,121.173 111.223,120.891 111.960 C 119.593 115.349,121.974 120.091,125.917 121.973 C 128.249 123.085,131.199 123.883,131.937 123.600 C 132.925 123.221,132.772 124.587,131.087 131.196 C 130.698 132.721,130.330 134.359,130.268 134.835 C 130.206 135.312,130.017 135.650,129.848 135.586 C 129.679 135.522,129.396 135.678,129.219 135.932 C 128.992 136.259,128.955 136.186,129.095 135.684 C 129.206 135.284,129.056 134.676,128.753 134.297 C 128.233 133.647,128.221 133.653,128.421 134.489 C 128.597 135.221,128.570 135.261,128.247 134.746 C 128.037 134.411,127.963 133.979,128.081 133.787 C 128.298 133.436,122.734 123.944,122.468 124.210 C 122.390 124.289,123.269 125.913,124.421 127.821 C 126.546 131.338,127.084 132.530,125.823 130.928 C 125.442 130.443,125.130 129.876,125.130 129.668 C 125.130 129.460,124.985 129.289,124.807 129.289 C 124.629 129.289,124.376 128.950,124.244 128.536 C 124.113 128.122,123.859 127.615,123.681 127.410 C 122.720 126.304,120.245 122.158,120.074 121.368 L 119.876 120.451 120.638 121.317 L 121.399 122.184 120.892 121.317 C 120.613 120.841,120.186 120.075,119.943 119.615 C 119.553 118.879,119.462 118.848,119.178 119.355 C 119.001 119.672,118.591 119.933,118.267 119.936 C 117.876 119.940,117.814 120.028,118.083 120.199 C 118.307 120.341,118.605 120.924,118.748 121.494 C 118.990 122.467,118.967 122.498,118.373 122.010 C 117.777 121.521,117.768 121.536,118.217 122.257 C 118.545 122.784,118.773 122.895,118.947 122.613 C 119.256 122.112,119.126 121.949,121.093 125.303 C 121.988 126.828,122.873 128.310,123.060 128.596 C 123.248 128.882,123.501 129.350,123.624 129.636 C 123.746 129.922,124.603 131.425,125.528 132.977 C 126.453 134.529,127.210 135.958,127.210 136.154 C 127.210 136.350,127.327 136.563,127.470 136.626 C 127.613 136.690,128.010 137.274,128.352 137.924 C 128.759 138.698,128.810 138.969,128.498 138.710 C 128.235 138.492,127.721 137.689,127.355 136.925 C 126.989 136.162,126.564 135.535,126.409 135.533 C 126.082 135.528,126.032 135.423,127.703 138.221 L 129.000 140.393 127.900 144.633 C 127.294 146.965,126.598 149.887,126.352 151.127 C 125.611 154.856,125.070 157.153,124.760 157.886 C 124.598 158.267,124.392 158.969,124.301 159.445 C 124.211 159.922,124.172 159.733,124.216 159.025 C 124.292 157.774,123.304 156.824,122.153 157.041 C 121.405 157.183,121.004 156.976,120.804 156.347 C 120.677 155.946,120.214 155.632,119.654 155.567 L 118.718 155.459 118.544 150.721 C 118.449 148.115,118.277 145.889,118.162 145.775 C 117.393 145.010,117.727 171.277,118.639 183.291 C 118.875 186.398,118.969 189.049,118.850 189.184 C 118.547 189.524,117.504 194.940,117.504 196.174 C 117.504 196.731,117.367 197.271,117.198 197.375 C 117.030 197.479,116.781 198.463,116.645 199.562 C 116.509 200.661,116.276 201.716,116.127 201.906 C 115.978 202.097,115.744 203.189,115.606 204.333 C 115.468 205.477,115.255 206.568,115.131 206.759 C 114.388 207.909,114.175 210.786,114.764 211.707 C 115.517 212.884,119.024 216.656,118.704 215.945 C 118.575 215.659,119.114 216.098,119.900 216.920 C 120.687 217.743,121.233 218.573,121.114 218.765 C 120.830 219.225,122.354 220.840,122.808 220.560 C 123.013 220.433,123.050 220.518,122.897 220.766 C 122.594 221.254,123.681 222.610,124.145 222.323 C 124.315 222.218,124.432 222.261,124.404 222.418 C 124.281 223.130,124.479 223.352,124.815 222.877 C 125.142 222.415,125.166 222.415,125.030 222.877 C 124.811 223.623,125.433 224.674,125.927 224.391 C 126.156 224.260,126.228 224.280,126.086 224.436 C 125.735 224.824,126.507 225.697,126.956 225.419 C 127.155 225.296,127.214 225.362,127.088 225.567 C 126.962 225.771,128.030 227.304,129.461 228.974 C 132.510 232.534,132.485 232.447,130.589 232.934 C 128.569 233.454,128.318 233.563,129.076 233.595 C 129.435 233.610,130.324 233.444,131.052 233.226 L 132.375 232.829 132.306 230.626 C 132.222 227.978,132.203 227.983,134.075 230.156 C 135.086 231.331,135.812 231.874,136.328 231.842 C 137.059 231.796,137.061 231.789,136.367 231.652 C 135.690 231.518,133.201 228.947,128.465 223.487 C 127.350 222.202,126.276 221.252,126.077 221.374 C 125.860 221.509,125.821 221.428,125.979 221.172 C 126.300 220.653,124.836 218.991,124.333 219.302 C 124.137 219.422,124.089 219.346,124.224 219.128 C 124.357 218.913,123.914 218.151,123.234 217.428 C 122.430 216.572,122.084 216.358,122.235 216.811 C 122.363 217.192,122.402 217.426,122.322 217.331 C 121.125 215.906,120.848 215.476,121.404 215.906 C 122.301 216.601,122.141 215.841,121.205 214.962 C 120.762 214.546,120.269 214.324,120.109 214.468 C 119.950 214.613,119.926 214.546,120.055 214.320 C 120.192 214.082,119.555 213.133,118.546 212.067 L 116.800 210.225 117.009 208.146 C 117.124 207.002,117.422 205.286,117.671 204.333 C 117.920 203.380,118.387 201.352,118.710 199.827 C 119.032 198.302,119.470 196.595,119.683 196.034 C 119.896 195.473,120.060 194.147,120.048 193.088 C 120.031 191.700,120.099 191.404,120.290 192.028 C 120.436 192.504,120.572 192.660,120.594 192.374 C 120.616 192.088,120.723 191.464,120.832 190.988 C 120.988 190.308,120.951 190.234,120.659 190.641 C 120.358 191.063,120.287 190.985,120.283 190.228 C 120.277 189.212,120.800 188.641,121.096 189.339 C 121.197 189.579,121.201 189.151,121.105 188.388 C 120.943 187.111,121.244 185.214,122.563 179.203 C 122.835 177.964,123.154 176.365,123.273 175.650 C 123.477 174.415,123.897 173.954,124.148 174.688 C 124.211 174.874,124.277 174.038,124.294 172.831 C 124.330 170.246,124.655 169.076,125.125 169.836 C 125.317 170.146,125.376 169.759,125.285 168.786 C 125.174 167.589,125.210 167.438,125.448 168.111 C 125.616 168.588,125.772 168.744,125.793 168.458 C 125.815 168.172,125.933 167.562,126.056 167.104 C 126.220 166.490,126.165 166.340,125.849 166.535 C 125.542 166.725,125.454 166.565,125.542 165.983 C 125.611 165.533,125.842 165.198,126.057 165.240 C 126.313 165.289,126.402 164.812,126.314 163.853 C 126.208 162.685,126.243 162.566,126.488 163.258 C 126.656 163.735,126.812 163.891,126.833 163.605 C 126.855 163.319,126.973 162.710,127.096 162.251 C 127.252 161.666,127.199 161.491,126.918 161.665 C 126.665 161.821,126.516 161.656,126.516 161.219 C 126.516 160.396,127.075 159.949,127.329 160.570 C 127.426 160.809,127.442 160.225,127.363 159.272 C 127.255 157.972,127.296 157.756,127.527 158.406 C 127.696 158.882,127.852 159.038,127.873 158.752 C 127.895 158.466,128.013 157.857,128.136 157.398 C 128.292 156.813,128.239 156.638,127.958 156.812 C 127.705 156.968,127.556 156.804,127.556 156.367 C 127.556 155.543,128.115 155.097,128.368 155.717 C 128.466 155.957,128.482 155.373,128.403 154.419 C 128.305 153.237,128.347 152.961,128.536 153.553 L 128.812 154.419 129.071 153.412 C 129.244 152.739,129.187 152.317,128.899 152.139 C 128.562 151.931,128.556 151.583,128.870 150.546 C 129.091 149.817,129.336 148.908,129.414 148.527 C 129.510 148.059,129.578 148.172,129.626 148.873 L 129.696 149.913 130.002 148.887 C 130.207 148.201,130.181 147.783,129.925 147.624 C 129.692 147.481,129.635 146.998,129.779 146.397 C 129.911 145.853,130.169 144.549,130.355 143.501 C 130.833 140.796,131.023 140.386,131.400 141.248 C 131.604 141.715,131.651 141.376,131.544 140.208 C 131.440 139.069,131.479 138.772,131.658 139.341 L 131.931 140.208 132.141 139.168 C 132.257 138.596,132.264 137.676,132.157 137.124 C 132.037 136.508,132.094 136.200,132.303 136.329 C 132.736 136.597,133.477 133.459,133.217 132.463 C 133.109 132.052,133.169 131.716,133.349 131.716 C 133.796 131.716,134.499 128.535,134.257 127.610 C 134.149 127.199,134.209 126.863,134.389 126.863 C 134.788 126.863,135.613 123.467,135.327 123.004 C 135.214 122.822,135.285 122.477,135.484 122.238 C 135.683 121.998,136.047 120.736,136.294 119.433 C 136.831 116.590,136.542 116.749,142.981 115.771 C 145.650 115.366,149.081 114.819,150.607 114.557 C 152.132 114.295,154.939 113.827,156.846 113.519 C 158.752 113.210,161.560 112.743,163.085 112.480 C 164.610 112.218,166.647 111.904,167.612 111.784 L 169.365 111.565 170.527 114.188 C 171.166 115.631,171.786 116.811,171.906 116.811 C 172.025 116.811,172.149 117.159,172.181 117.584 C 172.213 118.010,172.478 118.532,172.769 118.745 C 173.061 118.958,173.218 119.214,173.119 119.314 C 172.803 119.629,173.742 121.305,174.108 121.079 C 174.300 120.961,174.353 121.032,174.226 121.238 C 173.907 121.754,174.715 123.426,175.153 123.156 C 175.355 123.031,175.428 123.147,175.321 123.427 C 175.039 124.169,175.659 125.566,176.139 125.269 C 176.416 125.098,176.476 125.204,176.325 125.597 C 176.010 126.416,176.791 128.070,177.213 127.480 C 177.433 127.172,177.482 127.258,177.373 127.764 C 177.286 128.164,177.435 128.865,177.704 129.323 L 178.192 130.156 177.988 129.289 C 177.810 128.538,177.835 128.506,178.175 129.051 C 178.391 129.396,178.478 129.911,178.369 130.195 C 178.258 130.485,178.320 130.620,178.511 130.502 C 178.698 130.386,179.398 131.444,180.067 132.853 C 181.346 135.549,181.500 136.051,180.940 135.704 C 180.740 135.581,180.688 135.728,180.815 136.060 C 180.989 136.513,181.091 136.534,181.324 136.164 C 181.535 135.829,181.733 136.011,182.045 136.828 C 182.281 137.448,182.584 137.955,182.717 137.955 C 182.851 137.955,183.061 138.412,183.184 138.971 C 183.306 139.530,183.629 140.171,183.900 140.396 C 184.826 141.165,184.812 139.910,183.874 138.147 C 183.310 137.085,183.102 136.344,183.309 136.136 C 183.517 135.928,183.726 136.203,183.875 136.881 C 184.061 137.728,184.749 138.459,184.749 137.810 C 184.749 137.678,172.203 111.935,171.137 109.879 C 170.676 108.990,170.100 108.826,168.284 109.071 M217.938 109.087 C 217.413 109.167,216.555 109.167,216.031 109.087 C 215.507 109.008,215.936 108.943,216.984 108.943 C 218.033 108.943,218.462 109.008,217.938 109.087 M265.523 109.083 C 265.562 110.032,268.284 111.864,268.284 110.942 C 268.284 110.738,268.057 110.572,267.780 110.572 C 267.503 110.572,266.879 110.175,266.394 109.690 C 265.908 109.204,265.516 108.931,265.523 109.083 M270.711 112.478 C 270.711 112.764,270.555 112.998,270.364 112.998 C 270.173 112.998,270.017 112.764,270.017 112.478 C 270.017 112.192,270.173 111.958,270.364 111.958 C 270.555 111.958,270.711 112.192,270.711 112.478 M286.926 113.699 C 287.332 114.350,287.313 114.369,286.663 113.963 C 285.964 113.526,285.725 112.998,286.225 112.998 C 286.370 112.998,286.685 113.314,286.926 113.699 M322.357 113.692 C 322.357 113.882,321.850 114.036,321.231 114.033 C 320.376 114.029,320.229 113.946,320.624 113.692 C 321.305 113.251,322.357 113.251,322.357 113.692 M319.516 114.222 C 319.002 114.736,317.105 115.040,317.517 114.542 C 317.748 114.265,318.333 114.038,318.818 114.038 C 319.303 114.038,319.617 114.121,319.516 114.222 M274.870 114.731 C 274.870 114.922,275.191 115.078,275.584 115.078 C 275.976 115.078,276.201 114.922,276.083 114.731 C 275.965 114.541,275.644 114.385,275.369 114.385 C 275.095 114.385,274.870 114.541,274.870 114.731 M268.284 115.078 C 268.284 115.516,267.576 115.516,266.898 115.078 C 266.493 114.816,266.588 114.741,267.331 114.737 C 267.855 114.734,268.284 114.887,268.284 115.078 M135.831 116.147 C 135.544 116.325,135.304 116.293,135.226 116.067 C 135.155 115.860,135.311 115.558,135.573 115.396 C 135.860 115.217,136.100 115.249,136.177 115.476 C 136.248 115.682,136.092 115.984,135.831 116.147 M264.125 116.464 C 265.310 116.844,266.221 116.844,265.338 116.464 C 264.957 116.301,264.333 116.171,263.951 116.177 C 263.394 116.185,263.428 116.241,264.125 116.464 M268.313 117.282 C 268.393 117.351,268.925 117.511,269.497 117.639 C 270.257 117.809,270.397 117.777,270.017 117.520 C 269.549 117.203,267.965 116.982,268.313 117.282 M32.046 119.324 L 30.676 120.797 32.149 119.427 C 32.959 118.673,33.622 118.011,33.622 117.954 C 33.622 117.692,33.320 117.954,32.046 119.324 M84.898 121.057 C 84.911 121.200,84.766 121.317,84.575 121.317 C 84.385 121.317,84.240 120.888,84.253 120.364 C 84.276 119.475,84.802 120.041,84.898 121.057 M280.599 121.346 C 279.810 122.150,279.677 122.461,280.030 122.679 C 280.352 122.878,280.375 123.035,280.106 123.201 C 279.895 123.331,279.723 123.263,279.723 123.050 C 279.723 122.837,279.577 122.753,279.400 122.862 C 279.222 122.972,279.017 122.630,278.945 122.103 C 278.872 121.575,278.784 122.989,278.748 125.244 C 278.713 127.498,278.535 130.696,278.353 132.349 C 278.171 134.003,277.915 137.305,277.785 139.688 C 277.577 143.488,277.427 144.264,276.560 145.996 C 276.003 147.109,275.660 148.244,275.773 148.596 C 275.910 149.018,275.875 149.082,275.665 148.792 C 275.454 148.500,274.616 149.868,273.029 153.092 C 271.750 155.692,270.771 157.888,270.855 157.972 C 270.938 158.056,271.886 156.355,272.961 154.192 C 274.036 152.029,274.823 150.650,274.711 151.127 C 274.599 151.603,274.413 152.422,274.298 152.946 C 274.184 153.471,273.937 153.899,273.750 153.899 C 273.563 153.899,273.499 154.133,273.609 154.419 C 273.719 154.705,273.657 154.939,273.473 154.939 C 273.288 154.939,273.137 155.251,273.137 155.631 C 273.137 156.012,272.438 157.911,271.584 159.852 L 270.032 163.380 271.774 165.222 C 273.353 166.892,273.496 167.174,273.295 168.241 C 273.162 168.951,273.225 169.511,273.452 169.651 C 273.660 169.780,273.830 170.066,273.830 170.287 C 273.830 170.508,272.928 169.836,271.826 168.793 C 270.724 167.751,271.205 168.298,272.895 170.008 C 275.835 172.984,275.958 173.172,275.756 174.341 C 275.099 178.131,274.839 181.385,274.772 186.655 C 274.730 189.896,274.603 191.846,274.489 190.988 L 274.281 189.428 274.205 191.334 C 274.163 192.383,274.016 194.960,273.879 197.062 L 273.629 200.883 271.043 204.018 C 269.621 205.742,266.898 209.163,264.991 211.619 C 263.085 214.076,260.997 216.681,260.352 217.409 C 259.707 218.136,259.403 218.646,259.676 218.541 C 260.076 218.387,260.158 218.708,260.091 220.170 C 260.045 221.171,260.162 222.177,260.352 222.405 C 260.703 222.828,265.424 223.773,265.717 223.480 C 265.805 223.392,264.703 223.111,263.268 222.856 C 261.833 222.601,260.659 222.259,260.659 222.095 C 260.659 221.931,263.739 217.897,267.504 213.130 C 277.461 200.522,276.675 202.059,275.881 196.756 C 275.553 194.569,275.560 193.977,275.916 193.757 C 276.254 193.548,276.309 192.622,276.148 189.895 C 276.017 187.688,276.055 186.575,276.245 187.002 C 276.514 187.604,276.558 187.559,276.579 186.655 C 276.697 181.554,277.368 168.213,277.658 165.165 C 277.859 163.068,278.175 158.856,278.362 155.806 C 278.789 148.848,279.200 143.663,279.694 138.995 C 280.470 131.669,281.109 124.475,281.114 123.001 C 281.121 121.198,281.520 120.441,282.305 120.743 C 282.641 120.872,282.791 120.821,282.667 120.620 C 282.304 120.033,281.669 120.256,280.599 121.346 M85.328 122.877 C 85.322 123.258,85.451 123.882,85.615 124.263 C 85.995 125.147,85.995 124.235,85.615 123.050 C 85.392 122.354,85.336 122.320,85.328 122.877 M103.329 125.506 C 102.873 125.689,102.586 125.925,102.692 126.031 C 102.798 126.137,103.328 125.984,103.869 125.691 C 104.958 125.101,104.626 124.987,103.329 125.506 M86.341 126.516 C 86.304 127.183,87.010 129.743,87.183 129.570 C 87.256 129.498,87.102 128.664,86.843 127.718 C 86.583 126.771,86.357 126.231,86.341 126.516 M123.472 131.023 C 123.749 131.499,124.406 132.630,124.932 133.536 C 125.459 134.441,125.961 135.182,126.049 135.182 C 126.284 135.182,124.373 131.846,123.616 130.935 L 122.968 130.156 123.472 131.023 M29.727 131.961 C 30.158 132.044,30.782 132.041,31.113 131.954 C 31.445 131.867,31.092 131.799,30.329 131.803 C 29.567 131.807,29.296 131.878,29.727 131.961 M26.343 132.409 C 25.629 132.638,25.599 132.692,26.170 132.716 C 26.551 132.732,27.097 132.594,27.383 132.409 C 27.990 132.017,27.569 132.017,26.343 132.409 M28.423 133.057 C 28.423 133.272,28.715 133.449,29.073 133.449 C 29.504 133.449,29.787 133.770,29.915 134.402 C 30.021 134.926,30.213 135.628,30.342 135.962 C 30.720 136.938,29.791 136.685,28.120 135.357 C 26.644 134.184,26.625 134.144,27.409 133.854 L 28.214 133.556 27.278 133.377 C 26.626 133.253,26.343 133.344,26.343 133.679 C 26.343 133.943,25.953 134.308,25.477 134.489 C 24.278 134.944,24.397 135.249,26.075 136.024 C 27.752 136.798,33.120 140.300,35.269 142.021 C 36.713 143.178,37.375 143.141,36.087 141.976 C 34.995 140.988,33.236 137.014,33.037 135.087 C 32.878 133.550,32.738 133.267,32.109 133.222 C 31.702 133.193,30.706 133.055,29.896 132.916 C 28.882 132.743,28.423 132.787,28.423 133.057 M182.967 135.529 C 182.967 135.856,182.857 135.792,182.669 135.355 C 182.505 134.974,182.371 134.428,182.371 134.142 C 182.371 133.814,182.481 133.878,182.669 134.315 C 182.833 134.697,182.967 135.243,182.967 135.529 M82.999 135.584 C 83.974 136.028,84.173 136.568,83.362 136.568 C 83.076 136.568,82.842 136.412,82.842 136.222 C 82.842 136.031,82.530 135.875,82.149 135.875 C 81.768 135.875,81.456 135.719,81.456 135.529 C 81.456 135.074,81.916 135.091,82.999 135.584 M328.402 137.771 C 327.515 138.442,328.364 138.456,329.809 137.794 C 330.846 137.319,330.847 137.318,329.962 137.290 C 329.474 137.274,328.773 137.491,328.402 137.771 M184.767 138.353 C 184.731 138.794,188.609 146.688,188.778 146.519 C 188.873 146.425,188.013 144.498,186.868 142.238 C 185.722 139.977,184.777 138.229,184.767 138.353 M244.059 139.081 L 244.468 139.861 243.638 139.171 L 242.808 138.480 243.634 139.415 C 244.088 139.930,244.634 140.319,244.847 140.279 C 245.060 140.240,245.188 140.481,245.132 140.815 C 245.075 141.156,245.246 141.421,245.525 141.421 C 245.797 141.421,246.105 141.749,246.210 142.149 C 246.331 142.613,246.554 142.782,246.824 142.616 C 247.078 142.458,247.158 142.498,247.024 142.715 C 246.779 143.112,247.587 143.944,247.952 143.671 C 248.078 143.578,248.104 143.603,248.010 143.729 C 247.737 144.094,248.569 144.902,248.966 144.657 C 249.165 144.534,249.227 144.596,249.104 144.795 C 248.873 145.168,249.477 145.846,250.087 145.898 C 250.277 145.914,250.440 146.122,250.449 146.360 C 250.458 146.599,250.653 146.755,250.882 146.707 C 251.112 146.659,251.261 146.808,251.213 147.038 C 251.166 147.268,251.360 147.463,251.646 147.471 C 251.932 147.480,252.169 147.643,252.172 147.834 C 252.182 148.493,252.736 149.057,253.144 148.824 C 253.369 148.695,253.437 148.717,253.296 148.873 C 252.971 149.231,253.699 150.144,254.108 149.892 C 254.275 149.788,254.315 149.955,254.197 150.263 C 254.051 150.644,254.216 150.882,254.717 151.013 C 255.121 151.119,255.382 151.318,255.297 151.455 C 255.212 151.593,255.860 152.394,256.738 153.235 C 257.615 154.077,258.208 154.547,258.055 154.279 C 257.870 153.953,257.911 153.874,258.179 154.040 C 258.399 154.176,258.579 154.503,258.579 154.766 C 258.579 155.029,258.759 155.356,258.979 155.492 C 259.247 155.658,259.287 155.579,259.100 155.253 C 258.947 154.985,259.391 155.304,260.087 155.961 C 261.395 157.196,261.668 157.589,260.919 157.157 C 260.667 157.012,260.606 157.040,260.774 157.223 C 260.933 157.397,261.245 157.546,261.467 157.555 C 261.690 157.563,261.820 157.797,261.756 158.075 C 261.693 158.352,261.763 158.457,261.911 158.308 C 262.060 158.159,263.456 159.305,265.014 160.854 C 267.767 163.594,267.852 163.647,268.072 162.772 C 268.196 162.277,268.512 161.872,268.774 161.872 C 269.036 161.872,269.345 161.625,269.460 161.323 C 269.803 160.431,269.703 160.309,269.197 161.000 C 268.688 161.697,267.465 160.542,259.677 152.011 C 257.024 149.104,255.786 147.237,257.711 149.046 C 258.187 149.493,258.694 149.732,258.837 149.578 C 258.981 149.424,258.904 149.229,258.666 149.144 C 258.119 148.948,258.099 148.109,258.637 147.930 C 258.888 147.846,259.103 146.642,259.201 144.772 C 259.337 142.189,259.442 141.773,259.923 141.913 C 260.232 142.004,261.811 142.155,263.432 142.249 C 265.677 142.380,266.007 142.349,264.818 142.122 C 263.960 141.958,262.166 141.579,260.832 141.279 C 258.549 140.768,254.484 140.052,249.740 139.327 C 248.596 139.153,247.115 138.850,246.449 138.656 C 244.320 138.033,243.578 138.165,244.059 139.081 M327.843 139.083 C 328.525 139.411,328.621 139.662,328.469 140.706 L 328.289 141.941 328.679 140.769 C 329.074 139.583,328.478 138.603,327.403 138.672 C 327.202 138.685,327.399 138.870,327.843 139.083 M69.497 139.874 C 68.925 140.136,68.701 140.357,68.998 140.366 C 69.295 140.374,69.841 140.152,70.211 139.872 C 71.033 139.251,70.857 139.251,69.497 139.874 M37.695 142.706 C 38.545 142.869,38.736 143.795,38.059 144.471 C 37.382 145.148,36.457 144.957,36.293 144.107 C 36.193 143.588,36.128 143.733,36.097 144.541 C 35.999 147.159,39.958 149.248,41.705 147.500 C 43.415 145.790,41.200 142.421,38.423 142.508 C 37.594 142.534,37.266 142.623,37.695 142.706 M130.907 143.039 C 130.780 143.166,130.689 143.673,130.706 144.165 C 130.735 145.044,130.741 145.042,131.041 144.038 C 131.356 142.983,131.309 142.636,130.907 143.039 M327.418 145.962 C 327.291 146.756,327.254 147.474,327.337 147.557 C 327.420 147.639,327.596 147.062,327.730 146.274 C 327.863 145.486,327.899 144.768,327.810 144.679 C 327.721 144.590,327.545 145.167,327.418 145.962 M41.594 146.364 C 41.594 146.604,41.275 147.000,40.884 147.244 C 40.191 147.677,40.188 147.666,40.751 146.807 C 41.395 145.825,41.594 145.720,41.594 146.364 M278.171 149.648 C 277.967 150.733,277.901 150.791,277.497 150.239 C 277.127 149.733,277.146 149.381,277.606 148.210 C 278.250 146.572,278.587 147.430,278.171 149.648 M175.297 149.017 C 175.172 149.497,175.272 149.740,175.596 149.740 C 176.149 149.740,176.206 149.431,175.779 148.758 C 175.556 148.406,175.441 148.468,175.297 149.017 M59.464 149.373 C 59.128 149.744,58.936 150.251,59.036 150.500 C 59.176 150.849,59.224 150.840,59.245 150.461 C 59.260 150.190,59.530 149.683,59.846 149.334 C 60.161 148.985,60.341 148.700,60.246 148.700 C 60.151 148.700,59.799 149.003,59.464 149.373 M326.559 150.607 C 326.530 150.988,326.427 151.690,326.329 152.166 L 326.150 153.033 326.522 152.183 C 326.726 151.715,326.829 151.013,326.752 150.623 C 326.615 149.932,326.610 149.931,326.559 150.607 M327.291 151.826 C 327.055 152.579,326.863 153.501,326.863 153.874 C 326.863 154.767,326.264 155.118,326.071 154.337 C 325.988 154.001,325.969 154.662,326.028 155.806 C 326.115 157.489,326.082 157.654,325.852 156.672 C 325.696 156.005,325.547 155.713,325.522 156.023 C 325.497 156.332,325.385 157.112,325.274 157.756 C 325.121 158.642,325.162 158.799,325.442 158.406 C 325.736 157.993,325.814 158.119,325.818 159.012 C 325.823 160.128,325.347 160.540,325.016 159.705 C 324.922 159.467,324.904 160.130,324.976 161.179 C 325.077 162.651,325.040 162.848,324.813 162.045 C 324.565 161.169,324.512 161.130,324.478 161.796 C 324.396 163.364,322.464 162.772,307.279 156.530 C 305.754 155.903,303.960 155.186,303.293 154.936 C 302.626 154.686,301.932 154.351,301.750 154.191 C 301.073 153.591,300.830 153.942,300.933 155.373 C 301.030 156.705,301.121 156.837,301.885 156.752 C 302.350 156.700,302.620 156.767,302.486 156.902 C 302.178 157.210,304.295 158.123,304.715 157.863 C 304.886 157.758,305.026 157.818,305.026 157.996 C 305.026 158.175,305.533 158.512,306.153 158.745 C 306.772 158.978,308.371 159.609,309.705 160.147 C 319.178 163.968,321.644 164.877,321.741 164.587 C 321.802 164.404,322.312 164.497,322.884 164.795 C 323.452 165.091,323.698 165.335,323.430 165.336 C 323.043 165.338,323.061 165.468,323.516 165.972 C 323.832 166.320,324.079 166.905,324.066 167.272 C 324.043 167.896,324.026 167.899,323.793 167.308 C 323.636 166.909,323.253 168.306,322.748 171.121 C 321.919 175.738,321.078 180.198,320.782 181.542 C 320.688 181.971,320.419 182.327,320.184 182.333 C 319.766 182.344,317.851 183.864,317.851 184.185 C 317.851 184.274,318.319 184.450,318.891 184.575 C 320.129 184.847,320.213 185.568,319.425 189.186 C 318.819 191.976,316.974 201.627,316.629 203.813 C 316.394 205.307,315.918 206.563,315.446 206.932 C 314.819 207.424,311.625 213.605,311.828 213.934 C 311.968 214.160,311.908 214.221,311.683 214.082 C 311.241 213.809,310.439 215.102,310.744 215.596 C 310.856 215.777,310.512 216.860,309.980 218.002 C 309.039 220.022,308.492 220.614,308.492 219.613 C 308.492 219.343,308.609 219.070,308.752 219.006 C 309.129 218.839,310.657 215.914,310.467 215.724 C 310.324 215.581,309.727 216.582,307.133 221.317 C 306.715 222.080,306.577 222.412,306.826 222.056 C 308.331 219.903,308.507 219.824,308.274 221.404 C 308.128 222.394,308.185 222.877,308.448 222.877 C 308.663 222.877,308.839 222.666,308.839 222.409 C 308.839 222.152,309.282 221.330,309.823 220.582 C 310.365 219.835,310.898 218.992,311.009 218.710 C 311.167 218.308,311.216 218.301,311.238 218.677 C 311.253 218.940,310.935 219.689,310.532 220.341 C 310.129 220.993,309.876 221.603,309.969 221.696 C 310.062 221.789,311.431 219.558,313.011 216.739 C 314.592 213.919,316.406 210.731,317.044 209.655 C 317.791 208.395,318.120 207.480,317.968 207.085 C 317.821 206.700,317.868 206.555,318.095 206.696 C 318.534 206.967,319.354 203.134,319.035 202.302 C 318.915 201.989,318.976 201.733,319.170 201.733 C 319.364 201.733,319.628 201.070,319.757 200.260 C 319.886 199.450,320.201 197.695,320.458 196.360 C 320.715 195.026,321.410 191.360,322.002 188.215 C 322.594 185.069,323.392 180.942,323.777 179.043 C 324.161 177.144,324.384 175.195,324.272 174.710 C 324.129 174.091,324.166 173.976,324.396 174.322 C 324.633 174.678,324.790 174.345,324.966 173.109 C 325.099 172.171,325.424 170.446,325.688 169.275 C 325.952 168.104,326.077 166.622,325.966 165.982 C 325.809 165.071,325.850 164.931,326.155 165.338 C 326.455 165.738,326.498 165.498,326.341 164.298 C 326.229 163.440,326.311 161.958,326.524 161.005 C 326.736 160.052,327.036 158.648,327.190 157.886 L 327.470 156.499 327.513 157.683 C 327.566 159.136,327.735 158.999,328.052 157.245 C 328.217 156.337,328.176 155.984,327.925 156.139 C 327.691 156.283,327.556 155.923,327.556 155.154 C 327.556 153.752,328.125 153.166,328.357 154.328 C 328.444 154.759,328.435 154.177,328.338 153.033 C 328.115 150.413,327.833 150.087,327.291 151.826 M328.827 151.011 C 328.700 151.138,328.612 151.723,328.632 152.311 L 328.667 153.380 328.952 152.169 C 329.248 150.907,329.217 150.621,328.827 151.011 M56.639 157.019 C 56.639 159.974,56.692 161.183,56.757 159.705 C 56.822 158.228,56.822 155.810,56.757 154.333 C 56.692 152.855,56.639 154.064,56.639 157.019 M57.531 153.884 C 57.739 154.274,58.060 154.593,58.244 154.593 C 58.812 154.593,58.615 154.089,57.865 153.620 C 57.206 153.209,57.180 153.229,57.531 153.884 M58.913 161.352 C 58.832 165.993,58.735 167.555,58.666 165.342 C 58.533 161.079,58.052 160.104,57.751 163.487 C 57.163 170.093,57.572 185.933,58.273 183.709 C 58.450 183.145,58.510 183.629,58.445 185.095 C 58.300 188.331,58.994 194.955,59.335 193.588 C 59.482 192.997,59.525 193.745,59.435 195.321 C 59.334 197.085,59.525 199.795,59.961 202.773 C 60.929 209.382,62.157 215.878,62.307 215.185 C 62.377 214.863,62.253 213.693,62.032 212.586 C 61.383 209.339,60.604 204.124,60.490 202.253 C 60.432 201.300,60.457 201.066,60.546 201.733 C 60.635 202.400,60.853 203.094,61.030 203.276 C 61.207 203.457,61.352 204.188,61.352 204.902 C 61.352 205.615,61.508 206.295,61.698 206.412 C 61.889 206.530,62.045 207.007,62.045 207.473 C 62.045 207.938,62.201 208.319,62.392 208.319 C 62.819 208.319,62.855 206.352,62.433 206.092 C 62.266 205.988,62.019 204.380,61.885 202.518 C 61.752 200.657,61.482 198.476,61.286 197.672 C 61.040 196.665,61.041 195.889,61.291 195.174 C 61.546 194.442,61.534 193.135,61.251 190.742 C 60.932 188.050,60.795 187.563,60.592 188.388 C 60.437 189.016,60.386 188.398,60.462 186.828 C 60.617 183.650,59.833 175.075,59.527 176.603 C 59.412 177.175,59.369 175.693,59.431 173.310 C 59.493 170.927,59.432 165.546,59.296 161.352 L 59.048 153.726 58.913 161.352 M355.286 155.048 C 355.286 155.107,355.793 155.614,356.412 156.174 L 357.539 157.192 356.521 156.066 C 355.572 155.016,355.286 154.780,355.286 155.048 M156.876 158.658 C 157.172 160.358,156.762 161.427,156.133 160.596 C 155.678 159.996,155.654 160.001,155.644 160.694 C 155.628 161.737,156.342 163.636,156.673 163.431 C 156.827 163.336,156.924 164.187,156.888 165.323 C 156.852 166.459,156.943 167.200,157.089 166.970 C 157.235 166.739,157.376 166.083,157.401 165.511 C 157.426 164.921,157.515 164.733,157.605 165.078 C 157.775 165.729,158.580 165.898,158.917 165.352 C 159.030 165.169,158.922 164.681,158.677 164.267 C 158.336 163.689,158.329 163.479,158.649 163.363 C 158.966 163.248,158.953 162.950,158.591 162.108 C 158.099 160.964,157.259 158.962,156.892 158.059 C 156.776 157.773,156.768 158.042,156.876 158.658 M204.052 159.705 C 203.965 160.039,203.893 159.766,203.893 159.099 C 203.893 158.432,203.965 158.159,204.052 158.492 C 204.139 158.826,204.139 159.372,204.052 159.705 M263.941 160.814 C 265.079 161.968,266.077 162.912,266.159 162.912 C 266.451 162.912,262.903 159.182,262.392 158.951 C 262.106 158.821,262.803 159.660,263.941 160.814 M267.933 161.698 C 267.932 161.889,267.387 161.471,266.721 160.768 C 266.056 160.066,265.511 159.317,265.511 159.103 C 265.511 158.889,266.056 159.307,266.723 160.033 C 267.389 160.758,267.934 161.508,267.933 161.698 M326.753 161.658 C 326.623 161.997,326.531 162.691,326.548 163.200 C 326.577 164.062,326.602 164.046,326.913 162.966 C 327.273 161.714,327.143 160.643,326.753 161.658 M56.969 166.898 C 56.968 168.614,57.026 169.359,57.099 168.555 C 57.172 167.750,57.173 166.346,57.101 165.435 C 57.029 164.524,56.970 165.182,56.969 166.898 M336.968 166.638 C 337.102 168.115,337.223 169.748,337.237 170.266 L 337.262 171.207 338.463 170.006 C 339.657 168.813,340.217 168.550,340.439 169.081 C 340.503 169.233,342.426 170.594,344.714 172.106 C 347.002 173.617,349.692 175.447,350.693 176.173 C 351.694 176.898,352.513 177.397,352.513 177.283 C 352.513 177.168,352.772 177.332,353.088 177.649 C 353.597 178.158,356.162 179.896,356.406 179.896 C 356.457 179.896,356.482 179.263,356.461 178.489 C 356.420 177.023,356.162 176.556,355.287 176.368 C 355.002 176.307,354.612 176.074,354.421 175.851 C 354.129 175.511,337.006 163.951,336.794 163.951 C 336.755 163.951,336.833 165.160,336.968 166.638 M209.136 165.165 C 209.422 165.451,209.759 165.685,209.886 165.685 C 210.012 165.685,210.513 165.997,210.997 166.378 C 211.482 166.759,211.721 167.071,211.528 167.071 C 211.335 167.071,210.983 166.837,210.745 166.551 C 210.508 166.265,210.162 166.031,209.978 166.031 C 209.793 166.031,209.245 165.719,208.760 165.338 C 208.275 164.957,208.045 164.645,208.247 164.645 C 208.450 164.645,208.850 164.879,209.136 165.165 M367.071 166.833 C 367.071 166.893,367.578 167.399,368.198 167.959 L 369.324 168.977 368.306 167.851 C 367.357 166.801,367.071 166.565,367.071 166.833 M157.366 168.804 C 157.366 169.376,157.210 169.844,157.019 169.844 C 156.828 169.844,156.672 170.234,156.672 170.711 C 156.672 171.250,156.869 171.577,157.192 171.577 C 157.933 171.577,157.837 172.184,157.056 172.432 C 156.298 172.673,155.960 173.497,155.096 177.223 C 154.669 179.064,154.332 179.870,154.037 179.757 C 153.720 179.635,153.651 179.935,153.780 180.870 C 153.894 181.694,153.844 181.990,153.640 181.703 C 153.204 181.090,152.462 183.612,152.752 184.720 C 152.890 185.248,152.839 185.470,152.612 185.330 C 152.393 185.194,151.901 186.610,151.336 189.002 C 150.830 191.143,150.265 193.370,150.081 193.952 C 149.896 194.534,149.598 195.704,149.418 196.552 C 149.238 197.400,148.918 198.785,148.706 199.630 C 148.495 200.474,148.386 201.488,148.464 201.883 C 148.552 202.327,148.624 202.171,148.653 201.473 C 148.679 200.854,148.856 200.347,149.047 200.347 C 149.237 200.347,149.396 200.074,149.399 199.740 C 149.412 198.240,150.303 196.479,150.766 197.037 C 151.011 197.332,151.358 197.574,151.538 197.574 C 151.718 197.574,152.258 198.042,152.739 198.614 C 153.912 200.008,154.384 199.946,154.139 198.432 C 154.021 197.708,154.073 197.293,154.267 197.413 C 154.446 197.524,154.593 197.995,154.593 198.461 C 154.593 198.926,154.718 199.307,154.871 199.307 C 155.307 199.307,156.368 202.563,156.883 205.485 C 157.463 208.775,157.496 210.745,156.970 210.745 C 156.687 210.745,156.625 211.822,156.754 214.540 C 156.940 218.461,157.195 219.146,158.603 219.508 C 158.971 219.603,158.258 219.598,157.019 219.497 C 154.173 219.265,154.484 219.656,157.673 220.316 C 159.899 220.776,160.204 220.771,160.995 220.252 C 161.989 219.601,161.794 220.238,165.014 207.145 C 166.332 201.786,167.643 196.517,167.927 195.438 L 168.443 193.477 166.861 190.066 C 165.990 188.190,164.917 185.931,164.477 185.045 C 164.036 184.160,163.570 182.951,163.440 182.359 C 163.310 181.767,163.060 181.282,162.884 181.282 C 162.709 181.282,162.565 180.961,162.565 180.569 C 162.565 180.135,162.414 179.948,162.181 180.092 C 161.916 180.256,161.862 179.970,162.007 179.159 C 162.153 178.346,162.125 178.201,161.917 178.683 C 161.667 179.262,161.340 178.804,159.936 175.910 C 159.012 174.003,158.198 172.327,158.128 172.184 C 158.058 172.041,158.237 171.924,158.525 171.924 C 158.812 171.924,159.113 172.119,159.193 172.357 C 159.273 172.595,159.268 172.345,159.183 171.801 C 159.019 170.754,157.789 167.764,157.523 167.764 C 157.436 167.764,157.366 168.232,157.366 168.804 M205.459 170.100 C 204.363 170.169,202.569 170.169,201.473 170.100 C 200.377 170.031,201.274 169.975,203.466 169.975 C 205.659 169.975,206.555 170.031,205.459 170.100 M210.399 169.977 C 210.399 170.292,209.047 170.426,208.617 170.153 C 208.297 169.950,208.506 169.853,209.272 169.849 C 209.892 169.846,210.399 169.904,210.399 169.977 M124.653 171.764 C 124.534 172.074,124.451 172.665,124.468 173.079 C 124.490 173.611,124.597 173.491,124.834 172.666 C 125.180 171.466,125.038 170.761,124.653 171.764 M155.137 173.162 C 155.010 173.670,154.972 174.152,155.054 174.234 C 155.136 174.316,155.307 173.967,155.435 173.459 C 155.562 172.951,155.599 172.468,155.518 172.387 C 155.436 172.305,155.265 172.654,155.137 173.162 M123.628 176.661 C 123.501 176.788,123.410 177.295,123.427 177.787 C 123.456 178.667,123.462 178.664,123.762 177.660 C 124.077 176.605,124.030 176.258,123.628 176.661 M299.780 176.939 C 299.288 177.430,299.945 179.492,300.641 179.641 C 301.051 179.729,303.921 180.459,307.019 181.264 C 312.065 182.574,314.992 182.987,312.652 182.057 C 311.829 181.731,311.864 181.696,313.345 181.383 L 314.905 181.052 313.345 180.601 C 312.487 180.353,310.303 179.721,308.492 179.197 C 302.480 177.459,300.865 177.083,300.464 177.331 C 300.218 177.483,300.161 177.424,300.314 177.177 C 300.550 176.794,300.118 176.601,299.780 176.939 M370.285 179.549 C 370.285 180.407,370.353 180.758,370.435 180.329 C 370.518 179.900,370.518 179.198,370.435 178.769 C 370.353 178.341,370.285 178.692,370.285 179.549 M122.573 181.469 C 122.454 181.779,122.370 182.293,122.387 182.611 C 122.403 182.929,122.554 182.729,122.722 182.166 C 123.049 181.072,122.933 180.531,122.573 181.469 M86.660 186.395 C 86.665 187.162,86.737 187.247,87.032 186.828 C 87.301 186.447,87.352 186.817,87.224 188.215 C 87.128 189.263,87.268 192.461,87.535 195.321 C 87.989 200.185,88.773 209.773,89.286 216.725 C 89.515 219.827,91.066 222.366,92.275 221.618 C 92.493 221.484,92.557 221.542,92.425 221.755 C 92.142 222.214,96.687 226.050,97.165 225.755 C 97.353 225.638,97.404 225.710,97.277 225.915 C 96.989 226.381,98.738 227.800,99.228 227.498 C 99.425 227.376,99.487 227.438,99.364 227.637 C 99.241 227.836,99.983 228.718,101.012 229.597 C 102.888 231.200,103.550 231.572,103.084 230.763 C 102.940 230.511,102.967 230.450,103.151 230.618 C 103.324 230.777,103.473 231.089,103.482 231.311 C 103.491 231.534,103.697 231.673,103.941 231.621 C 104.185 231.568,104.296 231.667,104.189 231.841 C 103.901 232.308,104.922 233.031,105.444 232.730 C 105.691 232.588,105.777 232.599,105.636 232.755 C 105.305 233.120,106.043 234.024,106.460 233.766 C 106.634 233.659,106.733 233.718,106.681 233.898 C 106.629 234.077,107.490 234.972,108.595 235.885 C 109.860 236.932,110.533 237.728,110.414 238.039 C 110.301 238.333,110.399 238.475,110.655 238.389 C 111.079 238.248,111.098 236.275,110.688 234.879 C 110.549 234.402,110.623 234.300,110.968 234.496 C 111.756 234.944,110.938 234.190,108.002 231.762 C 106.493 230.514,105.104 229.588,104.915 229.704 C 104.727 229.821,104.673 229.754,104.795 229.556 C 105.079 229.096,104.135 228.290,103.659 228.584 C 103.445 228.716,103.384 228.588,103.507 228.268 C 103.695 227.777,103.300 227.556,102.487 227.697 C 102.330 227.724,102.289 227.605,102.397 227.431 C 102.679 226.974,101.667 226.236,101.175 226.540 C 100.935 226.689,100.850 226.650,100.974 226.450 C 101.266 225.977,99.287 224.128,98.806 224.425 C 98.596 224.555,98.466 224.485,98.518 224.269 C 98.571 224.053,97.374 222.833,95.858 221.557 C 94.278 220.227,93.213 219.525,93.360 219.911 C 93.611 220.568,93.600 220.569,92.909 219.944 C 92.115 219.225,91.978 218.893,92.634 219.277 C 92.873 219.416,92.795 219.218,92.461 218.836 C 92.103 218.428,91.834 217.514,91.805 216.610 L 91.756 215.078 91.523 216.464 C 91.383 217.296,91.288 216.048,91.284 213.345 C 91.281 210.867,91.100 207.435,90.881 205.719 C 90.663 204.003,90.301 200.027,90.077 196.883 C 89.805 193.064,89.570 191.395,89.370 191.857 C 89.177 192.305,89.122 191.795,89.214 190.409 C 89.342 188.504,89.267 188.184,88.532 187.494 C 88.078 187.068,87.616 186.431,87.504 186.080 C 87.197 185.114,86.654 185.316,86.660 186.395 M121.533 186.322 C 121.414 186.632,121.331 187.145,121.347 187.463 C 121.363 187.781,121.514 187.581,121.682 187.019 C 122.009 185.925,121.893 185.384,121.533 186.322 M15.016 188.215 C 15.016 189.454,15.079 189.961,15.155 189.341 C 15.232 188.722,15.232 187.708,15.155 187.088 C 15.079 186.469,15.016 186.976,15.016 188.215 M338.220 192.374 C 338.320 195.711,338.366 200.836,338.322 203.765 C 338.268 207.388,338.358 209.018,338.603 208.867 C 338.802 208.744,338.880 208.424,338.777 208.156 C 338.674 207.887,338.754 207.385,338.955 207.040 C 339.262 206.513,339.323 206.606,339.336 207.626 C 339.345 208.293,339.481 209.042,339.639 209.291 C 340.235 210.231,340.742 200.059,340.394 194.149 C 340.082 188.857,339.688 186.274,339.688 189.523 C 339.688 192.466,338.417 191.493,338.190 188.376 C 338.107 187.239,338.121 189.038,338.220 192.374 M59.171 190.724 C 59.088 191.155,59.017 190.884,59.013 190.121 C 59.009 189.359,59.077 189.006,59.164 189.337 C 59.250 189.669,59.254 190.293,59.171 190.724 M60.904 192.804 C 60.821 193.235,60.750 192.964,60.746 192.201 C 60.742 191.438,60.810 191.086,60.897 191.417 C 60.983 191.749,60.987 192.372,60.904 192.804 M61.739 197.083 C 61.762 197.829,61.906 198.908,62.058 199.480 C 62.234 200.135,62.265 199.686,62.145 198.267 C 61.930 195.741,61.677 195.001,61.739 197.083 M355.979 196.212 C 355.979 196.435,355.733 196.514,355.415 196.391 C 354.942 196.210,354.886 196.352,355.068 197.264 C 355.188 197.863,355.297 198.607,355.310 198.917 C 355.329 199.357,355.407 199.328,355.663 198.787 C 355.891 198.304,355.934 198.710,355.804 200.127 C 355.645 201.852,355.697 202.129,356.145 201.957 C 356.539 201.806,356.672 201.998,356.672 202.715 C 356.672 204.266,358.033 205.239,358.087 203.726 C 358.102 203.297,358.356 203.765,358.651 204.766 C 359.324 207.050,359.129 207.086,363.161 203.945 C 366.743 201.155,367.217 200.753,366.378 201.215 C 365.452 201.724,360.316 205.664,360.196 205.956 C 359.911 206.656,359.445 206.135,359.443 205.113 C 359.442 204.493,359.301 203.440,359.129 202.773 C 358.345 199.731,358.418 198.289,359.340 198.639 C 360.983 199.264,360.984 198.933,359.343 197.903 C 358.428 197.329,357.563 196.932,357.420 197.020 C 357.277 197.109,356.933 197.021,356.656 196.825 C 356.245 196.534,356.265 196.504,356.759 196.664 C 357.579 196.927,357.527 196.645,356.672 196.187 C 356.167 195.917,355.979 195.924,355.979 196.212 M60.276 198.007 L 60.241 199.480 59.958 198.275 C 59.698 197.171,59.771 196.534,60.159 196.534 C 60.243 196.534,60.296 197.197,60.276 198.007 M15.016 198.960 C 15.016 200.199,15.079 200.706,15.155 200.087 C 15.232 199.467,15.232 198.453,15.155 197.834 C 15.079 197.214,15.016 197.721,15.016 198.960 M118.324 198.721 C 118.203 199.520,117.976 200.336,117.821 200.535 C 117.665 200.734,117.431 201.947,117.299 203.231 C 117.168 204.515,116.926 205.648,116.762 205.749 C 116.598 205.851,116.464 206.284,116.464 206.713 C 116.464 207.142,116.226 207.796,115.934 208.166 C 115.356 208.899,115.537 205.105,116.117 204.333 C 116.260 204.142,116.459 203.518,116.559 202.946 C 116.659 202.374,116.849 201.516,116.980 201.040 C 117.112 200.563,117.293 199.783,117.383 199.307 C 117.793 197.134,117.892 196.865,118.208 197.060 C 118.400 197.179,118.450 197.897,118.324 198.721 M170.032 199.371 C 169.948 199.622,169.316 202.088,168.629 204.853 C 165.530 217.325,165.527 217.332,163.604 218.413 C 162.842 218.841,162.218 219.306,162.218 219.446 C 162.218 219.586,162.124 219.947,162.008 220.249 C 161.712 221.021,162.597 220.950,164.290 220.068 C 165.059 219.667,165.919 219.426,166.200 219.534 C 166.480 219.642,167.211 219.519,167.823 219.262 C 168.776 218.861,168.840 218.765,168.264 218.595 C 167.887 218.483,168.022 218.448,168.569 218.513 C 169.697 218.649,172.330 218.055,172.118 217.712 C 171.853 217.284,179.016 217.699,181.025 218.229 C 182.123 218.518,183.200 218.644,183.419 218.509 C 183.660 218.360,183.721 218.417,183.575 218.654 C 183.316 219.072,184.840 219.616,185.845 219.464 C 186.161 219.417,186.520 219.539,186.642 219.737 C 186.778 219.956,186.620 220.021,186.240 219.903 C 185.896 219.796,186.003 219.941,186.477 220.223 C 186.952 220.505,187.462 220.661,187.613 220.568 C 187.763 220.475,187.843 220.606,187.790 220.858 C 187.736 221.118,187.996 221.317,188.388 221.318 C 188.769 221.318,189.089 221.552,189.097 221.838 C 189.106 222.123,189.340 222.305,189.617 222.241 C 189.894 222.178,190.006 222.242,189.864 222.383 C 189.493 222.754,190.299 223.605,190.767 223.337 C 190.984 223.214,191.048 223.237,190.910 223.390 C 190.773 223.542,191.102 224.230,191.643 224.919 C 193.942 227.845,194.794 231.081,194.111 234.298 C 193.612 236.652,193.368 236.768,191.541 235.529 C 190.007 234.487,189.601 234.446,189.601 235.330 C 189.601 235.697,189.328 236.054,188.995 236.123 C 188.551 236.214,188.898 236.617,190.286 237.621 C 191.330 238.377,192.312 238.953,192.468 238.903 C 192.625 238.852,193.429 239.207,194.256 239.692 C 195.607 240.484,197.126 240.136,195.825 239.332 C 195.643 239.219,195.494 238.962,195.494 238.761 C 195.494 238.545,195.813 238.601,196.274 238.899 C 196.842 239.266,197.336 239.317,198.094 239.089 C 198.666 238.917,202.175 238.751,205.893 238.719 C 210.255 238.682,211.914 238.581,210.572 238.433 C 207.236 238.065,202.759 238.098,199.673 238.514 C 195.917 239.019,195.548 238.744,196.321 236.012 C 196.903 233.951,197.151 229.289,196.728 228.336 C 196.537 227.904,196.614 227.730,196.995 227.730 C 197.345 227.730,197.567 228.118,197.638 228.853 C 197.790 230.422,198.748 230.522,199.636 229.062 C 200.444 227.732,202.558 227.076,206.110 227.051 C 208.372 227.035,208.863 227.319,209.066 228.755 C 209.236 229.968,211.144 230.040,213.361 228.917 C 214.793 228.192,215.337 228.101,217.136 228.282 C 218.765 228.447,219.746 228.330,221.498 227.761 C 223.213 227.205,224.426 227.054,226.524 227.135 L 229.289 227.243 229.393 228.460 C 229.496 229.672,229.502 229.676,231.211 229.676 L 232.925 229.676 232.183 228.886 C 231.079 227.711,231.852 226.889,233.779 227.188 C 235.484 227.453,236.185 228.213,235.649 229.215 C 235.314 229.841,235.359 229.887,236.096 229.670 C 236.841 229.451,238.837 229.061,241.870 228.540 C 242.699 228.397,243.207 228.520,243.726 228.990 C 244.341 229.546,245.098 229.645,249.170 229.700 C 252.074 229.740,254.635 229.964,255.806 230.281 C 256.854 230.565,258.375 230.971,259.185 231.184 C 259.996 231.396,260.659 231.703,260.659 231.865 C 260.659 232.320,263.026 233.164,266.055 233.789 C 270.114 234.628,273.070 236.229,273.103 237.608 C 273.161 239.997,274.424 241.445,275.300 240.126 C 275.745 239.457,275.892 239.415,276.382 239.822 C 277.450 240.708,276.937 244.367,275.745 244.367 C 274.979 244.367,274.809 244.939,275.066 246.652 L 275.304 248.241 276.560 248.025 C 279.930 247.447,279.986 247.444,279.029 247.866 L 278.163 248.249 279.376 248.821 C 280.043 249.136,280.641 249.510,280.705 249.653 C 280.768 249.796,281.181 249.913,281.621 249.913 C 282.061 249.913,282.504 250.129,282.605 250.392 C 282.706 250.656,283.620 251.066,284.635 251.305 C 287.357 251.944,287.640 252.172,288.799 254.677 C 290.632 258.636,290.033 262.135,287.009 265.139 C 286.515 265.630,285.935 266.438,285.720 266.934 C 284.999 268.601,280.617 270.631,277.470 270.757 C 276.516 270.795,275.465 271.009,275.132 271.233 C 274.472 271.677,274.663 272.155,275.389 271.876 C 276.002 271.641,276.428 272.411,275.949 272.890 C 275.666 273.173,275.563 273.165,275.563 272.860 C 275.563 272.197,274.612 272.377,273.863 273.181 C 273.432 273.644,272.958 273.836,272.592 273.695 C 271.731 273.365,271.057 274.109,271.057 275.390 C 271.057 276.702,271.700 277.413,272.455 276.935 C 274.721 275.502,276.490 277.192,274.566 278.951 C 273.780 279.670,273.135 280.488,273.132 280.770 C 273.127 281.181,273.068 281.191,272.835 280.823 C 272.674 280.570,272.326 280.405,272.060 280.457 C 271.158 280.634,270.017 280.029,270.017 279.373 C 270.017 278.495,269.484 278.226,268.638 278.679 C 267.817 279.119,267.712 279.723,268.458 279.723 C 269.139 279.723,269.117 280.064,268.403 280.586 C 267.890 280.961,267.923 281.030,268.714 281.229 C 269.201 281.351,269.924 281.959,270.320 282.580 C 270.717 283.201,271.226 283.961,271.451 284.268 C 272.128 285.193,271.557 286.208,270.763 285.489 C 269.576 284.415,267.876 285.590,268.615 286.973 C 269.112 287.902,269.704 287.886,270.781 286.915 C 272.200 285.635,273.259 284.769,274.177 284.138 C 274.983 283.583,276.225 282.486,281.487 277.677 C 282.616 276.644,283.536 275.508,283.536 275.143 C 283.536 274.748,283.690 274.578,283.919 274.720 C 284.177 274.879,284.235 274.687,284.096 274.134 C 283.982 273.681,283.977 273.503,284.086 273.738 C 284.361 274.335,286.187 273.371,286.470 272.479 C 286.677 271.827,287.695 271.171,287.695 271.689 C 287.695 271.835,285.970 273.701,283.861 275.838 C 281.753 277.975,280.180 279.723,280.367 279.723 C 280.939 279.723,289.258 270.710,289.203 270.150 C 289.174 269.861,289.238 269.712,289.344 269.818 C 289.660 270.134,290.480 269.277,290.237 268.885 C 290.115 268.686,290.177 268.624,290.375 268.747 C 290.865 269.049,291.631 268.071,291.311 267.553 C 291.152 267.296,291.201 267.228,291.438 267.375 C 291.921 267.673,294.715 264.200,294.401 263.693 C 294.276 263.490,294.336 263.425,294.535 263.547 C 295.933 264.412,310.572 238.493,310.572 235.154 C 310.572 235.117,309.831 234.985,308.925 234.860 C 308.020 234.735,305.017 234.178,302.253 233.622 C 299.489 233.067,290.364 231.270,281.976 229.629 C 273.588 227.988,264.463 226.197,261.698 225.648 C 256.854 224.687,244.344 223.574,237.955 223.536 C 236.620 223.528,235.217 223.387,234.835 223.224 C 234.390 223.032,235.570 222.913,238.128 222.891 C 244.853 222.832,241.720 222.200,233.473 221.952 C 229.361 221.828,225.997 221.596,225.997 221.435 C 225.997 221.275,224.359 221.144,222.357 221.144 C 216.597 221.144,218.125 221.740,224.523 221.989 C 227.717 222.114,230.719 222.324,231.196 222.457 C 232.800 222.903,227.467 222.937,218.544 222.537 C 213.778 222.324,207.695 222.071,205.026 221.976 C 199.161 221.765,199.307 221.808,199.307 220.282 C 199.307 219.110,199.261 219.063,198.354 219.299 C 192.813 220.741,189.526 220.543,190.124 218.804 C 190.221 218.523,189.920 218.371,189.264 218.371 C 188.710 218.371,188.166 218.225,188.055 218.046 C 187.528 217.193,183.568 215.843,180.382 215.430 C 178.652 215.206,178.604 215.168,178.047 213.580 C 177.734 212.688,177.566 212.423,177.674 212.992 C 177.782 213.560,177.897 214.179,177.930 214.367 C 177.975 214.628,175.683 214.696,175.532 214.438 C 175.260 213.978,170.884 200.282,170.884 199.892 C 170.884 199.182,170.231 198.783,170.032 199.371 M359.669 202.600 C 359.789 203.934,359.916 205.064,359.953 205.110 C 359.989 205.157,360.542 204.728,361.181 204.157 C 361.949 203.472,362.158 203.120,361.796 203.120 C 361.495 203.120,360.844 202.457,360.350 201.646 L 359.451 200.173 359.669 202.600 M174.399 202.080 C 174.399 202.366,174.533 202.912,174.697 203.293 C 174.884 203.730,174.995 203.794,174.995 203.466 C 174.995 203.180,174.861 202.634,174.697 202.253 C 174.509 201.816,174.399 201.752,174.399 202.080 M35.396 203.169 C 37.305 204.887,38.622 205.893,38.975 205.903 C 39.177 205.909,39.069 206.072,38.737 206.266 C 38.150 206.607,35.340 205.323,34.815 204.473 C 34.708 204.301,34.453 204.159,34.248 204.159 C 33.854 204.159,36.053 206.224,36.457 206.234 C 36.586 206.237,36.898 206.445,37.150 206.695 C 38.405 207.945,40.654 209.299,41.156 209.106 C 41.522 208.966,41.624 209.031,41.458 209.300 C 41.320 209.523,41.369 209.705,41.567 209.705 C 41.766 209.705,42.034 210.129,42.164 210.646 C 42.380 211.507,42.425 211.529,42.694 210.906 C 42.901 210.428,42.937 210.587,42.815 211.438 C 42.720 212.106,42.798 213.510,42.988 214.558 C 43.178 215.607,43.504 217.634,43.713 219.064 C 44.115 221.826,44.714 223.111,44.714 221.213 C 44.714 219.458,45.528 219.828,48.565 222.964 C 50.088 224.536,52.389 226.915,53.677 228.250 C 54.966 229.584,56.471 231.300,57.021 232.062 C 57.572 232.825,58.109 233.527,58.214 233.622 C 58.710 234.071,59.894 235.971,60.119 236.679 C 60.280 237.186,60.595 237.432,61.000 237.365 C 61.346 237.308,62.011 237.672,62.477 238.174 C 62.942 238.676,63.621 239.183,63.984 239.301 C 64.347 239.418,64.983 240.138,65.395 240.900 L 66.146 242.286 65.222 242.094 C 64.534 241.951,64.652 242.081,65.685 242.603 C 66.447 242.989,67.235 243.309,67.436 243.316 C 68.533 243.351,71.354 245.140,71.179 245.689 C 71.039 246.126,71.074 246.159,71.319 245.818 C 71.842 245.088,68.096 230.817,67.207 230.156 C 64.887 228.429,64.845 228.353,64.138 224.649 C 63.760 222.668,63.407 221.015,63.354 220.976 C 63.302 220.936,61.231 219.843,58.752 218.546 C 56.274 217.250,53.834 215.901,53.329 215.549 C 52.825 215.197,52.045 214.749,51.596 214.552 L 50.780 214.195 51.646 214.374 C 52.123 214.472,52.866 214.651,53.298 214.770 C 53.924 214.944,54.039 214.875,53.868 214.427 C 53.749 214.118,53.435 213.865,53.169 213.865 C 52.904 213.865,52.686 213.709,52.686 213.518 C 52.686 213.328,52.463 213.172,52.191 213.172 C 51.919 213.172,51.487 212.977,51.232 212.738 C 50.976 212.500,49.996 211.915,49.052 211.438 C 46.424 210.111,44.046 208.558,45.061 208.832 C 45.837 209.041,45.816 208.995,44.864 208.389 C 43.613 207.593,42.289 207.110,41.681 207.226 C 41.443 207.272,41.248 207.162,41.248 206.982 C 41.248 206.802,39.961 205.821,38.388 204.802 C 34.648 202.377,34.313 202.195,35.396 203.169 M356.039 203.120 C 356.028 203.596,356.148 204.610,356.306 205.373 C 356.490 206.262,356.600 206.448,356.613 205.893 C 356.624 205.416,356.503 204.402,356.346 203.640 C 356.162 202.750,356.052 202.564,356.039 203.120 M245.407 203.119 C 258.276 203.235,268.952 203.204,269.133 203.051 C 269.315 202.898,258.786 202.803,245.737 202.840 L 222.010 202.907 245.407 203.119 M267.200 204.939 C 266.769 205.559,265.744 206.863,264.924 207.836 C 263.519 209.503,262.854 210.679,263.918 209.615 C 265.039 208.494,267.823 204.980,268.034 204.419 C 268.382 203.496,268.070 203.691,267.200 204.939 M175.443 205.546 C 175.443 205.832,175.653 206.612,175.910 207.279 C 176.167 207.946,176.377 208.258,176.377 207.972 C 176.377 207.686,176.167 206.906,175.910 206.239 C 175.653 205.572,175.443 205.260,175.443 205.546 M340.710 216.638 C 340.588 226.436,340.557 226.955,340.473 220.624 C 340.420 216.620,340.302 213.142,340.210 212.894 C 340.114 212.634,338.316 214.548,335.978 217.400 C 333.742 220.126,330.855 223.605,329.562 225.130 C 327.534 227.521,327.235 228.045,327.388 228.942 C 327.486 229.515,327.798 233.160,328.081 237.044 C 328.364 240.928,328.622 244.359,328.654 244.670 C 328.687 244.980,328.808 244.298,328.924 243.154 C 329.059 241.829,329.139 242.993,329.145 246.363 C 329.158 252.781,328.910 252.458,333.481 252.035 L 337.088 251.701 333.478 251.760 C 330.101 251.816,329.864 251.775,329.798 251.127 C 329.759 250.745,329.617 249.419,329.482 248.180 C 329.305 246.555,329.340 246.072,329.605 246.447 C 329.807 246.733,329.977 247.747,329.983 248.700 C 330.001 251.711,329.593 251.621,337.553 250.366 C 340.630 249.882,341.186 249.871,341.477 250.291 C 341.699 250.612,341.731 248.336,341.570 243.674 C 341.435 239.766,341.217 229.549,341.087 220.971 L 340.850 205.373 340.710 216.638 M176.483 209.012 C 176.483 209.298,176.693 210.078,176.950 210.745 C 177.207 211.412,177.417 211.724,177.417 211.438 C 177.417 211.153,177.207 210.373,176.950 209.705 C 176.693 209.038,176.483 208.726,176.483 209.012 M48.180 210.218 C 48.180 210.313,49.428 211.018,50.953 211.785 C 52.478 212.552,53.726 213.101,53.726 213.006 C 53.726 212.911,52.478 212.205,50.953 211.438 C 49.428 210.672,48.180 210.122,48.180 210.218 M174.657 213.119 C 175.163 214.874,175.092 215.017,173.860 214.708 C 173.114 214.521,172.987 214.339,173.179 213.738 C 173.308 213.331,173.391 212.378,173.362 211.621 C 173.296 209.912,173.950 210.668,174.657 213.119 M58.232 215.413 C 58.232 215.508,59.012 215.981,59.965 216.464 C 60.919 216.947,61.698 217.265,61.698 217.169 C 61.698 217.074,60.919 216.601,59.965 216.118 C 59.012 215.635,58.232 215.318,58.232 215.413 M118.891 216.746 C 118.891 216.806,119.359 217.303,119.931 217.851 C 121.181 219.049,121.314 218.843,120.121 217.555 C 119.365 216.739,118.891 216.428,118.891 216.746 M90.197 218.780 C 90.266 219.481,90.200 219.979,90.049 219.886 C 89.898 219.793,89.787 219.063,89.802 218.264 C 89.833 216.633,90.008 216.862,90.197 218.780 M134.842 217.746 C 134.863 220.480,137.526 233.373,137.583 231.023 C 137.592 230.641,137.363 229.471,137.073 228.423 C 136.535 226.479,135.185 219.011,135.183 217.970 C 135.182 217.470,135.550 217.416,138.042 217.550 C 142.558 217.791,148.760 218.388,150.087 218.708 C 152.056 219.183,155.007 219.463,153.726 219.053 C 151.965 218.489,146.949 217.717,143.761 217.519 C 142.093 217.416,139.402 217.245,137.782 217.140 C 134.881 216.951,134.835 216.961,134.842 217.746 M266.043 218.625 C 265.179 219.527,264.471 220.416,264.471 220.601 C 264.471 220.911,266.444 218.977,267.547 217.585 C 268.494 216.389,267.579 217.022,266.043 218.625 M191.854 217.841 C 191.092 218.093,190.702 218.312,190.988 218.329 C 191.274 218.346,192.210 218.139,193.068 217.869 C 193.925 217.599,194.315 217.379,193.934 217.381 C 193.553 217.383,192.617 217.590,191.854 217.841 M137.782 218.718 C 137.899 218.908,138.386 219.064,138.862 219.064 C 139.352 219.064,139.636 218.913,139.515 218.718 C 139.397 218.527,138.911 218.371,138.434 218.371 C 137.945 218.371,137.661 218.522,137.782 218.718 M137.348 219.670 C 137.491 219.750,137.608 220.055,137.608 220.349 C 137.608 220.742,137.725 220.786,138.050 220.515 C 138.294 220.313,139.268 220.088,140.217 220.015 L 141.941 219.882 139.976 219.820 C 138.896 219.785,137.804 219.705,137.550 219.641 C 137.296 219.577,137.205 219.590,137.348 219.670 M206.950 219.526 C 207.056 219.641,210.799 219.896,215.269 220.091 C 219.739 220.287,225.269 220.599,227.556 220.785 C 231.495 221.105,247.633 221.564,245.061 221.283 C 243.987 221.165,224.999 220.179,211.612 219.545 C 208.943 219.419,206.845 219.410,206.950 219.526 M164.598 220.395 C 164.096 220.718,163.005 221.663,162.172 222.496 L 160.659 224.009 161.872 223.769 C 162.554 223.633,162.902 223.656,162.667 223.820 C 162.400 224.006,163.406 224.470,165.440 225.097 C 167.195 225.638,168.787 226.200,168.977 226.345 C 169.168 226.491,169.870 226.711,170.537 226.835 C 171.637 227.039,171.581 226.976,169.948 226.164 C 168.828 225.606,168.212 225.097,168.319 224.817 C 168.512 224.315,170.219 224.491,170.584 225.051 C 170.705 225.236,170.992 225.325,171.223 225.248 C 171.453 225.171,171.198 224.900,170.656 224.645 C 170.114 224.391,169.373 224.028,169.008 223.838 C 167.777 223.199,164.565 222.192,164.294 222.360 C 164.145 222.451,163.926 222.271,163.806 221.959 C 163.552 221.295,163.475 221.386,164.905 220.659 C 165.524 220.344,166.031 220.012,166.031 219.922 C 166.031 219.630,165.532 219.794,164.598 220.395 M257.373 221.135 C 256.800 221.769,256.391 221.810,251.860 221.681 C 247.605 221.561,247.374 221.580,250.087 221.826 C 255.837 222.350,256.938 222.274,257.642 221.306 C 258.389 220.280,258.236 220.182,257.373 221.135 M148.729 220.925 C 148.808 220.995,149.497 221.147,150.260 221.263 C 151.226 221.410,151.436 221.379,150.953 221.160 C 150.288 220.859,148.431 220.662,148.729 220.925 M154.275 221.962 C 154.354 222.030,154.887 222.191,155.459 222.319 C 156.219 222.489,156.359 222.456,155.979 222.200 C 155.511 221.883,153.927 221.662,154.275 221.962 M308.185 224.584 C 307.401 225.904,306.759 227.077,306.759 227.191 C 306.759 227.304,306.369 228.015,305.893 228.769 C 305.416 229.524,305.029 230.262,305.033 230.409 C 305.041 230.765,306.636 228.183,308.453 224.870 C 310.283 221.535,310.108 221.348,308.185 224.584 M44.801 223.744 C 44.805 224.506,44.876 224.777,44.959 224.346 C 45.042 223.915,45.039 223.291,44.952 222.960 C 44.865 222.628,44.798 222.981,44.801 223.744 M305.693 223.627 C 305.458 224.072,305.037 224.788,304.759 225.217 C 304.481 225.646,304.347 225.997,304.462 225.997 C 304.777 225.997,306.488 223.184,306.292 222.988 C 306.199 222.894,305.929 223.182,305.693 223.627 M266.233 223.709 C 266.482 223.949,281.856 226.751,282.021 226.587 C 282.106 226.502,279.869 226.007,277.050 225.488 C 274.231 224.970,270.939 224.326,269.736 224.058 C 267.629 223.588,265.933 223.420,266.233 223.709 M138.697 225.303 C 138.697 225.589,138.831 226.135,138.995 226.516 C 139.183 226.953,139.293 227.017,139.293 226.690 C 139.293 226.404,139.159 225.858,138.995 225.477 C 138.807 225.040,138.697 224.976,138.697 225.303 M306.066 225.419 C 306.066 225.737,305.910 225.997,305.719 225.997 C 305.529 225.997,305.383 226.581,305.397 227.296 L 305.421 228.596 305.938 226.913 C 306.222 225.987,306.367 225.143,306.260 225.036 C 306.153 224.929,306.066 225.101,306.066 225.419 M303.293 227.730 C 302.904 228.492,302.664 229.116,302.759 229.116 C 302.854 229.116,303.250 228.492,303.640 227.730 C 304.029 226.967,304.269 226.343,304.174 226.343 C 304.078 226.343,303.682 226.967,303.293 227.730 M283.189 227.036 C 283.666 227.189,284.523 227.311,285.095 227.307 L 286.135 227.301 285.095 227.036 C 284.523 226.891,283.666 226.769,283.189 226.765 L 282.322 226.759 283.189 227.036 M322.855 228.163 L 321.837 229.289 322.964 228.271 C 324.014 227.322,324.249 227.036,323.982 227.036 C 323.922 227.036,323.415 227.543,322.855 228.163 M288.735 228.076 C 289.211 228.229,290.069 228.351,290.641 228.347 L 291.681 228.341 290.641 228.076 C 290.069 227.931,289.211 227.809,288.735 227.805 L 287.868 227.799 288.735 228.076 M294.281 229.116 C 294.757 229.269,295.537 229.394,296.014 229.394 L 296.880 229.394 296.014 229.116 C 295.537 228.963,294.757 228.839,294.281 228.839 L 293.414 228.839 294.281 229.116 M302.065 229.834 C 301.929 230.052,301.245 230.129,300.398 230.021 L 298.960 229.836 300.292 230.212 C 301.401 230.524,301.719 230.492,302.186 230.025 C 302.495 229.716,302.646 229.463,302.521 229.463 C 302.396 229.463,302.191 229.630,302.065 229.834 M305.546 231.180 C 306.211 231.481,308.068 231.678,307.770 231.415 C 307.691 231.345,307.002 231.193,306.239 231.077 C 305.273 230.930,305.063 230.961,305.546 231.180 M311.092 232.236 C 312.558 232.609,313.817 232.609,312.652 232.236 C 312.175 232.083,311.395 231.961,310.919 231.965 C 310.140 231.970,310.158 231.998,311.092 232.236 M319.060 232.587 C 318.576 233.122,318.138 233.244,317.186 233.111 L 315.945 232.937 317.126 233.304 C 318.187 233.633,318.398 233.580,319.198 232.780 C 319.687 232.290,319.999 231.889,319.890 231.889 C 319.781 231.889,319.407 232.203,319.060 232.587 M71.750 233.078 C 71.750 233.186,72.452 235.979,73.310 239.285 C 75.213 246.619,75.228 245.901,73.122 248.188 C 72.161 249.232,70.991 250.570,70.522 251.160 L 69.669 252.234 71.599 255.753 C 72.660 257.689,73.605 259.272,73.700 259.272 C 73.794 259.272,73.768 259.105,73.641 258.900 C 73.331 258.399,74.831 256.846,75.624 256.846 C 76.131 256.846,76.256 257.121,76.256 258.232 C 76.256 259.234,76.112 259.619,75.737 259.619 C 74.656 259.619,76.683 263.264,79.495 266.378 C 80.183 267.140,80.750 267.881,80.755 268.024 C 80.759 268.167,80.903 268.284,81.074 268.284 C 81.245 268.284,81.362 267.855,81.334 267.331 C 81.251 265.785,81.966 266.059,82.084 267.619 C 82.160 268.616,82.074 268.972,81.798 268.802 C 81.553 268.650,81.575 268.831,81.856 269.281 C 82.104 269.679,82.503 270.079,82.743 270.171 C 83.085 270.302,83.091 270.198,82.771 269.686 C 82.312 268.950,82.882 267.938,83.756 267.938 C 84.310 267.938,85.612 269.913,85.614 270.755 C 85.617 271.897,84.677 272.228,83.673 271.437 C 83.165 271.038,82.575 270.705,82.362 270.699 C 82.150 270.693,80.962 269.281,79.723 267.562 C 78.484 265.842,77.275 264.221,77.036 263.958 C 76.798 263.696,76.603 263.327,76.603 263.139 C 76.603 262.950,76.486 262.744,76.343 262.681 C 75.949 262.505,74.523 260.390,74.523 259.979 C 74.523 259.781,74.358 259.619,74.156 259.619 C 73.954 259.619,73.903 259.814,74.042 260.052 C 75.823 263.106,81.754 270.995,82.434 271.214 C 83.448 271.541,85.250 273.471,86.113 275.153 C 86.572 276.046,87.934 277.712,89.140 278.856 L 91.334 280.936 89.190 278.683 C 88.010 277.444,86.940 276.001,86.813 275.477 C 86.685 274.952,86.441 274.523,86.271 274.523 C 86.101 274.523,85.962 274.341,85.962 274.117 C 85.962 273.894,85.703 273.425,85.386 273.075 C 85.070 272.726,84.915 272.335,85.043 272.207 C 85.336 271.914,86.077 272.863,87.126 274.870 C 87.574 275.728,89.605 278.128,91.640 280.204 C 95.387 284.027,96.476 285.794,93.146 282.649 C 91.520 281.112,91.546 281.159,93.409 283.109 C 94.742 284.504,95.668 285.210,95.998 285.083 C 96.281 284.974,96.402 284.996,96.266 285.132 C 95.936 285.462,96.700 286.354,97.102 286.106 C 97.275 285.998,97.375 286.097,97.322 286.326 C 97.116 287.226,98.065 286.976,98.806 285.935 C 99.556 284.882,99.565 284.786,99.024 283.751 C 97.670 281.160,97.327 276.809,98.616 278.572 C 99.051 279.167,99.103 279.165,99.821 278.514 L 100.572 277.835 100.337 278.770 C 99.732 281.182,102.701 284.229,105.657 284.229 C 109.277 284.229,110.842 281.983,109.701 278.423 C 109.495 277.781,109.581 277.643,110.185 277.643 C 111.133 277.643,111.116 277.043,110.139 275.948 L 109.359 275.075 110.225 275.604 C 116.440 279.400,110.724 289.069,103.464 287.041 C 102.128 286.668,102.047 286.693,101.136 287.781 C 99.919 289.235,99.632 288.825,104.228 292.201 C 111.341 297.426,114.088 299.129,115.425 299.139 C 117.536 299.156,121.664 301.696,121.664 302.979 C 121.664 304.244,141.663 312.184,143.813 311.773 C 144.562 311.630,144.597 311.653,144.021 311.909 C 143.224 312.263,143.539 312.368,149.740 313.818 C 164.747 317.328,186.373 318.823,198.267 317.173 C 201.074 316.784,199.473 316.785,193.414 317.176 C 187.339 317.569,172.466 317.237,174.177 316.747 C 174.749 316.583,176.662 316.482,178.428 316.521 C 181.787 316.597,183.206 316.129,181.882 315.382 C 181.544 315.191,181.340 314.918,181.429 314.775 C 181.518 314.631,180.668 314.739,179.541 315.015 C 175.942 315.894,169.592 313.881,166.122 310.761 C 163.849 308.717,162.733 308.674,163.768 310.669 C 164.302 311.698,163.144 311.707,161.194 310.690 C 160.709 310.437,160.113 310.229,159.870 310.227 C 159.627 310.226,159.280 309.835,159.099 309.359 C 158.867 308.750,158.509 308.492,157.894 308.492 C 157.413 308.492,157.019 308.375,157.019 308.232 C 157.019 308.089,156.294 307.972,155.408 307.972 C 153.856 307.972,153.349 308.356,153.231 309.619 C 153.189 310.058,154.177 309.906,154.363 309.445 C 154.459 309.207,154.550 309.428,154.565 309.936 C 154.606 311.315,153.959 311.288,151.685 309.819 C 149.599 308.470,148.192 308.183,146.943 308.852 C 146.383 309.151,146.204 309.064,145.870 308.332 C 145.650 307.848,145.192 307.452,144.852 307.452 C 144.513 307.452,144.139 307.296,144.021 307.106 C 143.903 306.915,143.456 306.759,143.029 306.759 C 140.778 306.759,137.652 304.171,139.081 303.491 C 139.320 303.378,139.125 303.364,138.648 303.461 C 138.172 303.558,136.944 303.739,135.921 303.864 C 134.157 304.079,134.103 304.115,134.881 304.546 C 136.040 305.189,135.021 305.140,133.770 304.493 C 133.202 304.199,131.887 303.802,130.846 303.610 C 122.079 301.989,114.043 292.165,116.622 286.222 C 116.808 285.794,116.729 285.615,116.357 285.615 C 116.067 285.615,115.768 285.799,115.693 286.024 C 115.405 286.889,114.329 285.991,114.436 284.975 C 114.495 284.415,114.303 283.751,113.993 283.441 C 113.692 283.140,113.343 282.013,113.216 280.936 C 112.169 272.028,99.957 269.896,97.554 278.201 C 97.241 279.281,97.026 279.481,96.098 279.554 C 95.171 279.627,95.079 279.568,95.486 279.161 C 95.749 278.898,96.131 278.683,96.336 278.683 C 96.540 278.683,96.707 278.527,96.707 278.336 C 96.707 277.882,96.562 277.896,95.136 278.492 C 94.137 278.909,93.934 279.173,93.934 280.052 C 93.934 280.704,93.756 281.109,93.470 281.109 C 92.811 281.109,92.158 279.494,92.410 278.490 C 92.640 277.575,92.061 277.298,91.729 278.163 C 91.466 278.849,90.815 278.831,90.815 278.138 C 90.815 277.839,90.581 277.360,90.295 277.074 C 90.009 276.788,89.673 276.137,89.549 275.626 C 89.424 275.115,89.209 274.619,89.072 274.523 C 88.689 274.256,87.348 271.164,87.348 270.545 C 87.348 270.243,87.114 269.906,86.828 269.796 C 86.542 269.686,86.308 269.369,86.308 269.091 C 86.308 268.813,85.841 268.192,85.269 267.711 C 84.467 267.036,84.229 266.550,84.229 265.584 C 84.229 264.611,84.136 264.425,83.813 264.749 C 82.457 266.104,79.459 263.885,78.664 260.938 C 78.015 258.529,78.764 254.347,79.738 254.949 C 79.894 255.045,80.130 254.948,80.263 254.733 C 80.396 254.518,80.332 254.235,80.121 254.104 C 79.573 253.766,81.094 251.636,82.633 250.588 C 83.318 250.121,83.878 249.545,83.880 249.307 C 83.881 249.068,84.038 248.873,84.229 248.873 C 84.419 248.873,84.575 248.627,84.575 248.325 C 84.575 247.159,85.474 248.145,86.131 250.033 C 86.976 252.456,87.411 252.450,89.066 249.991 C 90.438 247.952,91.432 247.499,93.042 248.176 C 94.997 248.998,97.320 248.469,96.435 247.403 C 96.211 247.133,96.175 246.747,96.348 246.467 C 96.510 246.205,96.573 245.809,96.488 245.587 C 96.395 245.343,96.964 245.039,97.924 244.820 L 99.515 244.456 100.509 246.425 C 102.133 249.642,105.026 250.933,105.026 248.441 C 105.026 247.053,105.581 246.451,106.990 246.315 C 109.432 246.078,109.929 247.535,107.626 248.180 C 106.768 248.420,106.066 248.753,106.066 248.919 C 106.066 249.323,107.229 249.304,107.643 248.893 C 107.824 248.714,108.596 248.408,109.359 248.214 C 110.121 248.019,113.787 246.921,117.504 245.774 C 124.517 243.609,125.738 243.381,126.460 244.103 C 126.802 244.445,127.063 244.311,127.734 243.453 C 128.298 242.733,129.092 242.245,130.127 241.985 C 130.978 241.770,131.787 241.412,131.925 241.189 C 132.096 240.912,131.984 240.857,131.570 241.016 C 131.170 241.169,131.009 241.101,131.096 240.815 C 131.270 240.239,135.727 237.927,137.261 237.617 C 137.928 237.482,138.573 237.210,138.695 237.012 C 139.016 236.494,139.688 237.015,139.688 237.782 C 139.688 238.140,139.847 238.532,140.041 238.652 C 140.236 238.772,140.784 239.639,141.260 240.579 C 141.736 241.519,142.211 242.288,142.314 242.288 C 142.417 242.288,142.434 242.171,142.351 242.028 C 141.771 241.031,139.307 235.513,139.134 234.822 C 139.016 234.353,138.812 233.969,138.681 233.969 C 138.229 233.969,131.886 235.400,129.463 236.048 C 128.128 236.405,124.853 237.264,122.184 237.956 C 119.515 238.649,116.161 239.527,114.731 239.907 C 110.362 241.071,100.123 243.679,97.920 244.189 C 96.776 244.454,95.166 244.840,94.341 245.047 C 92.862 245.417,92.791 245.393,89.385 243.335 C 87.485 242.187,85.875 241.248,85.809 241.248 C 85.610 241.248,73.738 234.273,72.704 233.549 C 72.179 233.182,71.750 232.970,71.750 233.078 M125.997 234.160 L 124.610 234.644 125.997 234.448 C 127.451 234.243,128.938 233.627,127.903 233.659 C 127.617 233.668,126.759 233.893,125.997 234.160 M118.941 235.936 L 114.312 237.154 113.141 236.018 C 112.496 235.394,111.900 234.952,111.816 235.036 C 111.732 235.120,112.282 235.708,113.038 236.343 L 114.413 237.498 119.338 236.221 C 122.047 235.519,124.328 234.881,124.408 234.804 C 124.729 234.489,123.351 234.775,118.941 235.936 M137.262 238.717 C 136.393 238.855,134.358 240.190,135.009 240.195 C 136.051 240.203,139.370 238.907,138.835 238.701 C 138.510 238.577,138.219 238.498,138.187 238.527 C 138.154 238.555,137.738 238.641,137.262 238.717 M106.066 239.341 C 105.208 239.590,104.818 239.797,105.199 239.801 C 105.581 239.805,106.516 239.602,107.279 239.351 C 109.074 238.760,108.101 238.752,106.066 239.341 M215.771 239.333 C 217.106 239.601,219.256 240.084,220.549 240.406 C 221.843 240.729,222.970 240.924,223.053 240.840 C 223.293 240.601,217.364 239.220,215.251 239.024 C 213.443 238.856,213.470 238.872,215.771 239.333 M100.031 240.831 C 98.142 241.326,96.764 241.787,96.969 241.855 C 97.322 241.973,104.000 240.281,104.304 239.996 C 104.604 239.716,103.357 239.959,100.031 240.831 M133.033 240.624 C 133.356 240.947,133.541 240.947,133.865 240.624 C 134.188 240.300,134.096 240.208,133.449 240.208 C 132.802 240.208,132.709 240.300,133.033 240.624 M261.393 240.590 C 259.377 241.200,256.153 243.780,256.153 244.783 C 256.153 245.004,256.713 244.531,257.398 243.731 C 259.362 241.436,264.795 239.808,265.685 241.248 C 265.802 241.438,266.195 241.594,266.558 241.594 C 268.034 241.594,269.616 245.115,269.711 248.608 L 269.750 250.087 270.008 248.753 C 271.048 243.371,266.487 239.048,261.393 240.590 M62.552 241.393 C 63.307 241.677,63.996 241.839,64.083 241.752 C 64.358 241.476,63.988 241.315,62.565 241.092 L 61.179 240.875 62.552 241.393 M90.468 241.014 C 90.468 241.915,93.458 243.010,94.853 242.620 C 95.693 242.384,96.313 242.124,96.230 242.041 C 96.147 241.958,95.487 242.054,94.763 242.254 C 93.604 242.574,93.268 242.513,91.957 241.745 C 91.138 241.265,90.468 240.936,90.468 241.014 M203.899 241.157 C 204.996 241.226,206.789 241.226,207.886 241.157 C 208.982 241.089,208.085 241.032,205.893 241.032 C 203.700 241.032,202.803 241.089,203.899 241.157 M199.320 241.681 C 199.327 241.919,199.990 242.550,200.793 243.082 L 202.253 244.050 200.904 242.867 C 199.948 242.030,199.695 241.629,200.037 241.494 C 200.385 241.356,200.350 241.295,199.913 241.275 C 199.580 241.260,199.313 241.443,199.320 241.681 M211.467 241.374 C 211.547 241.444,212.470 241.589,213.518 241.698 C 214.749 241.825,215.117 241.793,214.558 241.606 C 213.699 241.320,211.190 241.131,211.467 241.374 M223.551 242.893 C 222.768 244.455,222.779 244.609,223.587 243.400 C 224.007 242.772,224.278 242.187,224.190 242.098 C 224.102 242.010,223.814 242.368,223.551 242.893 M143.515 244.627 C 144.632 246.616,145.762 248.317,145.530 247.660 C 145.275 246.941,142.740 242.634,142.571 242.634 C 142.474 242.634,142.899 243.531,143.515 244.627 M202.426 244.111 C 202.426 244.192,203.245 244.942,204.246 245.777 C 205.247 246.612,205.847 247.020,205.579 246.684 C 205.042 246.010,202.426 243.875,202.426 244.111 M222.010 245.754 C 221.715 246.326,221.551 246.794,221.646 246.794 C 221.741 246.794,222.061 246.326,222.357 245.754 C 222.653 245.182,222.817 244.714,222.721 244.714 C 222.626 244.714,222.306 245.182,222.010 245.754 M69.134 247.920 L 67.764 249.393 69.237 248.023 C 70.607 246.749,70.870 246.447,70.608 246.447 C 70.551 246.447,69.888 247.110,69.134 247.920 M220.451 248.527 C 220.062 249.289,219.821 249.913,219.917 249.913 C 220.012 249.913,220.408 249.289,220.797 248.527 C 221.186 247.764,221.427 247.140,221.331 247.140 C 221.236 247.140,220.840 247.764,220.451 248.527 M217.158 248.873 C 216.862 249.445,216.698 249.913,216.793 249.913 C 216.889 249.913,217.209 249.445,217.504 248.873 C 217.800 248.302,217.964 247.834,217.869 247.834 C 217.773 247.834,217.453 248.302,217.158 248.873 M146.488 249.567 C 147.670 251.353,147.910 251.355,146.891 249.569 C 146.456 248.808,145.981 248.184,145.836 248.183 C 145.690 248.181,145.984 248.804,146.488 249.567 M186.049 249.112 C 185.715 249.200,185.442 249.425,185.442 249.613 C 185.442 249.801,185.288 249.859,185.099 249.742 C 184.899 249.619,184.847 249.766,184.974 250.098 C 185.134 250.513,185.261 250.552,185.453 250.242 C 185.638 249.943,185.829 250.035,186.110 250.560 C 186.418 251.136,186.408 251.309,186.061 251.343 C 185.136 251.433,189.490 252.070,190.815 252.038 C 191.690 252.018,192.031 252.113,191.739 252.297 C 191.130 252.682,194.159 253.465,195.036 253.150 C 195.383 253.025,195.544 253.057,195.394 253.222 C 195.131 253.511,202.321 256.193,203.553 256.265 C 203.886 256.285,204.159 256.399,204.159 256.518 C 204.159 256.871,205.917 257.565,206.265 257.350 C 206.441 257.241,206.586 257.312,206.586 257.509 C 206.586 257.825,209.579 259.318,210.296 259.360 C 210.448 259.369,210.754 259.626,210.977 259.930 C 211.436 260.559,211.406 260.582,212.392 258.859 C 212.864 258.034,212.961 257.642,212.663 257.756 C 212.409 257.853,212.097 257.764,211.970 257.557 C 211.842 257.350,211.598 257.267,211.427 257.373 C 211.257 257.478,210.794 257.241,210.399 256.846 C 210.003 256.451,209.535 256.217,209.359 256.326 C 209.182 256.435,208.712 256.199,208.314 255.801 C 207.822 255.309,207.360 255.150,206.871 255.305 C 206.446 255.440,206.236 255.397,206.358 255.200 C 206.642 254.742,204.995 254.040,204.280 254.314 C 203.913 254.455,203.784 254.400,203.929 254.165 C 204.219 253.696,202.263 252.984,201.493 253.280 C 201.138 253.416,201.012 253.359,201.156 253.126 C 201.460 252.633,199.572 251.988,198.583 252.247 C 198.070 252.381,197.891 252.321,198.048 252.066 C 198.356 251.569,196.253 250.980,194.930 251.193 C 194.246 251.304,194.079 251.252,194.396 251.029 C 195.021 250.589,192.282 249.928,190.641 250.122 C 189.821 250.219,189.637 250.174,190.073 249.984 C 190.650 249.734,187.764 248.763,186.889 248.914 C 186.760 248.936,186.382 249.025,186.049 249.112 M66.015 251.386 L 64.645 252.860 66.118 251.489 C 67.488 250.215,67.750 249.913,67.488 249.913 C 67.431 249.913,66.768 250.576,66.015 251.386 M211.431 252.082 C 213.832 254.587,214.050 254.669,214.831 253.361 L 215.336 252.513 214.616 253.380 L 213.896 254.246 211.541 251.993 L 209.185 249.740 211.431 252.082 M338.215 251.551 C 338.834 251.627,339.848 251.627,340.468 251.551 C 341.088 251.474,340.581 251.411,339.341 251.411 C 338.102 251.411,337.595 251.474,338.215 251.551 M210.745 253.488 C 210.745 253.548,211.252 254.055,211.872 254.615 L 212.998 255.633 211.980 254.506 C 211.031 253.456,210.745 253.220,210.745 253.488 M187.175 254.109 C 187.175 254.835,193.403 262.039,198.233 266.898 C 201.170 269.853,203.337 271.958,203.048 271.577 C 201.703 269.798,201.966 269.495,204.821 269.530 C 207.401 269.561,207.407 269.559,205.142 269.428 L 202.833 269.295 198.188 264.717 C 195.634 262.199,192.502 258.792,191.229 257.147 C 189.165 254.479,187.175 252.988,187.175 254.109 M160.833 255.578 C 161.175 256.029,161.296 257.097,161.247 259.217 C 161.209 260.868,161.295 262.733,161.438 263.361 C 161.603 264.086,161.698 262.981,161.698 260.341 C 161.698 256.660,161.620 256.106,161.024 255.558 C 160.375 254.962,160.368 254.963,160.833 255.578 M282.276 255.450 C 277.791 255.962,272.808 260.721,272.794 264.506 C 272.788 266.105,274.748 268.395,275.921 268.161 C 279.232 267.499,281.414 265.387,278.427 265.736 C 275.661 266.059,273.315 263.527,274.859 261.884 C 275.246 261.471,275.563 260.972,275.563 260.774 C 275.563 260.376,276.640 259.190,278.135 257.941 C 278.914 257.291,279.347 257.175,280.315 257.356 C 281.156 257.514,281.452 257.467,281.288 257.201 C 280.873 256.529,282.958 257.230,283.709 258.014 C 284.242 258.571,284.391 259.168,284.356 260.599 C 284.312 262.355,284.139 262.949,283.000 265.251 C 282.423 266.417,282.343 266.419,284.614 265.214 C 288.253 263.284,289.457 258.628,286.920 256.300 C 286.208 255.647,285.350 255.134,285.014 255.160 C 284.677 255.186,283.445 255.317,282.276 255.450 M151.860 256.846 C 153.196 258.676,154.729 260.477,157.111 263.011 C 158.375 264.357,158.958 265.324,159.303 266.651 L 159.773 268.458 159.600 266.898 C 159.409 265.187,159.321 265.053,155.806 261.105 C 154.471 259.607,152.782 257.684,152.051 256.833 L 150.722 255.286 151.860 256.846 M159.198 257.019 C 159.201 257.972,159.268 258.321,159.348 257.794 C 159.427 257.267,159.425 256.487,159.343 256.061 C 159.261 255.635,159.195 256.066,159.198 257.019 M159.768 258.071 C 159.753 259.560,159.642 260.227,159.479 259.811 C 159.219 259.145,159.213 259.145,159.036 259.820 C 158.920 260.265,159.124 260.704,159.623 261.080 L 160.388 261.658 160.597 259.165 C 160.760 257.228,160.693 256.559,160.299 256.165 C 159.854 255.719,159.789 255.952,159.768 258.071 M279.607 257.770 C 279.276 258.101,279.322 258.579,279.686 258.579 C 279.856 258.579,280.085 258.345,280.195 258.059 C 280.397 257.531,280.028 257.349,279.607 257.770 M163.605 259.069 C 163.605 259.635,164.032 260.223,164.928 260.889 C 165.655 261.429,168.530 263.810,171.317 266.180 L 176.383 270.488 175.878 271.466 C 175.600 272.004,175.449 272.444,175.542 272.444 C 175.791 272.444,176.463 271.111,176.791 269.965 C 177.058 269.035,176.926 268.848,174.760 267.098 C 171.499 264.463,165.660 259.690,164.729 258.898 C 163.721 258.041,163.605 258.059,163.605 259.069 M214.789 259.157 C 214.662 259.284,214.558 259.908,214.558 260.543 C 214.558 261.206,214.382 261.698,214.145 261.698 C 213.918 261.698,214.029 261.915,214.391 262.180 C 214.753 262.445,215.276 262.574,215.554 262.468 C 215.868 262.347,215.968 262.420,215.818 262.662 C 215.540 263.113,216.759 263.875,217.168 263.506 C 217.319 263.370,217.335 263.445,217.204 263.674 C 216.846 264.298,218.148 264.889,218.734 264.369 C 219.123 264.024,219.131 264.049,218.783 264.512 C 218.448 264.959,218.463 265.156,218.856 265.482 C 219.159 265.734,219.429 265.763,219.555 265.558 C 219.669 265.374,219.601 265.144,219.404 265.047 C 219.208 264.950,219.246 264.911,219.489 264.961 C 219.732 265.010,219.935 265.272,219.940 265.541 C 219.945 265.811,220.065 266.217,220.207 266.443 C 220.357 266.682,220.207 267.005,219.851 267.213 C 219.514 267.409,219.381 267.575,219.557 267.580 C 219.732 267.586,220.175 267.320,220.541 266.989 C 221.174 266.416,221.230 266.419,221.695 267.055 C 221.964 267.423,222.184 267.562,222.184 267.364 C 222.184 266.811,220.951 265.823,220.627 266.117 C 220.469 266.260,220.444 266.196,220.571 265.974 C 220.878 265.436,219.114 263.365,218.599 263.659 C 218.378 263.786,218.313 263.762,218.455 263.606 C 218.806 263.218,218.034 262.345,217.585 262.622 C 217.384 262.746,217.327 262.679,217.455 262.471 C 217.584 262.263,217.068 261.663,216.290 261.118 C 215.353 260.460,214.942 259.939,215.040 259.532 C 215.198 258.875,215.147 258.799,214.789 259.157 M307.826 266.045 C 307.811 266.243,308.127 267.022,308.527 267.778 C 309.175 268.998,309.230 269.035,309.020 268.114 C 308.890 267.544,308.664 266.998,308.517 266.901 C 308.370 266.804,308.160 266.490,308.052 266.205 C 307.943 265.919,307.841 265.847,307.826 266.045 M210.485 269.216 C 210.819 269.304,211.365 269.304,211.698 269.216 C 212.032 269.129,211.759 269.058,211.092 269.058 C 210.425 269.058,210.152 269.129,210.485 269.216 M309.581 269.844 C 309.581 270.225,309.715 270.849,309.879 271.231 L 310.177 271.924 310.177 271.231 C 310.177 270.849,310.043 270.225,309.879 269.844 L 309.581 269.151 309.581 269.844 M263.297 269.955 C 263.188 270.131,263.661 270.367,264.348 270.478 C 265.035 270.590,265.891 270.947,266.250 271.271 C 267.091 272.032,267.324 271.784,266.786 270.699 C 266.343 269.806,263.733 269.249,263.297 269.955 M285.148 270.711 C 283.792 271.902,282.496 272.096,282.496 271.107 C 282.496 270.448,283.953 269.777,285.541 269.706 C 286.270 269.674,286.238 269.754,285.148 270.711 M160.139 270.293 C 160.139 270.820,161.563 274.601,161.707 274.457 C 161.828 274.336,160.519 270.290,160.280 270.046 C 160.202 269.967,160.139 270.078,160.139 270.293 M310.602 272.617 C 310.591 272.998,310.734 273.544,310.919 273.830 C 311.364 274.519,311.364 273.653,310.919 272.617 L 310.621 271.924 310.602 272.617 M177.816 273.137 C 177.595 273.551,177.491 273.968,177.587 274.063 C 177.682 274.158,177.941 273.897,178.163 273.484 C 178.384 273.070,178.488 272.653,178.392 272.558 C 178.297 272.462,178.038 272.723,177.816 273.137 M281.398 272.997 C 283.359 274.370,281.294 277.643,278.466 277.643 C 274.518 277.643,276.164 273.306,280.425 272.479 C 280.526 272.460,280.964 272.692,281.398 272.997 M79.628 273.540 C 81.995 274.070,84.573 277.761,83.397 278.937 C 83.282 279.052,83.176 278.768,83.161 278.307 C 83.134 277.518,83.106 277.530,82.670 278.522 C 81.960 280.138,80.829 280.598,79.217 279.924 C 77.577 279.239,77.518 279.241,77.797 279.983 C 77.987 280.487,77.904 280.469,77.306 279.878 C 76.280 278.864,75.967 275.905,76.750 274.621 L 77.338 273.657 76.588 274.520 C 74.822 276.552,76.522 280.988,79.397 281.850 C 81.065 282.349,83.420 281.519,83.053 280.561 C 82.941 280.271,82.988 280.119,83.157 280.223 C 83.578 280.483,83.882 279.568,83.881 278.048 C 83.878 275.611,81.465 273.097,79.203 273.175 C 78.298 273.207,78.353 273.254,79.628 273.540 M278.576 274.187 C 277.508 275.026,277.362 276.085,278.250 276.550 C 279.515 277.213,281.925 275.349,281.233 274.243 C 280.690 273.378,279.633 273.355,278.576 274.187 M176.586 275.595 C 176.282 276.185,176.094 276.729,176.169 276.804 C 176.244 276.879,176.565 276.397,176.882 275.732 C 177.595 274.237,177.348 274.123,176.586 275.595 M311.794 275.635 C 311.899 276.342,312.212 277.356,312.489 277.888 C 312.767 278.421,312.995 279.120,312.996 279.442 C 312.997 279.765,313.141 280.116,313.315 280.224 C 313.489 280.332,313.736 281.042,313.865 281.802 C 313.993 282.563,314.227 283.265,314.385 283.362 C 314.542 283.460,314.776 284.161,314.905 284.922 C 315.033 285.683,315.263 286.382,315.415 286.476 C 315.567 286.570,315.796 287.347,315.925 288.203 C 316.053 289.058,316.287 289.838,316.444 289.935 C 316.601 290.033,316.837 290.970,316.968 292.018 C 317.099 293.066,317.338 294.005,317.499 294.104 C 317.660 294.204,317.902 295.454,318.036 296.883 C 318.169 298.311,318.417 299.480,318.585 299.480 C 318.753 299.480,318.891 300.143,318.891 300.953 C 318.891 301.763,319.125 303.649,319.411 305.143 C 320.311 309.849,319.799 320.593,318.531 323.570 C 318.369 323.951,318.132 325.121,318.005 326.170 C 317.878 327.218,317.653 328.232,317.506 328.423 C 317.358 328.614,317.124 329.315,316.984 329.983 C 316.845 330.650,316.611 331.352,316.464 331.542 C 316.318 331.733,316.082 332.430,315.940 333.091 C 315.672 334.343,315.570 334.608,314.617 336.510 C 314.298 337.145,314.038 337.830,314.038 338.032 C 314.038 338.593,312.564 341.421,312.271 341.421 C 312.129 341.421,311.914 341.876,311.791 342.432 C 311.669 342.988,311.345 343.529,311.071 343.634 C 310.796 343.740,310.572 344.045,310.572 344.314 C 310.572 344.583,310.338 344.997,310.052 345.234 C 309.766 345.471,309.543 345.919,309.556 346.230 C 309.572 346.634,309.686 346.573,309.955 346.014 C 310.162 345.585,310.463 345.234,310.625 345.234 C 310.786 345.234,310.919 344.995,310.919 344.703 C 310.919 344.411,311.138 344.088,311.407 343.985 C 311.676 343.882,311.991 343.419,312.107 342.956 C 312.223 342.493,312.459 342.114,312.631 342.114 C 312.803 342.114,313.043 341.659,313.165 341.103 C 313.287 340.547,313.612 340.006,313.886 339.901 C 314.160 339.796,314.385 339.315,314.385 338.832 C 314.385 338.350,314.534 337.955,314.716 337.955 C 314.898 337.955,315.149 337.409,315.274 336.742 C 315.399 336.075,315.623 335.529,315.770 335.529 C 315.918 335.529,316.144 334.827,316.273 333.969 C 316.402 333.111,316.636 332.409,316.793 332.409 C 316.950 332.409,317.190 331.668,317.326 330.763 C 317.461 329.857,317.722 329.024,317.904 328.910 C 318.087 328.797,318.328 327.822,318.439 326.744 C 318.550 325.666,318.762 324.783,318.910 324.783 C 319.057 324.783,319.290 323.575,319.427 322.097 C 319.563 320.620,319.824 319.315,320.007 319.198 C 320.439 318.921,320.441 305.345,320.009 305.063 C 319.832 304.947,319.580 303.532,319.448 301.918 C 319.316 300.304,319.078 298.900,318.918 298.798 C 318.758 298.697,318.515 297.483,318.377 296.101 C 318.240 294.718,318.005 293.588,317.856 293.588 C 317.706 293.588,317.477 292.730,317.346 291.681 C 317.215 290.633,316.983 289.775,316.831 289.775 C 316.678 289.775,316.450 288.995,316.324 288.042 C 316.197 287.088,315.958 286.308,315.792 286.308 C 315.626 286.308,315.382 285.529,315.251 284.575 C 315.120 283.622,314.881 282.842,314.720 282.842 C 314.559 282.842,314.322 282.140,314.193 281.282 C 314.065 280.425,313.839 279.723,313.691 279.723 C 313.543 279.723,313.320 279.177,313.194 278.510 C 313.069 277.842,312.818 277.296,312.636 277.296 C 312.454 277.296,312.294 276.945,312.281 276.516 C 312.267 276.088,312.110 275.425,311.930 275.043 C 311.687 274.525,311.652 274.674,311.794 275.635 M161.872 274.995 C 161.872 275.385,163.846 279.141,164.448 279.896 C 164.752 280.277,164.349 279.341,163.552 277.816 C 161.989 274.826,161.872 274.630,161.872 274.995 M107.098 276.893 C 108.182 277.705,108.217 280.383,107.162 281.799 C 106.336 282.906,103.119 283.448,102.214 282.632 C 98.380 279.173,102.956 273.794,107.098 276.893 M176.776 277.052 C 176.776 277.141,177.510 277.814,178.407 278.549 C 179.303 279.284,179.925 279.704,179.788 279.482 C 179.497 279.011,176.776 276.816,176.776 277.052 M173.849 279.983 L 173.269 280.936 173.952 280.156 C 174.828 279.155,174.831 279.155,176.580 280.589 C 177.395 281.256,178.176 281.802,178.316 281.802 C 178.457 281.802,177.782 281.179,176.818 280.416 C 174.735 278.770,174.600 278.750,173.849 279.983 M180.469 280.156 C 180.558 280.299,181.284 280.434,182.083 280.456 C 182.882 280.478,183.263 280.568,182.929 280.655 C 182.239 280.835,182.095 282.122,182.756 282.201 C 182.994 282.230,182.487 282.362,181.629 282.496 L 180.069 282.738 182.149 282.785 C 184.664 282.841,185.187 282.563,185.036 281.245 C 184.925 280.272,184.855 280.238,182.615 280.069 C 181.346 279.974,180.380 280.013,180.469 280.156 M165.578 281.829 C 165.923 282.416,166.426 283.079,166.697 283.302 C 166.967 283.526,166.752 283.046,166.217 282.236 C 165.095 280.534,164.653 280.253,165.578 281.829 M172.159 281.998 C 171.811 282.475,170.744 283.484,169.788 284.240 C 168.831 284.997,168.201 285.615,168.387 285.615 C 168.573 285.615,169.796 284.608,171.104 283.377 C 172.413 282.146,173.328 281.137,173.137 281.135 C 172.946 281.133,172.506 281.521,172.159 281.998 M275.563 283.709 C 273.957 285.139,272.537 286.308,272.407 286.308 C 272.277 286.308,272.076 286.558,271.959 286.863 C 271.842 287.167,272.488 286.791,273.395 286.026 C 275.888 283.922,278.880 281.143,278.670 281.125 C 278.568 281.116,277.170 282.279,275.563 283.709 M121.079 285.945 C 119.457 286.934,118.801 288.735,120.064 288.735 C 120.960 288.735,122.352 289.630,122.354 290.208 C 122.356 290.542,122.492 290.815,122.656 290.815 C 122.821 290.815,122.958 290.464,122.961 290.035 C 122.981 287.187,123.042 286.988,124.003 286.604 C 126.972 285.418,133.269 287.345,135.431 290.103 C 135.663 290.399,135.858 290.512,135.864 290.354 C 135.881 289.929,133.161 287.396,132.108 286.855 C 129.024 285.272,122.998 284.774,121.079 285.945 M269.079 289.016 C 267.895 289.910,266.920 290.767,266.912 290.921 C 266.896 291.228,270.897 288.234,271.236 287.686 C 271.556 287.169,271.392 287.270,269.079 289.016 M60.753 291.508 C 60.753 292.366,60.821 292.717,60.903 292.288 C 60.986 291.859,60.986 291.157,60.903 290.728 C 60.821 290.299,60.753 290.650,60.753 291.508 M65.511 290.988 C 65.988 291.260,66.534 291.483,66.724 291.483 C 66.915 291.483,66.681 291.260,66.205 290.988 C 65.728 290.715,65.182 290.493,64.991 290.493 C 64.801 290.493,65.035 290.715,65.511 290.988 M260.711 295.136 C 256.803 297.794,255.165 299.008,256.499 298.260 C 257.761 297.551,265.165 292.517,265.165 292.368 C 265.165 292.105,265.209 292.077,260.711 295.136 M60.392 295.321 C 60.392 295.988,60.464 296.261,60.551 295.927 C 60.638 295.594,60.638 295.048,60.551 294.714 C 60.464 294.380,60.392 294.653,60.392 295.321 M59.782 300.336 C 59.646 301.789,59.609 303.053,59.701 303.144 C 59.793 303.236,59.976 302.119,60.108 300.663 C 60.240 299.206,60.276 297.942,60.189 297.855 C 60.101 297.767,59.918 298.884,59.782 300.336 M78.336 298.220 C 78.336 298.315,78.804 298.726,79.376 299.133 C 79.948 299.541,80.416 299.796,80.416 299.701 C 80.416 299.605,79.948 299.194,79.376 298.787 C 78.804 298.380,78.336 298.124,78.336 298.220 M252.262 300.312 C 250.447 301.391,250.160 301.788,251.820 300.923 C 253.557 300.017,254.349 299.483,253.899 299.518 C 253.709 299.533,252.972 299.891,252.262 300.312 M140.776 301.918 C 140.326 302.293,140.120 302.600,140.318 302.600 C 140.668 302.600,141.768 301.661,141.768 301.362 C 141.768 301.125,141.645 301.195,140.776 301.918 M248.318 302.581 C 247.345 303.139,244.708 304.416,242.457 305.419 C 240.206 306.422,238.535 307.299,238.743 307.368 C 239.158 307.507,248.625 302.990,249.740 302.122 C 250.810 301.289,250.263 301.465,248.318 302.581 M114.881 302.163 C 116.087 302.286,118.540 303.640,117.558 303.640 C 117.345 303.640,117.077 304.015,116.962 304.473 C 116.406 306.687,113.568 307.767,112.356 306.226 C 111.947 305.705,111.612 305.429,111.612 305.612 C 111.612 306.161,113.128 307.413,114.280 307.814 C 115.710 308.313,118.355 307.668,118.057 306.893 C 117.946 306.603,118.008 306.469,118.200 306.587 C 118.388 306.703,118.713 306.421,118.923 305.960 C 119.767 304.107,117.456 301.849,114.835 301.965 L 113.518 302.023 114.881 302.163 M59.638 304.563 C 59.649 304.722,60.441 305.450,61.399 306.179 C 62.528 307.040,63.070 307.683,62.944 308.013 C 62.834 308.300,62.935 308.496,63.177 308.465 C 64.259 308.326,64.514 308.475,64.052 308.977 C 63.712 309.347,63.481 309.369,63.085 309.070 C 62.768 308.831,62.805 308.960,63.178 309.399 C 63.771 310.097,63.751 310.186,62.557 312.166 C 58.134 319.500,60.606 328.321,67.591 330.133 L 68.458 330.358 67.635 329.875 L 66.812 329.393 67.635 329.172 C 68.087 329.051,69.437 328.950,70.635 328.948 C 71.833 328.945,73.384 328.704,74.083 328.412 C 74.782 328.120,75.568 327.964,75.831 328.064 C 76.370 328.271,77.389 327.418,77.030 327.059 C 76.902 326.931,77.068 326.930,77.398 327.057 C 77.839 327.226,77.944 327.149,77.797 326.764 C 77.667 326.426,78.086 325.847,78.979 325.129 C 79.740 324.518,80.550 323.563,80.780 323.008 C 81.089 322.263,81.310 322.092,81.628 322.356 C 82.488 323.070,79.744 327.000,77.937 327.642 C 77.680 327.733,77.575 327.922,77.704 328.061 C 77.833 328.200,78.834 327.446,79.929 326.386 L 81.919 324.458 84.263 326.195 C 85.553 327.151,86.671 328.043,86.748 328.178 C 86.825 328.313,86.833 328.208,86.766 327.946 C 86.698 327.683,86.808 327.270,87.010 327.026 C 87.432 326.518,86.046 325.330,75.709 317.340 C 72.102 314.552,67.908 311.226,66.388 309.948 C 60.253 304.789,59.619 304.284,59.638 304.563 M158.059 305.719 C 157.636 305.992,157.681 306.056,158.298 306.061 C 158.716 306.063,159.154 305.910,159.272 305.719 C 159.545 305.278,158.742 305.278,158.059 305.719 M93.414 311.265 C 95.887 313.744,97.988 315.771,98.084 315.771 C 98.179 315.771,96.234 313.744,93.761 311.265 C 91.288 308.787,89.187 306.759,89.091 306.759 C 88.996 306.759,90.941 308.787,93.414 311.265 M245.234 307.300 C 244.662 307.573,242.868 308.425,241.248 309.193 C 239.627 309.962,238.669 310.493,239.118 310.373 C 240.181 310.090,247.074 306.814,246.620 306.808 C 246.430 306.806,245.806 307.027,245.234 307.300 M140.993 308.656 C 141.705 309.318,142.093 309.864,141.854 309.869 C 141.616 309.874,141.421 309.732,141.421 309.552 C 141.421 309.372,140.758 308.827,139.948 308.342 C 139.076 307.819,138.724 307.458,139.087 307.456 C 139.423 307.454,140.281 307.994,140.993 308.656 M235.182 308.492 C 233.847 309.044,232.937 309.504,233.158 309.514 C 233.680 309.537,237.508 308.117,237.938 307.741 C 238.523 307.228,237.690 307.455,235.182 308.492 M230.849 310.052 C 230.182 310.309,229.870 310.524,230.156 310.530 C 230.442 310.536,231.144 310.326,231.716 310.065 C 233.054 309.452,232.432 309.443,230.849 310.052 M64.813 311.202 C 64.820 311.868,63.062 314.065,62.700 313.841 C 62.530 313.736,62.379 313.855,62.364 314.104 C 62.342 314.471,62.302 314.472,62.157 314.110 C 61.894 313.453,64.196 309.782,64.536 310.318 C 64.685 310.553,64.810 310.951,64.813 311.202 M234.142 312.144 C 233.275 312.561,233.246 312.610,233.969 312.433 C 234.951 312.193,236.055 311.630,235.529 311.638 C 235.338 311.641,234.714 311.868,234.142 312.144 M67.517 312.895 C 69.350 314.045,75.563 319.569,75.563 320.050 C 75.563 320.279,75.408 320.261,75.147 320.000 C 74.631 319.483,72.444 321.446,72.444 322.425 C 72.444 322.769,72.394 323.050,72.334 323.050 C 72.274 323.050,71.343 323.213,70.267 323.412 C 65.750 324.247,63.331 320.068,65.156 314.584 C 65.979 312.110,66.112 312.015,67.517 312.895 M160.485 313.324 C 160.485 313.928,159.899 314.019,159.237 313.518 C 158.613 313.046,158.629 313.020,159.532 313.009 C 160.056 313.003,160.485 313.145,160.485 313.324 M219.584 313.345 C 218.701 313.724,219.612 313.724,220.797 313.345 C 221.494 313.122,221.528 313.065,220.971 313.057 C 220.589 313.052,219.965 313.181,219.584 313.345 M215.771 314.226 L 214.038 314.693 215.598 314.495 C 216.456 314.386,217.470 314.170,217.851 314.016 C 218.932 313.579,217.714 313.702,215.771 314.226 M155.702 314.454 C 155.378 314.778,155.194 314.778,154.870 314.454 C 154.547 314.131,154.639 314.038,155.286 314.038 C 155.933 314.038,156.025 314.131,155.702 314.454 M209.532 315.425 C 208.605 315.661,208.586 315.689,209.359 315.689 C 209.835 315.689,210.693 315.570,211.265 315.425 C 212.193 315.189,212.211 315.160,211.438 315.160 C 210.962 315.160,210.104 315.279,209.532 315.425 M98.094 316.226 C 98.094 316.286,98.601 316.793,99.220 317.353 L 100.347 318.371 99.329 317.244 C 98.380 316.194,98.094 315.959,98.094 316.226 M202.253 316.464 C 201.086 316.673,201.031 316.716,201.906 316.736 C 202.478 316.749,203.648 316.635,204.506 316.482 C 205.906 316.233,205.941 316.205,204.853 316.210 C 204.185 316.214,203.016 316.328,202.253 316.464 M51.760 321.144 C 51.762 322.478,51.824 322.982,51.899 322.263 C 51.974 321.543,51.973 320.452,51.897 319.836 C 51.820 319.221,51.759 319.809,51.760 321.144 M200.607 320.175 C 201.036 320.258,201.737 320.258,202.166 320.175 C 202.595 320.093,202.244 320.025,201.386 320.025 C 200.529 320.025,200.178 320.093,200.607 320.175 M102.720 321.555 C 103.073 321.972,103.258 322.479,103.133 322.682 C 103.008 322.884,103.071 323.050,103.272 323.050 C 103.907 323.050,103.672 322.146,102.860 321.458 L 102.080 320.797 102.720 321.555 M179.463 321.229 C 181.417 321.291,184.614 321.291,186.568 321.229 C 188.523 321.167,186.924 321.117,183.016 321.117 C 179.107 321.117,177.509 321.167,179.463 321.229 M69.762 330.578 C 70.289 330.658,71.069 330.656,71.495 330.573 C 71.922 330.491,71.490 330.426,70.537 330.428 C 69.584 330.431,69.235 330.498,69.762 330.578 M83.189 332.582 C 82.347 333.440,81.736 334.142,81.831 334.142 C 81.927 334.142,82.694 333.440,83.536 332.582 C 84.377 331.724,84.988 331.023,84.893 331.023 C 84.798 331.023,84.031 331.724,83.189 332.582 ",stroke:"none",fill:"#563d3d",fillRule:"evenodd"}),/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{id:"path4",d:"M310.919 3.632 C 303.277 5.836,300.122 14.483,304.916 20.084 C 306.261 21.655,308.625 22.902,310.120 22.830 C 311.049 22.785,311.054 22.776,310.225 22.636 C 307.385 22.155,304.117 19.433,303.546 17.071 C 303.296 16.034,303.692 15.851,304.897 16.450 C 307.242 17.615,312.357 17.964,314.558 17.109 C 315.321 16.812,316.206 16.552,316.526 16.530 C 316.845 16.507,317.046 16.391,316.972 16.272 C 316.899 16.152,317.415 15.523,318.121 14.873 C 318.827 14.223,319.055 14.092,318.628 14.580 C 317.398 15.988,317.725 16.202,319.094 14.886 C 320.708 13.335,321.418 11.939,321.234 10.684 C 321.030 9.291,321.525 9.125,322.169 10.370 C 324.001 13.913,320.892 20.844,317.097 21.677 C 316.322 21.847,315.651 22.530,316.258 22.530 C 316.823 22.530,319.586 20.734,320.678 19.658 C 328.078 12.362,320.992 0.726,310.919 3.632 M313.379 8.729 C 313.977 9.846,312.679 10.815,310.772 10.676 C 309.528 10.584,309.359 10.469,309.359 9.716 C 309.359 8.083,312.607 7.286,313.379 8.729 M155.270 22.628 C 153.139 24.307,153.050 27.432,155.093 28.851 C 155.597 29.201,156.060 29.181,155.836 28.818 C 155.735 28.654,156.256 28.283,156.993 27.993 C 159.189 27.131,160.722 23.859,159.464 22.721 C 158.754 22.078,156.044 22.018,155.270 22.628 M314.125 22.769 C 314.458 22.856,315.004 22.856,315.338 22.769 C 315.672 22.682,315.399 22.611,314.731 22.611 C 314.064 22.611,313.791 22.682,314.125 22.769 M156.788 24.411 C 157.052 25.100,156.072 25.882,155.572 25.381 C 155.093 24.903,155.452 23.917,156.105 23.917 C 156.376 23.917,156.684 24.139,156.788 24.411 M349.384 35.480 C 346.267 36.151,344.517 37.373,341.732 40.825 C 341.535 41.069,341.327 41.771,341.270 42.385 C 341.213 42.999,341.233 43.150,341.316 42.721 C 341.399 42.292,341.595 41.941,341.750 41.941 C 341.906 41.941,342.160 41.590,342.315 41.161 C 342.513 40.612,342.631 41.177,342.716 43.076 L 342.837 45.771 344.262 46.803 C 347.145 48.891,351.590 49.276,354.593 47.698 C 358.304 45.748,361.181 43.128,361.174 41.704 C 361.167 40.319,360.812 39.168,360.392 39.168 C 360.194 39.168,359.443 38.530,358.723 37.750 C 357.481 36.405,357.460 36.344,358.304 36.555 C 359.346 36.817,361.349 38.280,362.065 39.301 C 362.403 39.785,362.565 39.854,362.565 39.514 C 362.565 38.907,360.308 36.841,359.302 36.527 C 358.904 36.403,358.497 36.176,358.398 36.022 C 357.850 35.178,352.327 34.845,349.384 35.480 M64.298 35.585 C 56.816 37.198,51.034 44.618,50.073 53.842 C 49.843 56.051,49.777 56.195,49.090 55.981 C 48.685 55.855,46.638 55.622,44.541 55.464 C 42.444 55.305,39.168 54.994,37.262 54.771 C 25.131 53.354,15.537 58.616,14.714 67.136 C 14.425 70.119,14.779 73.602,15.336 73.258 C 15.582 73.106,15.635 73.233,15.486 73.621 C 14.322 76.655,23.535 84.103,32.618 87.470 L 34.907 88.319 39.030 85.256 C 46.718 79.547,56.566 74.034,64.860 70.798 C 69.092 69.147,80.459 65.511,81.389 65.511 C 82.141 65.511,83.093 63.527,83.302 61.525 C 83.382 60.763,83.379 60.404,83.296 60.728 C 83.213 61.053,82.847 61.911,82.483 62.635 C 81.743 64.108,81.744 64.273,82.457 59.965 C 82.750 58.189,82.677 55.308,82.292 53.446 C 82.169 52.856,81.925 52.675,81.358 52.753 C 80.642 52.852,80.574 52.687,80.365 50.352 C 80.133 47.753,79.520 46.355,77.132 42.973 C 76.523 42.111,75.917 40.975,75.784 40.449 C 75.651 39.916,75.163 39.318,74.687 39.101 C 74.216 38.886,73.830 38.579,73.830 38.419 C 73.830 38.259,73.596 38.128,73.310 38.128 C 73.024 38.128,72.790 37.988,72.790 37.816 C 72.790 37.644,71.601 37.137,70.148 36.689 L 67.505 35.875 69.541 35.674 C 71.265 35.503,71.072 35.469,68.284 35.454 C 66.473 35.444,64.679 35.503,64.298 35.585 M72.368 36.130 C 72.953 36.412,73.265 36.406,73.564 36.107 C 73.873 35.798,73.684 35.707,72.773 35.725 C 71.650 35.747,71.625 35.772,72.368 36.130 M357.019 36.049 C 357.019 36.483,356.651 36.483,355.979 36.049 C 355.559 35.777,355.609 35.712,356.239 35.707 C 356.668 35.704,357.019 35.858,357.019 36.049 M74.697 36.709 C 78.061 37.894,81.046 40.518,82.621 43.674 C 83.247 44.927,83.500 45.233,83.359 44.566 C 82.693 41.411,77.259 36.303,74.702 36.430 C 74.006 36.464,74.006 36.465,74.697 36.709 M350.927 39.622 C 351.317 40.241,350.917 41.260,350.189 41.503 C 349.789 41.636,348.700 40.689,348.700 40.208 C 348.700 39.035,350.292 38.616,350.927 39.622 M129.920 39.489 L 128.990 39.688 129.647 41.545 C 130.769 44.717,132.896 47.208,133.628 46.207 C 134.009 45.686,134.154 45.705,135.325 46.428 C 136.029 46.863,136.676 47.149,136.762 47.062 C 136.849 46.976,136.411 46.628,135.791 46.289 C 135.170 45.950,134.194 45.086,133.622 44.368 C 133.050 43.651,132.476 43.126,132.346 43.201 C 131.944 43.436,131.578 42.533,131.506 41.132 C 131.424 39.520,131.141 39.227,129.920 39.489 M121.837 40.690 C 118.382 41.987,109.009 48.214,111.102 47.822 C 111.690 47.712,112.997 48.248,112.824 48.528 C 112.201 49.536,115.260 49.178,117.375 47.995 C 119.540 46.784,119.662 46.757,120.302 47.336 C 121.042 48.006,121.353 54.003,120.624 53.553 C 119.914 53.114,120.325 53.740,122.010 55.666 C 124.432 58.434,124.286 58.925,121.039 58.925 C 117.522 58.925,115.903 59.591,115.064 61.381 C 113.541 64.633,112.094 65.536,111.777 63.432 C 111.641 62.525,111.145 61.732,110.835 61.924 C 110.590 62.075,110.533 61.952,110.675 61.582 C 110.932 60.913,110.623 59.893,110.236 60.132 C 110.091 60.221,109.335 59.987,108.556 59.610 C 106.856 58.789,106.548 58.766,106.287 59.445 C 106.031 60.113,104.889 60.116,104.336 59.450 C 103.716 58.702,104.156 57.446,105.272 56.785 C 105.804 56.470,106.941 55.546,107.799 54.731 C 108.657 53.917,109.476 53.280,109.619 53.315 C 109.925 53.391,109.917 52.396,109.593 50.311 L 109.359 48.803 107.710 50.484 C 102.891 55.401,100.270 61.619,101.667 64.818 C 102.005 65.593,102.207 65.799,102.225 65.388 C 102.245 64.928,102.422 64.809,102.844 64.971 C 106.691 66.447,110.304 64.270,109.198 61.142 C 108.726 59.804,109.436 60.692,111.030 63.432 C 112.606 66.141,113.406 66.073,115.118 63.085 C 116.904 59.967,116.704 60.087,120.597 59.811 C 125.421 59.469,125.686 59.021,122.991 55.758 C 121.541 54.001,121.328 53.357,122.280 53.606 C 122.926 53.775,126.170 51.540,126.170 50.926 C 126.170 50.738,126.465 50.472,126.825 50.335 C 127.429 50.106,127.364 49.888,125.991 47.551 C 124.566 45.125,123.397 42.225,123.397 41.117 C 123.397 40.357,123.008 40.250,121.837 40.690 M261.352 43.866 C 250.864 46.262,242.834 56.195,244.289 64.974 C 247.321 83.273,277.109 82.631,283.678 64.125 C 288.125 51.597,275.935 40.536,261.352 43.866 M363.258 45.997 C 363.258 47.629,360.000 51.403,357.728 52.402 C 357.266 52.605,357.272 52.641,357.774 52.662 C 358.094 52.675,358.590 52.452,358.876 52.166 C 359.162 51.880,359.515 51.646,359.660 51.646 C 359.883 51.646,361.757 49.710,362.893 48.306 C 363.284 47.824,363.764 45.407,363.470 45.407 C 363.354 45.407,363.258 45.673,363.258 45.997 M83.705 46.534 C 83.843 46.963,84.074 48.016,84.219 48.873 C 84.423 50.079,84.492 50.197,84.525 49.393 C 84.590 47.806,84.179 45.754,83.796 45.754 C 83.599 45.754,83.560 46.083,83.705 46.534 M72.436 47.774 C 73.789 48.783,74.439 50.235,74.597 52.603 C 74.676 53.796,74.646 54.618,74.530 54.430 C 74.413 54.241,74.038 54.561,73.695 55.141 C 71.483 58.887,65.907 59.272,64.460 55.779 C 64.138 55.000,63.942 54.840,63.722 55.176 C 63.265 55.871,63.758 52.726,64.355 51.127 C 65.718 47.479,69.779 45.794,72.436 47.774 M259.005 47.084 C 258.763 47.238,259.905 47.293,261.543 47.207 C 264.600 47.047,265.156 47.222,265.438 48.437 C 265.718 49.647,265.678 54.765,265.388 54.765 C 265.224 54.766,265.187 55.019,265.306 55.328 C 265.476 55.771,265.356 55.850,264.737 55.701 C 264.014 55.528,264.003 55.545,264.604 55.919 C 270.007 59.283,269.853 64.862,264.261 68.365 C 256.490 73.233,245.687 68.739,247.945 61.577 C 249.201 57.592,252.381 55.691,258.752 55.116 C 261.413 54.876,261.441 54.864,259.445 54.837 C 258.302 54.820,256.643 54.927,255.759 55.072 C 252.232 55.654,253.115 50.954,257.004 48.441 C 257.962 47.822,257.766 47.808,256.322 48.392 C 255.485 48.731,256.069 47.635,256.953 47.208 C 257.859 46.770,259.672 46.660,259.005 47.084 M341.278 48.144 C 341.409 49.477,344.418 52.703,345.493 52.664 C 346.012 52.646,345.999 52.600,345.407 52.353 C 343.924 51.733,341.692 49.153,341.324 47.635 C 341.235 47.268,341.214 47.497,341.278 48.144 M115.363 51.751 C 113.169 52.987,109.185 56.624,109.185 57.390 C 109.185 57.860,109.368 57.944,110.559 58.026 C 110.837 58.045,111.420 58.606,111.853 59.273 C 112.285 59.940,112.789 60.664,112.971 60.882 C 113.154 61.100,113.274 61.335,113.237 61.406 C 113.201 61.476,113.356 61.321,113.581 61.062 C 113.806 60.803,113.918 60.403,113.830 60.173 C 113.347 58.915,115.225 57.368,117.343 57.276 C 120.774 57.128,121.085 56.997,120.416 55.975 C 120.107 55.504,119.734 55.194,119.585 55.285 C 119.046 55.618,118.583 54.529,118.478 52.679 C 118.346 50.352,118.020 50.255,115.363 51.751 M266.548 53.283 C 266.173 53.867,266.163 53.866,266.352 53.265 C 266.461 52.915,266.572 52.291,266.598 51.878 C 266.645 51.127,266.646 51.127,266.794 51.896 C 266.876 52.320,266.765 52.944,266.548 53.283 M353.986 53.618 C 354.320 53.706,354.866 53.706,355.199 53.618 C 355.533 53.531,355.260 53.460,354.593 53.460 C 353.925 53.460,353.653 53.531,353.986 53.618 M84.328 55.633 C 84.331 56.586,84.398 56.935,84.477 56.408 C 84.557 55.881,84.555 55.101,84.473 54.675 C 84.390 54.248,84.325 54.679,84.328 55.633 M74.161 55.836 C 73.948 56.233,73.705 56.489,73.621 56.405 C 73.378 56.163,73.870 55.113,74.226 55.113 C 74.403 55.113,74.374 55.438,74.161 55.836 M254.375 57.086 C 253.967 57.589,253.971 57.629,254.408 57.365 C 254.687 57.197,255.467 56.951,256.141 56.819 L 257.366 56.579 256.108 56.539 C 255.308 56.514,254.678 56.712,254.375 57.086 M83.671 58.431 C 83.545 58.935,83.618 59.493,83.838 59.713 C 84.128 60.003,84.229 59.773,84.229 58.821 C 84.229 57.328,83.990 57.161,83.671 58.431 M31.974 61.395 C 32.767 61.800,33.708 62.502,34.065 62.955 C 34.429 63.418,35.081 63.778,35.554 63.778 C 36.445 63.778,36.690 64.278,35.962 64.613 C 35.724 64.722,35.876 64.726,36.301 64.620 C 36.727 64.515,37.351 64.606,37.688 64.823 C 38.248 65.182,38.241 65.199,37.608 65.014 C 37.106 64.868,37.218 65.075,38.015 65.768 C 40.502 67.931,41.298 71.059,39.834 72.919 C 36.506 77.150,26.991 73.547,28.322 68.560 C 28.737 67.006,28.433 67.125,27.858 68.742 L 27.466 69.844 27.214 68.891 C 27.075 68.367,26.826 67.938,26.661 67.938 C 25.374 67.938,24.985 64.352,26.094 62.708 C 27.536 60.567,29.494 60.130,31.974 61.395 M280.763 67.071 C 280.763 67.357,280.614 67.591,280.432 67.591 C 280.250 67.591,279.998 68.140,279.872 68.811 C 279.011 73.401,267.185 78.619,260.312 77.442 C 257.838 77.019,257.463 75.851,259.893 76.139 C 261.684 76.351,264.905 75.806,266.882 74.956 C 267.558 74.665,268.423 74.309,268.804 74.164 C 270.976 73.339,272.428 72.555,273.693 71.524 C 274.475 70.886,275.351 70.364,275.639 70.364 C 276.438 70.364,277.981 69.013,277.781 68.489 C 277.584 67.977,278.639 66.738,278.981 67.081 C 279.100 67.199,278.925 67.448,278.593 67.634 C 277.894 68.026,277.790 68.632,278.423 68.629 C 278.661 68.627,279.122 68.160,279.447 67.589 C 280.076 66.483,280.763 66.213,280.763 67.071 M331.196 86.286 C 326.188 87.504,322.961 91.055,323.542 94.709 C 324.760 102.370,339.375 103.945,344.003 96.914 C 347.783 91.171,339.472 84.273,331.196 86.286 M335.910 88.076 C 336.418 88.584,336.592 89.108,336.489 89.816 C 336.402 90.402,336.534 90.989,336.801 91.210 C 339.082 93.103,335.886 97.171,332.122 97.167 C 325.964 97.162,324.421 89.627,330.513 89.316 C 331.173 89.282,331.713 89.111,331.714 88.935 C 331.722 87.423,334.655 86.822,335.910 88.076 M192.723 88.450 C 192.720 89.171,194.882 91.512,195.535 91.495 C 195.806 91.488,195.587 91.134,195.031 90.679 C 194.491 90.237,193.751 89.423,193.387 88.872 C 192.933 88.184,192.725 88.051,192.723 88.450 M151.820 89.072 C 145.102 89.936,136.299 92.692,132.404 95.151 C 131.652 95.625,130.958 96.014,130.861 96.014 C 130.253 96.014,124.609 99.901,122.059 102.076 C 118.966 104.713,116.811 109.194,116.521 113.591 L 116.287 117.130 117.417 117.088 C 118.791 117.036,118.303 116.471,121.522 121.837 C 123.009 124.315,124.468 126.529,124.764 126.757 C 125.353 127.209,131.000 129.094,131.165 128.893 C 131.221 128.825,131.453 127.990,131.680 127.036 C 131.908 126.083,132.175 125.030,132.275 124.697 C 132.423 124.201,132.237 124.090,131.260 124.090 C 125.315 124.090,119.431 118.454,120.043 113.345 C 120.642 108.334,132.645 96.918,132.750 101.259 C 132.753 101.379,133.497 101.961,134.402 102.551 L 136.049 103.625 136.647 102.852 C 137.436 101.836,137.466 101.936,135.876 100.298 C 134.362 98.738,134.420 98.509,136.502 97.808 C 137.565 97.450,137.632 97.472,137.431 98.105 C 137.264 98.633,137.377 98.787,137.932 98.787 C 138.326 98.787,138.648 98.943,138.648 99.133 C 138.648 99.324,138.863 99.480,139.126 99.480 C 139.389 99.480,139.848 99.831,140.148 100.260 L 140.692 101.040 140.710 100.087 C 140.721 99.473,140.915 99.133,141.255 99.133 C 142.478 99.133,144.574 97.417,144.201 96.721 C 143.500 95.410,143.801 95.161,147.228 94.215 C 161.088 90.390,172.842 92.488,176.074 99.365 C 177.209 101.779,176.141 105.731,173.467 109.015 L 171.963 110.860 174.457 115.826 C 176.841 120.574,177.005 120.804,178.204 121.078 C 179.407 121.353,179.467 121.439,179.671 123.156 C 179.925 125.307,180.772 126.556,182.327 127.073 C 182.961 127.284,183.518 127.713,183.564 128.028 C 183.610 128.342,183.506 128.512,183.332 128.404 C 183.158 128.297,183.016 128.414,183.016 128.666 C 183.016 128.917,182.704 129.317,182.322 129.556 C 181.806 129.878,181.629 129.885,181.629 129.581 C 181.629 129.357,181.535 129.268,181.420 129.383 C 181.113 129.690,182.994 133.503,183.345 133.286 C 183.510 133.184,183.567 133.452,183.473 133.882 C 183.372 134.345,183.420 134.505,183.592 134.275 C 183.965 133.779,185.439 133.290,186.222 133.404 C 186.690 133.472,186.837 133.230,186.864 132.344 L 186.899 131.196 187.184 132.236 C 187.812 134.528,188.513 136.023,189.051 136.211 C 189.483 136.363,189.371 136.503,188.583 136.801 C 187.778 137.105,187.466 137.092,187.176 136.742 C 186.971 136.495,186.474 136.379,186.072 136.485 C 185.436 136.651,185.364 136.555,185.517 135.756 C 185.724 134.669,185.431 134.564,184.839 135.513 C 184.425 136.176,185.125 138.257,185.875 138.590 C 186.018 138.654,186.147 138.966,186.163 139.284 C 186.178 139.601,186.264 139.680,186.355 139.458 C 186.476 139.162,186.767 139.185,187.454 139.543 C 188.784 140.237,189.403 140.157,190.616 139.136 C 191.533 138.365,191.672 138.328,191.596 138.876 C 191.496 139.603,191.644 139.688,193.005 139.688 C 194.197 139.688,196.880 137.509,196.880 136.541 C 196.880 136.175,197.066 135.875,197.292 135.875 C 197.518 135.875,197.307 135.446,196.823 134.922 C 196.338 134.398,195.846 133.694,195.728 133.359 C 195.610 133.024,195.128 132.574,194.656 132.359 C 193.398 131.786,193.304 131.129,194.425 130.738 C 194.958 130.552,195.741 129.838,196.165 129.152 C 196.590 128.465,197.055 127.903,197.200 127.903 C 197.344 127.903,197.643 127.506,197.865 127.020 C 198.419 125.804,198.439 105.755,197.885 106.309 C 197.607 106.587,197.181 106.471,196.316 105.885 C 194.487 104.643,192.028 105.535,192.028 107.440 C 192.028 109.065,190.059 109.871,188.478 108.894 C 187.812 108.482,187.001 108.146,186.676 108.146 C 186.146 108.146,186.157 108.054,186.779 107.263 C 187.829 105.928,188.055 104.421,187.327 103.616 C 186.329 102.513,185.423 102.739,185.527 104.066 C 185.601 105.003,185.491 105.193,184.856 105.231 C 184.439 105.256,183.608 105.688,183.010 106.191 C 182.412 106.694,181.647 107.106,181.310 107.106 C 180.520 107.106,179.549 108.180,179.549 109.053 C 179.549 109.846,177.651 112.243,177.297 111.896 C 177.164 111.767,177.532 110.969,178.114 110.123 C 178.696 109.278,179.218 108.370,179.274 108.106 C 179.330 107.842,179.532 107.514,179.723 107.379 C 180.360 106.924,180.366 101.079,179.731 99.065 C 179.054 96.920,175.395 93.178,173.310 92.500 C 172.643 92.282,171.707 91.848,171.231 91.534 C 167.835 89.297,158.895 88.163,151.820 89.072 M97.054 92.606 C 93.793 94.219,89.777 95.267,85.618 95.590 L 82.395 95.841 82.251 97.227 C 81.970 99.936,83.287 111.753,84.434 116.811 C 85.648 122.163,86.219 124.379,87.361 128.163 C 87.899 129.944,87.357 129.983,91.691 127.850 C 95.169 126.138,96.342 125.207,94.410 125.692 C 93.393 125.947,93.376 125.465,94.277 122.010 C 94.677 120.476,94.568 114.652,94.076 111.306 C 93.917 110.228,93.965 109.857,94.240 110.027 C 94.889 110.428,94.683 109.933,93.414 108.050 C 91.780 105.623,91.790 105.599,95.102 104.047 C 100.351 101.587,104.717 98.164,103.235 97.670 C 103.013 97.596,102.831 97.037,102.831 96.428 C 102.831 95.819,102.757 95.394,102.667 95.484 C 102.577 95.574,102.214 95.068,101.860 94.358 C 101.506 93.648,100.865 92.674,100.435 92.194 L 99.653 91.320 97.054 92.606 M102.946 91.431 C 102.946 91.880,104.003 93.241,104.352 93.241 C 104.900 93.241,104.717 92.343,104.045 91.735 C 103.362 91.116,102.946 91.001,102.946 91.431 M199.731 94.245 C 199.848 96.113,200.693 96.856,201.631 95.918 C 202.311 95.238,201.515 93.297,200.647 93.519 C 200.421 93.577,200.102 93.421,199.936 93.173 C 199.750 92.892,199.672 93.298,199.731 94.245 M194.725 95.065 C 194.920 96.734,193.682 98.208,192.334 97.912 C 191.258 97.675,190.920 98.360,191.768 99.059 C 192.302 99.500,194.716 99.684,195.701 99.360 C 197.847 98.653,197.716 93.934,195.551 93.934 C 194.674 93.934,194.604 94.029,194.725 95.065 M205.369 95.081 C 204.091 95.954,203.421 96.734,202.833 98.036 C 202.393 99.008,201.576 100.189,201.017 100.659 C 199.949 101.558,199.702 102.240,200.433 102.272 C 200.672 102.283,201.218 102.737,201.647 103.281 L 202.428 104.271 200.954 104.529 C 198.692 104.923,200.316 105.229,206.074 105.492 C 208.739 105.614,212.703 105.949,214.883 106.236 C 217.063 106.524,219.403 106.747,220.082 106.732 C 221.555 106.699,221.462 106.666,217.678 105.876 C 210.858 104.452,204.571 100.273,205.386 97.706 C 206.000 95.770,213.164 94.749,215.965 96.198 C 216.530 96.490,217.887 97.026,218.981 97.389 C 232.051 101.727,235.391 106.073,226.126 106.688 L 223.050 106.892 225.477 107.324 C 228.906 107.935,232.236 107.934,232.236 107.321 C 232.236 107.059,232.470 106.650,232.756 106.412 C 233.817 105.532,233.415 103.318,231.938 101.914 C 229.772 99.853,222.825 96.707,220.440 96.707 C 220.065 96.707,219.757 96.582,219.757 96.430 C 219.757 96.277,218.549 95.957,217.071 95.718 C 213.594 95.157,213.503 95.137,212.461 94.711 C 209.947 93.685,207.203 93.828,205.369 95.081 M385.493 95.188 C 381.247 97.277,382.390 100.867,387.300 100.867 C 390.848 100.867,392.714 99.021,391.542 96.672 C 390.846 95.277,390.838 95.328,391.768 95.281 C 392.245 95.256,392.009 95.113,391.161 94.911 C 388.208 94.208,387.405 94.248,385.493 95.188 M199.426 97.242 C 199.155 97.949,199.793 98.594,200.497 98.324 C 201.231 98.042,201.180 97.654,200.339 97.129 C 199.751 96.762,199.603 96.780,199.426 97.242 M188.740 101.085 C 188.429 101.395,188.262 101.876,188.368 102.153 C 188.475 102.430,188.562 102.810,188.562 102.999 C 188.562 103.678,190.114 103.100,190.528 102.267 C 191.257 100.799,189.913 99.911,188.740 101.085 M195.321 100.803 C 193.317 100.962,193.089 101.445,194.801 101.906 C 196.335 102.320,197.053 102.056,196.826 101.163 C 196.745 100.841,196.270 100.728,195.321 100.803 M129.983 102.762 C 129.983 103.072,130.186 103.193,130.503 103.072 C 130.789 102.962,131.023 102.733,131.023 102.563 C 131.023 102.392,130.789 102.253,130.503 102.253 C 130.217 102.253,129.983 102.482,129.983 102.762 M192.542 102.963 C 192.210 104.012,192.970 104.679,194.497 104.679 C 196.175 104.679,196.347 103.742,194.834 102.848 C 193.504 102.062,192.817 102.097,192.542 102.963 M189.521 104.224 C 188.384 104.522,187.935 107.081,188.885 107.850 C 189.890 108.664,190.472 108.271,191.033 106.397 C 191.645 104.355,191.240 103.773,189.521 104.224 M181.837 104.887 C 181.710 105.218,181.762 105.645,181.953 105.835 C 182.184 106.066,182.377 105.981,182.530 105.581 C 182.657 105.250,182.605 104.823,182.414 104.633 C 182.183 104.402,181.991 104.487,181.837 104.887 M51.993 106.998 C 43.311 111.076,39.174 113.555,34.835 117.279 C 29.730 121.661,27.082 125.314,26.131 129.289 C 25.506 131.902,25.528 132.062,26.516 132.062 C 27.267 132.062,27.383 131.908,27.383 130.912 C 27.383 129.063,28.313 126.446,29.628 124.597 C 30.300 123.652,30.849 123.022,30.849 123.197 C 30.849 123.372,30.591 123.801,30.276 124.149 C 29.741 124.740,29.744 124.830,30.323 125.470 C 30.836 126.036,30.867 126.251,30.503 126.690 C 30.066 127.215,29.429 129.603,29.421 130.741 C 29.418 131.064,29.154 131.393,28.833 131.475 C 28.512 131.556,28.698 131.565,29.246 131.496 C 29.794 131.426,30.973 131.369,31.866 131.369 C 33.408 131.369,33.517 131.305,34.063 130.069 C 36.134 125.381,48.894 118.795,57.223 118.115 L 58.334 118.024 60.464 122.877 C 62.458 127.418,64.928 132.456,67.644 137.519 C 68.824 139.719,69.544 140.156,70.364 139.168 C 70.601 138.882,70.919 138.648,71.071 138.648 C 71.223 138.648,72.490 137.982,73.888 137.168 C 75.286 136.354,77.016 135.382,77.733 135.008 L 79.037 134.327 77.748 133.281 C 70.513 127.411,62.076 118.333,56.498 110.418 C 54.946 108.215,53.570 106.416,53.441 106.420 C 53.312 106.425,52.660 106.685,51.993 106.998 M236.794 107.539 C 236.743 108.803,236.775 108.839,237.955 108.839 C 238.622 108.839,239.168 108.683,239.168 108.492 C 239.168 108.302,238.711 108.146,238.151 108.146 C 237.308 108.146,237.110 107.983,236.990 107.192 C 236.874 106.426,236.835 106.493,236.794 107.539 M184.801 109.959 C 183.898 111.385,183.362 111.565,183.362 110.445 C 183.362 109.584,184.114 108.870,185.043 108.849 C 185.383 108.842,185.317 109.144,184.801 109.959 M194.107 112.166 C 194.107 113.374,195.589 115.394,196.774 115.802 C 197.284 115.978,198.157 119.116,197.797 119.476 C 197.653 119.620,197.427 119.570,197.295 119.366 C 197.162 119.162,196.689 118.802,196.243 118.568 C 195.617 118.238,195.481 117.950,195.643 117.303 C 195.814 116.623,195.721 116.464,195.154 116.464 C 194.418 116.464,194.173 117.353,194.847 117.577 C 195.121 117.669,195.079 118.018,194.707 118.737 C 194.414 119.303,194.062 120.544,193.923 121.495 C 193.435 124.855,192.725 125.344,192.957 122.161 C 193.210 118.684,192.902 118.026,190.725 117.391 L 189.091 116.914 190.819 116.655 C 193.890 116.195,194.334 115.494,193.230 112.852 C 192.669 111.510,192.785 110.919,193.608 110.919 C 193.950 110.919,194.107 111.311,194.107 112.166 M197.512 121.524 C 197.451 121.828,196.829 122.273,196.131 122.512 C 194.524 123.063,194.637 122.391,196.290 121.568 C 197.695 120.868,197.645 120.870,197.512 121.524 M179.203 125.086 C 179.203 125.613,180.594 128.558,180.946 128.776 C 181.449 129.086,181.370 128.800,180.375 126.699 C 179.502 124.854,179.203 124.443,179.203 125.086 M197.224 129.641 C 196.828 130.381,197.092 132.631,197.613 132.953 C 197.782 133.058,197.920 132.198,197.920 131.043 C 197.920 128.784,197.806 128.554,197.224 129.641 M27.926 134.107 C 27.445 134.295,27.376 134.444,27.683 134.633 C 28.201 134.953,29.116 134.647,29.116 134.153 C 29.116 133.745,28.874 133.735,27.926 134.107 M190.988 142.069 C 190.988 142.256,190.715 142.482,190.381 142.569 C 190.008 142.666,190.141 142.743,190.728 142.767 C 191.671 142.807,192.004 142.355,191.334 141.941 C 191.144 141.823,190.988 141.881,190.988 142.069 M219.625 239.132 C 220.267 239.683,224.987 240.800,224.437 240.270 C 224.246 240.086,223.017 239.696,221.705 239.403 C 220.393 239.109,219.457 238.987,219.625 239.132 M140.815 241.421 C 140.914 241.802,141.102 242.372,141.232 242.686 C 141.411 243.119,141.189 243.350,140.318 243.637 C 137.686 244.503,135.049 245.062,133.519 245.076 C 132.622 245.084,131.265 245.316,130.503 245.591 C 128.786 246.209,128.827 246.209,129.068 245.581 C 129.178 245.295,129.132 245.061,128.966 245.061 C 127.799 245.061,127.963 248.882,129.202 250.580 C 131.656 253.942,143.520 253.908,144.917 250.535 C 145.242 249.751,145.419 249.636,145.806 249.957 C 146.585 250.603,146.045 249.469,143.557 245.234 C 141.181 241.189,140.510 240.257,140.815 241.421 M200.355 241.808 C 200.359 241.976,201.008 242.582,201.796 243.154 C 204.105 244.829,210.360 250.253,212.689 252.600 C 214.188 254.110,214.130 254.167,217.688 247.660 C 218.314 246.516,219.055 245.227,219.335 244.795 C 219.752 244.152,219.758 244.031,219.368 244.131 C 219.105 244.199,219.008 244.188,219.151 244.108 C 219.858 243.713,219.289 242.992,218.111 242.792 C 217.396 242.670,216.265 242.417,215.598 242.228 C 214.016 241.780,200.344 241.403,200.355 241.808 M224.340 242.894 C 223.744 243.752,222.376 246.176,220.575 249.567 C 220.221 250.234,219.814 250.832,219.671 250.895 C 219.528 250.959,219.411 251.173,219.411 251.371 C 219.411 251.570,218.709 252.888,217.851 254.301 C 216.993 255.714,216.290 256.982,216.289 257.118 C 216.288 257.254,216.045 257.831,215.748 258.399 C 215.398 259.070,215.339 259.475,215.579 259.555 C 216.305 259.797,220.309 262.888,222.079 264.572 C 223.070 265.516,224.201 266.512,224.592 266.786 C 225.675 267.544,225.514 267.730,222.617 269.082 C 219.719 270.434,215.244 271.541,211.092 271.933 C 208.665 272.161,208.388 272.274,206.932 273.626 C 204.872 275.539,201.897 277.715,200.066 278.649 C 199.177 279.103,198.684 279.557,198.828 279.790 C 198.978 280.031,198.909 280.079,198.646 279.916 C 198.012 279.525,196.014 280.430,196.597 280.844 C 196.919 281.073,196.823 281.119,196.274 280.998 C 195.193 280.762,192.909 281.482,193.492 281.876 C 193.752 282.052,193.396 282.082,192.630 281.949 C 191.521 281.757,191.358 281.807,191.541 282.283 C 191.690 282.673,191.561 282.844,191.112 282.848 C 186.833 282.882,185.209 288.191,187.745 293.851 C 188.248 294.975,188.114 295.860,187.498 295.479 C 187.320 295.369,187.175 295.584,187.175 295.956 C 187.175 296.328,187.419 296.727,187.717 296.841 C 188.015 296.955,188.161 297.207,188.042 297.400 C 187.922 297.594,188.068 297.845,188.366 297.960 C 188.664 298.074,188.908 298.394,188.908 298.671 C 188.908 298.948,189.064 299.078,189.255 298.960 C 189.445 298.842,189.601 298.374,189.601 297.920 C 189.601 297.130,189.642 297.116,190.555 297.592 C 191.079 297.866,191.764 298.090,192.077 298.091 C 192.716 298.094,193.105 298.827,193.245 300.297 C 193.394 301.862,194.186 302.448,195.446 301.926 C 196.016 301.690,196.780 301.591,197.144 301.707 C 197.635 301.863,197.916 301.672,198.239 300.962 C 198.721 299.905,198.823 299.976,200.080 302.244 C 202.254 306.166,216.201 305.615,222.712 301.349 C 223.196 301.032,223.691 300.872,223.812 300.993 C 223.933 301.114,223.850 301.213,223.628 301.213 C 222.453 301.213,223.467 301.875,224.957 302.080 C 226.118 302.239,226.690 302.482,226.690 302.814 C 226.690 303.563,228.404 304.072,230.142 303.840 C 232.036 303.586,232.162 303.466,232.352 301.746 C 232.435 300.991,232.677 300.315,232.889 300.244 C 233.102 300.173,233.276 299.928,233.276 299.698 C 233.276 299.468,234.118 298.769,235.148 298.145 C 237.402 296.779,238.302 295.839,238.302 294.850 C 238.302 294.443,238.497 294.091,238.735 294.066 C 238.973 294.041,239.324 294.001,239.515 293.977 C 239.705 293.954,239.861 293.735,239.861 293.491 C 239.861 293.247,240.173 292.822,240.555 292.548 C 241.382 291.951,241.438 291.253,240.722 290.461 C 240.241 289.930,240.288 289.878,241.269 289.850 C 242.308 289.820,242.919 289.507,244.691 288.095 C 246.275 286.833,244.143 284.812,241.623 285.188 L 240.439 285.364 241.212 284.279 C 241.637 283.682,241.896 283.049,241.786 282.873 C 241.677 282.696,241.784 282.343,242.025 282.089 C 243.375 280.658,243.399 280.535,242.655 278.901 C 241.765 276.948,241.754 276.644,242.610 277.691 C 243.475 278.750,244.473 278.100,243.752 276.946 C 242.599 275.100,244.165 270.017,245.887 270.017 C 246.148 270.017,246.546 269.796,246.770 269.527 C 247.332 268.849,246.050 268.448,245.044 268.986 C 243.931 269.582,243.825 269.127,244.783 267.860 C 246.917 265.039,245.828 260.984,242.974 261.124 C 241.495 261.197,240.941 260.376,241.489 258.925 C 241.851 257.964,241.810 257.816,241.034 257.308 C 240.565 257.000,240.219 256.497,240.265 256.190 C 240.430 255.098,239.419 254.073,238.178 254.073 C 237.075 254.073,237.021 254.018,237.242 253.120 C 237.847 250.663,237.849 250.360,237.263 250.135 C 236.726 249.929,234.662 250.850,234.662 251.296 C 234.662 251.777,232.116 252.847,231.975 252.426 C 231.896 252.188,231.532 251.993,231.167 251.993 C 230.350 251.993,230.301 251.205,231.077 250.562 C 231.954 249.837,232.913 247.468,232.921 246.009 C 232.929 244.706,231.024 242.837,230.516 243.649 C 230.413 243.813,229.639 244.084,228.794 244.250 C 227.461 244.513,227.156 244.748,226.473 246.040 C 225.108 248.621,223.604 250.076,222.296 250.082 C 220.846 250.088,220.830 249.702,222.249 248.944 C 224.797 247.582,226.018 245.400,224.750 244.473 C 224.322 244.160,224.224 243.908,224.469 243.747 C 224.816 243.520,225.386 241.941,225.121 241.941 C 225.057 241.941,224.705 242.370,224.340 242.894 M256.354 242.467 C 255.306 243.259,254.424 244.800,254.422 245.841 C 254.420 246.365,254.263 246.794,254.073 246.794 C 253.882 246.794,253.744 247.301,253.766 247.920 C 253.791 248.605,253.873 248.789,253.975 248.390 C 254.110 247.862,254.203 247.828,254.449 248.217 C 254.651 248.536,254.757 248.137,254.761 247.042 C 254.766 245.322,255.332 244.103,256.766 242.721 C 257.666 241.853,257.389 241.683,256.354 242.467 M242.340 242.941 C 241.682 243.358,241.989 244.507,242.801 244.663 C 243.387 244.776,243.416 244.719,243.018 244.239 C 242.764 243.933,242.647 243.447,242.758 243.159 C 242.990 242.554,242.969 242.543,242.340 242.941 M244.218 243.648 C 243.556 244.379,243.805 244.603,244.670 244.056 C 244.931 243.890,245.083 243.568,245.007 243.341 C 244.918 243.074,244.639 243.183,244.218 243.648 M212.825 244.042 C 216.635 244.526,218.024 244.770,218.024 244.954 C 218.024 245.121,215.865 248.972,215.244 249.913 C 215.055 250.199,214.793 250.667,214.662 250.953 C 214.346 251.642,213.518 252.468,213.518 252.095 C 213.518 251.933,213.731 251.493,213.991 251.117 C 214.252 250.741,214.574 250.043,214.707 249.567 C 214.841 249.090,214.823 248.879,214.667 249.098 C 214.143 249.835,211.459 250.358,210.805 249.850 C 209.981 249.210,206.253 246.074,205.214 245.147 C 204.733 244.718,204.212 244.367,204.056 244.367 C 203.900 244.367,203.868 244.211,203.986 244.021 C 204.253 243.589,209.357 243.601,212.825 244.042 M187.876 252.230 C 187.906 253.333,189.278 254.123,192.550 254.920 C 199.154 256.528,207.438 259.897,210.052 262.037 L 210.919 262.746 210.055 262.444 C 209.277 262.171,207.030 263.140,206.239 264.090 C 205.015 265.560,202.361 267.234,201.762 266.913 C 200.648 266.317,200.680 266.488,201.931 267.814 L 203.122 269.077 208.407 268.863 C 212.738 268.688,220.550 267.460,218.473 267.280 C 218.004 267.240,216.169 265.511,216.596 265.511 C 216.929 265.511,216.877 264.445,216.514 263.859 C 216.369 263.624,216.064 263.437,215.837 263.443 C 215.610 263.449,215.727 263.683,216.097 263.962 C 216.468 264.242,216.594 264.471,216.378 264.471 C 215.970 264.471,215.439 263.821,215.430 263.311 C 215.423 262.947,212.482 261.265,212.468 261.617 C 212.462 261.757,212.302 261.606,212.112 261.280 C 211.691 260.557,206.371 257.846,202.600 256.432 C 198.276 254.812,196.644 254.298,191.854 253.048 C 190.329 252.650,188.808 252.240,188.475 252.136 C 188.141 252.031,187.872 252.074,187.876 252.230 M123.296 253.873 C 122.429 254.530,122.115 258.633,122.872 259.391 C 123.495 260.013,123.558 260.659,122.997 260.659 C 122.777 260.659,123.176 261.220,123.883 261.907 C 125.655 263.628,128.852 263.105,129.595 260.973 C 130.597 258.098,125.420 252.262,123.296 253.873 M144.541 255.357 C 144.255 255.443,143.818 255.578,143.570 255.656 C 142.571 255.970,144.383 257.225,145.706 257.136 C 147.048 257.045,147.642 255.806,146.343 255.806 C 146.000 255.806,145.571 255.669,145.390 255.503 C 145.209 255.336,144.827 255.270,144.541 255.357 M141.594 256.499 C 141.723 256.708,141.214 256.862,140.315 256.887 C 138.922 256.925,138.892 256.946,139.861 257.192 C 141.515 257.613,142.114 257.575,142.114 257.048 C 142.114 256.778,142.309 256.478,142.548 256.382 C 142.786 256.286,142.621 256.195,142.181 256.180 C 141.730 256.164,141.474 256.304,141.594 256.499 M134.749 258.954 C 134.067 259.701,133.993 259.965,134.464 259.965 C 134.881 259.965,135.875 258.971,135.875 258.554 C 135.875 258.059,135.418 258.221,134.749 258.954 M161.872 260.740 C 161.872 265.898,163.900 272.541,167.162 278.069 L 168.948 281.095 169.782 280.322 C 170.748 279.428,173.360 275.614,175.038 272.649 L 176.197 270.601 175.408 269.963 C 174.975 269.611,174.442 269.336,174.225 269.351 C 173.970 269.369,173.984 269.441,174.263 269.554 C 175.188 269.927,172.157 275.979,170.059 277.950 L 169.264 278.697 167.306 274.790 C 164.713 269.618,164.001 267.425,163.534 263.174 C 163.029 258.577,161.872 256.883,161.872 260.740 M194.107 265.757 C 194.107 265.981,194.252 266.253,194.429 266.362 C 194.606 266.471,194.938 267.144,195.167 267.856 C 195.397 268.568,196.010 270.087,196.532 271.231 C 197.053 272.374,197.585 273.756,197.715 274.300 C 197.901 275.076,198.102 275.250,198.649 275.107 C 201.597 274.336,195.734 277.425,192.487 278.354 C 188.207 279.578,180.902 280.007,182.381 278.948 C 182.719 278.706,182.673 278.672,182.207 278.823 C 181.858 278.937,181.242 279.029,180.838 279.029 C 180.274 279.029,180.199 279.124,180.513 279.438 C 181.136 280.062,187.930 279.921,190.641 279.229 C 195.374 278.020,199.878 275.879,202.892 273.405 L 203.878 272.596 202.973 272.111 C 202.125 271.657,201.995 271.697,200.930 272.728 C 199.715 273.906,199.111 274.146,199.426 273.326 C 199.537 273.038,198.920 271.900,197.990 270.676 C 197.094 269.497,195.854 267.816,195.234 266.941 C 194.614 266.066,194.107 265.534,194.107 265.757 M136.234 273.114 C 135.711 274.091,135.767 274.177,136.926 274.177 C 138.084 274.177,138.721 273.268,137.919 272.761 C 137.156 272.277,136.622 272.389,136.234 273.114 M122.877 282.817 C 122.305 282.976,121.334 283.327,120.719 283.597 L 119.601 284.090 120.325 284.709 C 120.846 285.155,121.154 285.223,121.426 284.952 C 121.972 284.405,126.156 284.490,128.479 285.095 C 130.597 285.647,132.119 285.773,131.542 285.350 C 131.352 285.210,131.196 284.877,131.196 284.611 C 131.196 283.545,125.041 282.218,122.877 282.817 M280.880 284.003 C 280.278 284.604,279.166 285.678,278.409 286.389 C 277.096 287.624,276.263 289.475,277.088 289.324 C 277.324 289.281,277.509 290.081,277.573 291.421 C 277.654 293.120,277.569 293.588,277.179 293.588 C 276.807 293.588,276.647 292.977,276.545 291.180 C 276.374 288.144,276.196 287.988,274.682 289.546 C 274.005 290.244,273.189 290.815,272.870 290.815 C 272.433 290.815,272.501 290.964,273.146 291.418 C 273.618 291.751,274.120 291.985,274.263 291.938 C 274.406 291.892,274.523 292.054,274.523 292.297 C 274.523 292.541,274.835 293.007,275.217 293.334 C 275.598 293.660,275.910 293.832,275.910 293.715 C 275.910 293.598,276.124 293.680,276.386 293.898 C 276.648 294.115,277.102 294.200,277.396 294.088 C 277.841 293.917,277.950 294.299,278.047 296.365 C 278.176 299.129,278.119 299.314,277.328 298.697 C 276.841 298.317,276.832 298.337,277.249 298.870 C 277.509 299.201,277.870 299.381,278.051 299.269 C 278.776 298.821,280.763 299.495,280.763 300.189 C 280.763 300.562,280.997 300.867,281.282 300.867 C 281.571 300.867,281.802 301.175,281.802 301.560 C 281.802 301.941,281.958 302.253,282.149 302.253 C 282.340 302.253,282.496 302.019,282.496 301.733 C 282.496 301.447,282.663 301.213,282.867 301.213 C 283.633 301.213,284.247 300.160,284.224 298.889 C 284.210 298.165,284.198 295.780,284.196 293.588 C 284.194 291.395,284.044 289.549,283.864 289.486 C 283.683 289.422,283.536 288.860,283.536 288.237 C 283.536 283.039,282.885 282.003,280.880 284.003 M132.953 285.307 C 133.084 285.519,132.976 285.829,132.713 285.995 C 132.336 286.235,132.363 286.299,132.842 286.303 C 133.220 286.306,133.449 286.046,133.449 285.615 C 133.449 285.234,133.284 284.922,133.082 284.922 C 132.880 284.922,132.822 285.095,132.953 285.307 M61.389 291.239 L 61.426 293.068 61.760 291.573 C 62.040 290.320,62.176 290.145,62.598 290.495 C 62.875 290.725,63.190 290.825,63.299 290.716 C 63.407 290.608,63.014 290.270,62.424 289.965 L 61.352 289.410 61.389 291.239 M64.731 291.548 C 65.351 291.944,65.858 292.412,65.858 292.587 C 65.858 293.115,63.989 300.371,63.168 303.029 C 62.889 303.932,62.752 304.907,62.862 305.195 C 62.973 305.483,62.912 305.719,62.727 305.719 C 62.543 305.719,62.392 305.580,62.392 305.410 C 62.392 305.060,61.337 304.579,61.097 304.819 C 61.011 304.905,61.371 305.337,61.898 305.780 C 62.424 306.223,64.031 307.600,65.469 308.839 C 66.907 310.078,67.973 310.912,67.838 310.692 C 67.520 310.176,70.080 303.857,70.537 304.029 C 71.046 304.221,70.853 305.034,69.714 307.501 C 68.006 311.199,67.925 310.934,71.651 313.775 C 76.899 317.776,76.615 317.641,77.266 316.454 C 77.568 315.901,78.922 314.234,80.273 312.750 C 84.609 307.988,85.269 307.203,85.269 306.804 C 85.269 306.010,86.204 306.453,87.657 307.934 L 89.150 309.455 87.643 310.829 C 86.813 311.585,85.511 312.722,84.749 313.357 C 80.656 316.764,78.680 319.006,79.232 319.617 C 79.730 320.167,79.826 320.149,80.697 319.341 C 81.210 318.866,83.579 317.139,85.962 315.504 C 88.345 313.869,90.490 312.285,90.729 311.985 C 91.228 311.357,93.384 313.434,97.137 318.157 C 99.106 320.634,99.158 320.752,98.551 321.338 C 97.986 321.883,90.368 324.749,87.955 325.324 C 86.884 325.580,86.736 325.986,87.549 326.441 C 87.883 326.629,88.724 326.576,89.715 326.305 C 104.056 322.387,103.271 322.665,102.567 321.759 C 98.963 317.127,89.537 307.445,85.078 303.795 C 80.937 300.406,77.609 298.074,77.239 298.302 C 77.001 298.449,76.937 298.394,77.079 298.165 C 77.209 297.954,77.020 297.623,76.658 297.430 C 75.930 297.040,74.252 298.418,72.323 300.986 C 71.114 302.597,70.889 302.470,71.564 300.558 C 73.217 295.873,72.806 294.898,68.213 292.600 C 64.629 290.805,62.629 290.201,64.731 291.548 M269.844 293.295 C 269.653 293.471,269.185 293.853,268.804 294.143 C 268.318 294.513,268.241 294.725,268.544 294.851 C 268.782 294.951,268.977 295.271,268.977 295.563 C 268.977 296.023,268.857 296.014,268.068 295.498 C 267.568 295.170,267.265 295.074,267.395 295.285 C 267.539 295.517,267.348 295.667,266.907 295.667 C 266.509 295.667,266.093 295.901,265.983 296.187 C 265.873 296.473,265.590 296.707,265.354 296.707 C 265.118 296.707,264.600 296.988,264.204 297.332 C 263.808 297.675,262.926 298.257,262.244 298.624 C 261.563 298.991,261.005 299.412,261.005 299.559 C 261.005 299.706,260.782 299.827,260.510 299.827 C 260.238 299.827,259.802 300.022,259.542 300.260 C 258.837 300.906,257.828 301.535,256.759 301.995 C 256.235 302.221,255.806 302.510,255.806 302.638 C 255.806 302.766,255.416 302.969,254.939 303.089 C 254.463 303.208,254.073 303.447,254.073 303.619 C 254.073 303.790,253.605 304.034,253.033 304.159 C 252.461 304.285,251.993 304.519,251.993 304.679 C 251.993 304.840,251.525 305.074,250.953 305.199 C 250.381 305.325,249.913 305.559,249.913 305.719 C 249.913 305.880,249.445 306.114,248.873 306.239 C 248.302 306.365,247.834 306.599,247.834 306.759 C 247.834 306.919,247.366 307.153,246.794 307.279 C 246.222 307.405,245.754 307.634,245.754 307.789 C 245.754 307.944,245.327 308.178,244.804 308.309 C 244.282 308.440,243.775 308.654,243.678 308.785 C 243.457 309.082,232.864 313.345,232.347 313.345 C 232.139 313.345,231.522 313.578,230.975 313.863 C 230.429 314.147,229.632 314.381,229.203 314.383 C 228.774 314.384,228.423 314.526,228.423 314.699 C 228.423 314.872,227.643 315.120,226.690 315.251 C 225.737 315.382,224.876 315.622,224.776 315.784 C 224.676 315.945,223.857 316.184,222.956 316.315 C 222.054 316.445,221.161 316.674,220.971 316.822 C 220.780 316.971,219.844 317.205,218.891 317.342 C 217.938 317.480,217.002 317.715,216.811 317.865 C 216.620 318.016,215.330 318.250,213.944 318.387 C 212.557 318.524,211.348 318.757,211.256 318.905 C 211.164 319.054,209.725 319.286,208.058 319.421 C 206.390 319.556,204.860 319.799,204.657 319.961 C 204.454 320.123,201.914 320.363,199.012 320.494 C 196.110 320.625,193.654 320.863,193.554 321.024 C 193.313 321.414,174.235 321.403,173.813 321.013 C 173.344 320.579,163.258 320.152,163.258 320.566 C 163.258 320.748,163.492 320.986,163.778 321.096 C 164.064 321.206,164.298 321.507,164.298 321.766 C 164.298 322.025,164.688 322.603,165.165 323.050 C 165.641 323.498,166.031 324.039,166.031 324.253 C 166.031 324.467,166.493 325.025,167.056 325.493 C 167.620 325.961,168.088 326.503,168.096 326.698 C 168.114 327.117,173.374 332.409,173.773 332.409 C 173.924 332.409,174.467 332.794,174.979 333.265 C 176.889 335.022,178.439 336.222,178.798 336.222 C 179.002 336.222,179.313 336.480,179.489 336.795 C 179.681 337.138,180.035 337.283,180.369 337.154 C 180.697 337.028,180.894 337.104,180.845 337.338 C 180.800 337.556,181.192 337.949,181.716 338.211 C 182.240 338.472,182.669 338.852,182.669 339.054 C 182.669 339.257,182.981 339.341,183.363 339.241 C 183.744 339.141,183.969 339.201,183.862 339.374 C 183.755 339.547,183.911 339.688,184.208 339.688 C 184.506 339.688,184.749 339.819,184.749 339.979 C 184.749 340.319,186.513 341.231,186.958 341.121 C 187.125 341.079,187.528 341.286,187.853 341.581 C 188.178 341.875,188.549 342.012,188.676 341.884 C 188.804 341.757,188.908 341.816,188.908 342.016 C 188.908 342.358,190.158 342.927,190.728 342.845 C 190.871 342.824,190.988 342.964,190.988 343.154 C 190.988 343.345,191.183 343.502,191.421 343.503 C 191.659 343.504,192.290 343.732,192.822 344.010 C 193.355 344.288,194.331 344.616,194.992 344.740 C 195.654 344.864,196.272 345.091,196.366 345.243 C 196.460 345.396,197.161 345.626,197.922 345.754 C 198.684 345.883,199.307 346.130,199.307 346.304 C 199.307 346.492,209.184 346.620,223.570 346.620 C 239.515 346.620,247.834 346.502,247.834 346.274 C 247.834 346.083,248.224 345.927,248.700 345.927 C 249.177 345.927,249.567 345.789,249.567 345.619 C 249.567 345.450,250.113 345.209,250.780 345.084 C 251.447 344.958,251.993 344.727,251.993 344.569 C 251.993 344.412,252.617 344.183,253.380 344.061 C 254.142 343.939,254.766 343.698,254.766 343.524 C 254.766 343.351,255.234 343.107,255.806 342.981 C 256.378 342.855,256.846 342.609,256.846 342.433 C 256.846 342.258,257.069 342.114,257.341 342.114 C 257.613 342.114,258.049 341.901,258.310 341.640 C 258.571 341.379,259.133 341.055,259.559 340.920 C 261.339 340.355,262.630 337.955,261.153 337.955 C 260.544 337.955,260.494 337.021,261.092 336.820 C 261.342 336.736,261.306 336.690,261.005 336.711 C 260.708 336.732,260.438 337.155,260.376 337.698 C 260.290 338.443,260.084 338.648,259.422 338.648 C 258.446 338.648,258.259 337.743,259.185 337.501 C 259.626 337.385,259.649 337.331,259.269 337.302 C 258.981 337.280,258.325 337.652,257.811 338.128 C 256.839 339.029,256.153 339.244,256.153 338.648 C 256.153 338.458,255.841 338.302,255.459 338.302 C 255.078 338.302,254.766 338.458,254.766 338.648 C 254.766 338.839,254.376 338.995,253.899 338.995 C 253.335 338.995,253.033 338.801,253.033 338.438 C 253.033 338.071,252.845 337.953,252.481 338.093 C 252.177 338.209,251.553 338.399,251.094 338.514 C 250.635 338.629,250.260 338.862,250.260 339.032 C 250.260 339.202,249.948 339.341,249.567 339.341 C 249.185 339.341,248.873 339.500,248.873 339.695 C 248.873 339.898,248.507 339.956,248.007 339.830 C 247.509 339.705,247.140 339.763,247.140 339.965 C 247.140 340.158,246.361 340.423,245.408 340.555 C 244.455 340.686,243.595 340.922,243.498 341.080 C 243.400 341.238,242.308 341.475,241.071 341.608 C 239.834 341.740,238.821 341.986,238.821 342.155 C 238.821 342.323,237.964 342.461,236.915 342.461 C 235.867 342.461,235.009 342.305,235.009 342.114 C 235.009 341.924,235.711 341.768,236.568 341.768 C 237.426 341.768,238.128 341.632,238.128 341.466 C 238.128 341.300,239.064 341.058,240.208 340.929 C 241.352 340.799,242.288 340.565,242.288 340.409 C 242.288 340.252,243.068 340.021,244.021 339.894 C 246.398 339.579,246.350 338.793,243.934 338.469 C 242.933 338.334,241.958 338.107,241.768 337.964 C 241.142 337.494,239.515 337.233,239.515 337.602 C 239.515 337.796,239.203 337.955,238.821 337.955 C 238.440 337.955,238.128 337.736,238.128 337.468 C 238.128 337.083,237.693 337.020,236.049 337.169 C 234.559 337.304,233.969 337.240,233.969 336.943 C 233.969 336.714,233.810 336.626,233.617 336.745 C 233.423 336.865,233.354 337.108,233.464 337.286 C 233.579 337.472,232.704 337.608,231.390 337.608 C 230.105 337.608,229.116 337.458,229.116 337.262 C 229.116 337.054,227.730 336.915,225.650 336.915 C 223.570 336.915,222.184 337.054,222.184 337.262 C 222.184 337.452,221.629 337.608,220.950 337.608 C 220.216 337.608,219.803 337.468,219.931 337.262 C 220.048 337.071,219.902 336.915,219.605 336.915 C 219.307 336.915,219.064 336.759,219.064 336.568 C 219.064 336.358,220.617 336.222,223.030 336.222 C 225.211 336.222,227.078 336.089,227.178 335.926 C 227.279 335.763,228.644 335.523,230.213 335.392 C 231.781 335.261,233.249 335.001,233.475 334.814 C 234.248 334.172,239.393 333.982,240.279 334.563 C 241.571 335.409,246.055 335.670,247.314 334.971 C 247.886 334.654,248.821 334.155,249.393 333.862 C 249.965 333.569,250.530 333.185,250.648 333.008 C 250.949 332.559,253.367 332.605,253.830 333.068 C 254.040 333.277,254.695 333.449,255.286 333.449 C 255.877 333.449,256.545 333.634,256.771 333.859 C 257.251 334.340,258.579 334.505,258.579 334.084 C 258.579 333.925,258.807 333.795,259.087 333.795 C 259.366 333.795,259.755 333.494,259.952 333.126 C 260.149 332.758,260.662 332.408,261.091 332.347 C 261.790 332.247,261.744 332.173,260.659 331.637 L 259.445 331.037 261.005 331.079 C 261.863 331.101,262.732 331.250,262.935 331.408 C 263.139 331.566,264.376 331.784,265.685 331.892 C 266.995 332.000,268.661 332.221,269.388 332.385 C 270.155 332.557,270.711 332.552,270.711 332.372 C 270.711 332.202,270.928 332.062,271.193 332.062 C 271.459 332.062,271.759 331.846,271.861 331.582 C 271.990 331.244,271.846 331.153,271.378 331.275 C 271.011 331.371,270.711 331.619,270.711 331.826 C 270.711 332.077,270.576 332.066,270.303 331.793 C 269.990 331.481,270.036 331.230,270.497 330.720 C 270.933 330.239,270.981 330.015,270.670 329.912 C 269.767 329.610,270.767 329.034,272.520 328.845 C 274.803 328.600,276.059 327.963,277.775 326.181 C 278.514 325.412,279.416 324.783,279.778 324.783 C 280.141 324.783,280.541 324.510,280.667 324.177 C 280.794 323.843,281.101 323.364,281.350 323.112 C 281.599 322.860,281.802 322.197,281.802 321.639 C 281.802 321.061,281.989 320.622,282.236 320.619 C 282.539 320.615,282.521 320.520,282.175 320.301 C 281.823 320.078,281.691 319.334,281.716 317.706 C 281.743 315.946,281.638 315.425,281.257 315.425 C 280.985 315.425,280.763 315.183,280.763 314.888 C 280.763 314.593,280.345 313.965,279.836 313.493 C 279.164 312.870,279.013 312.529,279.289 312.254 C 279.498 312.045,279.593 311.678,279.502 311.439 C 279.405 311.186,279.707 310.911,280.222 310.781 C 281.595 310.437,281.315 309.737,279.870 309.901 C 279.760 309.914,279.391 309.602,279.049 309.208 C 278.314 308.360,277.990 308.300,277.990 309.012 C 277.990 309.298,278.120 309.532,278.278 309.532 C 278.437 309.532,278.575 309.727,278.584 309.965 C 278.593 310.204,278.724 310.700,278.876 311.067 C 279.148 311.728,279.140 311.728,278.212 311.067 C 277.440 310.517,277.302 310.200,277.435 309.278 C 277.524 308.662,277.452 308.068,277.274 307.958 C 277.095 307.848,276.950 307.925,276.950 308.128 C 276.950 308.369,276.708 308.347,276.256 308.065 C 275.578 307.641,275.449 307.005,276.061 307.103 C 276.599 307.190,277.337 304.909,277.171 303.676 C 277.059 302.847,277.189 302.322,277.601 301.937 C 277.925 301.634,278.119 301.426,278.032 301.474 C 277.944 301.522,277.564 301.288,277.186 300.954 C 276.519 300.364,276.506 300.373,276.717 301.244 C 276.992 302.375,276.290 303.417,275.467 303.101 C 275.139 302.975,274.870 302.733,274.870 302.563 C 274.870 302.392,274.582 302.253,274.230 302.253 C 273.535 302.253,272.444 301.231,272.444 300.579 C 272.444 300.356,272.600 300.173,272.790 300.173 C 272.981 300.173,273.137 299.503,273.137 298.683 C 273.137 297.863,273.308 297.021,273.517 296.812 C 273.794 296.535,273.533 296.065,272.564 295.094 C 270.684 293.208,270.249 292.920,269.844 293.295 M61.113 295.841 C 61.115 296.984,61.179 297.411,61.256 296.788 C 61.334 296.165,61.332 295.229,61.253 294.708 C 61.174 294.187,61.111 294.697,61.113 295.841 M239.732 294.464 C 239.009 296.349,240.545 299.049,241.870 298.221 C 242.783 297.651,243.584 296.049,243.108 295.745 C 242.891 295.607,242.656 295.182,242.585 294.801 C 242.412 293.877,240.064 293.600,239.732 294.464 M280.285 295.776 C 280.628 295.645,280.763 295.897,280.763 296.670 C 280.763 297.396,280.593 297.747,280.243 297.747 C 279.957 297.747,279.723 297.591,279.723 297.400 C 279.723 297.210,279.489 297.054,279.203 297.054 C 278.917 297.054,278.683 296.768,278.683 296.418 C 278.683 295.598,279.068 295.220,279.482 295.634 C 279.661 295.813,280.022 295.877,280.285 295.776 M268.930 296.880 C 269.744 297.774,269.887 298.094,269.473 298.094 C 269.165 298.094,268.831 297.782,268.731 297.400 C 268.632 297.019,268.334 296.707,268.070 296.707 C 267.807 296.707,267.591 296.473,267.591 296.187 C 267.591 295.462,267.683 295.510,268.930 296.880 M206.253 296.772 C 205.294 297.801,205.359 299.331,206.412 300.583 C 207.625 302.025,207.512 302.297,205.806 302.036 C 202.904 301.594,202.504 299.595,204.867 297.347 C 206.347 295.939,207.458 295.479,206.253 296.772 M304.679 297.767 C 304.679 298.160,304.835 298.385,305.026 298.267 C 305.217 298.149,305.373 297.828,305.373 297.553 C 305.373 297.278,305.217 297.054,305.026 297.054 C 304.835 297.054,304.679 297.375,304.679 297.767 M307.106 297.470 C 307.106 298.233,307.886 299.043,308.839 299.269 C 309.315 299.381,309.510 299.384,309.272 299.275 C 309.034 299.165,308.839 298.699,308.839 298.238 C 308.839 297.777,308.696 297.400,308.521 297.400 C 308.346 297.400,307.956 297.306,307.654 297.190 C 307.313 297.059,307.106 297.165,307.106 297.470 M235.644 299.237 C 232.924 301.311,234.027 303.073,237.513 302.222 C 239.877 301.645,240.208 301.369,240.208 299.970 C 240.208 297.814,237.979 297.456,235.644 299.237 M272.097 299.298 C 272.097 299.557,271.902 299.835,271.664 299.915 C 271.320 300.030,271.322 300.172,271.676 300.600 C 271.921 300.897,272.097 301.274,272.068 301.437 C 271.914 302.294,272.135 302.964,272.497 302.740 C 272.745 302.587,272.803 302.645,272.650 302.893 C 272.514 303.113,272.568 303.293,272.770 303.293 C 272.972 303.293,273.137 303.468,273.137 303.682 C 273.137 303.967,273.009 303.965,272.661 303.676 C 272.399 303.459,271.931 303.378,271.621 303.497 C 271.244 303.642,271.057 303.529,271.057 303.157 C 271.057 302.850,271.230 302.600,271.441 302.600 C 271.671 302.600,271.724 302.357,271.573 301.993 C 271.434 301.659,271.314 301.185,271.305 300.938 C 271.296 300.692,271.080 300.570,270.826 300.667 C 270.572 300.765,270.364 300.694,270.364 300.509 C 270.364 300.324,270.559 300.168,270.797 300.162 C 271.055 300.156,270.976 299.959,270.603 299.676 C 270.207 299.375,270.111 299.116,270.343 298.973 C 270.545 298.848,270.711 298.911,270.711 299.113 C 270.711 299.315,270.945 299.480,271.231 299.480 C 271.516 299.480,271.750 299.315,271.750 299.113 C 271.750 298.911,271.570 298.857,271.350 298.993 C 271.100 299.148,271.044 299.088,271.201 298.835 C 271.506 298.342,272.097 298.648,272.097 299.298 M60.423 300.867 C 60.423 302.106,60.486 302.613,60.563 301.993 C 60.640 301.373,60.640 300.360,60.563 299.740 C 60.486 299.120,60.423 299.627,60.423 300.867 M310.919 299.671 C 310.919 299.966,311.464 300.770,312.132 301.457 L 313.345 302.706 313.345 301.678 C 313.345 300.577,312.256 299.133,311.425 299.133 C 311.146 299.133,310.919 299.375,310.919 299.671 M264.920 301.902 C 264.696 302.757,264.372 302.836,264.545 301.993 C 264.614 301.659,264.430 301.183,264.137 300.934 C 263.686 300.550,263.719 300.537,264.353 300.843 C 264.874 301.094,265.046 301.417,264.920 301.902 M269.203 302.429 C 269.491 302.717,269.661 303.146,269.581 303.383 C 269.502 303.619,269.684 303.997,269.987 304.223 C 270.422 304.547,270.448 304.723,270.112 305.064 C 269.774 305.407,269.436 305.238,268.465 304.238 C 267.098 302.830,266.965 302.377,267.851 302.145 C 268.185 302.058,268.508 301.969,268.569 301.947 C 268.630 301.925,268.916 302.142,269.203 302.429 M283.783 302.327 C 283.481 302.522,283.471 302.673,283.745 302.860 C 283.956 303.003,284.140 303.637,284.156 304.270 C 284.171 304.903,284.356 305.629,284.567 305.883 C 284.852 306.226,284.835 306.391,284.503 306.525 C 284.218 306.639,284.276 306.714,284.662 306.732 C 285.111 306.752,285.269 306.489,285.269 305.719 C 285.269 305.147,285.425 304.679,285.615 304.679 C 285.806 304.679,285.962 305.045,285.962 305.493 C 285.962 307.139,288.135 308.419,290.070 307.913 C 290.740 307.738,290.815 307.481,290.815 305.361 C 290.815 303.789,290.959 302.953,291.248 302.849 C 292.186 302.514,291.183 302.325,287.769 302.192 C 285.808 302.116,284.014 302.177,283.783 302.327 M274.177 303.162 C 274.177 303.623,274.083 303.646,273.657 303.293 C 273.371 303.056,273.137 302.802,273.137 302.731 C 273.137 302.659,273.371 302.600,273.657 302.600 C 273.943 302.600,274.177 302.853,274.177 303.162 M281.621 303.279 C 281.743 303.477,282.250 303.640,282.747 303.640 C 283.834 303.640,283.708 303.473,282.380 303.154 C 281.736 303.000,281.474 303.043,281.621 303.279 M289.428 304.679 C 289.428 305.219,289.197 305.373,288.388 305.373 C 287.579 305.373,287.348 305.219,287.348 304.679 C 287.348 304.140,287.579 303.986,288.388 303.986 C 289.197 303.986,289.428 304.140,289.428 304.679 M274.649 304.853 C 274.758 305.139,274.697 305.373,274.513 305.373 C 274.328 305.373,274.177 305.538,274.177 305.740 C 274.177 305.942,274.333 306.010,274.523 305.893 C 274.714 305.775,274.870 305.753,274.870 305.844 C 274.870 305.935,274.974 306.295,275.102 306.644 C 275.321 307.244,275.293 307.243,274.582 306.619 C 274.169 306.256,273.830 305.593,273.830 305.146 C 273.830 304.236,274.342 304.053,274.649 304.853 M267.456 306.610 C 267.356 306.870,267.431 307.180,267.623 307.299 C 267.824 307.423,267.845 307.684,267.673 307.916 C 267.337 308.370,267.354 308.731,267.755 309.646 C 267.940 310.068,267.843 310.468,267.465 310.846 C 267.146 311.165,266.898 311.242,266.898 311.022 C 266.898 310.806,267.093 310.551,267.331 310.455 C 267.569 310.359,267.394 310.268,266.942 310.253 C 266.249 310.230,266.188 310.143,266.554 309.702 C 266.820 309.382,266.910 308.704,266.788 307.949 C 266.563 306.563,266.804 305.620,267.304 305.930 C 267.488 306.043,267.556 306.349,267.456 306.610 M272.503 306.293 C 272.852 306.608,273.137 307.055,273.137 307.286 C 273.137 307.517,273.460 308.116,273.855 308.619 C 274.250 309.121,274.461 309.532,274.322 309.532 C 274.184 309.532,274.415 309.831,274.836 310.196 C 275.423 310.705,275.484 310.887,275.097 310.976 C 274.655 311.077,274.656 311.151,275.101 311.560 C 275.534 311.959,275.638 311.921,275.800 311.301 C 276.042 310.375,276.603 310.350,276.603 311.265 C 276.603 311.938,277.056 312.116,278.423 311.977 C 279.180 311.900,279.187 312.098,278.453 312.832 C 278.005 313.280,277.975 313.468,278.317 313.680 C 278.628 313.872,278.645 314.021,278.373 314.189 C 278.162 314.319,278.002 314.845,278.017 315.358 C 278.032 315.871,278.123 316.096,278.219 315.858 C 278.515 315.126,279.351 315.378,279.574 316.266 C 279.690 316.729,280.005 317.192,280.274 317.295 C 280.809 317.500,280.943 318.739,280.462 319.036 C 280.297 319.138,280.081 319.936,279.982 320.809 C 279.844 322.032,279.548 322.625,278.688 323.392 C 277.998 324.008,277.672 324.551,277.834 324.813 C 278.002 325.084,277.953 325.148,277.697 324.990 C 277.459 324.843,277.296 324.963,277.296 325.283 C 277.296 325.587,277.002 325.823,276.624 325.823 C 276.254 325.823,275.844 325.996,275.714 326.207 C 275.548 326.474,275.389 326.449,275.187 326.122 C 274.956 325.748,274.785 325.793,274.342 326.345 C 273.951 326.832,273.733 326.908,273.606 326.603 C 273.384 326.071,272.757 326.024,272.877 326.549 C 273.027 327.205,271.781 327.810,271.432 327.251 C 271.208 326.892,270.983 327.088,270.536 328.031 C 269.967 329.228,268.670 329.897,269.103 328.769 C 269.402 327.991,267.613 328.112,266.551 328.943 C 265.557 329.720,265.127 329.814,265.251 329.227 C 265.395 328.549,266.328 327.556,266.822 327.556 C 267.077 327.556,267.189 327.400,267.071 327.210 C 266.953 327.019,267.196 326.863,267.611 326.863 C 268.194 326.863,268.324 326.706,268.184 326.170 C 268.084 325.789,268.144 325.477,268.317 325.477 C 268.489 325.477,268.943 325.165,269.324 324.783 C 270.043 324.064,270.258 323.554,269.695 323.902 C 269.517 324.012,269.261 323.922,269.126 323.704 C 268.991 323.485,269.136 323.162,269.449 322.987 C 269.761 322.812,270.005 322.404,269.990 322.080 C 269.968 321.599,269.925 321.586,269.760 322.010 C 269.649 322.296,269.341 322.691,269.075 322.886 C 268.810 323.082,268.548 323.542,268.495 323.908 C 268.426 324.378,268.101 324.584,267.387 324.610 C 266.832 324.631,265.541 324.679,264.518 324.716 C 262.900 324.775,262.679 324.866,262.824 325.419 C 262.958 325.931,262.830 326.025,262.171 325.899 C 261.260 325.725,261.045 325.130,261.892 325.130 C 262.189 325.130,262.330 324.964,262.204 324.760 C 262.078 324.557,262.301 324.305,262.700 324.201 C 263.098 324.097,263.337 323.871,263.230 323.698 C 263.124 323.526,262.892 323.475,262.714 323.585 C 262.537 323.695,262.392 323.572,262.392 323.313 C 262.392 323.019,262.817 322.827,263.518 322.804 C 265.336 322.743,267.926 320.980,267.943 319.791 C 267.946 319.582,268.399 318.900,268.949 318.277 C 269.652 317.479,269.889 316.916,269.749 316.380 C 269.434 315.177,268.758 314.027,268.510 314.274 C 268.386 314.399,268.284 314.255,268.284 313.955 C 268.284 313.561,268.501 313.466,269.064 313.611 C 269.759 313.790,269.792 313.748,269.368 313.232 C 269.092 312.894,269.046 312.652,269.258 312.652 C 269.459 312.652,269.724 312.337,269.846 311.953 C 269.968 311.569,270.212 311.345,270.389 311.454 C 270.566 311.563,270.711 311.462,270.711 311.228 C 270.711 310.994,270.811 310.903,270.933 311.026 C 271.056 311.148,270.959 311.486,270.718 311.777 C 270.363 312.204,270.365 312.305,270.726 312.305 C 270.972 312.305,271.070 312.408,270.945 312.533 C 270.819 312.659,270.904 312.987,271.134 313.264 C 271.466 313.664,271.430 313.855,270.957 314.201 C 270.269 314.704,270.162 315.228,270.797 314.989 C 272.520 314.342,272.892 314.313,272.689 314.842 C 272.575 315.138,272.669 315.468,272.896 315.576 C 273.211 315.724,273.207 315.820,272.877 315.973 C 272.164 316.306,272.387 316.876,273.137 316.638 C 273.535 316.512,273.830 316.575,273.830 316.788 C 273.830 316.991,274.007 317.158,274.224 317.158 C 274.491 317.158,274.549 316.659,274.406 315.612 C 274.231 314.338,274.284 314.101,274.705 314.263 C 275.086 314.409,275.217 314.193,275.217 313.420 C 275.217 312.598,275.034 312.334,274.345 312.161 C 273.400 311.924,272.097 310.944,272.097 310.470 C 272.097 310.308,271.863 309.942,271.577 309.656 C 270.974 309.053,270.875 307.452,271.441 307.452 C 271.678 307.452,271.742 307.120,271.608 306.586 C 271.355 305.577,271.617 305.491,272.503 306.293 M272.097 308.361 C 272.097 308.822,272.191 308.846,272.617 308.492 C 272.903 308.255,273.137 308.002,273.137 307.930 C 273.137 307.858,272.903 307.799,272.617 307.799 C 272.331 307.799,272.097 308.052,272.097 308.361 M290.346 309.959 C 290.235 310.385,290.295 310.884,290.479 311.069 C 290.695 311.284,290.815 311.009,290.815 310.295 C 290.815 308.998,290.632 308.868,290.346 309.959 M293.805 311.179 C 293.977 312.076,293.906 312.305,293.458 312.305 C 293.148 312.305,292.894 312.461,292.894 312.652 C 292.894 312.842,293.097 312.998,293.344 312.998 C 293.779 312.998,294.376 313.400,296.248 314.954 C 297.162 315.713,297.235 320.277,296.333 320.277 C 296.157 320.277,296.014 320.589,296.014 320.971 C 296.014 321.352,295.855 321.664,295.661 321.664 C 295.457 321.664,295.399 322.031,295.525 322.530 C 295.653 323.041,295.594 323.397,295.379 323.397 C 295.180 323.397,294.911 324.099,294.783 324.957 C 294.654 325.815,294.427 326.516,294.279 326.516 C 294.131 326.516,293.910 326.910,293.790 327.392 C 293.669 327.873,293.266 328.571,292.894 328.943 C 292.523 329.314,291.825 329.717,291.343 329.838 C 289.988 330.178,290.308 330.503,291.999 330.503 C 293.560 330.503,294.974 329.489,294.974 328.370 C 294.974 328.113,295.130 327.903,295.321 327.903 C 295.511 327.903,295.667 327.669,295.667 327.383 C 295.667 327.097,295.511 326.863,295.321 326.863 C 295.130 326.863,294.974 326.698,294.974 326.496 C 294.974 326.294,295.154 326.240,295.374 326.376 C 295.623 326.530,295.680 326.471,295.526 326.221 C 295.261 325.793,295.992 323.397,296.388 323.397 C 296.517 323.397,296.829 322.110,297.081 320.537 C 297.461 318.167,297.580 317.856,297.775 318.718 C 297.950 319.486,298.022 319.561,298.053 319.006 C 298.075 318.593,298.247 318.203,298.434 318.140 C 299.031 317.937,299.037 313.714,298.440 313.342 C 298.028 313.084,297.898 313.230,297.812 314.048 C 297.675 315.342,297.268 315.345,295.987 314.065 C 294.894 312.971,294.657 311.958,295.494 311.958 C 296.373 311.958,296.070 311.354,295.064 311.102 C 294.542 310.971,293.996 310.681,293.851 310.458 C 293.707 310.235,293.686 310.559,293.805 311.179 M281.719 310.771 C 281.609 310.881,281.240 311.012,280.898 311.062 C 279.803 311.223,279.654 312.817,280.729 312.868 C 281.224 312.891,281.434 312.839,281.196 312.752 C 280.476 312.489,280.710 311.864,281.456 312.059 C 282.007 312.203,282.149 312.069,282.149 311.406 C 282.149 310.549,282.065 310.425,281.719 310.771 M265.511 312.845 C 265.511 313.143,265.373 313.301,265.205 313.196 C 265.036 313.092,264.836 313.980,264.760 315.169 C 264.609 317.536,263.075 319.659,261.169 320.137 C 260.694 320.257,260.220 320.493,260.115 320.662 C 260.010 320.832,259.603 320.971,259.209 320.971 C 258.613 320.971,258.566 320.884,258.925 320.451 C 259.163 320.165,259.650 319.931,260.008 319.931 C 260.366 319.931,260.663 319.814,260.669 319.671 C 260.675 319.528,261.062 319.133,261.529 318.793 C 262.344 318.200,262.369 318.200,262.156 318.793 C 261.984 319.273,262.140 319.223,262.856 318.570 C 263.363 318.108,263.778 317.523,263.778 317.271 C 263.778 317.018,263.934 316.811,264.125 316.811 C 264.315 316.811,264.471 316.469,264.471 316.052 C 264.471 315.307,264.461 315.305,263.923 315.965 C 263.422 316.581,263.392 316.584,263.577 316.003 C 263.687 315.654,263.781 315.108,263.783 314.790 C 263.788 314.290,263.834 314.282,264.125 314.731 C 264.310 315.017,264.463 315.088,264.466 314.887 C 264.469 314.687,264.276 314.328,264.038 314.089 C 263.691 313.741,263.778 313.521,264.471 312.987 C 265.526 312.176,265.511 312.178,265.511 312.845 M276.324 316.291 C 276.331 317.054,276.408 317.405,276.495 317.071 C 276.583 316.737,276.837 316.462,277.062 316.459 C 277.351 316.455,277.358 316.380,277.088 316.199 C 276.879 316.059,276.618 315.711,276.509 315.425 C 276.400 315.139,276.317 315.529,276.324 316.291 M270.480 316.661 C 270.366 316.960,270.449 317.381,270.665 317.597 C 270.957 317.889,271.057 317.751,271.057 317.054 C 271.057 316.011,270.798 315.834,270.480 316.661 M146.175 317.678 C 146.285 318.440,146.495 319.144,146.643 319.241 C 146.791 319.338,147.019 319.845,147.150 320.367 C 147.402 321.371,147.841 321.607,148.110 320.884 C 148.199 320.645,148.451 320.905,148.672 321.462 C 148.985 322.251,148.978 322.532,148.637 322.743 C 148.397 322.891,148.274 323.060,148.364 323.118 C 148.453 323.176,148.839 323.391,149.220 323.596 C 149.601 323.801,150.164 324.459,150.471 325.059 C 150.778 325.659,151.441 326.690,151.944 327.350 C 152.448 328.010,152.860 328.655,152.860 328.783 C 152.860 328.911,153.328 329.607,153.899 330.329 C 154.471 331.051,154.939 331.766,154.939 331.917 C 154.939 332.068,155.563 332.931,156.326 333.835 C 157.088 334.740,157.712 335.608,157.712 335.764 C 157.713 336.356,165.330 343.847,165.932 343.847 C 166.092 343.847,166.491 344.159,166.817 344.541 C 167.144 344.922,167.636 345.234,167.911 345.234 C 168.186 345.234,168.510 345.546,168.631 345.927 C 168.771 346.370,169.155 346.620,169.694 346.620 C 170.805 346.620,170.772 345.999,169.638 345.568 C 168.640 345.189,159.099 335.767,159.099 335.161 C 159.099 334.951,158.553 334.112,157.886 333.298 C 157.218 332.484,156.672 331.700,156.672 331.557 C 156.672 331.413,156.205 330.705,155.633 329.983 C 155.061 329.261,154.593 328.559,154.593 328.423 C 154.593 328.287,154.125 327.585,153.553 326.863 C 152.981 326.141,152.513 325.431,152.513 325.286 C 152.513 325.141,152.131 324.522,151.665 323.910 C 151.199 323.299,150.708 322.348,150.575 321.798 C 150.441 321.247,150.066 320.407,149.740 319.931 C 149.414 319.454,149.039 318.616,148.907 318.068 C 148.687 317.161,148.561 317.090,147.490 317.263 C 146.582 317.411,146.277 317.322,146.146 316.873 C 146.053 316.553,146.066 316.915,146.175 317.678 M283.059 317.283 C 282.941 317.750,282.750 318.382,282.633 318.685 C 282.517 318.989,282.574 319.237,282.760 319.237 C 282.946 319.237,283.192 318.661,283.306 317.956 C 283.545 316.481,283.376 316.020,283.059 317.283 M150.684 319.324 C 151.164 320.325,151.695 321.378,151.864 321.664 C 152.033 321.950,152.358 322.574,152.587 323.050 C 152.815 323.527,153.438 324.485,153.971 325.180 C 154.504 325.875,154.939 326.554,154.939 326.690 C 154.939 326.826,155.407 327.527,155.979 328.250 C 156.551 328.972,157.019 329.674,157.019 329.809 C 157.019 329.945,157.487 330.647,158.059 331.369 C 158.631 332.091,159.099 332.862,159.099 333.082 C 159.099 333.640,170.011 344.538,170.587 344.555 C 170.846 344.563,171.597 345.031,172.257 345.595 C 173.756 346.876,175.538 347.055,174.263 345.796 C 174.025 345.561,173.557 345.265,173.224 345.139 C 172.890 345.012,172.617 344.759,172.617 344.575 C 172.617 344.391,172.273 344.132,171.852 343.998 C 171.431 343.864,170.695 343.308,170.215 342.761 C 169.735 342.215,169.212 341.768,169.051 341.768 C 168.703 341.768,163.258 336.408,163.258 336.066 C 163.258 335.935,162.712 335.314,162.045 334.684 C 161.378 334.055,160.832 333.398,160.832 333.225 C 160.832 333.052,160.520 332.643,160.139 332.316 C 159.757 331.990,159.445 331.504,159.445 331.236 C 159.445 330.969,159.211 330.660,158.925 330.551 C 158.640 330.441,158.406 330.051,158.406 329.684 C 158.406 329.317,158.172 328.927,157.886 328.817 C 157.600 328.708,157.366 328.379,157.366 328.087 C 157.366 327.795,157.213 327.556,157.026 327.556 C 156.839 327.556,156.591 327.178,156.474 326.715 C 156.358 326.252,156.043 325.789,155.775 325.686 C 155.506 325.583,155.286 325.259,155.286 324.968 C 155.286 324.676,155.133 324.437,154.946 324.437 C 154.759 324.437,154.508 324.047,154.388 323.570 C 154.269 323.094,154.044 322.704,153.889 322.704 C 153.735 322.704,153.505 322.236,153.380 321.664 C 153.254 321.092,153.024 320.624,152.870 320.624 C 152.715 320.624,152.489 320.230,152.368 319.749 C 152.111 318.721,150.987 317.504,150.296 317.504 C 149.931 317.504,150.027 317.952,150.684 319.324 M147.744 319.406 C 147.836 319.885,147.776 320.277,147.612 320.277 C 147.448 320.277,147.312 320.160,147.309 320.017 C 147.306 319.874,147.204 319.382,147.081 318.923 C 146.938 318.387,146.986 318.169,147.218 318.312 C 147.416 318.434,147.653 318.926,147.744 319.406 M273.137 318.680 C 273.137 318.946,272.903 319.253,272.617 319.363 C 272.331 319.473,272.097 319.801,272.097 320.093 C 272.097 320.385,271.958 320.624,271.788 320.624 C 271.618 320.624,271.381 321.014,271.261 321.490 C 271.142 321.967,270.896 322.357,270.715 322.357 C 270.534 322.357,270.482 322.608,270.600 322.915 C 270.797 323.428,270.839 323.428,271.126 322.915 C 271.298 322.608,271.598 322.357,271.792 322.357 C 272.358 322.357,273.084 321.477,273.331 320.492 C 273.456 319.993,273.698 319.584,273.868 319.584 C 274.038 319.584,274.177 319.272,274.177 318.891 C 274.177 318.506,273.946 318.198,273.657 318.198 C 273.371 318.198,273.137 318.415,273.137 318.680 M153.779 319.757 C 153.854 320.329,154.070 320.850,154.259 320.915 C 154.448 320.979,154.917 321.720,155.300 322.561 C 155.683 323.402,156.130 324.090,156.294 324.090 C 156.458 324.090,156.690 324.363,156.811 324.697 C 157.114 325.536,157.937 326.913,158.288 327.170 C 158.656 327.439,159.347 328.538,159.784 329.549 C 159.970 329.978,160.281 330.329,160.477 330.329 C 160.672 330.329,160.832 330.536,160.832 330.789 C 160.832 331.042,161.261 331.626,161.785 332.089 L 162.738 332.929 161.958 332.040 C 161.529 331.551,161.179 330.974,161.179 330.757 C 161.179 330.541,160.984 330.239,160.745 330.087 C 160.259 329.775,159.611 328.809,159.107 327.643 C 158.921 327.214,158.628 326.863,158.455 326.863 C 158.281 326.863,158.040 326.590,157.917 326.256 C 157.505 325.130,156.637 323.744,156.344 323.744 C 156.185 323.744,155.951 323.332,155.825 322.830 C 155.699 322.327,155.230 321.430,154.783 320.837 C 154.336 320.243,153.896 319.523,153.806 319.237 C 153.716 318.951,153.704 319.185,153.779 319.757 M278.336 319.506 C 278.336 320.098,278.490 320.678,278.678 320.794 C 278.891 320.926,278.937 320.576,278.801 319.861 C 278.509 318.329,278.336 318.197,278.336 319.506 M283.882 320.104 C 283.882 320.581,283.726 320.971,283.536 320.971 C 283.345 320.971,283.189 321.246,283.189 321.582 C 283.189 321.919,282.868 322.793,282.476 323.524 C 282.044 324.330,281.932 324.798,282.191 324.712 C 282.427 324.633,282.787 324.266,282.991 323.896 C 283.195 323.526,283.457 323.146,283.572 323.050 C 283.688 322.955,283.892 322.281,284.026 321.553 C 284.160 320.824,284.355 320.005,284.459 319.733 C 284.564 319.460,284.477 319.237,284.266 319.237 C 284.055 319.237,283.882 319.627,283.882 320.104 M270.820 320.191 C 270.701 320.524,270.526 320.938,270.430 321.111 C 270.335 321.283,270.437 321.313,270.657 321.177 C 270.877 321.041,271.057 320.718,271.057 320.459 C 271.057 320.200,271.252 319.910,271.490 319.814 C 271.830 319.677,271.827 319.633,271.480 319.611 C 271.235 319.596,270.938 319.857,270.820 320.191 M267.244 322.163 C 267.244 322.438,267.384 322.749,267.555 322.855 C 267.911 323.075,268.342 322.183,268.029 321.871 C 267.657 321.499,267.244 321.653,267.244 322.163 M284.575 322.184 C 284.575 322.470,284.731 322.704,284.922 322.704 C 285.113 322.704,285.269 322.470,285.269 322.184 C 285.269 321.898,285.113 321.664,284.922 321.664 C 284.731 321.664,284.575 321.898,284.575 322.184 M260.044 324.471 C 259.906 324.595,258.934 324.798,257.886 324.922 C 256.837 325.045,256.147 325.026,256.351 324.878 C 256.556 324.731,256.814 324.362,256.925 324.059 C 257.098 323.590,257.361 323.563,258.712 323.877 C 259.584 324.079,260.183 324.346,260.044 324.471 M271.278 325.303 C 271.157 325.620,271.278 325.823,271.588 325.823 C 271.868 325.823,272.097 325.589,272.097 325.303 C 272.097 325.017,271.958 324.783,271.788 324.783 C 271.617 324.783,271.388 325.017,271.278 325.303 M255.266 325.661 C 255.902 326.143,255.879 326.170,254.832 326.170 C 253.780 326.170,253.452 325.867,253.957 325.361 C 254.285 325.034,254.502 325.083,255.266 325.661 M264.119 327.296 C 264.110 328.040,263.533 328.688,263.038 328.510 C 262.778 328.417,262.331 328.525,262.045 328.750 C 260.646 329.854,255.272 330.523,256.133 329.487 C 256.331 329.248,256.377 328.925,256.236 328.769 C 256.095 328.613,256.185 328.604,256.436 328.749 C 256.738 328.923,256.957 328.767,257.083 328.284 C 257.277 327.541,259.272 327.174,259.272 327.881 C 259.272 328.409,260.646 328.149,261.284 327.502 C 261.972 326.802,264.127 326.646,264.119 327.296 M252.824 328.392 C 252.622 328.916,251.417 329.331,249.740 329.452 L 248.700 329.527 249.653 329.168 C 250.178 328.970,250.607 328.605,250.607 328.356 C 250.607 328.070,251.050 327.903,251.809 327.903 C 252.701 327.903,252.963 328.029,252.824 328.392 M254.134 330.792 C 253.616 331.023,253.241 331.023,253.010 330.792 C 252.779 330.560,253.037 330.445,253.787 330.445 C 254.824 330.445,254.851 330.472,254.134 330.792 M267.938 330.849 C 267.694 331.143,266.938 331.369,266.199 331.369 C 265.357 331.369,264.821 331.184,264.693 330.849 C 264.530 330.425,264.851 330.329,266.431 330.329 C 268.114 330.329,268.312 330.398,267.938 330.849 M270.017 330.849 C 269.780 331.135,269.196 331.369,268.719 331.369 C 267.988 331.369,267.920 331.288,268.284 330.849 C 268.522 330.563,269.106 330.329,269.582 330.329 C 270.313 330.329,270.381 330.411,270.017 330.849 M232.984 331.578 C 232.548 331.883,232.088 332.031,231.963 331.906 C 231.685 331.627,232.564 331.035,233.266 331.028 C 233.595 331.024,233.495 331.220,232.984 331.578 M242.651 331.777 C 241.888 332.597,241.448 332.502,241.797 331.592 C 241.917 331.279,242.317 331.023,242.685 331.023 C 243.336 331.023,243.336 331.043,242.651 331.777 M249.220 331.369 C 249.651 331.647,249.621 331.705,249.047 331.705 C 248.666 331.705,248.120 331.554,247.834 331.369 C 247.403 331.091,247.433 331.033,248.007 331.033 C 248.388 331.033,248.934 331.184,249.220 331.369 M257.366 331.555 C 256.794 331.817,256.547 332.038,256.817 332.047 C 257.087 332.055,257.222 332.148,257.118 332.253 C 256.847 332.524,255.113 332.045,255.113 331.699 C 255.113 331.457,255.928 331.294,258.059 331.109 C 258.250 331.092,257.938 331.293,257.366 331.555 M286.876 331.542 C 286.995 331.850,286.880 332.062,286.596 332.062 C 286.074 332.062,284.770 333.412,285.035 333.677 C 285.473 334.116,287.695 333.337,287.695 332.745 C 287.695 331.884,287.335 331.023,286.976 331.023 C 286.811 331.023,286.767 331.256,286.876 331.542 M251.774 331.789 C 251.530 332.184,250.260 332.126,250.260 331.720 C 250.260 331.531,250.639 331.408,251.102 331.447 C 251.564 331.485,251.867 331.639,251.774 331.789 M254.324 331.948 C 254.410 332.207,254.200 332.287,253.746 332.168 C 253.354 332.065,253.033 331.832,253.033 331.650 C 253.033 331.190,254.158 331.450,254.324 331.948 M283.745 332.552 C 283.856 332.840,283.673 333.109,283.301 333.205 C 282.794 333.336,282.823 333.376,283.449 333.409 C 284.011 333.438,284.229 333.255,284.229 332.756 C 284.229 332.374,284.078 332.062,283.893 332.062 C 283.708 332.062,283.642 332.283,283.745 332.552 M162.912 333.639 C 162.912 333.963,165.670 336.701,165.825 336.531 C 165.894 336.456,165.266 335.721,164.430 334.898 C 163.595 334.074,162.912 333.508,162.912 333.639 M279.954 334.027 C 279.623 334.358,279.669 334.835,280.032 334.835 C 280.202 334.835,280.432 334.601,280.541 334.315 C 280.744 333.787,280.375 333.606,279.954 334.027 M255.142 335.280 C 255.221 335.334,255.559 335.587,255.893 335.842 C 256.412 336.240,256.499 336.226,256.499 335.744 C 256.499 335.399,256.210 335.182,255.748 335.182 C 255.335 335.182,255.062 335.226,255.142 335.280 M272.794 335.491 C 271.960 335.723,272.169 336.161,273.050 336.028 C 273.289 335.991,273.912 335.931,274.437 335.894 C 275.291 335.834,275.318 335.796,274.697 335.529 C 273.886 335.180,273.910 335.181,272.794 335.491 M267.865 336.583 C 267.353 337.103,267.029 337.624,267.147 337.742 C 267.264 337.859,267.107 337.955,266.799 337.955 C 265.954 337.955,264.534 338.679,264.328 339.215 C 264.205 339.536,264.422 339.688,265.002 339.688 C 265.532 339.688,265.858 339.490,265.858 339.168 C 265.858 338.882,266.092 338.648,266.378 338.648 C 267.003 338.648,267.083 339.324,266.464 339.381 C 265.249 339.493,269.149 339.997,271.363 340.015 L 273.923 340.035 275.627 338.303 L 277.332 336.572 273.674 336.611 C 270.810 336.641,270.017 336.753,270.017 337.129 C 270.017 337.431,269.632 337.608,268.977 337.608 C 268.406 337.608,267.938 337.452,267.938 337.262 C 267.938 337.071,268.142 336.915,268.391 336.915 C 269.336 336.915,270.213 336.007,269.458 335.810 C 269.036 335.700,268.460 335.979,267.865 336.583 M218.111 336.466 C 217.682 336.549,216.980 336.549,216.551 336.466 C 216.122 336.384,216.473 336.316,217.331 336.316 C 218.189 336.316,218.540 336.384,218.111 336.466 M251.993 336.915 C 251.993 337.106,252.176 337.262,252.399 337.262 C 252.622 337.262,253.090 337.520,253.439 337.835 C 253.818 338.179,254.073 338.248,254.073 338.009 C 254.073 337.788,254.307 337.608,254.593 337.608 C 254.879 337.608,255.113 337.373,255.113 337.085 C 255.113 336.646,254.994 336.633,254.374 336.999 C 253.784 337.347,253.604 337.348,253.479 337.002 C 253.293 336.489,251.993 336.413,251.993 336.915 M243.847 337.262 C 243.965 337.452,244.403 337.597,244.821 337.584 C 245.553 337.560,245.556 337.549,244.887 337.262 C 243.933 336.852,243.594 336.852,243.847 337.262 M237.435 338.128 C 237.435 338.475,237.088 338.648,236.395 338.648 C 235.702 338.648,235.355 338.475,235.355 338.128 C 235.355 337.782,235.702 337.608,236.395 337.608 C 237.088 337.608,237.435 337.782,237.435 338.128 M272.589 337.819 C 273.782 338.277,273.165 338.995,271.577 338.995 C 270.104 338.995,269.563 338.525,270.248 337.839 C 270.537 337.551,271.860 337.539,272.589 337.819 M233.622 338.475 C 233.622 338.821,233.276 338.995,232.582 338.995 C 231.889 338.995,231.542 338.821,231.542 338.475 C 231.542 338.128,231.889 337.955,232.582 337.955 C 233.276 337.955,233.622 338.128,233.622 338.475 M263.085 338.302 C 263.085 338.492,263.319 338.648,263.605 338.648 C 263.891 338.648,264.125 338.492,264.125 338.302 C 264.125 338.111,263.891 337.955,263.605 337.955 C 263.319 337.955,263.085 338.111,263.085 338.302 M252.686 339.341 C 252.686 339.532,253.007 339.688,253.400 339.688 C 253.793 339.688,254.017 339.844,253.899 340.035 C 253.670 340.406,250.516 340.521,250.165 340.171 C 250.050 340.055,250.141 339.749,250.367 339.491 C 250.845 338.946,252.686 338.828,252.686 339.341 M169.389 340.342 C 169.925 340.892,170.424 341.287,170.497 341.219 C 170.680 341.051,169.047 339.355,168.696 339.347 C 168.541 339.344,168.853 339.792,169.389 340.342 M214.905 341.421 C 214.905 341.612,214.584 341.768,214.191 341.768 C 213.798 341.768,213.574 341.612,213.692 341.421 C 213.809 341.231,214.130 341.075,214.405 341.075 C 214.680 341.075,214.905 341.231,214.905 341.421 M218.024 342.114 C 218.024 342.305,217.800 342.461,217.525 342.461 C 217.250 342.461,216.929 342.305,216.811 342.114 C 216.693 341.924,216.918 341.768,217.311 341.768 C 217.703 341.768,218.024 341.924,218.024 342.114 M223.224 342.461 C 223.224 342.652,222.590 342.808,221.817 342.808 C 220.967 342.808,220.495 342.670,220.624 342.461 C 220.742 342.270,221.375 342.114,222.031 342.114 C 222.687 342.114,223.224 342.270,223.224 342.461 M234.489 342.461 C 234.624 342.680,233.741 342.808,232.083 342.808 C 230.567 342.808,229.463 342.662,229.463 342.461 C 229.463 342.263,230.496 342.114,231.869 342.114 C 233.192 342.114,234.371 342.270,234.489 342.461 ",stroke:"none",fill:"#e7ac74",fillRule:"evenodd"}),/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{id:"path5",d:"M265.836 33.951 C 265.348 34.099,263.866 34.337,262.543 34.478 C 261.221 34.620,258.969 35.046,257.539 35.425 C 256.109 35.805,254.315 36.267,253.553 36.452 C 252.790 36.637,251.927 36.915,251.635 37.068 C 251.343 37.221,250.591 37.459,249.965 37.597 C 249.339 37.734,248.408 38.065,247.897 38.332 C 247.386 38.599,246.790 38.818,246.573 38.819 C 246.357 38.821,245.733 39.054,245.187 39.339 C 244.641 39.624,243.921 39.858,243.588 39.859 C 243.254 39.860,242.981 40.017,242.981 40.208 C 242.981 40.399,242.738 40.555,242.442 40.555 C 241.355 40.555,232.986 44.652,231.825 45.752 C 231.257 46.291,231.832 46.099,233.795 45.094 C 235.321 44.314,236.750 43.675,236.973 43.675 C 237.195 43.675,237.429 43.539,237.493 43.373 C 237.556 43.208,237.998 42.962,238.475 42.827 C 239.084 42.655,238.930 42.844,237.955 43.464 C 237.192 43.949,236.457 44.351,236.321 44.357 C 235.996 44.371,230.327 47.812,227.566 49.670 C 226.376 50.471,224.357 51.750,223.080 52.513 C 219.441 54.685,214.534 58.555,213.911 59.744 C 213.118 61.258,211.174 63.085,210.357 63.085 C 208.538 63.085,204.723 66.856,203.145 70.213 C 202.762 71.030,202.092 72.065,201.657 72.514 C 201.222 72.964,200.436 73.865,199.910 74.518 C 198.959 75.698,196.238 76.310,193.942 75.860 C 192.917 75.659,201.957 66.951,209.185 61.177 C 210.139 60.415,210.997 59.714,211.092 59.619 C 211.187 59.523,212.045 58.904,212.998 58.243 C 213.951 57.581,215.043 56.750,215.425 56.395 C 215.806 56.041,217.093 55.117,218.284 54.343 C 219.476 53.570,220.451 52.867,220.451 52.783 C 220.451 52.587,218.173 53.965,216.778 55.006 C 216.188 55.446,215.605 55.806,215.483 55.806 C 215.360 55.806,214.984 56.029,214.649 56.302 C 214.313 56.574,212.634 57.851,210.919 59.139 C 209.203 60.427,207.721 61.569,207.626 61.676 C 207.530 61.784,206.438 62.729,205.199 63.776 C 202.883 65.734,200.565 67.881,194.904 73.310 L 191.651 76.430 194.872 76.431 C 222.432 76.439,253.050 86.909,275.165 103.889 C 278.561 106.497,279.261 106.611,276.252 104.066 C 275.105 103.095,274.314 102.209,274.495 102.097 C 274.676 101.985,274.745 101.390,274.647 100.774 C 274.494 99.806,274.687 99.422,276.057 97.959 C 276.929 97.027,277.643 95.963,277.643 95.594 C 277.643 94.783,278.267 94.113,279.340 93.772 C 280.414 93.431,281.391 92.408,281.658 91.343 C 281.779 90.862,282.017 90.468,282.187 90.468 C 282.357 90.468,282.496 90.142,282.496 89.743 C 282.496 89.345,282.964 88.608,283.536 88.106 C 284.336 87.404,284.575 86.901,284.575 85.922 C 284.575 84.857,284.715 84.615,285.437 84.434 C 285.968 84.301,286.381 83.888,286.514 83.357 C 286.633 82.883,286.852 82.496,287.002 82.496 C 287.151 82.496,287.371 82.106,287.491 81.629 C 287.610 81.153,287.861 80.763,288.048 80.763 C 288.235 80.763,288.388 80.563,288.388 80.320 C 288.388 80.076,288.700 79.610,289.081 79.283 C 289.463 78.957,289.775 78.376,289.775 77.993 C 289.775 77.610,289.911 77.296,290.078 77.296 C 290.245 77.296,290.454 76.424,290.543 75.358 C 290.631 74.292,290.874 73.314,291.083 73.185 C 291.292 73.056,291.571 72.135,291.703 71.137 C 291.835 70.140,292.074 69.324,292.234 69.324 C 292.393 69.324,292.627 68.544,292.754 67.591 C 292.880 66.638,293.119 65.858,293.286 65.858 C 293.452 65.858,293.588 65.390,293.588 64.818 C 293.588 64.246,293.432 63.778,293.241 63.778 C 292.748 63.778,292.810 62.824,293.314 62.656 C 293.687 62.532,293.956 60.089,293.962 56.770 C 293.963 56.252,294.113 55.736,294.296 55.623 C 295.109 55.121,294.454 49.913,293.577 49.913 C 292.846 49.913,292.690 49.531,292.590 47.487 C 292.547 46.629,292.365 45.875,292.184 45.812 C 292.003 45.748,291.854 45.163,291.854 44.512 C 291.854 43.735,291.690 43.328,291.375 43.328 C 290.873 43.328,290.481 42.311,290.473 40.988 C 290.470 40.559,290.306 40.208,290.108 40.208 C 289.910 40.208,289.144 39.610,288.405 38.879 C 287.667 38.148,286.074 37.056,284.866 36.451 L 282.669 35.352 284.575 35.569 C 285.624 35.688,286.560 35.903,286.655 36.047 C 286.750 36.191,287.355 36.422,287.999 36.562 C 289.064 36.793,294.444 39.426,295.430 40.198 C 295.656 40.375,296.542 41.094,297.400 41.796 C 298.616 42.791,298.540 42.678,297.054 41.282 C 294.553 38.934,294.649 39.004,292.315 37.819 C 285.892 34.557,281.459 33.610,272.822 33.652 C 269.468 33.668,266.325 33.803,265.836 33.951 M267.418 34.662 C 267.300 34.853,266.238 34.984,265.058 34.954 L 262.912 34.900 264.645 34.662 C 267.347 34.291,267.647 34.291,267.418 34.662 M252.513 37.782 C 252.132 37.945,251.430 38.072,250.953 38.063 C 250.167 38.048,250.183 38.022,251.127 37.782 C 252.570 37.414,253.368 37.414,252.513 37.782 M243.674 40.802 C 243.388 40.908,242.881 41.135,242.548 41.307 C 242.174 41.499,241.941 41.491,241.941 41.285 C 241.941 40.947,242.729 40.646,243.674 40.622 C 244.136 40.611,244.136 40.631,243.674 40.802 M273.838 42.552 C 291.636 48.914,290.993 69.776,272.736 78.317 C 256.640 85.847,238.670 74.103,242.763 58.730 C 246.007 46.549,261.889 38.281,273.838 42.552 M262.084 43.356 C 261.247 43.520,260.467 43.759,260.351 43.887 C 260.234 44.016,260.685 44.002,261.352 43.857 C 262.019 43.713,264.125 43.481,266.031 43.342 L 269.497 43.090 266.551 43.073 C 264.931 43.064,262.920 43.191,262.084 43.356 M269.700 43.453 C 269.779 43.521,270.546 43.671,271.404 43.784 C 272.445 43.922,272.733 43.888,272.270 43.683 C 271.608 43.390,269.399 43.192,269.700 43.453 M274.130 44.554 C 274.771 44.833,275.395 45.055,275.516 45.048 C 275.967 45.023,273.983 44.045,273.484 44.047 C 273.198 44.047,273.488 44.276,274.130 44.554 M255.877 45.559 C 252.380 47.444,249.259 49.981,247.751 52.166 C 247.356 52.738,247.842 52.318,248.830 51.233 C 250.778 49.094,254.309 46.583,257.248 45.248 C 258.266 44.786,258.865 44.402,258.579 44.395 C 258.293 44.389,257.077 44.912,255.877 45.559 M275.939 45.202 C 276.318 45.572,279.819 47.834,280.013 47.834 C 280.355 47.834,276.472 45.084,276.112 45.072 C 275.937 45.066,275.859 45.124,275.939 45.202 M284.679 58.232 C 284.679 59.281,284.744 59.710,284.824 59.185 C 284.903 58.661,284.903 57.803,284.824 57.279 C 284.744 56.755,284.679 57.184,284.679 58.232 M279.447 67.589 C 279.122 68.160,278.661 68.627,278.423 68.629 C 277.790 68.632,277.894 68.026,278.593 67.634 C 278.925 67.448,279.100 67.199,278.981 67.081 C 278.647 66.746,277.582 67.971,277.773 68.470 C 277.991 69.039,276.956 69.974,275.687 70.354 C 274.876 70.597,274.833 70.656,275.450 70.681 C 275.864 70.697,276.667 70.321,277.233 69.844 C 278.437 68.831,278.877 68.767,279.312 69.543 C 279.563 69.992,279.677 69.848,279.865 68.850 C 279.994 68.158,280.250 67.591,280.432 67.591 C 280.614 67.591,280.763 67.357,280.763 67.071 C 280.763 66.213,280.076 66.483,279.447 67.589 M266.551 75.018 C 265.160 75.768,261.691 76.352,259.893 76.139 C 258.244 75.944,257.835 76.190,258.666 76.876 C 259.415 77.496,261.418 77.652,264.645 77.344 C 266.470 77.170,267.135 77.026,266.249 76.998 C 264.482 76.942,264.682 76.367,266.873 75.208 C 267.554 74.849,267.955 74.553,267.764 74.553 C 267.574 74.552,267.028 74.761,266.551 75.018 M296.896 92.132 C 295.111 93.366,294.280 94.843,294.035 97.218 C 293.615 101.284,296.917 102.362,305.026 100.804 C 308.344 100.167,313.345 97.148,313.345 95.782 C 313.345 94.781,313.534 94.776,314.951 95.748 C 317.715 97.641,316.993 101.220,313.569 102.602 C 313.060 102.808,313.000 102.909,313.379 102.924 C 313.939 102.947,314.956 102.226,316.378 100.798 C 317.313 99.859,317.429 97.790,316.616 96.549 C 314.062 92.651,300.529 89.620,296.896 92.132 M307.626 104.333 C 307.070 104.572,307.190 104.635,308.232 104.655 C 308.947 104.668,309.532 104.523,309.532 104.333 C 309.532 103.919,308.589 103.919,307.626 104.333 M296.794 104.928 C 297.318 105.007,298.176 105.007,298.700 104.928 C 299.224 104.848,298.795 104.783,297.747 104.783 C 296.698 104.783,296.269 104.848,296.794 104.928 M303.553 104.930 C 304.172 105.007,305.186 105.007,305.806 104.930 C 306.425 104.853,305.919 104.790,304.679 104.790 C 303.440 104.790,302.933 104.853,303.553 104.930 M180.560 279.832 C 180.716 279.988,181.450 280.064,182.190 279.999 L 183.536 279.881 181.905 279.714 C 181.009 279.622,180.403 279.675,180.560 279.832 ",stroke:"none",fill:"#8fc672",fillRule:"evenodd"}),/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{id:"path6",d:"M15.077 11.088 C 15.334 11.899,15.377 20.893,15.148 25.976 C 15.066 27.798,15.065 28.588,15.146 27.730 C 15.227 26.872,15.440 26.022,15.619 25.841 C 15.800 25.657,15.945 22.462,15.945 18.636 C 15.945 10.997,15.706 11.577,18.198 13.164 C 18.769 13.529,19.939 14.186,20.797 14.626 C 21.655 15.065,22.437 15.529,22.534 15.657 C 22.631 15.785,23.138 15.997,23.660 16.128 C 24.183 16.259,24.610 16.471,24.610 16.599 C 24.610 17.776,38.387 21.977,55.979 26.166 C 61.019 27.366,62.534 27.765,66.551 28.953 C 67.600 29.263,69.494 29.805,70.761 30.157 C 82.133 33.318,88.895 39.117,91.208 47.695 C 92.759 53.447,91.947 64.871,89.584 70.525 C 89.308 71.187,89.088 72.006,89.097 72.346 C 89.113 73.005,89.984 70.911,90.446 69.105 C 90.598 68.508,90.813 67.874,90.923 67.696 C 93.463 63.586,92.971 49.058,90.089 43.099 C 88.371 39.547,80.974 32.682,78.745 32.571 C 78.615 32.564,77.886 32.257,77.123 31.889 C 76.360 31.521,75.477 31.214,75.159 31.208 C 74.841 31.201,74.529 31.076,74.466 30.930 C 74.339 30.639,69.091 28.866,65.511 27.905 C 64.272 27.572,62.556 27.106,61.698 26.868 C 60.841 26.630,58.969 26.169,57.539 25.844 C 50.080 24.148,41.995 22.199,40.901 21.832 C 40.425 21.673,38.865 21.205,37.435 20.792 C 34.495 19.944,32.202 19.182,30.676 18.546 C 30.104 18.307,28.856 17.825,27.903 17.475 C 26.950 17.125,25.780 16.638,25.303 16.393 C 24.827 16.149,24.255 15.948,24.032 15.947 C 23.810 15.946,23.576 15.828,23.512 15.685 C 23.449 15.542,22.510 14.996,21.426 14.472 C 20.342 13.947,18.418 12.809,17.151 11.941 C 15.271 10.654,14.889 10.497,15.077 11.088 M16.866 14.818 C 16.778 14.961,16.692 17.106,16.676 19.584 C 16.659 22.062,16.416 25.494,16.135 27.210 C 15.854 28.925,15.470 31.577,15.282 33.102 C 14.313 40.943,12.088 50.556,10.908 51.993 C 10.674 52.279,9.909 53.995,9.208 55.806 C 8.508 57.617,7.792 59.448,7.616 59.875 C 7.441 60.301,7.389 60.888,7.500 61.179 C 7.612 61.469,7.506 61.945,7.266 62.235 C 7.025 62.525,6.696 64.323,6.534 66.232 C 6.360 68.293,6.003 70.152,5.655 70.813 C 4.154 73.660,5.266 80.802,7.657 83.670 C 9.811 86.253,14.586 89.526,15.679 89.168 C 15.819 89.122,17.086 89.461,18.495 89.921 C 21.692 90.965,25.537 90.858,24.940 89.743 C 24.620 89.145,24.681 89.137,26.079 89.596 C 61.442 101.189,75.169 96.218,84.927 68.284 C 88.355 58.472,89.030 45.235,86.202 43.284 C 86.029 43.165,85.983 42.697,86.100 42.244 C 86.304 41.452,86.298 41.449,85.929 42.161 C 85.632 42.733,85.670 43.166,86.096 44.068 C 87.786 47.643,87.916 59.154,86.285 60.815 C 86.107 60.996,85.962 61.419,85.962 61.756 C 85.962 62.093,85.741 62.880,85.471 63.506 C 85.200 64.132,84.406 66.049,83.705 67.764 C 73.222 93.427,60.682 98.875,33.000 89.792 C 29.991 88.805,27.451 88.321,29.426 89.111 C 30.639 89.596,30.073 89.885,28.715 89.475 C 24.079 88.072,20.831 86.020,16.638 81.846 C 15.017 80.233,13.536 78.952,13.345 79.000 C 13.154 79.048,13.110 78.976,13.246 78.839 C 13.382 78.703,13.327 78.279,13.122 77.897 C 12.818 77.329,12.688 77.290,12.408 77.683 C 12.140 78.059,12.107 78.035,12.257 77.569 C 12.361 77.242,12.004 75.999,11.463 74.807 C 10.766 73.271,10.439 72.838,10.344 73.321 C 10.270 73.696,10.175 71.898,10.132 69.324 C 10.069 65.464,10.171 64.313,10.720 62.748 C 11.085 61.705,11.293 60.691,11.182 60.495 C 11.071 60.299,11.104 60.250,11.256 60.387 C 11.649 60.742,13.591 57.943,13.301 57.439 C 13.169 57.208,13.188 57.135,13.344 57.276 C 13.702 57.601,14.616 56.873,14.363 56.464 C 14.260 56.297,14.379 56.230,14.627 56.315 C 14.875 56.400,15.858 55.754,16.811 54.879 C 17.764 54.004,18.263 53.384,17.920 53.503 C 17.536 53.635,17.380 53.581,17.516 53.361 C 17.637 53.165,17.996 53.081,18.313 53.175 C 18.631 53.268,19.437 53.031,20.104 52.648 C 20.771 52.264,21.005 52.056,20.624 52.184 C 18.798 52.801,18.830 52.819,18.614 50.994 C 17.776 43.919,26.556 41.127,29.918 47.400 L 30.893 49.220 34.251 49.275 L 37.608 49.330 33.365 49.561 C 27.509 49.881,27.741 50.162,33.872 50.177 C 37.686 50.187,39.918 50.378,42.610 50.925 C 46.825 51.783,46.402 52.050,47.783 47.660 C 49.398 42.530,54.592 35.009,56.521 35.009 C 56.763 35.009,56.860 34.908,56.736 34.784 C 56.613 34.660,55.896 34.986,55.142 35.508 C 53.766 36.462,52.340 36.501,52.340 35.584 C 52.340 35.354,51.801 34.876,51.143 34.522 C 50.484 34.167,49.665 33.617,49.323 33.299 C 48.980 32.981,48.037 32.349,47.227 31.895 C 46.417 31.440,45.754 30.966,45.754 30.842 C 45.754 30.718,44.857 30.171,43.761 29.627 C 42.665 29.084,41.150 28.161,40.396 27.578 C 39.641 26.994,38.674 26.335,38.246 26.112 C 37.818 25.890,36.563 25.238,35.458 24.664 C 30.874 22.283,29.465 21.760,26.973 21.514 C 26.842 21.501,25.797 20.750,24.650 19.844 C 19.788 16.006,17.173 14.318,16.866 14.818 M128.054 30.243 L 127.036 31.369 128.163 30.351 C 129.213 29.402,129.449 29.116,129.181 29.116 C 129.121 29.116,128.614 29.623,128.054 30.243 M129.875 30.936 C 128.796 32.005,128.791 32.018,129.793 31.199 C 130.374 30.723,130.997 30.216,131.179 30.072 C 131.360 29.928,131.396 29.809,131.260 29.809 C 131.124 29.809,130.500 30.316,129.875 30.936 M142.808 30.065 C 142.808 30.265,143.051 30.522,143.350 30.636 C 143.648 30.751,143.788 31.012,143.661 31.217 C 143.534 31.422,143.174 31.492,142.859 31.372 C 142.399 31.197,142.373 31.241,142.723 31.594 C 143.075 31.948,143.261 31.931,143.687 31.504 C 144.161 31.031,144.142 30.910,143.512 30.339 C 143.124 29.989,142.808 29.865,142.808 30.065 M14.211 31.043 C 14.211 31.546,14.361 31.837,14.558 31.716 C 14.749 31.598,14.905 31.199,14.905 30.829 C 14.905 30.459,14.749 30.156,14.558 30.156 C 14.367 30.156,14.211 30.555,14.211 31.043 M64.389 31.788 C 64.820 31.871,65.444 31.867,65.775 31.781 C 66.107 31.694,65.754 31.626,64.991 31.630 C 64.229 31.634,63.958 31.705,64.389 31.788 M59.619 32.945 C 59.239 33.202,59.379 33.234,60.139 33.064 C 61.413 32.779,61.690 32.581,60.803 32.588 C 60.438 32.591,59.905 32.751,59.619 32.945 M126.944 38.128 C 126.944 38.795,127.015 39.068,127.102 38.735 C 127.189 38.401,127.189 37.855,127.102 37.522 C 127.015 37.188,126.944 37.461,126.944 38.128 M137.955 38.655 C 136.716 39.307,135.394 39.931,135.018 40.043 C 134.489 40.200,134.440 40.310,134.803 40.534 C 135.060 40.694,135.164 40.997,135.033 41.209 C 134.620 41.876,134.142 41.629,134.142 40.748 C 134.142 40.283,134.014 39.823,133.858 39.727 C 133.702 39.630,133.644 40.023,133.728 40.600 C 133.934 42.002,134.675 42.213,135.809 41.192 C 136.322 40.730,137.560 39.813,138.561 39.154 C 139.561 38.494,140.380 37.838,140.381 37.695 C 140.381 37.357,140.543 37.293,137.955 38.655 M148.440 39.076 C 148.189 39.163,148.024 39.759,148.047 40.497 C 148.070 41.224,148.161 41.479,148.259 41.093 C 148.632 39.626,149.422 43.073,149.247 45.407 C 149.136 46.899,149.179 47.367,149.375 46.794 C 150.164 44.484,149.466 38.721,148.440 39.076 M12.137 40.121 C 12.141 40.864,12.217 40.960,12.478 40.555 C 12.917 39.876,12.917 39.168,12.478 39.168 C 12.288 39.168,12.134 39.597,12.137 40.121 M84.740 40.555 C 84.835 41.031,84.919 41.655,84.928 41.941 C 84.939 42.331,85.037 42.299,85.319 41.813 C 85.558 41.403,85.573 41.085,85.361 40.947 C 85.177 40.826,84.923 40.494,84.797 40.208 C 84.671 39.922,84.645 40.078,84.740 40.555 M125.179 40.901 C 125.179 41.187,125.313 41.733,125.477 42.114 C 125.664 42.551,125.774 42.615,125.774 42.288 C 125.774 42.002,125.640 41.456,125.477 41.075 C 125.289 40.638,125.179 40.573,125.179 40.901 M148.087 44.021 C 148.087 44.688,148.159 44.961,148.246 44.627 C 148.333 44.294,148.333 43.748,148.246 43.414 C 148.159 43.081,148.087 43.354,148.087 44.021 M110.572 47.478 C 110.572 47.664,111.079 48.061,111.698 48.361 C 112.693 48.843,112.746 48.844,112.152 48.370 C 111.782 48.075,111.344 47.834,111.178 47.834 C 111.013 47.834,110.974 47.678,111.092 47.487 C 111.210 47.296,111.141 47.140,110.939 47.140 C 110.737 47.140,110.572 47.292,110.572 47.478 M109.326 48.580 C 109.179 48.818,109.230 48.887,109.452 48.749 C 109.658 48.622,109.898 48.793,109.986 49.129 C 110.107 49.594,110.154 49.554,110.185 48.960 C 110.228 48.131,109.737 47.914,109.326 48.580 M129.968 49.653 C 131.405 51.184,131.716 51.459,131.716 51.199 C 131.716 51.143,130.975 50.402,130.069 49.552 L 128.423 48.007 129.968 49.653 M111.057 50.054 C 110.954 50.321,110.934 51.062,111.012 51.700 C 111.143 52.767,111.159 52.744,111.210 51.415 C 111.240 50.621,111.460 49.892,111.698 49.796 C 112.038 49.659,112.035 49.616,111.688 49.594 C 111.443 49.579,111.159 49.786,111.057 50.054 M119.002 52.340 C 119.002 53.579,119.065 54.086,119.142 53.466 C 119.218 52.847,119.218 51.833,119.142 51.213 C 119.065 50.594,119.002 51.101,119.002 52.340 M120.025 51.993 C 120.025 52.851,120.093 53.202,120.175 52.773 C 120.258 52.344,120.258 51.642,120.175 51.213 C 120.093 50.784,120.025 51.135,120.025 51.993 M139.861 51.646 L 137.782 51.877 139.688 51.929 C 140.737 51.959,141.828 51.831,142.114 51.646 C 142.400 51.462,142.478 51.334,142.288 51.363 C 142.097 51.393,141.005 51.520,139.861 51.646 M133.795 52.540 C 133.795 52.774,135.596 53.428,135.768 53.256 C 135.846 53.177,135.435 52.947,134.853 52.744 C 134.271 52.542,133.795 52.449,133.795 52.540 M70.595 52.917 C 70.468 53.044,70.364 53.447,70.364 53.813 C 70.364 54.712,71.201 54.392,71.341 53.439 C 71.448 52.710,71.068 52.444,70.595 52.917 M138.735 53.979 C 139.450 54.053,140.620 54.053,141.334 53.979 C 142.049 53.904,141.464 53.843,140.035 53.843 C 138.605 53.843,138.020 53.904,138.735 53.979 M109.684 55.546 L 108.666 56.672 109.792 55.654 C 110.842 54.705,111.078 54.419,110.810 54.419 C 110.750 54.419,110.243 54.926,109.684 55.546 M257.972 57.202 C 258.497 57.610,258.938 58.203,258.953 58.521 C 258.971 58.899,259.042 58.945,259.159 58.654 C 259.374 58.119,258.732 57.284,257.741 56.808 C 257.289 56.591,257.376 56.738,257.972 57.202 M117.764 57.784 C 118.193 57.866,118.895 57.866,119.324 57.784 C 119.753 57.701,119.402 57.633,118.544 57.633 C 117.686 57.633,117.335 57.701,117.764 57.784 M115.994 59.192 C 115.904 59.338,116.440 59.400,117.187 59.329 C 117.933 59.258,118.544 59.138,118.544 59.062 C 118.544 58.804,116.159 58.925,115.994 59.192 M5.893 61.561 C 5.893 61.889,5.668 62.951,5.395 63.921 C 4.358 67.592,3.813 70.715,3.813 72.984 C 3.813 75.948,4.048 75.770,4.303 72.614 C 4.559 69.436,4.818 67.932,5.269 67.008 C 5.472 66.592,5.546 66.012,5.434 65.719 C 5.321 65.426,5.379 65.095,5.561 64.982 C 5.743 64.869,5.893 64.406,5.893 63.951 C 5.893 63.497,6.049 63.029,6.239 62.912 C 6.430 62.794,6.586 62.404,6.586 62.045 C 6.586 61.686,6.430 61.296,6.239 61.179 C 6.049 61.061,5.893 61.233,5.893 61.561 M14.645 65.685 C 14.649 66.447,14.720 66.718,14.803 66.287 C 14.886 65.856,14.883 65.232,14.796 64.901 C 14.709 64.569,14.642 64.922,14.645 65.685 M13.973 69.231 C 14.252 72.784,14.850 73.601,14.642 70.146 C 14.552 68.645,14.320 67.262,14.128 67.071 C 13.891 66.837,13.841 67.541,13.973 69.231 M78.336 68.111 C 77.478 68.359,77.088 68.566,77.470 68.570 C 77.851 68.574,78.787 68.372,79.549 68.121 C 81.344 67.529,80.372 67.521,78.336 68.111 M74.957 68.875 C 74.528 68.958,74.177 69.163,74.177 69.330 C 74.177 69.498,74.684 69.464,75.303 69.255 C 77.109 68.646,76.965 68.489,74.957 68.875 M35.822 70.206 C 35.499 71.046,35.949 71.198,36.379 70.394 C 36.648 69.892,36.653 69.671,36.396 69.671 C 36.193 69.671,35.934 69.911,35.822 70.206 M72.815 71.231 C 72.815 71.421,73.038 71.967,73.310 72.444 C 73.583 72.920,73.806 73.154,73.806 72.964 C 73.806 72.773,73.583 72.227,73.310 71.750 C 73.038 71.274,72.815 71.040,72.815 71.231 M75.592 72.964 C 75.592 73.154,75.891 73.856,76.256 74.523 C 76.622 75.191,76.921 75.581,76.921 75.390 C 76.921 75.199,76.622 74.497,76.256 73.830 C 75.891 73.163,75.592 72.773,75.592 72.964 M60.659 74.350 C 60.421 74.636,59.895 74.888,59.490 74.910 C 59.031 74.935,58.949 75.008,59.272 75.103 C 59.558 75.187,61.196 77.678,62.912 80.639 C 64.627 83.599,66.367 86.539,66.777 87.170 C 67.348 88.049,67.429 88.422,67.123 88.761 C 66.904 89.005,67.208 88.825,67.798 88.363 C 68.389 87.900,68.776 87.444,68.659 87.348 C 68.034 86.840,61.224 74.953,61.263 74.438 C 61.319 73.695,61.215 73.680,60.659 74.350 M74.208 74.350 C 74.208 74.541,74.584 75.399,75.043 76.256 C 75.503 77.114,75.879 77.660,75.879 77.470 C 75.879 77.279,75.503 76.421,75.043 75.563 C 74.584 74.705,74.208 74.159,74.208 74.350 M3.681 78.552 C 3.912 82.355,5.664 88.502,6.327 87.838 C 6.508 87.658,6.046 86.253,5.197 84.402 C 5.022 84.021,4.625 81.915,4.314 79.723 C 3.623 74.849,3.434 74.500,3.681 78.552 M77.296 75.910 C 77.021 76.080,76.912 76.334,77.052 76.475 C 77.193 76.615,77.490 76.548,77.712 76.326 C 78.236 75.802,77.944 75.510,77.296 75.910 M77.848 81.023 L 77.631 81.976 78.503 81.003 C 79.703 79.666,79.597 80.136,78.164 82.493 C 76.709 84.890,75.677 85.925,76.252 84.414 C 76.562 83.599,76.535 83.487,76.072 83.665 C 75.450 83.904,75.582 83.597,76.828 81.912 C 77.276 81.305,77.643 80.642,77.643 80.439 C 77.643 80.236,77.738 80.069,77.854 80.069 C 77.970 80.069,77.967 80.498,77.848 81.023 M47.893 81.164 C 46.391 81.916,46.237 82.093,47.253 81.899 C 47.781 81.798,48.154 81.928,48.280 82.257 C 48.389 82.541,49.665 84.586,51.116 86.801 C 54.522 92.002,54.457 91.783,52.629 91.942 C 51.802 92.013,52.686 92.068,54.593 92.064 C 56.499 92.060,57.635 91.972,57.117 91.869 C 56.320 91.710,50.127 83.156,49.184 80.911 C 49.108 80.732,48.528 80.846,47.893 81.164 M70.871 85.702 L 69.151 87.522 70.971 85.802 C 72.661 84.203,72.949 83.882,72.691 83.882 C 72.636 83.882,71.817 84.701,70.871 85.702 M6.779 88.723 C 7.101 89.835,9.822 92.699,11.408 93.595 L 12.652 94.297 11.785 93.573 C 9.906 92.005,7.835 89.897,7.200 88.908 C 6.608 87.986,6.560 87.965,6.779 88.723 M334.729 91.345 C 334.194 91.816,333.894 92.201,334.062 92.201 C 334.230 92.201,334.734 91.811,335.182 91.334 C 336.218 90.232,335.989 90.237,334.729 91.345 M49.137 91.753 C 49.569 91.836,50.193 91.833,50.524 91.746 C 50.855 91.659,50.503 91.591,49.740 91.595 C 48.977 91.599,48.706 91.670,49.137 91.753 M13.865 95.149 C 13.865 95.209,14.606 95.596,15.511 96.008 C 16.417 96.420,17.429 96.902,17.760 97.079 C 18.521 97.485,18.718 97.484,18.718 97.069 C 18.718 96.887,18.172 96.636,17.504 96.511 C 16.837 96.386,16.291 96.171,16.291 96.033 C 16.291 95.896,15.745 95.616,15.078 95.411 C 14.411 95.206,13.865 95.088,13.865 95.149 M203.384 108.737 C 203.815 108.820,204.439 108.817,204.770 108.730 C 205.101 108.644,204.749 108.576,203.986 108.580 C 203.224 108.583,202.952 108.654,203.384 108.737 M208.406 109.078 C 208.739 109.165,209.285 109.165,209.619 109.078 C 209.952 108.991,209.679 108.919,209.012 108.919 C 208.345 108.919,208.072 108.991,208.406 109.078 M211.702 109.431 C 212.134 109.514,212.758 109.510,213.089 109.424 C 213.420 109.337,213.068 109.269,212.305 109.273 C 211.542 109.277,211.271 109.348,211.702 109.431 M219.497 110.118 C 219.831 110.205,220.377 110.205,220.711 110.118 C 221.044 110.030,220.771 109.959,220.104 109.959 C 219.437 109.959,219.164 110.030,219.497 110.118 M222.617 110.464 C 222.951 110.551,223.497 110.551,223.830 110.464 C 224.164 110.377,223.891 110.306,223.224 110.306 C 222.556 110.306,222.283 110.377,222.617 110.464 M231.282 111.504 C 231.616 111.591,232.162 111.591,232.496 111.504 C 232.829 111.417,232.556 111.346,231.889 111.346 C 231.222 111.346,230.949 111.417,231.282 111.504 M201.530 122.877 C 201.530 126.308,201.582 127.665,201.645 125.892 C 201.708 124.119,201.708 121.312,201.644 119.653 C 201.581 117.995,201.529 119.445,201.530 122.877 M281.591 121.119 C 281.486 121.391,281.459 121.976,281.530 122.418 C 281.625 123.011,281.706 122.880,281.835 121.924 C 282.016 120.578,281.920 120.261,281.591 121.119 M278.457 124.090 C 278.457 125.711,278.517 126.373,278.590 125.563 C 278.663 124.753,278.663 123.427,278.590 122.617 C 278.517 121.807,278.457 122.470,278.457 124.090 M281.204 125.130 C 281.204 125.988,281.271 126.339,281.354 125.910 C 281.436 125.481,281.436 124.779,281.354 124.350 C 281.271 123.921,281.204 124.272,281.204 125.130 M119.243 124.504 C 119.236 124.818,120.648 127.210,120.840 127.210 C 120.922 127.210,120.756 126.781,120.472 126.256 C 119.766 124.952,119.249 124.215,119.243 124.504 M117.672 125.563 C 117.567 125.992,117.529 129.151,117.588 132.582 L 117.695 138.821 117.773 132.250 L 117.851 125.679 119.629 128.784 C 120.607 130.492,121.752 132.300,122.173 132.803 C 122.860 133.622,126.757 139.659,127.794 141.510 C 128.197 142.230,128.208 142.227,128.436 141.318 C 128.603 140.652,128.426 139.977,127.805 138.914 C 127.331 138.100,126.595 136.811,126.170 136.049 C 123.881 131.939,122.591 130.011,122.266 130.212 C 122.058 130.341,122.006 130.270,122.144 130.046 C 122.277 129.832,122.141 129.184,121.842 128.606 C 121.200 127.364,120.857 127.213,121.295 128.365 C 121.521 128.959,121.481 129.174,121.146 129.174 C 120.895 129.174,120.770 128.964,120.869 128.708 C 120.981 128.415,120.869 128.310,120.566 128.427 C 120.244 128.550,119.760 127.974,119.114 126.698 C 118.021 124.540,117.940 124.475,117.672 125.563 M278.093 129.636 C 278.093 130.685,278.158 131.114,278.238 130.589 C 278.317 130.065,278.317 129.207,278.238 128.683 C 278.158 128.159,278.093 128.588,278.093 129.636 M280.843 129.289 C 280.843 129.957,280.914 130.230,281.001 129.896 C 281.089 129.562,281.089 129.016,281.001 128.683 C 280.914 128.349,280.843 128.622,280.843 129.289 M201.154 133.622 C 201.155 134.957,201.218 135.460,201.293 134.741 C 201.368 134.022,201.367 132.930,201.290 132.315 C 201.213 131.699,201.152 132.288,201.154 133.622 M280.515 133.276 C 280.518 134.229,280.585 134.578,280.665 134.051 C 280.744 133.524,280.742 132.744,280.660 132.318 C 280.578 131.891,280.512 132.322,280.515 133.276 M277.742 135.009 C 277.745 135.962,277.812 136.311,277.892 135.784 C 277.971 135.257,277.969 134.477,277.887 134.051 C 277.805 133.624,277.740 134.055,277.742 135.009 M313.064 135.297 C 313.317 135.551,313.917 135.857,314.395 135.977 C 314.874 136.097,315.618 136.524,316.049 136.925 C 316.480 137.327,317.374 137.743,318.035 137.851 C 318.696 137.958,319.237 138.174,319.237 138.331 C 319.237 138.488,319.783 138.719,320.451 138.844 C 321.118 138.970,321.664 139.198,321.664 139.352 C 321.664 139.507,322.132 139.736,322.704 139.861 C 323.276 139.987,323.744 140.240,323.744 140.424 C 323.744 140.608,323.967 140.712,324.241 140.656 C 324.514 140.600,324.765 140.711,324.799 140.901 C 324.955 141.786,324.350 148.007,324.107 148.007 C 323.956 148.007,323.724 149.255,323.591 150.780 C 323.458 152.305,323.204 153.553,323.026 153.553 C 322.849 153.553,322.702 154.216,322.700 155.026 C 322.692 158.170,322.366 159.099,321.272 159.099 C 320.725 159.099,320.277 158.955,320.277 158.780 C 320.277 158.604,319.809 158.358,319.237 158.232 C 318.666 158.107,318.198 157.873,318.198 157.712 C 318.198 157.552,317.730 157.318,317.158 157.192 C 316.586 157.067,316.118 156.852,316.118 156.714 C 316.118 156.429,311.966 155.510,311.732 155.743 C 311.648 155.827,312.133 156.000,312.809 156.127 C 313.485 156.253,314.038 156.506,314.038 156.688 C 314.038 156.870,314.204 157.019,314.407 157.019 C 314.610 157.019,315.585 157.388,316.573 157.840 C 322.879 160.720,322.842 160.724,323.389 157.002 C 323.569 155.772,323.940 153.518,324.213 151.993 C 324.485 150.468,324.963 147.582,325.275 145.581 C 325.586 143.579,325.914 141.737,326.002 141.488 C 326.173 141.007,324.599 139.350,323.953 139.330 C 323.742 139.323,322.946 139.017,322.184 138.648 C 321.421 138.280,320.671 137.973,320.516 137.967 C 320.361 137.960,319.425 137.579,318.436 137.120 C 313.307 134.741,312.096 134.330,313.064 135.297 M280.157 136.395 C 280.161 137.158,280.232 137.429,280.314 136.998 C 280.397 136.567,280.394 135.943,280.307 135.611 C 280.221 135.280,280.153 135.633,280.157 136.395 M82.146 138.924 L 82.315 141.594 82.423 139.202 C 82.481 137.887,82.405 136.685,82.253 136.532 C 82.100 136.379,82.052 137.455,82.146 138.924 M201.733 138.231 C 201.733 138.352,204.700 158.609,205.044 160.833 C 205.221 161.978,205.537 162.230,210.577 165.252 C 216.177 168.610,217.287 169.150,215.039 167.422 C 214.298 166.852,213.503 166.228,213.273 166.035 C 213.043 165.842,212.682 165.685,212.473 165.685 C 212.263 165.685,212.202 165.504,212.338 165.284 C 212.474 165.064,212.438 164.975,212.258 165.087 C 211.768 165.390,207.166 162.133,206.707 161.158 C 206.488 160.693,206.140 158.596,205.933 156.499 C 205.429 151.389,204.613 144.363,204.314 142.548 C 204.001 140.654,204.263 140.686,206.777 142.850 C 208.325 144.184,208.441 144.248,207.240 143.110 C 204.971 140.959,201.733 138.090,201.733 138.231 M277.400 140.035 C 277.400 141.083,277.465 141.512,277.545 140.988 C 277.624 140.464,277.624 139.606,277.545 139.081 C 277.465 138.557,277.400 138.986,277.400 140.035 M117.315 152.166 C 117.315 159.315,117.361 162.240,117.417 158.666 C 117.474 155.091,117.474 149.242,117.417 145.667 C 117.361 142.093,117.315 145.017,117.315 152.166 M279.803 140.728 C 279.803 141.395,279.874 141.668,279.962 141.334 C 280.049 141.001,280.049 140.455,279.962 140.121 C 279.874 139.788,279.803 140.061,279.803 140.728 M85.394 143.847 C 85.394 145.659,85.452 146.399,85.523 145.494 C 85.595 144.588,85.595 143.107,85.523 142.201 C 85.452 141.295,85.394 142.036,85.394 143.847 M246.620 143.154 C 247.945 144.489,249.106 145.581,249.202 145.581 C 249.297 145.581,248.291 144.489,246.967 143.154 C 245.643 141.820,244.481 140.728,244.386 140.728 C 244.291 140.728,245.296 141.820,246.620 143.154 M333.632 142.028 C 333.501 142.361,333.254 143.414,333.084 144.367 C 332.723 146.392,331.876 150.900,331.162 154.593 C 330.886 156.023,330.433 158.440,330.157 159.965 C 329.880 161.490,329.431 163.908,329.160 165.338 C 328.889 166.768,328.406 169.341,328.086 171.057 C 327.767 172.773,327.279 175.347,327.003 176.776 C 326.532 179.213,326.029 181.896,324.955 187.695 C 324.708 189.029,324.325 191.026,324.104 192.131 C 323.670 194.301,323.730 196.412,324.221 196.276 C 324.389 196.229,324.578 195.072,324.642 193.705 C 324.706 192.337,324.903 191.127,325.081 191.016 C 325.258 190.905,325.516 189.606,325.654 188.128 C 325.792 186.651,326.022 185.442,326.166 185.442 C 326.309 185.442,326.536 184.194,326.669 182.669 C 326.802 181.144,327.042 179.896,327.202 179.896 C 327.363 179.896,327.605 178.570,327.740 176.950 C 327.875 175.329,328.109 174.003,328.261 174.003 C 328.413 174.003,328.647 172.834,328.781 171.404 C 328.915 169.974,329.151 168.804,329.306 168.804 C 329.461 168.804,329.697 167.556,329.830 166.031 C 329.963 164.506,330.194 163.258,330.343 163.258 C 330.492 163.258,330.724 161.932,330.859 160.312 C 330.994 158.692,331.224 157.366,331.369 157.366 C 331.515 157.366,331.744 156.196,331.878 154.766 C 332.012 153.336,332.250 152.166,332.407 152.166 C 332.565 152.166,332.804 150.841,332.939 149.220 C 333.074 147.600,333.302 146.274,333.445 146.274 C 333.589 146.274,333.823 145.299,333.966 144.107 C 334.109 142.916,334.298 142.136,334.386 142.374 C 334.474 142.613,334.760 142.808,335.020 142.808 C 335.281 142.808,335.619 143.021,335.771 143.282 C 335.924 143.543,336.438 143.874,336.915 144.018 L 337.782 144.280 336.915 143.338 C 336.169 142.526,334.502 141.421,334.023 141.421 C 333.939 141.421,333.763 141.694,333.632 142.028 M272.617 143.154 C 273.189 143.300,274.047 143.419,274.523 143.419 C 275.296 143.419,275.278 143.390,274.350 143.154 C 273.778 143.009,272.920 142.890,272.444 142.890 C 271.671 142.890,271.689 142.918,272.617 143.154 M279.470 144.194 C 279.470 145.052,279.538 145.403,279.621 144.974 C 279.703 144.545,279.703 143.843,279.621 143.414 C 279.538 142.985,279.470 143.336,279.470 144.194 M276.977 143.438 C 276.961 143.710,276.706 143.817,276.343 143.703 C 275.586 143.463,271.800 150.704,270.362 155.142 C 269.715 157.141,268.324 159.792,267.924 159.792 C 267.732 159.792,267.836 160.190,268.154 160.676 L 268.733 161.559 269.850 159.203 C 270.465 157.906,272.405 153.922,274.161 150.348 C 275.918 146.774,277.276 143.655,277.180 143.416 C 277.045 143.081,276.998 143.086,276.977 143.438 M82.614 146.101 C 82.616 147.626,82.677 148.206,82.750 147.391 C 82.823 146.576,82.822 145.328,82.748 144.618 C 82.673 143.908,82.613 144.575,82.614 146.101 M339.038 145.147 C 339.640 145.672,340.590 146.529,341.150 147.054 C 341.710 147.578,342.304 148.007,342.470 148.007 C 342.637 148.007,342.898 148.218,343.050 148.476 C 343.203 148.734,343.668 149.124,344.084 149.342 C 344.500 149.561,344.939 150.051,345.061 150.433 C 345.182 150.814,345.473 151.127,345.708 151.127 C 346.864 151.127,349.658 154.282,349.261 155.138 C 349.048 155.598,348.756 155.975,348.614 155.976 C 348.471 155.978,348.354 156.218,348.354 156.510 C 348.354 156.802,348.129 157.127,347.855 157.232 C 347.580 157.337,347.256 157.879,347.134 158.435 C 347.012 158.991,346.771 159.445,346.600 159.445 C 346.428 159.445,346.189 159.835,346.070 160.312 C 345.950 160.789,345.713 161.179,345.543 161.179 C 345.373 161.179,345.234 161.401,345.234 161.674 C 345.234 161.946,345.021 162.382,344.760 162.643 C 344.499 162.904,344.176 163.461,344.043 163.881 C 343.766 164.755,342.545 164.920,342.240 164.125 C 342.130 163.839,341.847 163.605,341.610 163.605 C 341.374 163.605,340.852 163.332,340.451 162.998 C 338.763 161.595,338.136 161.179,337.711 161.179 C 337.464 161.179,337.262 161.023,337.262 160.832 C 337.262 160.641,336.861 160.485,336.370 160.485 C 335.456 160.485,334.489 161.186,334.489 161.847 C 334.489 162.051,334.320 162.218,334.114 162.218 C 333.859 162.218,333.810 163.023,333.960 164.731 C 334.366 169.325,334.531 180.243,334.195 180.243 C 334.018 180.243,333.770 180.789,333.645 181.456 C 333.520 182.123,333.306 182.669,333.169 182.669 C 332.918 182.669,332.285 183.719,331.864 184.835 C 331.738 185.169,331.488 185.442,331.308 185.442 C 331.129 185.442,331.078 185.598,331.196 185.789 C 331.314 185.979,331.262 186.135,331.081 186.135 C 330.899 186.135,330.653 186.525,330.534 187.002 C 330.414 187.478,330.163 187.868,329.976 187.868 C 329.789 187.868,329.636 188.102,329.636 188.388 C 329.636 188.674,329.480 188.908,329.289 188.908 C 329.099 188.908,328.943 189.131,328.943 189.403 C 328.943 189.676,328.741 190.105,328.495 190.357 C 328.249 190.608,327.846 191.305,327.601 191.905 C 327.356 192.504,326.878 193.293,326.539 193.657 C 325.921 194.320,324.941 196.807,325.197 197.063 C 325.332 197.198,331.289 187.365,332.866 184.402 C 333.323 183.544,334.052 182.218,334.485 181.456 L 335.274 180.069 334.887 171.420 C 334.367 159.785,334.602 159.415,339.942 163.444 C 343.215 165.912,343.730 166.027,344.529 164.469 C 344.821 163.898,345.158 163.354,345.276 163.258 C 345.394 163.163,345.910 162.305,346.421 161.352 C 347.397 159.534,347.496 159.364,349.311 156.407 C 350.560 154.373,350.513 154.002,348.821 152.509 C 343.613 147.917,338.884 144.194,338.257 144.194 C 338.084 144.194,338.436 144.623,339.038 145.147 M209.012 144.649 C 209.012 144.709,209.519 145.216,210.139 145.776 L 211.265 146.794 210.247 145.667 C 209.298 144.617,209.012 144.381,209.012 144.649 M279.133 148.007 C 279.133 149.055,279.198 149.484,279.278 148.960 C 279.357 148.436,279.357 147.578,279.278 147.054 C 279.198 146.529,279.133 146.958,279.133 148.007 M211.468 146.880 C 211.484 147.023,212.147 147.679,212.941 148.338 L 214.385 149.535 213.015 148.078 C 211.605 146.579,211.417 146.433,211.468 146.880 M171.231 147.844 C 169.229 148.284,164.237 149.292,160.139 150.085 C 156.040 150.878,152.589 151.632,152.469 151.760 C 152.350 151.888,152.767 153.475,153.395 155.286 C 154.024 157.097,154.546 158.345,154.556 158.059 C 154.565 157.773,154.132 156.252,153.593 154.679 C 153.054 153.107,152.751 151.820,152.920 151.820 C 153.090 151.820,153.318 152.093,153.428 152.426 C 153.537 152.760,153.844 153.524,154.110 154.125 C 154.375 154.726,154.593 155.450,154.593 155.735 C 154.593 156.019,154.810 156.335,155.076 156.437 C 155.457 156.583,155.521 156.333,155.377 155.261 C 155.277 154.512,155.332 153.898,155.500 153.897 C 155.668 153.895,157.678 153.498,159.965 153.013 C 162.253 152.529,166.620 151.672,169.671 151.109 C 176.508 149.847,176.817 149.762,174.003 149.920 C 172.764 149.989,172.127 149.963,172.587 149.862 C 174.107 149.526,174.885 148.354,173.588 148.354 C 172.623 148.354,173.154 147.827,174.418 147.530 C 175.105 147.368,175.448 147.472,175.708 147.918 C 175.903 148.253,176.067 148.363,176.073 148.163 C 176.084 147.765,175.366 146.944,175.061 147.006 C 174.956 147.028,173.232 147.405,171.231 147.844 M85.742 150.607 C 85.743 152.513,85.801 153.249,85.871 152.241 C 85.941 151.234,85.941 149.674,85.870 148.775 C 85.798 147.876,85.741 148.700,85.742 150.607 M59.417 156.153 C 59.417 159.775,59.468 161.209,59.531 159.341 C 59.593 157.472,59.593 154.508,59.530 152.755 C 59.467 151.001,59.416 152.530,59.417 156.153 M215.006 149.964 C 215.304 150.454,219.411 154.032,219.411 153.803 C 219.411 153.712,218.365 152.722,217.087 151.602 C 215.809 150.483,214.872 149.746,215.006 149.964 M255.286 152.166 C 256.418 153.310,257.422 154.246,257.517 154.246 C 257.613 154.246,256.764 153.310,255.633 152.166 C 254.501 151.023,253.497 150.087,253.401 150.087 C 253.306 150.087,254.154 151.023,255.286 152.166 M82.956 153.726 C 82.958 155.061,83.020 155.564,83.095 154.845 C 83.170 154.126,83.169 153.034,83.092 152.419 C 83.016 151.803,82.954 152.392,82.956 153.726 M351.127 151.582 C 351.127 151.641,351.633 152.148,352.253 152.708 L 353.380 153.726 352.361 152.600 C 351.413 151.550,351.127 151.314,351.127 151.582 M278.782 153.726 C 278.785 154.679,278.852 155.028,278.932 154.501 C 279.011 153.974,279.009 153.195,278.927 152.768 C 278.845 152.342,278.779 152.773,278.782 153.726 M56.271 155.459 C 56.273 156.984,56.334 157.565,56.407 156.750 C 56.480 155.935,56.479 154.687,56.404 153.977 C 56.330 153.267,56.270 153.934,56.271 155.459 M219.777 154.159 C 219.787 154.302,220.294 154.799,220.903 155.264 L 222.010 156.108 220.992 155.004 C 219.933 153.855,219.744 153.724,219.777 154.159 M156.002 154.939 C 156.003 155.225,156.239 155.849,156.526 156.326 L 157.048 157.192 156.818 156.326 C 156.485 155.068,156.000 154.244,156.002 154.939 M354.593 154.701 C 354.593 154.761,355.100 155.268,355.719 155.828 L 356.846 156.846 355.828 155.719 C 354.879 154.669,354.593 154.433,354.593 154.701 M222.184 156.068 C 222.184 156.153,223.159 157.061,224.350 158.087 C 225.542 159.113,226.298 159.677,226.032 159.341 C 225.472 158.636,222.184 155.839,222.184 156.068 M278.447 158.406 C 278.447 159.645,278.510 160.152,278.587 159.532 C 278.664 158.912,278.664 157.899,278.587 157.279 C 278.510 156.659,278.447 157.166,278.447 158.406 M85.953 159.169 C 85.861 160.066,85.914 160.671,86.071 160.515 C 86.228 160.358,86.303 159.625,86.238 158.884 L 86.121 157.539 85.953 159.169 M262.565 159.792 C 263.697 160.936,264.701 161.872,264.796 161.872 C 264.892 161.872,264.044 160.936,262.912 159.792 C 261.780 158.648,260.776 157.712,260.680 157.712 C 260.585 157.712,261.433 158.648,262.565 159.792 M154.988 160.139 C 154.988 160.425,155.122 160.971,155.286 161.352 C 155.474 161.789,155.584 161.853,155.584 161.525 C 155.584 161.239,155.450 160.693,155.286 160.312 C 155.098 159.875,154.988 159.811,154.988 160.139 M278.093 162.912 C 278.093 163.960,278.158 164.389,278.238 163.865 C 278.317 163.341,278.317 162.483,278.238 161.958 C 278.158 161.434,278.093 161.863,278.093 162.912 M230.156 163.020 C 230.156 163.080,230.663 163.587,231.282 164.147 L 232.409 165.165 231.391 164.038 C 230.442 162.988,230.156 162.752,230.156 163.020 M336.350 163.771 C 336.063 164.517,336.296 164.682,336.825 164.108 C 337.098 163.812,337.129 163.564,336.909 163.428 C 336.719 163.310,336.467 163.465,336.350 163.771 M338.302 164.631 C 338.778 165.031,339.480 165.520,339.861 165.718 C 340.334 165.963,340.279 165.847,339.688 165.351 C 339.211 164.952,338.510 164.463,338.128 164.265 C 337.655 164.019,337.710 164.136,338.302 164.631 M360.366 164.585 C 360.050 164.934,359.792 165.342,359.792 165.492 C 359.792 165.641,358.886 167.267,357.779 169.104 C 355.002 173.711,355.042 173.388,357.037 175.058 L 358.752 176.494 358.752 179.928 C 358.752 183.858,357.469 184.476,355.286 181.598 C 355.006 181.229,352.387 179.896,351.943 179.896 C 351.540 179.896,349.606 182.772,347.981 185.789 C 347.519 186.646,347.023 187.400,346.880 187.464 C 346.737 187.527,346.620 187.740,346.620 187.936 C 346.620 188.132,345.804 189.639,344.807 191.286 L 342.994 194.281 343.101 200.867 C 343.492 224.908,343.831 231.196,344.738 231.196 C 345.233 231.196,345.043 227.736,344.529 227.383 C 343.971 227.000,343.982 193.584,344.541 192.970 C 345.604 191.801,345.849 191.435,346.104 190.631 C 346.248 190.178,346.579 189.594,346.839 189.333 C 347.100 189.072,347.314 188.636,347.314 188.363 C 347.314 188.091,347.433 187.868,347.578 187.868 C 347.724 187.868,348.214 187.088,348.666 186.135 C 349.119 185.182,349.611 184.402,349.760 184.402 C 349.909 184.402,350.134 183.934,350.260 183.362 C 350.386 182.790,350.621 182.322,350.784 182.322 C 350.947 182.322,351.183 181.997,351.309 181.600 C 351.545 180.857,353.223 180.899,353.495 181.655 C 353.559 181.831,353.875 181.976,354.198 181.976 C 354.521 181.976,355.036 182.249,355.343 182.582 C 356.892 184.268,358.752 184.977,358.752 183.882 C 358.752 183.596,358.908 183.362,359.099 183.362 C 359.307 183.362,359.445 181.946,359.445 179.806 L 359.445 176.249 358.369 175.386 C 356.126 173.587,355.888 173.104,356.800 172.192 C 357.061 171.931,357.393 171.343,357.539 170.884 C 357.685 170.425,358.017 169.836,358.278 169.575 C 358.539 169.315,358.752 168.878,358.752 168.606 C 358.752 168.334,358.898 168.111,359.075 168.111 C 359.253 168.111,359.508 167.767,359.641 167.347 C 359.774 166.927,360.097 166.370,360.358 166.109 C 360.618 165.848,360.832 165.395,360.832 165.102 C 360.832 164.664,365.405 169.057,366.984 171.012 C 367.487 171.634,367.620 184.749,367.123 184.749 C 366.961 184.749,366.735 186.412,366.620 188.444 C 366.504 190.477,366.268 192.232,366.093 192.344 C 365.919 192.456,365.666 193.601,365.530 194.887 C 365.332 196.759,364.645 198.307,364.645 196.880 C 364.645 196.690,364.401 196.534,364.103 196.534 C 363.246 196.534,359.202 194.478,358.135 193.501 C 357.875 193.263,357.440 193.068,357.168 193.068 C 356.895 193.068,356.672 192.929,356.672 192.759 C 356.672 192.589,356.282 192.352,355.806 192.232 C 355.329 192.112,354.939 191.862,354.939 191.675 C 354.939 191.487,354.393 191.334,353.726 191.334 C 353.059 191.334,352.513 191.490,352.513 191.681 C 352.513 191.872,352.279 192.028,351.993 192.028 C 351.589 192.028,351.473 192.490,351.473 194.107 C 351.473 195.251,351.615 196.187,351.787 196.187 C 351.960 196.187,352.213 197.669,352.349 199.480 C 352.484 201.291,352.716 202.773,352.864 202.773 C 353.012 202.773,353.244 204.177,353.380 205.893 C 353.515 207.608,353.747 209.012,353.895 209.012 C 354.043 209.012,354.275 210.494,354.411 212.305 C 354.546 214.116,354.782 215.598,354.935 215.598 C 355.088 215.598,355.323 217.002,355.459 218.718 C 355.595 220.433,355.829 221.837,355.979 221.837 C 356.129 221.837,356.363 223.241,356.499 224.957 C 356.635 226.672,356.885 228.076,357.056 228.076 C 357.226 228.076,357.366 228.856,357.366 229.809 C 357.366 230.763,357.505 231.542,357.676 231.542 C 357.847 231.542,358.100 232.829,358.238 234.402 C 358.376 235.975,358.607 237.340,358.752 237.435 C 359.502 237.927,359.535 243.369,358.790 243.564 C 358.388 243.669,358.059 243.893,358.059 244.061 C 358.059 244.230,357.825 244.367,357.539 244.367 C 357.253 244.367,357.019 244.523,357.019 244.714 C 357.019 244.905,356.668 245.079,356.239 245.101 C 355.674 245.130,355.623 245.184,356.052 245.297 C 356.571 245.433,358.165 244.896,359.792 244.035 C 360.409 243.708,360.339 241.642,359.588 238.019 C 359.319 236.720,359.099 235.130,359.099 234.487 C 359.099 233.843,358.955 233.228,358.779 233.119 C 358.604 233.010,358.363 231.870,358.244 230.586 C 358.125 229.301,357.874 227.626,357.685 226.863 C 357.497 226.101,357.203 224.463,357.033 223.224 C 356.521 219.500,355.713 214.442,355.483 213.518 C 355.365 213.042,355.120 211.638,354.939 210.399 C 354.759 209.159,354.379 206.742,354.095 205.026 C 353.810 203.310,353.355 200.425,353.084 198.614 C 352.812 196.802,352.481 194.906,352.348 194.400 C 351.640 191.693,354.373 191.547,357.548 194.122 C 358.271 194.708,364.731 197.920,365.186 197.920 C 366.010 197.920,366.880 193.456,367.788 184.575 C 369.037 172.362,368.901 171.721,363.997 166.638 C 361.130 163.666,361.175 163.692,360.366 164.585 M56.618 168.631 C 56.619 170.156,56.680 170.737,56.753 169.922 C 56.827 169.106,56.826 167.858,56.751 167.149 C 56.677 166.439,56.617 167.106,56.618 168.631 M318.203 166.332 C 318.215 166.817,318.760 167.337,319.497 167.568 C 320.292 167.816,320.730 170.884,319.971 170.884 C 319.803 170.884,319.556 172.054,319.422 173.484 C 319.288 174.913,319.036 176.083,318.861 176.083 C 318.687 176.083,318.544 176.707,318.544 177.470 C 318.544 178.886,317.535 179.441,316.620 178.527 C 316.154 178.061,313.345 177.655,313.345 178.053 C 313.345 178.232,314.242 178.636,315.338 178.952 C 318.733 179.928,319.108 179.879,319.345 178.423 C 319.446 177.803,319.794 175.893,320.119 174.177 C 320.443 172.461,320.729 170.147,320.753 169.034 L 320.797 167.010 319.497 166.562 C 318.782 166.315,318.200 166.211,318.203 166.332 M271.231 168.804 C 272.555 170.139,273.716 171.231,273.812 171.231 C 273.907 171.231,272.901 170.139,271.577 168.804 C 270.253 167.470,269.091 166.378,268.996 166.378 C 268.901 166.378,269.906 167.470,271.231 168.804 M336.829 172.270 C 336.927 175.607,337.064 178.401,337.134 178.481 C 337.353 178.729,337.206 172.238,336.922 169.151 C 336.741 167.178,336.710 168.209,336.829 172.270 M277.742 168.284 C 277.745 169.237,277.812 169.586,277.892 169.059 C 277.971 168.532,277.969 167.753,277.887 167.326 C 277.805 166.900,277.740 167.331,277.742 168.284 M367.418 167.526 C 367.418 167.586,367.925 168.093,368.544 168.653 L 369.671 169.671 368.653 168.544 C 367.704 167.494,367.418 167.258,367.418 167.526 M59.730 170.537 C 59.730 171.776,59.793 172.283,59.869 171.664 C 59.946 171.044,59.946 170.030,59.869 169.411 C 59.793 168.791,59.730 169.298,59.730 170.537 M117.618 171.404 C 117.620 172.738,117.682 173.242,117.757 172.523 C 117.832 171.803,117.831 170.712,117.754 170.096 C 117.678 169.481,117.617 170.069,117.618 171.404 M338.544 170.246 C 337.596 171.271,337.576 171.376,337.665 174.885 C 337.716 176.860,337.646 178.588,337.509 178.724 C 337.373 178.860,337.296 181.324,337.338 184.200 L 337.414 189.428 337.521 184.662 C 337.618 180.332,337.685 179.896,338.256 179.896 C 338.943 179.896,339.688 175.471,339.688 171.387 C 339.688 169.755,339.779 169.458,340.226 169.630 C 340.534 169.748,340.674 169.690,340.552 169.493 C 340.194 168.913,339.557 169.152,338.544 170.246 M239.361 171.252 C 240.113 172.122,240.798 172.780,240.884 172.714 C 240.970 172.647,240.355 171.936,239.517 171.132 L 237.993 169.671 239.361 171.252 M197.307 171.924 C 197.307 172.591,197.379 172.864,197.466 172.530 C 197.553 172.197,197.553 171.651,197.466 171.317 C 197.379 170.984,197.307 171.256,197.307 171.924 M277.415 174.177 C 277.416 175.702,277.477 176.283,277.551 175.467 C 277.624 174.652,277.623 173.404,277.548 172.694 C 277.474 171.985,277.414 172.652,277.415 174.177 M200.485 172.757 C 200.382 173.025,200.362 173.766,200.440 174.404 C 200.569 175.458,200.587 175.430,200.638 174.101 L 200.693 172.640 204.593 172.529 L 208.492 172.419 204.582 172.344 C 201.493 172.286,200.632 172.373,200.485 172.757 M220.732 172.876 C 223.651 172.934,228.330 172.934,231.131 172.876 C 233.931 172.818,231.542 172.770,225.823 172.771 C 220.104 172.771,217.813 172.818,220.732 172.876 M56.940 174.697 C 56.940 175.555,57.008 175.906,57.090 175.477 C 57.173 175.048,57.173 174.346,57.090 173.917 C 57.008 173.488,56.940 173.839,56.940 174.697 M60.073 175.563 C 60.075 176.707,60.139 177.133,60.217 176.510 C 60.294 175.887,60.292 174.951,60.213 174.431 C 60.134 173.910,60.071 174.419,60.073 175.563 M274.964 175.390 C 274.964 176.248,275.032 176.599,275.115 176.170 C 275.197 175.741,275.197 175.039,275.115 174.610 C 275.032 174.181,274.964 174.532,274.964 175.390 M197.681 176.256 C 197.683 177.400,197.748 177.826,197.825 177.203 C 197.902 176.580,197.900 175.645,197.821 175.124 C 197.742 174.603,197.679 175.113,197.681 176.256 M347.660 174.458 C 347.660 174.539,348.323 175.042,349.133 175.576 C 349.944 176.110,350.424 176.326,350.200 176.055 C 349.770 175.535,347.660 174.208,347.660 174.458 M339.791 178.856 C 339.784 181.049,339.889 184.012,340.024 185.442 L 340.269 188.042 340.283 185.095 C 340.290 183.475,340.186 180.511,340.050 178.510 L 339.804 174.870 339.791 178.856 M300.173 176.776 C 301.358 177.156,302.270 177.156,301.386 176.776 C 301.005 176.613,300.381 176.483,300.000 176.489 C 299.443 176.497,299.477 176.553,300.173 176.776 M117.945 178.163 C 117.945 179.021,118.013 179.372,118.096 178.943 C 118.178 178.514,118.178 177.812,118.096 177.383 C 118.013 176.954,117.945 177.305,117.945 178.163 M356.776 178.856 C 356.776 179.905,356.841 180.334,356.921 179.809 C 357.000 179.285,357.000 178.427,356.921 177.903 C 356.841 177.379,356.776 177.808,356.776 178.856 M304.159 177.770 C 304.541 177.936,305.399 178.172,306.066 178.293 C 306.899 178.444,307.062 178.418,306.586 178.210 C 306.205 178.043,305.347 177.807,304.679 177.686 C 303.847 177.535,303.684 177.561,304.159 177.770 M200.807 180.416 C 200.809 181.750,200.871 182.254,200.946 181.535 C 201.021 180.816,201.020 179.724,200.943 179.108 C 200.867 178.493,200.805 179.081,200.807 180.416 M277.057 180.069 C 277.059 181.213,277.124 181.639,277.201 181.016 C 277.278 180.393,277.276 179.457,277.197 178.937 C 277.118 178.416,277.055 178.925,277.057 180.069 M57.273 179.549 C 57.273 180.217,57.344 180.490,57.431 180.156 C 57.518 179.822,57.518 179.276,57.431 178.943 C 57.344 178.609,57.273 178.882,57.273 179.549 M307.972 178.856 C 308.354 179.020,308.899 179.154,309.185 179.154 C 309.513 179.154,309.449 179.044,309.012 178.856 C 308.631 178.692,308.085 178.558,307.799 178.558 C 307.471 178.558,307.535 178.668,307.972 178.856 M198.039 181.802 C 198.040 183.328,198.101 183.908,198.175 183.093 C 198.248 182.278,198.247 181.030,198.172 180.320 C 198.098 179.610,198.038 180.277,198.039 181.802 M311.612 179.896 C 312.797 180.276,313.708 180.276,312.825 179.896 C 312.444 179.732,311.820 179.603,311.438 179.608 C 310.881 179.616,310.915 179.673,311.612 179.896 M60.392 180.936 C 60.392 181.603,60.464 181.876,60.551 181.542 C 60.638 181.209,60.638 180.663,60.551 180.329 C 60.464 179.996,60.392 180.269,60.392 180.936 M274.618 181.282 C 274.618 182.140,274.685 182.491,274.768 182.062 C 274.851 181.633,274.851 180.932,274.768 180.503 C 274.685 180.074,274.618 180.425,274.618 181.282 M21.490 181.323 C 20.823 181.912,19.779 182.806,19.170 183.311 C 18.101 184.196,17.776 185.380,18.015 187.522 C 18.112 188.390,18.666 186.790,18.693 185.563 C 18.712 184.703,19.107 184.115,20.553 182.790 C 23.077 180.478,23.887 179.210,21.490 181.323 M314.905 180.772 C 315.667 181.024,316.603 181.227,316.984 181.225 C 317.366 181.222,316.898 181.003,315.945 180.738 C 313.776 180.135,313.043 180.159,314.905 180.772 M303.813 180.936 C 304.194 181.100,304.818 181.229,305.199 181.224 C 305.757 181.215,305.723 181.159,305.026 180.936 C 303.841 180.556,302.930 180.556,303.813 180.936 M369.938 182.322 C 369.938 183.180,370.006 183.531,370.089 183.102 C 370.171 182.673,370.171 181.971,370.089 181.542 C 370.006 181.114,369.938 181.464,369.938 182.322 M319.584 181.629 L 318.718 181.907 319.671 181.941 C 320.195 181.960,320.624 181.820,320.624 181.629 C 320.624 181.438,320.585 181.298,320.537 181.317 C 320.490 181.336,320.061 181.476,319.584 181.629 M118.305 183.536 C 118.307 184.679,118.372 185.106,118.449 184.483 C 118.526 183.860,118.524 182.924,118.445 182.403 C 118.366 181.882,118.303 182.392,118.305 183.536 M307.799 181.976 C 308.984 182.355,309.895 182.355,309.012 181.976 C 308.631 181.812,308.007 181.682,307.626 181.688 C 307.068 181.696,307.102 181.753,307.799 181.976 M15.467 182.856 C 15.349 183.165,15.272 183.991,15.298 184.690 C 15.339 185.826,15.371 185.777,15.594 184.229 C 15.860 182.384,15.819 181.939,15.467 182.856 M57.633 184.055 C 57.633 184.913,57.701 185.264,57.784 184.835 C 57.866 184.406,57.866 183.705,57.784 183.276 C 57.701 182.847,57.633 183.198,57.633 184.055 M311.785 183.016 C 312.166 183.179,312.790 183.309,313.172 183.303 C 313.729 183.295,313.695 183.239,312.998 183.016 C 311.813 182.636,310.902 182.636,311.785 183.016 M60.746 184.922 C 60.750 185.685,60.821 185.956,60.904 185.525 C 60.987 185.093,60.983 184.469,60.897 184.138 C 60.810 183.807,60.742 184.159,60.746 184.922 M274.281 185.442 C 274.281 186.490,274.346 186.919,274.425 186.395 C 274.504 185.871,274.504 185.013,274.425 184.489 C 274.346 183.964,274.281 184.393,274.281 185.442 M315.945 184.055 C 316.981 184.501,317.847 184.501,317.158 184.055 C 316.872 183.871,316.326 183.728,315.945 183.739 L 315.251 183.758 315.945 184.055 M87.435 184.606 C 86.375 185.068,86.312 185.195,86.371 186.743 L 86.433 188.388 86.563 186.742 C 86.669 185.405,86.816 185.095,87.347 185.095 C 87.706 185.095,88.097 184.939,88.215 184.749 C 88.683 183.991,89.050 184.482,89.185 186.049 L 89.326 187.695 89.290 185.989 C 89.250 184.069,89.035 183.909,87.435 184.606 M369.578 185.442 C 369.578 186.109,369.649 186.382,369.736 186.049 C 369.824 185.715,369.824 185.169,369.736 184.835 C 369.649 184.502,369.578 184.775,369.578 185.442 M276.711 186.655 C 276.712 187.799,276.777 188.225,276.854 187.602 C 276.931 186.979,276.930 186.043,276.851 185.522 C 276.772 185.002,276.709 185.511,276.711 186.655 M319.111 184.982 C 319.327 185.140,319.590 185.581,319.695 185.962 C 319.845 186.508,319.872 186.478,319.821 185.816 C 319.786 185.354,319.523 184.913,319.237 184.836 C 318.894 184.743,318.851 184.793,319.111 184.982 M198.390 188.042 C 198.389 189.757,198.447 190.503,198.520 189.699 C 198.593 188.894,198.594 187.490,198.522 186.579 C 198.450 185.668,198.391 186.326,198.390 188.042 M201.144 186.828 C 201.144 187.877,201.209 188.306,201.288 187.782 C 201.368 187.257,201.368 186.399,201.288 185.875 C 201.209 185.351,201.144 185.780,201.144 186.828 M57.966 187.175 C 57.966 187.842,58.037 188.115,58.125 187.782 C 58.212 187.448,58.212 186.902,58.125 186.568 C 58.037 186.235,57.966 186.508,57.966 187.175 M118.625 187.175 C 118.625 187.842,118.696 188.115,118.783 187.782 C 118.870 187.448,118.870 186.902,118.783 186.568 C 118.696 186.235,118.625 186.508,118.625 187.175 M314.324 186.618 C 316.593 187.195,317.005 187.552,316.497 188.502 C 316.288 188.891,316.136 189.804,316.158 190.532 L 316.198 191.854 316.521 190.468 C 317.196 187.569,317.213 187.306,316.754 186.934 C 316.499 186.728,315.433 186.467,314.385 186.355 L 312.478 186.150 314.324 186.618 M61.093 187.695 C 61.096 188.458,61.167 188.729,61.250 188.298 C 61.333 187.866,61.330 187.242,61.243 186.911 C 61.157 186.580,61.089 186.932,61.093 187.695 M307.106 187.348 C 307.106 187.637,307.414 187.868,307.799 187.868 C 308.625 187.868,308.718 187.336,307.944 187.039 C 307.169 186.742,307.106 186.765,307.106 187.348 M39.769 188.401 C 39.057 188.884,38.475 189.352,38.475 189.441 C 38.475 189.717,38.653 189.626,39.861 188.735 C 41.470 187.548,41.683 187.632,41.543 189.395 C 41.476 190.235,41.538 190.849,41.681 190.761 C 41.824 190.673,41.941 189.908,41.941 189.061 C 41.941 187.251,41.609 187.150,39.769 188.401 M86.743 190.121 C 86.746 190.884,86.817 191.155,86.900 190.724 C 86.983 190.293,86.980 189.669,86.893 189.337 C 86.807 189.006,86.739 189.359,86.743 190.121 M273.929 190.468 C 273.932 191.421,273.999 191.770,274.079 191.243 C 274.159 190.716,274.156 189.936,274.074 189.510 C 273.992 189.084,273.927 189.515,273.929 190.468 M201.494 191.161 C 201.496 192.305,201.561 192.731,201.638 192.108 C 201.715 191.485,201.713 190.549,201.634 190.028 C 201.555 189.508,201.492 190.017,201.494 191.161 M34.229 192.040 C 32.179 193.374,30.503 194.550,30.503 194.653 C 30.503 194.886,30.594 194.831,34.749 192.102 C 37.636 190.205,38.472 189.572,38.042 189.609 C 37.994 189.613,36.278 190.707,34.229 192.040 M340.500 192.201 C 340.501 193.726,340.562 194.307,340.636 193.492 C 340.709 192.676,340.708 191.429,340.633 190.719 C 340.559 190.009,340.499 190.676,340.500 192.201 M89.862 191.161 C 89.866 191.924,89.937 192.195,90.020 191.764 C 90.103 191.333,90.100 190.709,90.013 190.377 C 89.926 190.046,89.858 190.399,89.862 191.161 M276.367 193.068 C 276.367 194.307,276.430 194.814,276.507 194.194 C 276.584 193.575,276.584 192.561,276.507 191.941 C 276.430 191.321,276.367 191.828,276.367 193.068 M38.773 192.394 C 37.998 193.069,37.995 193.087,38.716 192.739 C 39.134 192.536,39.572 192.215,39.689 192.026 C 40.030 191.475,39.656 191.625,38.773 192.394 M337.739 195.841 C 337.739 198.033,337.796 198.930,337.864 197.834 C 337.933 196.737,337.933 194.944,337.864 193.847 C 337.796 192.751,337.739 193.648,337.739 195.841 M187.574 195.523 C 181.598 196.992,176.172 198.483,175.516 198.836 C 174.469 199.400,174.279 199.415,173.958 198.959 C 173.665 198.544,173.638 198.579,173.823 199.133 C 174.364 200.756,177.423 210.411,178.051 212.478 C 178.605 214.301,178.885 214.753,179.521 214.846 C 180.147 214.938,180.267 214.831,180.111 214.326 C 175.984 201.012,175.726 199.653,177.325 199.653 C 177.409 199.653,179.309 199.172,181.547 198.585 C 183.784 197.997,187.175 197.133,189.081 196.665 C 193.023 195.698,197.947 194.155,198.393 193.748 C 199.445 192.787,197.226 193.151,187.574 195.523 M87.082 194.454 C 87.082 195.121,87.153 195.394,87.241 195.061 C 87.328 194.727,87.328 194.181,87.241 193.847 C 87.153 193.514,87.082 193.787,87.082 194.454 M33.199 195.937 C 29.163 198.521,29.179 198.440,32.273 200.497 C 33.629 201.398,34.645 201.985,34.532 201.802 C 34.418 201.619,33.389 200.866,32.244 200.128 C 29.646 198.455,29.555 198.755,33.449 196.187 C 36.272 194.326,37.071 193.723,36.655 193.771 C 36.607 193.776,35.052 194.751,33.199 195.937 M315.852 194.801 C 315.852 195.468,315.923 195.741,316.010 195.407 C 316.097 195.074,316.097 194.528,316.010 194.194 C 315.923 193.860,315.852 194.133,315.852 194.801 M28.677 195.680 C 27.367 196.570,26.875 197.197,27.990 196.556 C 28.807 196.086,30.374 194.818,30.150 194.808 C 30.051 194.804,29.388 195.196,28.677 195.680 M273.578 196.534 C 273.578 197.392,273.646 197.743,273.728 197.314 C 273.811 196.885,273.811 196.183,273.728 195.754 C 273.646 195.325,273.578 195.676,273.578 196.534 M59.013 196.707 C 59.017 197.470,59.088 197.741,59.171 197.310 C 59.254 196.878,59.250 196.255,59.164 195.923 C 59.077 195.592,59.009 195.945,59.013 196.707 M201.832 197.054 C 201.835 198.007,201.902 198.356,201.982 197.829 C 202.062 197.302,202.059 196.522,201.977 196.096 C 201.895 195.669,201.830 196.101,201.832 197.054 M317.331 197.227 C 317.198 198.015,317.162 198.733,317.250 198.822 C 317.339 198.911,317.516 198.333,317.643 197.539 C 317.770 196.745,317.806 196.027,317.724 195.944 C 317.641 195.862,317.464 196.439,317.331 197.227 M275.968 197.418 C 275.912 198.764,276.357 199.653,277.085 199.653 C 277.274 199.653,277.173 199.458,276.860 199.220 C 276.548 198.982,276.232 198.163,276.159 197.400 L 276.026 196.014 275.968 197.418 M340.849 199.307 C 340.849 200.927,340.909 201.590,340.982 200.780 C 341.055 199.970,341.055 198.644,340.982 197.834 C 340.909 197.023,340.849 197.686,340.849 199.307 M357.712 196.689 C 357.712 196.785,358.180 197.105,358.752 197.400 C 359.324 197.696,359.792 197.860,359.792 197.765 C 359.792 197.669,359.324 197.349,358.752 197.054 C 358.180 196.758,357.712 196.594,357.712 196.689 M87.447 198.440 C 87.450 199.393,87.517 199.742,87.597 199.215 C 87.677 198.688,87.675 197.909,87.592 197.482 C 87.510 197.056,87.445 197.487,87.447 198.440 M116.310 198.459 C 116.180 199.155,116.142 199.794,116.227 199.878 C 116.312 199.963,116.488 199.463,116.619 198.768 C 116.749 198.072,116.786 197.433,116.702 197.349 C 116.617 197.264,116.441 197.764,116.310 198.459 M90.567 199.480 C 90.570 200.433,90.637 200.782,90.717 200.255 C 90.796 199.728,90.794 198.948,90.712 198.522 C 90.630 198.096,90.564 198.527,90.567 199.480 M360.139 198.079 C 360.139 198.175,360.763 198.571,361.525 198.960 C 362.288 199.349,362.912 199.589,362.912 199.494 C 362.912 199.399,362.288 199.003,361.525 198.614 C 360.763 198.224,360.139 197.984,360.139 198.079 M314.812 199.653 C 314.812 200.321,314.883 200.594,314.970 200.260 C 315.057 199.926,315.057 199.380,314.970 199.047 C 314.883 198.713,314.812 198.986,314.812 199.653 M26.343 199.634 C 27.574 200.674,28.736 201.321,28.190 200.663 C 27.966 200.394,27.264 199.887,26.630 199.538 L 25.477 198.902 26.343 199.634 M273.096 200.271 C 272.982 200.960,273.032 201.283,273.225 201.091 C 273.399 200.916,273.484 200.404,273.413 199.953 C 273.304 199.259,273.255 199.308,273.096 200.271 M297.054 199.613 C 297.054 199.781,298.185 200.086,299.567 200.291 C 302.565 200.734,306.906 201.539,308.231 201.897 C 308.755 202.039,309.457 202.036,309.791 201.891 C 310.457 201.601,309.429 201.304,305.546 200.664 C 304.402 200.476,302.190 200.093,300.631 199.814 C 297.316 199.221,297.054 199.206,297.054 199.613 M147.836 201.025 C 147.574 202.578,147.707 203.116,149.097 206.119 C 149.641 207.295,150.087 208.427,150.087 208.635 C 150.087 208.842,150.216 209.012,150.375 209.012 C 150.534 209.012,150.831 209.558,151.036 210.226 C 151.241 210.893,151.267 211.352,151.094 211.245 C 150.921 211.138,150.780 210.839,150.780 210.580 C 150.780 210.322,150.646 210.058,150.483 209.994 C 150.320 209.931,149.526 208.669,148.718 207.191 C 146.132 202.458,149.335 202.196,123.601 209.252 C 121.140 209.927,118.785 210.500,118.367 210.525 C 117.703 210.566,117.891 210.899,119.852 213.172 C 121.087 214.601,122.428 216.163,122.833 216.642 C 124.333 218.414,130.527 225.521,131.708 226.824 C 134.777 230.210,136.121 231.268,134.085 228.696 C 133.449 227.893,133.124 227.356,133.362 227.503 C 133.601 227.650,133.795 227.617,133.795 227.428 C 133.795 227.240,133.601 226.880,133.362 226.628 C 133.124 226.376,132.055 225.078,130.988 223.744 C 129.920 222.409,127.969 220.147,126.652 218.718 C 123.236 215.009,120.170 211.424,120.321 211.314 C 120.675 211.058,129.502 208.854,133.030 208.141 C 134.110 207.923,134.159 207.956,133.955 208.769 C 133.421 210.900,139.605 213.657,142.369 212.519 C 142.896 212.302,144.838 212.058,146.684 211.978 L 150.041 211.831 151.710 215.281 C 152.951 217.846,153.584 218.785,154.176 218.939 C 155.410 219.262,155.399 219.001,154.052 216.077 C 153.359 214.574,152.591 212.799,152.344 212.132 C 152.096 211.464,151.007 209.053,149.922 206.773 C 148.165 203.079,147.974 202.466,148.173 201.141 C 148.453 199.271,148.150 199.167,147.836 201.025 M280.589 200.347 C 282.056 200.720,283.314 200.720,282.149 200.347 C 281.672 200.194,280.893 200.072,280.416 200.076 C 279.638 200.081,279.655 200.109,280.589 200.347 M51.560 202.101 C 50.273 202.873,49.220 203.592,49.220 203.699 C 49.220 203.805,49.571 203.666,50.000 203.390 C 50.429 203.114,51.521 202.457,52.426 201.931 C 53.821 201.120,54.368 200.687,53.986 200.695 C 53.938 200.696,52.847 201.329,51.560 202.101 M310.919 201.040 C 310.919 201.231,311.231 201.386,311.612 201.386 C 311.993 201.386,312.305 201.231,312.305 201.040 C 312.305 200.849,311.993 200.693,311.612 200.693 C 311.231 200.693,310.919 200.849,310.919 201.040 M87.782 202.253 C 87.786 203.016,87.857 203.287,87.940 202.856 C 88.023 202.424,88.020 201.800,87.933 201.469 C 87.846 201.138,87.779 201.490,87.782 202.253 M15.346 202.773 C 15.346 203.631,15.413 203.982,15.496 203.553 C 15.579 203.124,15.579 202.422,15.496 201.993 C 15.413 201.564,15.346 201.915,15.346 202.773 M314.038 201.756 C 314.038 201.967,313.743 202.033,313.352 201.909 C 312.974 201.789,312.390 201.858,312.052 202.062 C 311.565 202.356,311.756 202.414,312.971 202.343 C 314.252 202.268,315.581 201.386,314.414 201.386 C 314.207 201.386,314.038 201.553,314.038 201.756 M316.291 202.773 C 316.158 203.561,316.122 204.279,316.211 204.368 C 316.299 204.457,316.476 203.879,316.603 203.085 C 316.730 202.291,316.766 201.573,316.684 201.490 C 316.601 201.407,316.424 201.985,316.291 202.773 M90.918 203.466 C 90.918 204.515,90.983 204.944,91.063 204.419 C 91.142 203.895,91.142 203.037,91.063 202.513 C 90.983 201.989,90.918 202.418,90.918 203.466 M202.122 205.393 C 202.145 207.479,202.262 211.357,202.382 214.010 L 202.600 218.835 203.466 218.913 C 203.943 218.955,208.778 219.163,214.211 219.375 C 219.645 219.587,226.508 219.918,229.463 220.111 C 232.418 220.304,238.189 220.621,242.288 220.815 C 246.386 221.010,251.307 221.260,253.221 221.372 L 256.702 221.576 257.961 220.060 C 259.729 217.929,263.438 213.261,266.894 208.813 C 268.513 206.730,270.541 204.253,271.401 203.308 C 272.452 202.153,272.634 201.843,271.957 202.360 C 271.051 203.053,270.892 203.077,270.370 202.605 C 269.578 201.888,204.236 201.799,203.512 202.513 C 203.160 202.860,202.974 202.813,202.576 202.273 C 202.135 201.676,202.084 202.025,202.122 205.393 M30.156 202.220 C 30.156 202.319,31.092 203.036,32.236 203.813 C 34.701 205.487,35.035 205.432,32.669 203.741 C 30.601 202.262,30.156 201.993,30.156 202.220 M115.251 203.120 C 115.120 203.719,115.084 204.281,115.173 204.370 C 115.261 204.458,115.433 204.032,115.555 203.423 C 115.844 201.978,115.564 201.698,115.251 203.120 M291.681 202.426 C 293.147 202.799,294.406 202.799,293.241 202.426 C 292.764 202.274,291.984 202.152,291.508 202.155 C 290.729 202.161,290.747 202.189,291.681 202.426 M338.076 204.853 C 338.076 206.473,338.136 207.136,338.209 206.326 C 338.282 205.516,338.282 204.190,338.209 203.380 C 338.136 202.569,338.076 203.232,338.076 204.853 M269.671 202.787 C 269.671 203.247,268.540 204.859,266.519 207.279 C 265.643 208.328,264.395 209.904,263.746 210.782 C 258.050 218.485,256.392 220.336,255.003 220.542 C 254.396 220.632,248.986 220.418,242.981 220.066 C 236.976 219.715,228.397 219.271,223.917 219.081 C 212.051 218.576,207.978 218.085,207.611 217.118 C 207.452 216.700,207.168 216.264,206.980 216.148 C 206.793 216.032,206.537 215.470,206.412 214.901 C 206.286 214.331,206.071 213.865,205.932 213.865 C 205.793 213.865,205.510 213.436,205.303 212.912 L 204.926 211.958 204.868 212.825 C 204.810 213.679,204.804 213.681,204.501 212.927 C 204.271 212.355,204.003 204.726,204.142 202.686 C 204.171 202.264,269.671 202.364,269.671 202.787 M203.466 204.180 C 203.466 204.799,203.322 205.151,203.120 205.026 C 202.929 204.908,202.773 204.431,202.773 203.966 C 202.773 203.500,202.929 203.120,203.120 203.120 C 203.310 203.120,203.466 203.597,203.466 204.180 M297.054 203.466 C 297.530 203.619,298.310 203.741,298.787 203.737 C 299.565 203.731,299.548 203.704,298.614 203.466 C 297.147 203.093,295.889 203.093,297.054 203.466 M302.426 204.506 C 302.998 204.652,303.856 204.771,304.333 204.771 C 305.106 204.771,305.087 204.742,304.159 204.506 C 303.588 204.361,302.730 204.241,302.253 204.241 C 301.480 204.241,301.499 204.270,302.426 204.506 M341.191 206.932 C 341.191 208.362,341.252 208.947,341.327 208.232 C 341.402 207.517,341.402 206.347,341.327 205.633 C 341.252 204.918,341.191 205.503,341.191 206.932 M307.972 205.546 C 308.544 205.691,309.402 205.811,309.879 205.811 C 310.652 205.811,310.633 205.782,309.705 205.546 C 309.133 205.400,308.276 205.281,307.799 205.281 C 307.026 205.281,307.045 205.310,307.972 205.546 M15.692 206.932 C 15.692 207.790,15.760 208.141,15.843 207.712 C 15.925 207.283,15.925 206.581,15.843 206.153 C 15.760 205.724,15.692 206.075,15.692 206.932 M88.122 206.586 C 88.122 207.253,88.193 207.526,88.281 207.192 C 88.368 206.859,88.368 206.313,88.281 205.979 C 88.193 205.646,88.122 205.919,88.122 206.586 M44.358 206.682 L 43.482 207.446 47.131 209.324 C 49.138 210.357,51.070 211.186,51.426 211.166 C 51.781 211.145,51.977 211.224,51.861 211.339 C 51.492 211.708,52.952 212.486,53.611 212.272 C 54.038 212.134,54.106 212.168,53.818 212.376 C 53.520 212.592,53.964 212.967,55.291 213.618 C 57.499 214.701,57.828 214.613,55.810 213.479 C 55.049 213.051,54.482 212.647,54.548 212.581 C 54.756 212.372,62.045 216.029,62.045 216.342 C 62.045 216.788,61.595 216.700,60.713 216.082 C 60.277 215.777,59.854 215.593,59.773 215.674 C 59.693 215.755,60.249 216.171,61.009 216.598 C 62.329 217.340,62.392 217.346,62.392 216.714 C 62.392 215.610,62.206 215.499,48.686 208.476 C 46.772 207.482,45.265 206.494,45.336 206.281 C 45.515 205.742,45.364 205.804,44.358 206.682 M313.085 206.483 C 313.713 206.642,313.902 207.135,313.411 207.337 C 312.991 207.510,309.784 212.964,308.241 216.131 C 307.494 217.663,305.857 220.627,304.603 222.717 C 303.349 224.806,302.217 227.022,302.088 227.639 C 301.752 229.245,301.199 229.292,295.407 228.208 C 294.788 228.092,294.281 228.140,294.281 228.315 C 294.281 228.489,295.490 228.830,296.967 229.073 C 298.445 229.316,300.127 229.594,300.705 229.691 C 301.737 229.864,301.816 229.769,304.692 224.906 C 306.305 222.177,307.815 219.630,308.045 219.245 C 308.276 218.859,308.575 218.310,308.710 218.024 C 308.844 217.738,309.864 215.978,310.976 214.113 C 312.088 212.247,312.998 210.645,312.998 210.553 C 312.998 210.460,313.394 209.758,313.877 208.992 C 314.361 208.226,314.664 207.450,314.550 207.266 C 314.437 207.083,314.578 206.932,314.864 206.932 C 316.223 206.932,315.498 206.407,314.089 206.371 C 313.203 206.349,312.751 206.399,313.085 206.483 M318.584 206.950 C 318.562 207.436,318.407 207.982,318.240 208.163 C 318.073 208.344,317.549 209.194,317.075 210.052 C 314.587 214.559,311.068 220.771,310.398 221.837 C 309.979 222.504,309.038 224.220,308.306 225.650 C 307.575 227.080,306.613 228.834,306.170 229.549 L 305.364 230.849 306.495 230.829 C 307.442 230.812,307.533 230.745,307.054 230.419 C 306.545 230.073,306.665 229.761,308.142 227.580 C 309.055 226.233,310.620 223.648,311.620 221.837 C 312.621 220.026,313.808 218.001,314.258 217.337 C 314.709 216.673,315.078 216.007,315.078 215.856 C 315.078 215.706,316.014 214.042,317.158 212.160 C 318.302 210.277,319.237 208.564,319.237 208.354 C 319.237 208.144,319.822 207.954,320.537 207.932 C 321.252 207.910,321.525 207.826,321.144 207.745 C 320.763 207.665,320.111 207.527,319.696 207.439 C 319.281 207.351,318.870 207.006,318.783 206.672 C 318.678 206.269,318.611 206.363,318.584 206.950 M114.231 207.818 C 114.100 208.514,114.063 209.152,114.147 209.237 C 114.232 209.322,114.408 208.822,114.539 208.126 C 114.669 207.431,114.707 206.792,114.622 206.708 C 114.537 206.623,114.361 207.123,114.231 207.818 M91.249 208.146 C 91.252 208.908,91.323 209.179,91.406 208.748 C 91.489 208.317,91.486 207.693,91.399 207.362 C 91.313 207.030,91.245 207.383,91.249 208.146 M324.610 208.666 C 326.076 209.039,327.335 209.039,326.170 208.666 C 325.693 208.513,324.913 208.391,324.437 208.394 C 323.658 208.400,323.676 208.428,324.610 208.666 M329.983 209.705 C 330.459 209.858,331.239 209.980,331.716 209.976 C 332.494 209.971,332.477 209.943,331.542 209.705 C 330.076 209.332,328.818 209.332,329.983 209.705 M88.487 211.265 C 88.490 212.218,88.557 212.567,88.637 212.040 C 88.717 211.513,88.714 210.734,88.632 210.307 C 88.550 209.881,88.485 210.312,88.487 211.265 M337.827 210.232 C 337.657 210.676,337.279 210.749,335.964 210.594 C 334.482 210.419,334.442 210.512,335.814 210.945 C 336.122 211.042,335.894 211.464,335.121 212.228 C 331.475 215.828,326.016 222.145,326.302 222.432 C 326.402 222.531,326.296 222.803,326.067 223.034 C 325.837 223.266,325.338 223.889,324.957 224.418 C 324.575 224.947,324.105 225.558,323.912 225.775 C 322.516 227.343,321.346 229.083,321.808 228.906 C 322.110 228.790,322.357 228.593,322.357 228.469 C 322.357 228.344,322.708 227.851,323.137 227.372 C 324.767 225.553,328.506 221.281,329.195 220.451 C 329.590 219.974,330.514 218.875,331.248 218.008 C 331.982 217.141,333.206 215.679,333.969 214.759 C 334.731 213.839,335.628 212.770,335.962 212.383 C 336.295 211.996,336.568 211.547,336.568 211.385 C 336.568 211.224,336.783 211.092,337.046 211.092 C 337.585 211.092,338.497 210.132,338.220 209.855 C 338.122 209.756,337.944 209.926,337.827 210.232 M91.607 211.612 C 91.610 212.565,91.677 212.914,91.757 212.387 C 91.836 211.860,91.834 211.080,91.752 210.654 C 91.670 210.227,91.604 210.659,91.607 211.612 M113.726 210.823 C 113.686 211.912,112.947 212.364,109.606 213.343 C 108.106 213.783,107.566 214.079,107.873 214.293 C 108.178 214.506,108.100 214.545,107.626 214.419 C 107.244 214.318,105.685 214.696,104.159 215.260 C 102.041 216.043,101.714 216.241,102.773 216.098 L 104.159 215.911 102.686 216.631 C 101.876 217.027,101.213 217.472,101.213 217.619 C 101.213 218.243,102.113 219.752,102.486 219.755 C 102.710 219.756,103.360 220.150,103.931 220.630 C 105.334 221.811,108.145 222.279,112.926 222.128 C 117.079 221.997,117.488 221.824,117.499 220.191 C 117.510 218.543,118.144 219.117,126.170 228.034 C 129.300 231.512,129.297 231.489,126.690 232.245 C 125.546 232.577,122.972 233.351,120.971 233.966 C 115.552 235.630,115.995 235.667,112.652 233.259 C 111.031 232.092,109.240 230.664,108.671 230.086 C 104.749 226.098,95.312 218.257,94.916 218.657 C 93.975 219.609,95.226 220.908,104.160 228.250 C 105.088 229.012,106.951 230.572,108.299 231.716 C 109.648 232.860,111.587 234.483,112.609 235.324 L 114.466 236.852 116.245 236.410 C 119.179 235.683,125.530 234.016,127.383 233.488 C 128.336 233.217,129.701 232.895,130.416 232.773 C 132.289 232.453,132.195 232.311,123.412 222.184 C 122.503 221.135,121.023 219.419,120.124 218.371 C 119.224 217.322,118.345 216.503,118.170 216.551 C 117.994 216.599,117.890 216.499,117.938 216.329 C 117.985 216.159,117.166 214.980,116.118 213.709 C 115.069 212.438,114.110 211.056,113.986 210.638 C 113.782 209.952,113.757 209.970,113.726 210.823 M341.211 215.425 C 341.212 218.094,341.266 219.140,341.332 217.749 C 341.398 216.359,341.398 214.175,341.331 212.896 C 341.265 211.618,341.211 212.756,341.211 215.425 M37.385 216.077 C 36.500 217.440,35.436 219.177,35.022 219.936 C 34.607 220.696,33.969 221.785,33.604 222.357 C 33.238 222.929,32.793 223.725,32.615 224.127 C 32.437 224.529,31.740 225.719,31.066 226.772 C 30.393 227.825,29.935 228.780,30.050 228.895 C 30.326 229.171,31.542 227.754,31.542 227.157 C 31.542 226.900,31.688 226.690,31.866 226.690 C 32.044 226.690,32.298 226.346,32.431 225.926 C 32.565 225.506,32.887 224.949,33.148 224.688 C 33.409 224.427,33.622 223.991,33.622 223.719 C 33.622 223.446,33.778 223.224,33.969 223.224 C 34.159 223.224,34.315 223.001,34.315 222.728 C 34.315 222.456,34.529 222.020,34.790 221.759 C 35.050 221.498,35.373 220.941,35.506 220.521 C 35.640 220.101,35.877 219.757,36.034 219.757 C 36.191 219.757,36.418 219.367,36.537 218.891 C 36.657 218.414,36.908 218.024,37.095 218.024 C 37.282 218.024,37.435 217.801,37.435 217.529 C 37.435 217.257,37.639 216.828,37.888 216.576 C 38.137 216.324,38.483 215.806,38.658 215.425 C 38.913 214.869,38.999 215.057,39.091 216.378 C 39.154 217.283,39.345 218.024,39.515 218.024 C 39.684 218.024,39.765 219.259,39.693 220.769 C 39.588 222.974,39.664 223.553,40.082 223.714 C 40.668 223.938,40.426 218.519,39.821 217.868 C 39.652 217.687,39.504 216.907,39.490 216.135 C 39.443 213.418,39.118 213.409,37.385 216.077 M88.829 214.905 C 88.829 215.763,88.897 216.114,88.979 215.685 C 89.062 215.256,89.062 214.554,88.979 214.125 C 88.897 213.696,88.829 214.047,88.829 214.905 M91.954 215.425 C 91.956 216.378,92.023 216.727,92.103 216.200 C 92.183 215.673,92.181 214.893,92.098 214.467 C 92.016 214.040,91.951 214.471,91.954 215.425 M99.653 216.823 C 98.787 217.241,98.758 217.289,99.480 217.112 C 100.462 216.872,101.566 216.310,101.040 216.317 C 100.849 216.320,100.225 216.548,99.653 216.823 M192.028 216.986 C 191.742 217.155,190.907 217.390,190.173 217.508 C 189.438 217.626,188.905 217.790,188.987 217.872 C 189.223 218.108,193.203 217.312,193.570 216.956 C 193.996 216.544,192.733 216.569,192.028 216.986 M96.534 217.838 C 95.195 218.451,95.818 218.460,97.400 217.851 C 98.068 217.594,98.380 217.379,98.094 217.373 C 97.808 217.367,97.106 217.577,96.534 217.838 M174.783 217.930 C 175.498 218.005,176.668 218.005,177.383 217.930 C 178.098 217.855,177.513 217.794,176.083 217.794 C 174.653 217.794,174.068 217.855,174.783 217.930 M181.976 218.891 C 183.558 219.500,184.181 219.491,182.842 218.878 C 182.270 218.616,181.568 218.407,181.282 218.413 C 180.997 218.419,181.308 218.634,181.976 218.891 M166.378 219.931 C 165.901 220.203,165.667 220.426,165.858 220.426 C 166.049 220.426,166.594 220.203,167.071 219.931 C 167.548 219.658,167.782 219.435,167.591 219.435 C 167.400 219.435,166.854 219.658,166.378 219.931 M91.149 221.577 C 93.103 223.632,93.260 224.231,91.445 222.704 C 90.681 222.061,90.013 221.837,88.861 221.837 C 87.814 221.837,87.385 221.712,87.545 221.453 C 87.956 220.788,85.763 221.449,79.376 223.916 C 76.040 225.205,72.491 226.525,71.490 226.849 C 70.490 227.173,69.671 227.556,69.671 227.699 C 69.671 227.936,75.026 231.437,76.256 232.004 C 76.542 232.136,77.198 232.515,77.713 232.846 C 78.228 233.178,81.939 235.449,85.961 237.894 L 93.273 242.338 94.903 241.973 C 96.301 241.660,109.464 238.290,110.369 238.014 C 110.651 237.928,108.043 235.669,96.360 225.879 C 94.549 224.362,92.210 222.325,91.161 221.352 L 89.255 219.584 91.149 221.577 M138.735 220.343 C 139.068 220.430,139.614 220.430,139.948 220.343 C 140.282 220.256,140.009 220.184,139.341 220.184 C 138.674 220.184,138.401 220.256,138.735 220.343 M143.241 220.690 C 143.575 220.777,144.120 220.777,144.454 220.690 C 144.788 220.602,144.515 220.531,143.847 220.531 C 143.180 220.531,142.907 220.602,143.241 220.690 M189.775 223.224 C 190.519 223.986,191.207 224.610,191.302 224.610 C 191.397 224.610,190.866 223.986,190.121 223.224 C 189.377 222.461,188.689 221.837,188.594 221.837 C 188.499 221.837,189.030 222.461,189.775 223.224 M94.882 226.294 C 100.829 231.069,107.106 236.632,107.106 237.127 C 107.106 237.682,104.949 238.429,99.659 239.704 C 93.284 241.241,93.603 241.272,89.697 238.735 C 87.863 237.543,83.464 234.784,79.923 232.603 C 73.973 228.939,72.532 227.735,74.090 227.726 C 74.424 227.725,76.412 227.008,78.510 226.134 C 83.710 223.967,88.437 222.222,89.163 222.201 C 89.494 222.191,92.068 224.033,94.882 226.294 M341.185 224.263 C 341.185 225.503,341.248 226.010,341.325 225.390 C 341.402 224.770,341.402 223.756,341.325 223.137 C 341.248 222.517,341.185 223.024,341.185 224.263 M167.717 223.064 C 168.359 223.342,168.983 223.565,169.104 223.558 C 169.555 223.533,167.571 222.555,167.071 222.556 C 166.785 222.557,167.076 222.785,167.717 223.064 M171.541 224.642 C 172.761 225.204,173.818 225.604,173.890 225.532 C 174.035 225.387,169.939 223.555,169.561 223.596 C 169.431 223.610,170.322 224.081,171.541 224.642 M180.120 225.005 C 178.629 226.326,178.556 226.759,179.722 227.383 C 180.198 227.638,180.526 227.909,180.449 227.985 C 180.323 228.111,179.157 227.642,175.795 226.115 C 173.685 225.157,174.279 225.897,176.499 226.993 C 177.700 227.586,180.343 228.969,182.373 230.067 C 184.402 231.164,186.742 232.429,187.572 232.877 C 188.402 233.325,190.017 234.307,191.161 235.060 C 192.305 235.813,192.795 236.051,192.250 235.589 C 191.620 235.055,191.399 234.663,191.644 234.512 C 192.619 233.909,191.480 228.073,190.122 226.715 C 189.659 226.252,189.601 226.267,189.601 226.851 C 189.601 227.212,189.033 228.028,188.337 228.665 C 187.043 229.851,186.257 229.976,187.293 228.831 C 188.489 227.510,187.610 226.116,185.828 226.508 C 184.491 226.801,182.756 225.923,182.607 224.877 C 182.440 223.707,181.533 223.754,180.120 225.005 M40.821 225.981 C 40.582 226.834,40.725 227.328,41.103 226.951 C 41.213 226.840,41.249 226.385,41.182 225.940 L 41.060 225.130 40.821 225.981 M169.151 226.771 C 169.305 226.919,173.808 228.965,177.123 230.391 C 177.790 230.679,178.180 230.764,177.990 230.580 C 177.588 230.195,171.130 227.247,169.844 226.863 C 169.367 226.720,169.055 226.679,169.151 226.771 M292.288 227.969 C 292.621 228.056,293.167 228.056,293.501 227.969 C 293.834 227.881,293.562 227.810,292.894 227.810 C 292.227 227.810,291.954 227.881,292.288 227.969 M41.335 229.636 C 41.339 230.399,41.410 230.670,41.493 230.239 C 41.576 229.807,41.573 229.184,41.486 228.852 C 41.399 228.521,41.331 228.873,41.335 229.636 M45.098 228.943 C 45.106 229.324,45.327 230.806,45.588 232.236 L 46.063 234.835 45.867 232.062 C 45.693 229.588,45.053 226.997,45.098 228.943 M179.208 229.567 C 179.217 230.248,179.655 230.697,180.913 231.315 C 182.382 232.036,183.176 231.546,182.124 230.567 C 181.184 229.691,179.201 229.011,179.208 229.567 M28.786 230.656 C 28.550 230.940,28.438 231.373,28.536 231.617 C 28.653 231.909,28.724 231.863,28.742 231.485 C 28.757 231.167,28.964 230.837,29.203 230.752 C 29.441 230.667,29.541 230.494,29.425 230.368 C 29.310 230.242,29.022 230.372,28.786 230.656 M193.872 232.236 C 193.872 233.475,193.935 233.982,194.012 233.362 C 194.088 232.743,194.088 231.729,194.012 231.109 C 193.935 230.490,193.872 230.997,193.872 232.236 M135.409 230.936 C 135.497 231.079,135.872 231.196,136.242 231.196 C 136.612 231.196,136.915 231.079,136.915 230.936 C 136.915 230.793,136.540 230.676,136.082 230.676 C 135.623 230.676,135.320 230.793,135.409 230.936 M178.510 230.993 C 178.510 231.098,179.298 231.584,180.263 232.073 C 181.227 232.561,183.060 233.600,184.335 234.380 C 185.611 235.161,187.045 236.030,187.522 236.312 L 188.388 236.824 187.522 236.099 C 186.357 235.125,181.068 231.889,180.641 231.889 C 180.453 231.889,180.248 231.754,180.185 231.588 C 180.054 231.248,178.510 230.699,178.510 230.993 M46.101 231.695 C 46.101 231.970,46.256 232.291,46.447 232.409 C 46.638 232.527,46.794 233.242,46.794 233.998 C 46.794 235.154,46.935 235.426,47.683 235.710 C 49.228 236.298,49.257 236.105,48.007 233.622 C 46.855 231.334,46.101 230.572,46.101 231.695 M187.522 231.716 C 187.990 232.280,187.878 232.351,187.030 232.025 C 186.729 231.910,186.482 231.676,186.482 231.505 C 186.482 231.026,187.043 231.140,187.522 231.716 M41.752 232.380 C 41.776 233.651,42.288 233.899,42.288 232.640 C 42.288 232.036,42.163 231.542,42.012 231.542 C 41.860 231.542,41.743 231.919,41.752 232.380 M311.352 231.781 C 311.685 231.869,312.231 231.869,312.565 231.781 C 312.899 231.694,312.626 231.623,311.958 231.623 C 311.291 231.623,311.018 231.694,311.352 231.781 M341.551 235.529 C 341.552 237.626,341.609 238.439,341.678 237.336 C 341.747 236.233,341.746 234.517,341.676 233.523 C 341.606 232.529,341.550 233.432,341.551 235.529 M316.898 232.821 C 317.231 232.908,317.777 232.908,318.111 232.821 C 318.445 232.734,318.172 232.663,317.504 232.663 C 316.837 232.663,316.564 232.734,316.898 232.821 M40.555 233.795 C 40.555 234.081,40.711 234.315,40.901 234.315 C 41.092 234.315,41.248 234.081,41.248 233.795 C 41.248 233.510,41.092 233.276,40.901 233.276 C 40.711 233.276,40.555 233.510,40.555 233.795 M41.454 235.529 C 40.900 236.005,40.237 236.395,39.981 236.395 C 39.724 236.395,39.515 236.551,39.515 236.742 C 39.515 236.932,39.276 237.088,38.984 237.088 C 38.692 237.088,38.366 237.316,38.259 237.595 C 38.152 237.874,37.742 238.204,37.349 238.329 C 36.743 238.521,35.009 240.072,35.009 240.421 C 35.009 240.695,36.327 240.012,37.435 239.164 C 38.102 238.654,39.545 237.668,40.641 236.973 C 41.737 236.279,42.634 235.475,42.634 235.186 C 42.634 234.511,42.639 234.510,41.454 235.529 M46.112 235.362 C 46.100 235.896,50.595 238.135,54.419 239.502 C 56.916 240.394,55.947 240.392,52.538 239.499 C 51.050 239.110,49.672 238.844,49.477 238.909 C 49.281 238.974,51.522 239.701,54.457 240.523 C 57.391 241.346,61.633 242.565,63.883 243.233 C 66.133 243.901,68.069 244.351,68.187 244.234 C 68.304 244.117,68.229 244.021,68.020 244.021 C 67.810 244.021,66.654 243.566,65.449 243.010 C 64.244 242.454,60.685 241.124,57.539 240.053 C 51.566 238.021,49.231 237.074,49.224 236.683 C 49.222 236.555,48.715 236.339,48.099 236.204 C 47.482 236.068,46.785 235.705,46.550 235.396 C 46.182 234.914,46.121 234.909,46.112 235.362 M188.712 237.052 C 188.841 237.261,189.269 237.604,189.663 237.814 C 190.175 238.089,190.312 238.090,190.144 237.818 C 190.015 237.609,189.587 237.266,189.194 237.056 C 188.681 236.781,188.544 236.780,188.712 237.052 M43.541 238.991 C 42.610 239.635,41.674 240.351,41.461 240.581 C 41.249 240.811,42.063 240.338,43.271 239.530 C 45.427 238.089,45.497 238.069,47.040 238.457 C 47.904 238.675,48.676 238.788,48.756 238.708 C 48.900 238.564,46.044 237.765,45.514 237.801 C 45.360 237.811,44.472 238.347,43.541 238.991 M145.234 241.594 C 145.623 242.357,146.019 242.981,146.115 242.981 C 146.210 242.981,145.970 242.357,145.581 241.594 C 145.192 240.832,144.795 240.208,144.700 240.208 C 144.605 240.208,144.845 240.832,145.234 241.594 M341.887 244.541 C 341.888 246.066,341.949 246.647,342.022 245.831 C 342.095 245.016,342.094 243.768,342.020 243.058 C 341.945 242.349,341.885 243.016,341.887 244.541 M32.796 246.270 C 31.071 247.464,29.818 248.570,30.849 247.989 C 31.735 247.490,34.662 245.350,34.662 245.201 C 34.662 244.986,34.605 245.018,32.796 246.270 M68.409 247.054 C 67.288 248.150,65.904 249.654,65.334 250.397 C 64.764 251.139,63.362 252.752,62.218 253.982 C 61.075 255.212,59.983 256.483,59.792 256.806 C 59.285 257.668,57.699 257.510,52.340 256.067 C 49.766 255.373,44.229 253.929,40.035 252.856 C 35.841 251.783,31.679 250.694,30.787 250.436 C 29.895 250.177,28.803 250.056,28.361 250.166 L 27.556 250.367 28.423 249.602 C 29.268 248.856,29.258 248.857,28.004 249.635 C 27.296 250.074,26.828 250.470,26.964 250.515 C 27.343 250.642,48.670 256.026,51.993 256.834 C 53.614 257.229,55.733 257.782,56.703 258.065 C 59.099 258.763,59.141 258.755,60.409 257.290 C 61.676 255.826,67.371 249.535,69.578 247.159 C 70.385 246.291,71.048 245.464,71.051 245.321 C 71.065 244.699,70.315 245.191,68.409 247.054 M361.352 245.593 C 360.481 246.012,360.453 246.060,361.179 245.885 C 361.655 245.770,362.193 245.538,362.374 245.368 C 362.824 244.949,362.577 245.003,361.352 245.593 M342.195 250.260 C 342.195 250.927,342.266 251.200,342.353 250.867 C 342.441 250.533,342.441 249.987,342.353 249.653 C 342.266 249.320,342.195 249.593,342.195 250.260 M151.127 250.953 C 151.534 251.525,151.945 251.993,152.040 251.993 C 152.136 251.993,151.880 251.525,151.473 250.953 C 151.066 250.381,150.655 249.913,150.559 249.913 C 150.464 249.913,150.719 250.381,151.127 250.953 M194.974 250.607 C 195.355 250.770,195.901 250.904,196.187 250.904 C 196.515 250.904,196.451 250.794,196.014 250.607 C 195.633 250.443,195.087 250.309,194.801 250.309 C 194.473 250.309,194.537 250.419,194.974 250.607 M198.960 251.820 C 200.543 252.429,201.165 252.420,199.827 251.807 C 199.255 251.545,198.553 251.336,198.267 251.342 C 197.981 251.348,198.293 251.563,198.960 251.820 M161.706 255.979 C 163.455 257.682,168.809 262.061,168.167 261.264 C 167.912 260.947,166.586 259.793,165.221 258.700 C 163.855 257.608,162.186 256.237,161.511 255.653 C 160.643 254.904,160.700 254.999,161.706 255.979 M188.562 256.846 C 188.969 257.418,189.380 257.886,189.475 257.886 C 189.571 257.886,189.315 257.418,188.908 256.846 C 188.501 256.274,188.090 255.806,187.994 255.806 C 187.899 255.806,188.154 256.274,188.562 256.846 M190.786 259.619 C 191.294 260.286,192.091 261.612,192.556 262.565 C 193.447 264.392,195.283 267.134,197.990 270.684 C 199.019 272.033,199.542 273.024,199.408 273.373 C 199.084 274.218,200.099 273.749,200.555 272.843 C 200.765 272.426,201.063 271.971,201.217 271.831 C 201.371 271.691,201.378 271.784,201.232 272.036 C 201.017 272.409,201.094 272.416,201.650 272.069 C 202.286 271.672,202.089 271.402,198.799 268.144 C 196.855 266.219,194.479 263.709,193.519 262.565 C 192.559 261.421,191.343 260.017,190.817 259.445 L 189.861 258.406 190.786 259.619 M168.804 261.807 C 168.804 261.903,169.584 262.633,170.537 263.432 C 171.490 264.230,172.270 264.805,172.270 264.709 C 172.270 264.614,171.490 263.883,170.537 263.085 C 169.584 262.287,168.804 261.712,168.804 261.807 M178.867 272.047 C 178.861 272.305,178.466 273.293,177.990 274.242 C 176.866 276.479,176.871 276.512,178.570 278.005 C 179.855 279.134,180.149 279.246,181.197 279.010 C 182.805 278.647,182.794 278.712,181.649 276.402 C 180.305 273.690,178.880 271.460,178.867 272.047 M77.210 274.313 C 75.994 275.235,76.653 277.296,78.163 277.296 C 79.144 277.296,79.723 276.653,79.723 275.563 C 79.723 273.977,78.472 273.355,77.210 274.313 M178.362 276.866 C 177.944 277.284,177.745 276.595,178.015 275.666 L 178.298 274.697 178.430 275.682 C 178.502 276.223,178.472 276.756,178.362 276.866 M102.126 277.322 C 101.082 278.143,100.865 279.861,101.761 280.206 C 103.892 281.023,105.625 279.983,105.168 278.161 C 104.773 276.587,103.505 276.237,102.126 277.322 M113.075 302.793 C 112.147 303.443,112.102 303.929,112.912 304.543 C 114.334 305.623,116.109 304.557,115.594 302.933 C 115.332 302.107,114.148 302.041,113.075 302.793 M59.407 306.791 L 60.328 307.516 59.306 308.679 C 56.449 311.934,55.556 315.525,57.452 316.136 C 58.167 316.366,58.934 316.699,59.156 316.875 C 59.428 317.090,59.610 316.990,59.712 316.570 C 59.796 316.226,59.792 317.114,59.703 318.544 C 59.615 319.974,59.702 321.690,59.898 322.357 C 60.206 323.408,60.228 323.292,60.068 321.483 C 59.815 318.626,60.473 315.740,62.081 312.652 L 63.435 310.052 62.307 309.104 C 61.686 308.582,60.711 307.685,60.139 307.110 C 59.567 306.535,58.961 306.065,58.792 306.066 C 58.623 306.066,58.900 306.392,59.407 306.791 M68.631 314.598 C 68.631 314.916,70.242 316.375,71.098 316.833 C 72.463 317.564,72.066 316.936,70.355 315.658 C 69.407 314.950,68.631 314.473,68.631 314.598 M52.538 316.663 C 52.410 317.171,52.373 317.653,52.455 317.735 C 52.536 317.816,52.707 317.468,52.835 316.960 C 52.962 316.452,53.000 315.969,52.918 315.887 C 52.836 315.806,52.665 316.155,52.538 316.663 M60.403 324.090 C 60.744 325.198,60.989 326.322,60.800 325.910 C 60.450 325.149,57.192 326.193,57.192 327.066 C 57.192 329.429,64.544 334.480,68.983 335.167 C 72.633 335.731,80.696 333.703,79.903 332.420 C 79.775 332.214,79.914 332.157,80.240 332.282 C 80.620 332.428,81.519 331.757,83.117 330.133 C 84.396 328.834,85.559 327.801,85.702 327.837 C 86.325 327.995,85.877 327.530,84.939 327.045 C 83.724 326.417,83.020 326.351,84.134 326.970 L 84.906 327.399 84.237 328.499 C 83.870 329.104,83.132 329.876,82.599 330.216 C 82.066 330.555,81.515 330.993,81.374 331.188 C 81.210 331.417,81.118 331.396,81.114 331.130 C 81.112 330.903,81.266 330.620,81.457 330.502 C 81.662 330.375,81.422 329.784,80.877 329.070 C 79.953 327.858,79.952 327.849,80.581 326.752 L 81.213 325.650 80.208 326.566 C 78.578 328.052,75.512 329.832,73.757 330.312 C 72.267 330.719,71.424 330.710,66.667 330.232 C 66.254 330.190,65.980 330.092,66.058 330.014 C 66.347 329.725,64.803 328.911,64.417 329.150 C 64.180 329.296,64.112 329.245,64.249 329.023 C 64.376 328.817,64.005 328.311,63.425 327.898 C 62.845 327.485,61.891 326.342,61.307 325.359 C 60.722 324.375,60.316 323.804,60.403 324.090 M83.003 332.496 L 81.282 334.315 83.102 332.595 C 84.793 330.997,85.081 330.676,84.822 330.676 C 84.767 330.676,83.949 331.495,83.003 332.496 M71.670 331.270 C 71.149 331.349,70.213 331.351,69.590 331.274 C 68.967 331.197,69.393 331.132,70.537 331.130 C 71.681 331.128,72.191 331.191,71.670 331.270 ",stroke:"none",fill:"#998da4",fillRule:"evenodd"}),/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{id:"path7",d:"M309.377 246.880 C 309.230 247.405,308.984 247.834,308.829 247.834 C 308.674 247.834,308.445 248.302,308.319 248.873 C 308.193 249.445,307.959 249.913,307.799 249.913 C 307.639 249.913,307.405 250.381,307.279 250.953 C 307.153 251.525,306.924 251.993,306.769 251.993 C 306.614 251.993,306.390 252.383,306.270 252.860 C 306.151 253.336,305.912 253.726,305.740 253.726 C 305.568 253.726,305.328 254.181,305.206 254.737 C 305.084 255.293,304.759 255.834,304.485 255.939 C 304.211 256.045,303.986 256.370,303.986 256.662 C 303.986 256.954,303.841 257.192,303.663 257.192 C 303.485 257.192,303.230 257.543,303.096 257.972 C 302.962 258.401,302.757 258.830,302.640 258.925 C 302.181 259.298,300.867 261.343,300.867 261.684 C 300.867 261.883,300.721 262.045,300.543 262.045 C 300.365 262.045,300.130 262.318,300.020 262.652 C 299.910 262.985,299.355 263.804,298.787 264.471 C 297.661 265.794,297.585 265.889,296.431 267.418 C 296.000 267.990,295.300 268.913,294.877 269.470 C 294.454 270.026,293.367 271.243,292.461 272.173 C 291.555 273.102,290.815 273.946,290.815 274.048 C 290.815 274.150,288.932 276.116,286.632 278.416 C 284.331 280.717,282.604 282.695,282.794 282.813 C 282.984 282.930,283.251 284.427,283.388 286.140 C 283.524 287.853,283.760 289.336,283.912 289.436 C 284.064 289.536,284.191 291.408,284.194 293.596 C 284.197 295.783,284.210 298.165,284.224 298.889 C 284.247 300.160,283.633 301.213,282.867 301.213 C 282.663 301.213,282.496 301.447,282.496 301.733 C 282.496 302.019,282.340 302.253,282.149 302.253 C 281.958 302.253,281.802 301.941,281.802 301.560 C 281.802 301.175,281.571 300.867,281.282 300.867 C 280.997 300.867,280.763 300.562,280.763 300.189 C 280.763 299.495,278.776 298.821,278.051 299.269 C 277.870 299.381,277.509 299.201,277.249 298.870 C 276.832 298.337,276.841 298.317,277.328 298.697 C 278.119 299.314,278.176 299.129,278.047 296.365 C 277.950 294.299,277.841 293.917,277.396 294.088 C 277.102 294.200,276.648 294.115,276.386 293.898 C 276.124 293.680,275.910 293.598,275.910 293.715 C 275.910 293.832,275.598 293.660,275.217 293.334 C 274.835 293.007,274.523 292.515,274.523 292.240 C 274.523 291.964,274.419 291.843,274.292 291.971 C 274.164 292.098,273.780 291.949,273.438 291.640 C 272.762 291.028,271.548 291.246,271.955 291.906 C 272.097 292.135,272.054 292.215,271.855 292.092 C 271.663 291.974,271.216 292.088,270.863 292.347 C 270.260 292.788,270.336 292.930,272.076 294.607 C 273.473 295.954,273.834 296.495,273.535 296.794 C 273.316 297.013,273.137 297.863,273.137 298.683 C 273.137 299.503,272.981 300.173,272.790 300.173 C 272.225 300.173,272.395 301.062,273.078 301.679 C 273.426 301.995,273.972 302.253,274.291 302.253 C 274.609 302.253,274.870 302.392,274.870 302.563 C 274.870 302.733,275.139 302.975,275.467 303.101 C 276.290 303.417,276.992 302.375,276.717 301.244 C 276.506 300.373,276.519 300.364,277.186 300.954 C 277.564 301.288,277.944 301.522,278.032 301.474 C 278.119 301.426,277.925 301.634,277.601 301.937 C 277.189 302.322,277.059 302.847,277.171 303.676 C 277.337 304.909,276.599 307.190,276.061 307.103 C 275.449 307.005,275.578 307.641,276.256 308.065 C 276.708 308.347,276.950 308.369,276.950 308.128 C 276.950 307.925,277.095 307.848,277.274 307.958 C 277.452 308.068,277.524 308.662,277.435 309.278 C 277.302 310.200,277.440 310.517,278.212 311.067 C 279.140 311.728,279.148 311.728,278.876 311.067 C 278.724 310.700,278.593 310.204,278.584 309.965 C 278.575 309.727,278.437 309.532,278.278 309.532 C 278.120 309.532,277.990 309.298,277.990 309.012 C 277.990 308.300,278.314 308.360,279.049 309.208 C 279.391 309.602,279.760 309.914,279.870 309.901 C 281.315 309.737,281.595 310.437,280.222 310.781 C 279.707 310.911,279.405 311.186,279.502 311.439 C 279.593 311.678,279.498 312.045,279.289 312.254 C 279.013 312.529,279.164 312.870,279.836 313.493 C 280.345 313.965,280.763 314.593,280.763 314.888 C 280.763 315.183,280.985 315.425,281.257 315.425 C 281.638 315.425,281.743 315.946,281.716 317.706 C 281.691 319.334,281.823 320.078,282.175 320.301 C 282.521 320.520,282.539 320.615,282.236 320.619 C 281.989 320.622,281.802 321.061,281.802 321.639 C 281.802 322.197,281.599 322.860,281.350 323.112 C 281.101 323.364,280.794 323.843,280.667 324.177 C 280.541 324.510,280.141 324.783,279.778 324.783 C 279.416 324.783,278.514 325.412,277.775 326.181 C 276.059 327.963,274.803 328.600,272.520 328.845 C 270.767 329.034,269.767 329.610,270.670 329.912 C 270.981 330.015,270.933 330.239,270.497 330.720 C 270.036 331.230,269.990 331.481,270.303 331.793 C 270.576 332.066,270.711 332.077,270.711 331.826 C 270.711 331.619,271.011 331.371,271.378 331.275 C 271.846 331.153,271.990 331.244,271.861 331.582 C 271.759 331.846,271.459 332.062,271.193 332.062 C 270.928 332.062,270.711 332.202,270.711 332.372 C 270.711 332.552,270.155 332.557,269.388 332.385 C 268.661 332.221,266.995 332.000,265.685 331.892 C 264.376 331.784,263.139 331.566,262.935 331.408 C 262.732 331.250,261.863 331.101,261.005 331.079 L 259.445 331.037 260.659 331.637 C 261.744 332.173,261.790 332.247,261.091 332.347 C 260.662 332.408,260.149 332.758,259.952 333.126 C 259.755 333.494,259.366 333.795,259.087 333.795 C 258.807 333.795,258.579 333.925,258.579 334.084 C 258.579 334.505,257.251 334.340,256.771 333.859 C 256.545 333.634,255.877 333.449,255.286 333.449 C 254.695 333.449,254.040 333.277,253.830 333.068 C 253.367 332.605,250.949 332.559,250.648 333.008 C 250.530 333.185,249.965 333.569,249.393 333.862 C 248.821 334.155,247.886 334.654,247.314 334.971 C 246.055 335.670,241.571 335.409,240.279 334.563 C 239.393 333.982,234.248 334.172,233.475 334.814 C 233.249 335.001,231.781 335.261,230.213 335.392 C 228.644 335.523,227.279 335.763,227.178 335.926 C 227.078 336.089,225.211 336.222,223.030 336.222 C 220.617 336.222,219.064 336.358,219.064 336.568 C 219.064 336.759,219.307 336.915,219.605 336.915 C 219.902 336.915,220.048 337.071,219.931 337.262 C 219.803 337.468,220.216 337.608,220.950 337.608 C 221.629 337.608,222.184 337.452,222.184 337.262 C 222.184 337.054,223.570 336.915,225.650 336.915 C 227.730 336.915,229.116 337.054,229.116 337.262 C 229.116 337.458,230.105 337.608,231.390 337.608 C 232.704 337.608,233.579 337.472,233.464 337.286 C 233.354 337.108,233.423 336.865,233.617 336.745 C 233.810 336.626,233.969 336.714,233.969 336.943 C 233.969 337.240,234.559 337.304,236.049 337.169 C 237.693 337.020,238.128 337.083,238.128 337.468 C 238.128 337.736,238.440 337.955,238.821 337.955 C 239.203 337.955,239.515 337.796,239.515 337.602 C 239.515 337.233,241.142 337.494,241.768 337.964 C 241.958 338.107,242.933 338.334,243.934 338.469 C 246.350 338.793,246.398 339.579,244.021 339.894 C 243.068 340.021,242.288 340.252,242.288 340.409 C 242.288 340.565,241.352 340.799,240.208 340.929 C 239.064 341.058,238.128 341.300,238.128 341.466 C 238.128 341.632,237.426 341.768,236.568 341.768 C 235.711 341.768,235.009 341.924,235.009 342.114 C 235.009 342.305,235.867 342.461,236.915 342.461 C 237.964 342.461,238.821 342.323,238.821 342.155 C 238.821 341.986,239.834 341.740,241.071 341.608 C 242.308 341.475,243.400 341.238,243.498 341.080 C 243.595 340.922,244.455 340.686,245.408 340.555 C 246.361 340.423,247.140 340.158,247.140 339.965 C 247.140 339.763,247.509 339.705,248.007 339.830 C 248.507 339.956,248.873 339.898,248.873 339.695 C 248.873 339.500,249.185 339.341,249.567 339.341 C 249.948 339.341,250.260 339.202,250.260 339.032 C 250.260 338.862,250.635 338.629,251.094 338.514 C 251.553 338.399,252.177 338.209,252.481 338.093 C 252.845 337.953,253.033 338.071,253.033 338.438 C 253.033 338.801,253.335 338.995,253.899 338.995 C 254.376 338.995,254.766 338.839,254.766 338.648 C 254.766 338.458,255.078 338.302,255.459 338.302 C 255.841 338.302,256.153 338.458,256.153 338.648 C 256.153 339.244,256.839 339.029,257.811 338.128 C 258.325 337.652,258.981 337.280,259.269 337.302 C 259.649 337.331,259.626 337.385,259.185 337.501 C 258.259 337.743,258.446 338.648,259.422 338.648 C 260.084 338.648,260.290 338.443,260.376 337.698 C 260.446 337.089,260.705 336.728,261.099 336.693 C 261.529 336.655,261.555 336.688,261.185 336.802 C 260.518 337.009,260.492 337.955,261.153 337.955 C 262.630 337.955,261.339 340.355,259.559 340.920 C 259.133 341.055,258.571 341.379,258.310 341.640 C 258.049 341.901,257.613 342.114,257.341 342.114 C 257.069 342.114,256.846 342.258,256.846 342.433 C 256.846 342.609,256.378 342.855,255.806 342.981 C 255.234 343.107,254.766 343.351,254.766 343.524 C 254.766 343.698,254.142 343.939,253.380 344.061 C 252.617 344.183,251.993 344.412,251.993 344.569 C 251.993 344.727,251.447 344.958,250.780 345.084 C 250.113 345.209,249.567 345.450,249.567 345.619 C 249.567 345.789,249.177 345.927,248.700 345.927 C 248.224 345.927,247.834 346.083,247.834 346.274 C 247.834 346.984,309.413 346.725,309.674 346.014 C 310.092 344.873,310.956 343.501,311.257 343.501 C 311.422 343.501,311.659 343.033,311.785 342.461 C 311.911 341.889,312.129 341.421,312.271 341.421 C 312.564 341.421,314.038 338.593,314.038 338.032 C 314.038 337.830,314.298 337.145,314.617 336.510 C 315.570 334.608,315.672 334.343,315.940 333.091 C 316.082 332.430,316.318 331.733,316.464 331.542 C 316.611 331.352,316.845 330.650,316.984 329.983 C 317.124 329.315,317.358 328.614,317.506 328.423 C 317.653 328.232,317.878 327.218,318.005 326.170 C 318.132 325.121,318.369 323.951,318.531 323.570 C 319.799 320.593,320.311 309.849,319.411 305.143 C 319.125 303.649,318.891 301.763,318.891 300.953 C 318.891 300.143,318.753 299.480,318.585 299.480 C 318.417 299.480,318.169 298.311,318.036 296.883 C 317.902 295.454,317.660 294.204,317.499 294.104 C 317.338 294.005,317.099 293.066,316.968 292.018 C 316.837 290.970,316.601 290.033,316.444 289.935 C 316.287 289.838,316.053 289.058,315.925 288.203 C 315.796 287.347,315.567 286.570,315.415 286.476 C 315.263 286.382,315.033 285.683,314.905 284.922 C 314.776 284.161,314.542 283.460,314.385 283.362 C 314.227 283.265,313.993 282.563,313.865 281.802 C 313.736 281.042,313.489 280.332,313.315 280.224 C 313.141 280.116,312.997 279.765,312.996 279.442 C 312.995 279.120,312.767 278.421,312.489 277.888 C 312.212 277.356,311.899 276.342,311.794 275.635 C 311.652 274.674,311.687 274.525,311.930 275.043 C 312.110 275.425,312.267 276.088,312.281 276.516 C 312.294 276.945,312.454 277.296,312.636 277.296 C 312.818 277.296,313.069 277.842,313.194 278.510 C 313.320 279.177,313.543 279.723,313.691 279.723 C 313.839 279.723,314.065 280.425,314.193 281.282 C 314.322 282.140,314.559 282.842,314.720 282.842 C 314.881 282.842,315.120 283.622,315.251 284.575 C 315.382 285.529,315.626 286.308,315.792 286.308 C 315.958 286.308,316.197 287.088,316.324 288.042 C 316.450 288.995,316.678 289.775,316.831 289.775 C 316.983 289.775,317.215 290.633,317.346 291.681 C 317.477 292.730,317.706 293.588,317.856 293.588 C 318.005 293.588,318.240 294.718,318.377 296.101 C 318.515 297.483,318.758 298.697,318.918 298.798 C 319.078 298.900,319.316 300.304,319.448 301.918 C 319.580 303.532,319.832 304.947,320.009 305.063 C 320.441 305.345,320.439 318.921,320.007 319.198 C 319.824 319.315,319.563 320.620,319.427 322.097 C 319.290 323.575,319.057 324.783,318.910 324.783 C 318.762 324.783,318.550 325.666,318.439 326.744 C 318.328 327.822,318.087 328.797,317.904 328.910 C 317.722 329.024,317.461 329.857,317.326 330.763 C 317.190 331.668,316.950 332.409,316.793 332.409 C 316.636 332.409,316.402 333.111,316.273 333.969 C 316.144 334.827,315.918 335.529,315.770 335.529 C 315.623 335.529,315.399 336.075,315.274 336.742 C 315.149 337.409,314.898 337.955,314.716 337.955 C 314.534 337.955,314.385 338.350,314.385 338.832 C 314.385 339.315,314.160 339.796,313.886 339.901 C 313.612 340.006,313.287 340.547,313.165 341.103 C 313.043 341.659,312.803 342.114,312.631 342.114 C 312.459 342.114,312.223 342.493,312.107 342.956 C 311.991 343.419,311.676 343.882,311.407 343.985 C 311.138 344.088,310.919 344.344,310.919 344.555 C 310.919 344.765,310.685 345.171,310.399 345.457 C 309.320 346.535,309.944 346.620,318.891 346.620 C 325.208 346.620,327.903 346.507,327.903 346.240 C 327.903 345.874,328.448 344.505,329.476 342.288 C 329.742 341.716,330.064 340.780,330.192 340.208 C 330.320 339.636,330.545 339.012,330.693 338.821 C 330.840 338.631,331.070 337.888,331.204 337.171 C 331.338 336.454,331.577 335.788,331.735 335.690 C 331.893 335.592,332.129 334.775,332.259 333.874 C 332.390 332.973,332.633 332.064,332.799 331.854 C 332.966 331.643,333.202 330.513,333.325 329.341 C 333.447 328.169,333.666 327.210,333.811 327.210 C 333.955 327.210,334.174 325.377,334.296 323.137 C 334.419 320.897,334.668 318.793,334.850 318.462 C 335.261 317.717,335.291 312.760,334.887 312.510 C 334.725 312.410,334.482 310.496,334.348 308.257 C 334.215 306.018,333.975 304.024,333.816 303.826 C 333.656 303.628,333.413 302.452,333.276 301.213 C 333.138 299.974,332.906 298.804,332.760 298.614 C 332.614 298.423,332.386 297.370,332.254 296.274 C 332.121 295.178,331.888 294.281,331.735 294.281 C 331.583 294.281,331.356 293.507,331.230 292.562 C 331.105 291.617,330.872 290.762,330.712 290.663 C 330.552 290.564,330.317 289.700,330.190 288.743 C 330.063 287.785,329.808 287.002,329.624 287.002 C 329.440 287.002,329.289 286.646,329.289 286.212 C 329.289 285.778,329.075 285.115,328.814 284.739 C 328.552 284.363,328.226 283.538,328.088 282.906 C 327.950 282.273,327.619 281.337,327.352 280.826 C 327.086 280.314,326.866 279.714,326.865 279.491 C 326.864 279.268,326.642 278.644,326.373 278.104 C 326.103 277.565,325.581 276.421,325.212 275.563 C 324.844 274.705,324.051 272.990,323.450 271.750 C 322.848 270.511,322.353 269.341,322.349 269.151 C 322.337 268.637,318.801 261.646,317.943 260.442 C 317.537 259.870,317.099 258.984,316.970 258.471 C 316.841 257.958,316.601 257.539,316.437 257.539 C 316.273 257.539,315.737 256.720,315.247 255.719 C 314.286 253.756,313.635 252.615,313.320 252.340 C 313.210 252.244,313.008 251.932,312.870 251.646 C 312.732 251.360,312.236 250.503,311.768 249.740 C 311.300 248.977,310.821 248.081,310.704 247.747 C 310.587 247.413,310.365 247.140,310.210 247.140 C 310.056 247.140,309.865 246.867,309.786 246.534 C 309.679 246.081,309.576 246.168,309.377 246.880 M304.232 258.579 C 304.332 258.960,304.534 259.272,304.681 259.272 C 304.828 259.272,305.051 259.818,305.176 260.485 C 305.302 261.153,305.541 261.698,305.707 261.698 C 305.874 261.698,306.114 262.166,306.239 262.738 C 306.365 263.310,306.604 263.778,306.771 263.778 C 306.938 263.778,307.176 264.323,307.301 264.988 C 307.426 265.654,307.667 266.113,307.837 266.008 C 308.007 265.903,308.146 266.047,308.146 266.328 C 308.146 266.610,308.298 266.892,308.484 266.956 C 308.671 267.019,308.885 267.539,308.960 268.111 C 309.035 268.683,309.027 268.956,308.942 268.718 C 308.857 268.479,308.643 268.284,308.467 268.284 C 308.290 268.284,308.146 268.050,308.146 267.764 C 308.146 267.478,307.997 267.244,307.815 267.244 C 307.633 267.244,307.381 266.698,307.256 266.031 C 307.131 265.364,306.902 264.818,306.748 264.818 C 306.594 264.818,306.365 264.350,306.239 263.778 C 306.114 263.206,305.880 262.738,305.719 262.738 C 305.559 262.738,305.325 262.270,305.199 261.698 C 305.074 261.127,304.830 260.659,304.658 260.659 C 304.487 260.659,304.248 260.269,304.128 259.792 C 304.009 259.315,303.772 258.925,303.602 258.925 C 303.432 258.925,303.293 258.692,303.293 258.406 C 303.293 257.639,304.022 257.773,304.232 258.579 M214.924 259.693 C 214.935 259.938,215.679 260.698,216.578 261.381 C 219.668 263.731,222.402 267.181,221.629 267.755 C 219.968 268.988,215.613 270.199,209.185 271.214 C 204.679 271.927,204.248 272.061,203.146 273.101 C 199.773 276.283,191.576 279.711,187.298 279.728 C 185.459 279.735,185.023 280.094,185.156 281.492 C 185.298 282.980,186.155 283.130,189.898 282.326 C 196.799 280.844,202.041 278.167,206.932 273.626 C 208.388 272.274,208.665 272.161,211.092 271.933 C 215.244 271.541,219.719 270.434,222.617 269.082 C 225.514 267.730,225.675 267.544,224.592 266.786 C 224.201 266.512,223.070 265.519,222.079 264.580 C 218.841 261.511,214.885 258.809,214.924 259.693 M310.201 271.169 C 310.222 271.718,310.161 271.735,309.726 271.301 C 309.422 270.997,309.309 270.485,309.438 269.995 C 309.674 269.092,310.149 269.823,310.201 271.169 M311.235 273.830 C 311.252 274.292,311.217 274.292,310.919 273.830 C 310.734 273.544,310.591 272.998,310.602 272.617 L 310.621 271.924 310.919 272.617 C 311.082 272.998,311.225 273.544,311.235 273.830 M276.745 287.631 C 276.225 288.066,276.096 288.428,276.288 288.919 C 276.434 289.294,276.565 290.498,276.579 291.594 C 276.598 293.152,276.720 293.588,277.140 293.588 C 277.578 293.588,277.657 293.190,277.573 291.421 C 277.506 290.026,277.328 289.281,277.072 289.330 C 276.626 289.413,276.840 288.137,277.389 287.435 C 277.858 286.835,277.604 286.912,276.745 287.631 M310.561 295.407 C 310.567 295.550,310.338 295.667,310.052 295.667 C 309.719 295.667,309.532 295.333,309.532 294.734 C 309.532 293.838,310.522 294.485,310.561 295.407 M267.591 294.949 C 267.591 295.125,267.318 295.341,266.984 295.428 C 266.407 295.579,266.407 295.589,266.984 295.627 C 267.318 295.649,267.591 295.901,267.591 296.187 C 267.591 296.473,267.807 296.707,268.070 296.707 C 268.334 296.707,268.632 297.019,268.731 297.400 C 268.831 297.782,269.200 298.091,269.552 298.088 C 269.914 298.085,270.040 297.970,269.844 297.823 C 268.784 297.027,267.442 295.243,268.198 295.635 C 268.831 295.962,268.977 295.945,268.977 295.543 C 268.977 295.271,268.731 294.953,268.429 294.838 C 267.697 294.557,267.591 294.571,267.591 294.949 M278.920 295.546 C 278.479 295.987,278.679 297.054,279.203 297.054 C 279.489 297.054,279.723 297.210,279.723 297.400 C 279.723 297.591,279.957 297.747,280.243 297.747 C 280.593 297.747,280.763 297.396,280.763 296.670 C 280.763 295.897,280.628 295.645,280.285 295.776 C 280.022 295.877,279.661 295.813,279.482 295.634 C 279.303 295.455,279.050 295.416,278.920 295.546 M305.373 297.553 C 305.373 297.828,305.217 298.149,305.026 298.267 C 304.835 298.385,304.679 298.160,304.679 297.767 C 304.679 297.375,304.835 297.054,305.026 297.054 C 305.217 297.054,305.373 297.278,305.373 297.553 M308.521 297.400 C 308.696 297.400,308.839 297.777,308.839 298.238 C 308.839 298.699,309.034 299.165,309.272 299.275 C 309.510 299.384,309.315 299.381,308.839 299.269 C 307.886 299.043,307.106 298.233,307.106 297.470 C 307.106 297.165,307.313 297.059,307.654 297.190 C 307.956 297.306,308.346 297.400,308.521 297.400 M271.201 298.835 C 271.044 299.088,271.100 299.148,271.350 298.993 C 271.570 298.857,271.750 298.911,271.750 299.113 C 271.750 299.315,271.516 299.480,271.231 299.480 C 270.945 299.480,270.711 299.315,270.711 299.113 C 270.711 298.911,270.545 298.848,270.343 298.973 C 270.111 299.116,270.207 299.375,270.603 299.676 C 270.976 299.959,271.055 300.156,270.797 300.162 C 270.559 300.168,270.364 300.324,270.364 300.509 C 270.364 300.694,270.572 300.765,270.826 300.667 C 271.080 300.570,271.296 300.692,271.305 300.938 C 271.314 301.185,271.434 301.659,271.573 301.993 C 271.724 302.357,271.671 302.600,271.441 302.600 C 271.230 302.600,271.057 302.850,271.057 303.157 C 271.057 303.529,271.244 303.642,271.621 303.497 C 271.931 303.378,272.399 303.459,272.661 303.676 C 273.009 303.965,273.137 303.967,273.137 303.682 C 273.137 303.468,272.972 303.293,272.770 303.293 C 272.568 303.293,272.514 303.113,272.650 302.893 C 272.803 302.645,272.745 302.587,272.497 302.740 C 272.135 302.964,271.914 302.294,272.068 301.437 C 272.097 301.274,271.921 300.897,271.676 300.600 C 271.322 300.172,271.320 300.030,271.664 299.915 C 272.170 299.744,272.242 298.917,271.774 298.628 C 271.597 298.519,271.339 298.612,271.201 298.835 M312.638 299.892 C 313.027 300.310,313.345 301.123,313.345 301.702 L 313.345 302.754 312.325 301.637 C 311.312 300.528,310.432 300.036,311.272 301.048 C 311.785 301.666,311.432 302.212,310.878 301.658 C 310.375 301.155,310.836 299.133,311.453 299.133 C 311.716 299.133,312.249 299.475,312.638 299.892 M264.137 300.934 C 264.430 301.183,264.614 301.659,264.545 301.993 C 264.372 302.836,264.696 302.757,264.920 301.902 C 265.046 301.417,264.874 301.094,264.353 300.843 C 263.719 300.537,263.686 300.550,264.137 300.934 M267.851 302.145 C 266.965 302.377,267.098 302.830,268.465 304.238 C 269.436 305.238,269.774 305.407,270.112 305.064 C 270.448 304.723,270.422 304.547,269.987 304.223 C 269.684 303.997,269.502 303.619,269.581 303.383 C 269.707 303.010,268.878 301.835,268.569 301.947 C 268.508 301.969,268.185 302.058,267.851 302.145 M291.508 302.513 C 291.603 302.613,291.486 302.764,291.248 302.849 C 290.959 302.953,290.815 303.789,290.815 305.361 C 290.815 307.481,290.740 307.738,290.070 307.913 C 288.135 308.419,285.962 307.139,285.962 305.493 C 285.962 305.045,285.806 304.679,285.615 304.679 C 285.425 304.679,285.269 305.147,285.269 305.719 C 285.269 306.489,285.111 306.752,284.662 306.732 C 284.276 306.714,284.218 306.639,284.503 306.525 C 284.835 306.391,284.852 306.226,284.567 305.883 C 284.356 305.629,284.171 304.903,284.156 304.270 C 284.140 303.637,283.956 303.003,283.745 302.860 C 282.909 302.292,284.317 302.059,287.769 302.192 C 289.730 302.268,291.412 302.413,291.508 302.513 M273.137 302.731 C 273.137 302.802,273.371 303.056,273.657 303.293 C 274.083 303.646,274.177 303.623,274.177 303.162 C 274.177 302.853,273.943 302.600,273.657 302.600 C 273.371 302.600,273.137 302.659,273.137 302.731 M283.507 303.515 C 283.586 303.583,283.244 303.640,282.747 303.640 C 282.250 303.640,281.743 303.477,281.621 303.279 C 281.419 302.953,283.098 303.163,283.507 303.515 M287.348 304.679 C 287.348 305.219,287.579 305.373,288.388 305.373 C 289.197 305.373,289.428 305.219,289.428 304.679 C 289.428 304.140,289.197 303.986,288.388 303.986 C 287.579 303.986,287.348 304.140,287.348 304.679 M273.830 305.146 C 273.830 305.593,274.169 306.256,274.582 306.619 C 275.293 307.243,275.321 307.244,275.102 306.644 C 274.974 306.295,274.870 305.935,274.870 305.844 C 274.870 305.753,274.714 305.775,274.523 305.893 C 274.333 306.010,274.177 305.942,274.177 305.740 C 274.177 305.538,274.328 305.373,274.513 305.373 C 274.697 305.373,274.758 305.139,274.649 304.853 C 274.342 304.053,273.830 304.236,273.830 305.146 M266.779 306.221 C 266.674 306.495,266.678 307.273,266.788 307.949 C 266.910 308.704,266.820 309.382,266.554 309.702 C 266.188 310.143,266.249 310.230,266.942 310.253 C 267.394 310.268,267.569 310.359,267.331 310.455 C 267.093 310.551,266.898 310.806,266.898 311.022 C 266.898 311.242,267.146 311.165,267.465 310.846 C 267.843 310.468,267.940 310.068,267.755 309.646 C 267.354 308.731,267.337 308.370,267.673 307.916 C 267.845 307.684,267.824 307.423,267.623 307.299 C 267.431 307.180,267.356 306.870,267.456 306.610 C 267.556 306.349,267.488 306.043,267.304 305.930 C 267.121 305.816,266.884 305.947,266.779 306.221 M271.608 306.586 C 271.742 307.120,271.678 307.452,271.441 307.452 C 270.875 307.452,270.974 309.053,271.577 309.656 C 271.863 309.942,272.097 310.308,272.097 310.470 C 272.097 310.944,273.400 311.924,274.345 312.161 C 275.034 312.334,275.217 312.598,275.217 313.420 C 275.217 314.193,275.086 314.409,274.705 314.263 C 274.284 314.101,274.231 314.338,274.406 315.612 C 274.549 316.659,274.491 317.158,274.224 317.158 C 274.007 317.158,273.830 316.991,273.830 316.788 C 273.830 316.575,273.535 316.512,273.137 316.638 C 272.387 316.876,272.164 316.306,272.877 315.973 C 273.207 315.820,273.211 315.724,272.896 315.576 C 272.669 315.468,272.575 315.138,272.689 314.842 C 272.892 314.313,272.520 314.342,270.797 314.989 C 270.162 315.228,270.269 314.704,270.957 314.201 C 271.430 313.855,271.466 313.664,271.134 313.264 C 270.904 312.987,270.819 312.659,270.945 312.533 C 271.070 312.408,270.972 312.305,270.726 312.305 C 270.365 312.305,270.363 312.204,270.718 311.777 C 270.959 311.486,271.056 311.148,270.933 311.026 C 270.811 310.903,270.711 310.994,270.711 311.228 C 270.711 311.462,270.566 311.563,270.389 311.454 C 270.212 311.345,269.968 311.569,269.846 311.953 C 269.724 312.337,269.459 312.652,269.258 312.652 C 269.046 312.652,269.092 312.894,269.368 313.232 C 269.792 313.748,269.759 313.790,269.064 313.611 C 268.501 313.466,268.284 313.561,268.284 313.955 C 268.284 314.255,268.386 314.399,268.510 314.274 C 268.758 314.027,269.434 315.177,269.749 316.380 C 269.889 316.916,269.652 317.479,268.949 318.277 C 268.399 318.900,267.946 319.582,267.943 319.791 C 267.926 320.980,265.336 322.743,263.518 322.804 C 262.817 322.827,262.392 323.019,262.392 323.313 C 262.392 323.572,262.537 323.695,262.714 323.585 C 262.892 323.475,263.124 323.526,263.230 323.698 C 263.337 323.871,263.098 324.097,262.700 324.201 C 262.301 324.305,262.078 324.557,262.204 324.760 C 262.330 324.964,262.189 325.130,261.892 325.130 C 261.045 325.130,261.260 325.725,262.171 325.899 C 262.830 326.025,262.958 325.931,262.824 325.419 C 262.679 324.866,262.900 324.775,264.518 324.716 C 265.541 324.679,266.832 324.631,267.387 324.610 C 268.101 324.584,268.426 324.378,268.495 323.908 C 268.548 323.542,268.810 323.082,269.075 322.886 C 269.341 322.691,269.649 322.296,269.760 322.010 C 269.925 321.586,269.968 321.599,269.990 322.080 C 270.005 322.404,269.761 322.812,269.449 322.987 C 269.136 323.162,268.991 323.485,269.126 323.704 C 269.261 323.922,269.517 324.012,269.695 323.902 C 270.258 323.554,270.043 324.064,269.324 324.783 C 268.943 325.165,268.489 325.477,268.317 325.477 C 268.144 325.477,268.084 325.789,268.184 326.170 C 268.324 326.706,268.194 326.863,267.611 326.863 C 267.196 326.863,266.953 327.019,267.071 327.210 C 267.189 327.400,267.077 327.556,266.822 327.556 C 266.328 327.556,265.395 328.549,265.251 329.227 C 265.127 329.814,265.557 329.720,266.551 328.943 C 267.613 328.112,269.402 327.991,269.103 328.769 C 268.670 329.897,269.967 329.228,270.536 328.031 C 270.983 327.088,271.208 326.892,271.432 327.251 C 271.781 327.810,273.027 327.205,272.877 326.549 C 272.757 326.024,273.384 326.071,273.606 326.603 C 273.733 326.908,273.951 326.832,274.342 326.345 C 274.785 325.793,274.956 325.748,275.187 326.122 C 275.389 326.449,275.548 326.474,275.714 326.207 C 275.844 325.996,276.254 325.823,276.624 325.823 C 277.002 325.823,277.296 325.587,277.296 325.283 C 277.296 324.963,277.459 324.843,277.697 324.990 C 277.953 325.148,278.002 325.084,277.834 324.813 C 277.672 324.551,277.998 324.008,278.688 323.392 C 279.548 322.625,279.844 322.032,279.982 320.809 C 280.081 319.936,280.297 319.138,280.462 319.036 C 280.943 318.739,280.809 317.500,280.274 317.295 C 280.005 317.192,279.690 316.729,279.574 316.266 C 279.351 315.378,278.515 315.126,278.219 315.858 C 278.123 316.096,278.032 315.871,278.017 315.358 C 278.002 314.845,278.162 314.319,278.373 314.189 C 278.645 314.021,278.628 313.872,278.317 313.680 C 277.975 313.468,278.005 313.280,278.453 312.832 C 279.187 312.098,279.180 311.900,278.423 311.977 C 277.056 312.116,276.603 311.938,276.603 311.265 C 276.603 310.350,276.042 310.375,275.800 311.301 C 275.638 311.921,275.534 311.959,275.101 311.560 C 274.656 311.151,274.655 311.077,275.097 310.976 C 275.484 310.887,275.423 310.705,274.836 310.196 C 274.415 309.831,274.184 309.532,274.322 309.532 C 274.461 309.532,274.250 309.121,273.855 308.619 C 273.460 308.116,273.137 307.517,273.137 307.286 C 273.137 306.850,272.049 305.719,271.630 305.719 C 271.498 305.719,271.488 306.109,271.608 306.586 M244.714 308.015 L 243.847 308.521 244.714 308.290 C 245.679 308.033,245.940 307.869,245.724 307.654 C 245.645 307.574,245.190 307.737,244.714 308.015 M273.137 307.930 C 273.137 308.002,272.903 308.255,272.617 308.492 C 272.191 308.846,272.097 308.822,272.097 308.361 C 272.097 308.052,272.331 307.799,272.617 307.799 C 272.903 307.799,273.137 307.858,273.137 307.930 M123.259 309.937 C 123.391 310.953,123.613 311.863,123.753 311.958 C 123.892 312.054,124.122 312.983,124.264 314.024 C 124.406 315.065,124.640 316.157,124.785 316.451 C 125.426 317.748,125.799 318.802,126.016 319.931 C 126.145 320.598,126.370 321.300,126.516 321.490 C 126.663 321.681,126.894 322.355,127.029 322.987 C 127.164 323.619,127.493 324.555,127.760 325.067 C 128.027 325.578,128.246 326.194,128.247 326.435 C 128.250 326.878,128.365 327.158,129.404 329.231 C 129.722 329.866,129.983 330.554,129.983 330.759 C 129.983 331.330,132.496 336.222,132.790 336.222 C 132.931 336.222,133.150 336.690,133.276 337.262 C 133.401 337.834,133.637 338.302,133.799 338.302 C 133.961 338.302,134.444 339.003,134.872 339.861 C 135.301 340.719,135.780 341.421,135.937 341.421 C 136.094 341.421,136.222 341.583,136.222 341.782 C 136.222 342.192,137.647 344.308,138.042 344.483 C 138.185 344.547,138.302 344.795,138.302 345.036 C 138.302 346.426,139.316 346.620,146.561 346.620 C 154.137 346.620,154.209 346.598,152.340 344.782 C 151.672 344.134,151.127 343.491,151.127 343.353 C 151.127 343.214,150.659 342.633,150.087 342.061 C 149.515 341.489,149.047 340.870,149.047 340.685 C 149.047 340.500,148.684 340.005,148.241 339.585 C 147.798 339.165,147.335 338.549,147.212 338.215 C 147.089 337.881,146.845 337.608,146.669 337.608 C 146.493 337.608,146.251 337.218,146.131 336.742 C 146.012 336.265,145.761 335.875,145.574 335.875 C 145.387 335.875,145.234 335.636,145.234 335.344 C 145.234 335.052,145.010 334.727,144.735 334.622 C 144.461 334.517,144.137 333.976,144.014 333.420 C 143.892 332.864,143.652 332.409,143.480 332.409 C 143.308 332.409,143.070 332.019,142.950 331.542 C 142.830 331.066,142.593 330.676,142.423 330.676 C 142.253 330.676,142.114 330.453,142.114 330.181 C 142.114 329.908,141.888 329.459,141.612 329.183 C 141.335 328.906,141.046 328.310,140.969 327.858 C 140.892 327.406,140.896 327.231,140.977 327.470 C 141.059 327.708,141.253 327.903,141.409 327.903 C 141.565 327.903,141.790 328.293,141.910 328.769 C 142.030 329.246,142.268 329.636,142.440 329.636 C 142.612 329.636,142.855 330.104,142.981 330.676 C 143.107 331.248,143.350 331.716,143.522 331.716 C 143.694 331.716,143.932 332.106,144.052 332.582 C 144.171 333.059,144.408 333.449,144.578 333.449 C 144.748 333.449,144.887 333.688,144.887 333.980 C 144.887 334.272,145.107 334.595,145.376 334.698 C 145.645 334.801,145.960 335.264,146.076 335.727 C 146.192 336.190,146.440 336.568,146.627 336.568 C 146.814 336.568,146.967 336.807,146.967 337.099 C 146.967 337.391,147.201 337.720,147.487 337.830 C 147.773 337.939,148.007 338.248,148.007 338.515 C 148.007 338.783,148.319 339.269,148.700 339.595 C 149.081 339.922,149.393 340.322,149.393 340.485 C 149.393 340.648,149.861 341.249,150.433 341.821 C 151.005 342.393,151.473 342.996,151.473 343.161 C 151.473 343.325,152.166 344.162,153.012 345.021 L 154.551 346.582 161.716 346.605 C 168.136 346.626,168.859 346.571,168.670 346.076 C 168.553 345.773,168.458 345.459,168.458 345.379 C 168.458 345.299,168.222 345.234,167.934 345.234 C 167.646 345.234,167.144 344.922,166.817 344.541 C 166.491 344.159,166.092 343.847,165.932 343.847 C 165.330 343.847,157.713 336.356,157.712 335.764 C 157.712 335.608,157.088 334.740,156.326 333.835 C 155.563 332.931,154.939 332.068,154.939 331.917 C 154.939 331.766,154.471 331.051,153.899 330.329 C 153.328 329.607,152.860 328.911,152.860 328.783 C 152.860 328.655,152.448 328.010,151.944 327.350 C 151.441 326.690,150.778 325.659,150.471 325.059 C 150.164 324.459,149.601 323.801,149.220 323.596 C 148.839 323.391,148.453 323.176,148.364 323.118 C 148.274 323.060,148.397 322.891,148.637 322.743 C 148.978 322.532,148.985 322.251,148.672 321.462 C 148.451 320.905,148.199 320.645,148.110 320.884 C 147.830 321.638,147.377 321.354,147.140 320.277 C 147.015 319.705,146.788 319.237,146.637 319.237 C 146.486 319.237,146.263 318.615,146.141 317.854 C 145.934 316.561,145.831 316.457,144.537 316.250 C 143.777 316.129,143.154 315.913,143.154 315.772 C 143.154 315.630,142.386 315.412,141.447 315.287 C 140.508 315.163,139.650 314.870,139.541 314.636 C 139.384 314.303,139.298 314.304,139.140 314.642 C 138.987 314.970,138.817 314.950,138.422 314.555 C 138.138 314.271,137.605 314.038,137.237 314.038 C 136.869 314.038,136.568 313.882,136.568 313.692 C 136.568 313.501,136.218 313.344,135.789 313.343 C 135.360 313.342,134.590 313.122,134.079 312.855 C 133.567 312.589,132.672 312.266,132.090 312.138 C 131.507 312.010,130.941 311.761,130.833 311.585 C 130.724 311.409,130.249 311.265,129.778 311.265 C 129.307 311.265,128.831 311.031,128.722 310.745 C 128.612 310.459,128.310 310.225,128.051 310.225 C 127.539 310.225,125.065 309.145,124.783 308.799 C 123.795 307.583,123.028 308.155,123.259 309.937 M241.594 309.404 C 240.737 309.865,240.269 310.171,240.555 310.083 C 242.840 309.382,243.674 309.035,243.674 308.784 C 243.674 308.365,243.347 308.462,241.594 309.404 M290.815 310.295 C 290.815 311.009,290.695 311.284,290.479 311.069 C 290.295 310.884,290.235 310.385,290.346 309.959 C 290.632 308.868,290.815 308.998,290.815 310.295 M238.511 310.601 C 238.055 310.784,237.768 311.020,237.874 311.126 C 237.980 311.233,238.510 311.079,239.051 310.786 C 240.140 310.196,239.808 310.083,238.511 310.601 M295.064 311.102 C 296.070 311.354,296.373 311.958,295.494 311.958 C 294.657 311.958,294.894 312.971,295.987 314.065 C 297.268 315.345,297.675 315.342,297.812 314.048 C 297.898 313.230,298.028 313.084,298.440 313.342 C 299.037 313.714,299.031 317.937,298.434 318.140 C 298.247 318.203,298.075 318.593,298.053 319.006 C 298.022 319.561,297.950 319.486,297.775 318.718 C 297.580 317.856,297.461 318.167,297.081 320.537 C 296.829 322.110,296.517 323.397,296.388 323.397 C 295.992 323.397,295.261 325.793,295.526 326.221 C 295.680 326.471,295.623 326.530,295.374 326.376 C 295.154 326.240,294.974 326.294,294.974 326.496 C 294.974 326.698,295.130 326.863,295.321 326.863 C 295.511 326.863,295.667 327.097,295.667 327.383 C 295.667 327.669,295.511 327.903,295.321 327.903 C 295.130 327.903,294.974 328.113,294.974 328.370 C 294.974 329.489,293.560 330.503,291.999 330.503 C 290.308 330.503,289.988 330.178,291.343 329.838 C 291.825 329.717,292.523 329.314,292.894 328.943 C 293.266 328.571,293.669 327.873,293.790 327.392 C 293.910 326.910,294.131 326.516,294.279 326.516 C 294.427 326.516,294.654 325.815,294.783 324.957 C 294.911 324.099,295.180 323.397,295.379 323.397 C 295.594 323.397,295.653 323.041,295.525 322.530 C 295.399 322.031,295.457 321.664,295.661 321.664 C 295.855 321.664,296.014 321.352,296.014 320.971 C 296.014 320.589,296.157 320.277,296.333 320.277 C 297.235 320.277,297.162 315.713,296.248 314.954 C 294.376 313.400,293.779 312.998,293.344 312.998 C 293.097 312.998,292.894 312.842,292.894 312.652 C 292.894 312.461,293.148 312.305,293.458 312.305 C 293.906 312.305,293.977 312.076,293.805 311.179 C 293.686 310.559,293.707 310.235,293.851 310.458 C 293.996 310.681,294.542 310.971,295.064 311.102 M282.149 311.406 C 282.149 312.069,282.007 312.203,281.456 312.059 C 280.710 311.864,280.476 312.489,281.196 312.752 C 281.434 312.839,281.224 312.891,280.729 312.868 C 279.654 312.817,279.803 311.223,280.898 311.062 C 281.240 311.012,281.609 310.881,281.719 310.771 C 282.065 310.425,282.149 310.549,282.149 311.406 M235.875 311.797 C 235.008 312.215,234.980 312.263,235.702 312.086 C 236.684 311.846,237.788 311.284,237.262 311.291 C 237.071 311.294,236.447 311.522,235.875 311.797 M233.312 312.681 C 232.855 312.864,232.569 313.100,232.675 313.206 C 232.781 313.312,233.310 313.159,233.852 312.866 C 234.940 312.276,234.609 312.162,233.312 312.681 M264.471 312.987 C 263.778 313.521,263.691 313.741,264.038 314.089 C 264.276 314.328,264.469 314.687,264.466 314.887 C 264.463 315.088,264.310 315.017,264.125 314.731 C 263.834 314.282,263.788 314.290,263.783 314.790 C 263.781 315.108,263.687 315.654,263.577 316.003 C 263.392 316.584,263.422 316.581,263.923 315.965 C 264.461 315.305,264.471 315.307,264.471 316.052 C 264.471 316.469,264.315 316.811,264.125 316.811 C 263.934 316.811,263.778 317.018,263.778 317.271 C 263.778 317.523,263.363 318.108,262.856 318.570 C 262.140 319.223,261.984 319.273,262.156 318.793 C 262.369 318.200,262.344 318.200,261.529 318.793 C 261.062 319.133,260.675 319.528,260.669 319.671 C 260.663 319.814,260.366 319.931,260.008 319.931 C 259.650 319.931,259.163 320.165,258.925 320.451 C 258.566 320.884,258.613 320.971,259.209 320.971 C 259.603 320.971,260.010 320.832,260.115 320.662 C 260.220 320.493,260.694 320.257,261.169 320.137 C 263.075 319.659,264.609 317.536,264.760 315.169 C 264.836 313.980,265.036 313.092,265.205 313.196 C 265.373 313.301,265.511 313.143,265.511 312.845 C 265.511 312.178,265.526 312.176,264.471 312.987 M230.676 313.592 C 230.295 313.684,229.827 313.917,229.636 314.111 C 229.203 314.551,230.866 314.107,231.352 313.653 C 231.533 313.483,231.611 313.363,231.525 313.385 C 231.439 313.407,231.057 313.500,230.676 313.592 M130.676 314.558 C 130.676 314.844,130.520 315.078,130.329 315.078 C 130.139 315.078,129.983 314.844,129.983 314.558 C 129.983 314.272,130.139 314.038,130.329 314.038 C 130.520 314.038,130.676 314.272,130.676 314.558 M136.553 315.425 C 136.709 315.425,136.942 316.127,137.070 316.984 C 137.199 317.842,137.451 318.544,137.630 318.544 C 137.809 318.544,137.955 318.934,137.955 319.411 C 137.955 319.887,138.094 320.277,138.263 320.277 C 138.432 320.277,138.673 320.823,138.799 321.490 C 138.924 322.158,139.155 322.704,139.313 322.704 C 139.470 322.704,139.699 323.328,139.821 324.090 C 139.943 324.853,140.197 325.477,140.385 325.477 C 140.574 325.477,140.728 325.711,140.728 325.997 C 140.728 326.925,140.096 326.546,139.861 325.477 C 139.736 324.905,139.509 324.437,139.358 324.437 C 139.207 324.437,138.984 323.813,138.862 323.050 C 138.740 322.288,138.486 321.664,138.297 321.664 C 138.109 321.664,137.955 321.352,137.955 320.971 C 137.955 320.589,137.819 320.277,137.653 320.277 C 137.486 320.277,137.245 319.619,137.116 318.815 C 136.988 318.010,136.753 317.269,136.595 317.168 C 136.436 317.067,136.233 316.360,136.142 315.598 C 136.052 314.835,136.044 314.484,136.124 314.818 C 136.204 315.152,136.397 315.425,136.553 315.425 M277.088 316.199 C 277.358 316.380,277.351 316.455,277.062 316.459 C 276.837 316.462,276.583 316.737,276.495 317.071 C 276.408 317.405,276.331 317.054,276.324 316.291 C 276.317 315.529,276.400 315.139,276.509 315.425 C 276.618 315.711,276.879 316.059,277.088 316.199 M223.657 315.812 C 223.037 315.991,222.530 316.214,222.530 316.308 C 222.530 316.559,224.383 316.077,224.766 315.726 C 225.144 315.380,225.156 315.379,223.657 315.812 M271.057 317.054 C 271.057 317.751,270.957 317.889,270.665 317.597 C 270.449 317.381,270.366 316.960,270.480 316.661 C 270.798 315.834,271.057 316.011,271.057 317.054 M283.306 317.956 C 283.192 318.661,282.946 319.237,282.760 319.237 C 282.574 319.237,282.517 318.989,282.633 318.685 C 282.750 318.382,282.941 317.750,283.059 317.283 C 283.376 316.020,283.545 316.481,283.306 317.956 M148.913 318.093 C 149.042 318.627,149.414 319.454,149.740 319.931 C 150.066 320.407,150.441 321.247,150.575 321.798 C 150.708 322.348,151.199 323.299,151.665 323.910 C 152.131 324.522,152.513 325.141,152.513 325.286 C 152.513 325.431,152.981 326.141,153.553 326.863 C 154.125 327.585,154.593 328.287,154.593 328.423 C 154.593 328.559,155.061 329.261,155.633 329.983 C 156.205 330.705,156.672 331.413,156.672 331.557 C 156.672 331.700,157.218 332.484,157.886 333.298 C 158.553 334.112,159.099 334.954,159.099 335.168 C 159.099 335.774,169.052 345.581,169.667 345.581 C 169.967 345.581,170.302 345.815,170.412 346.101 C 170.544 346.446,171.089 346.620,172.034 346.620 L 173.457 346.620 172.257 345.595 C 171.597 345.031,170.846 344.563,170.587 344.555 C 170.011 344.538,159.099 333.640,159.099 333.082 C 159.099 332.862,158.631 332.091,158.059 331.369 C 157.487 330.647,157.019 329.945,157.019 329.809 C 157.019 329.674,156.551 328.972,155.979 328.250 C 155.407 327.527,154.939 326.826,154.939 326.690 C 154.939 326.554,154.504 325.875,153.971 325.180 C 153.438 324.485,152.815 323.527,152.587 323.050 C 152.358 322.574,152.027 321.950,151.850 321.664 C 151.674 321.378,151.207 320.410,150.813 319.512 C 149.954 317.556,148.524 316.487,148.913 318.093 M215.598 317.851 L 214.731 318.128 215.664 318.163 C 216.177 318.182,216.693 318.042,216.811 317.851 C 217.055 317.457,216.828 317.457,215.598 317.851 M151.572 318.359 C 151.873 318.580,152.226 319.180,152.354 319.692 C 152.483 320.205,152.715 320.624,152.870 320.624 C 153.024 320.624,153.254 321.092,153.380 321.664 C 153.505 322.236,153.735 322.704,153.889 322.704 C 154.044 322.704,154.269 323.094,154.388 323.570 C 154.508 324.047,154.759 324.437,154.946 324.437 C 155.133 324.437,155.286 324.676,155.286 324.968 C 155.286 325.259,155.506 325.583,155.775 325.686 C 156.043 325.789,156.358 326.252,156.474 326.715 C 156.591 327.178,156.839 327.556,157.026 327.556 C 157.213 327.556,157.366 327.795,157.366 328.087 C 157.366 328.379,157.600 328.708,157.886 328.817 C 158.172 328.927,158.406 329.317,158.406 329.684 C 158.406 330.051,158.640 330.441,158.925 330.551 C 159.211 330.660,159.445 330.969,159.445 331.236 C 159.445 331.504,159.757 331.990,160.139 332.316 C 160.520 332.643,160.832 333.052,160.832 333.225 C 160.832 333.398,161.378 334.055,162.045 334.684 C 162.712 335.314,163.258 335.935,163.258 336.066 C 163.258 336.408,168.703 341.768,169.051 341.768 C 169.212 341.768,169.735 342.215,170.215 342.761 C 170.695 343.308,171.417 343.860,171.820 343.988 C 172.223 344.116,172.640 344.449,172.747 344.727 C 172.854 345.006,173.146 345.234,173.396 345.234 C 173.646 345.234,174.068 345.536,174.335 345.906 C 174.798 346.548,175.364 346.579,187.063 346.607 C 198.516 346.634,201.667 346.387,197.922 345.754 C 197.161 345.626,196.460 345.396,196.366 345.243 C 196.272 345.091,195.654 344.864,194.992 344.740 C 194.331 344.616,193.355 344.288,192.822 344.010 C 192.290 343.732,191.659 343.504,191.421 343.503 C 191.183 343.502,190.988 343.345,190.988 343.154 C 190.988 342.964,190.871 342.824,190.728 342.845 C 190.158 342.927,188.908 342.358,188.908 342.016 C 188.908 341.816,188.804 341.757,188.676 341.884 C 188.549 342.012,188.178 341.875,187.853 341.581 C 187.528 341.286,187.125 341.079,186.958 341.121 C 186.513 341.231,184.749 340.319,184.749 339.979 C 184.749 339.819,184.506 339.688,184.208 339.688 C 183.911 339.688,183.755 339.547,183.862 339.374 C 183.969 339.201,183.744 339.141,183.363 339.241 C 182.981 339.341,182.669 339.257,182.669 339.054 C 182.669 338.852,182.240 338.472,181.716 338.211 C 181.192 337.949,180.796 337.567,180.837 337.361 C 180.879 337.155,180.627 337.061,180.279 337.152 C 179.904 337.250,179.559 337.094,179.435 336.770 C 179.319 336.468,179.045 336.222,178.826 336.222 C 178.442 336.222,176.930 335.060,174.979 333.265 C 174.467 332.794,173.917 332.409,173.757 332.409 C 173.359 332.409,168.114 327.104,168.096 326.682 C 168.088 326.496,167.620 325.961,167.056 325.493 C 166.493 325.025,166.031 324.467,166.031 324.253 C 166.031 324.039,165.641 323.498,165.165 323.050 C 164.688 322.603,164.298 322.025,164.298 321.766 C 164.298 321.507,164.079 321.212,163.812 321.109 C 163.545 321.006,163.254 320.645,163.165 320.305 C 163.032 319.797,162.464 319.643,159.973 319.441 C 158.306 319.306,156.686 319.056,156.374 318.886 C 155.432 318.375,150.915 317.879,151.572 318.359 M147.081 318.923 C 147.204 319.382,147.306 319.874,147.309 320.017 C 147.312 320.160,147.448 320.277,147.612 320.277 C 148.012 320.277,147.674 318.594,147.218 318.312 C 146.986 318.169,146.938 318.387,147.081 318.923 M274.177 318.891 C 274.177 319.272,274.038 319.584,273.868 319.584 C 273.698 319.584,273.456 319.993,273.331 320.492 C 273.084 321.477,272.358 322.357,271.792 322.357 C 271.598 322.357,271.298 322.608,271.126 322.915 C 270.839 323.428,270.797 323.428,270.600 322.915 C 270.482 322.608,270.534 322.357,270.715 322.357 C 270.896 322.357,271.142 321.967,271.261 321.490 C 271.381 321.014,271.618 320.624,271.788 320.624 C 271.958 320.624,272.097 320.385,272.097 320.093 C 272.097 319.801,272.331 319.473,272.617 319.363 C 272.903 319.253,273.137 318.946,273.137 318.680 C 273.137 318.415,273.371 318.198,273.657 318.198 C 273.946 318.198,274.177 318.506,274.177 318.891 M154.783 320.837 C 155.230 321.430,155.699 322.327,155.825 322.830 C 155.951 323.332,156.185 323.744,156.344 323.744 C 156.637 323.744,157.505 325.130,157.917 326.256 C 158.040 326.590,158.281 326.863,158.455 326.863 C 158.628 326.863,158.921 327.214,159.107 327.643 C 159.611 328.809,160.259 329.775,160.745 330.087 C 160.984 330.239,161.179 330.541,161.179 330.757 C 161.179 330.974,161.529 331.551,161.958 332.040 L 162.738 332.929 161.785 332.089 C 161.261 331.626,160.832 331.042,160.832 330.789 C 160.832 330.536,160.672 330.329,160.477 330.329 C 160.281 330.329,159.970 329.978,159.784 329.549 C 159.347 328.538,158.656 327.439,158.288 327.170 C 157.937 326.913,157.114 325.536,156.811 324.697 C 156.690 324.363,156.458 324.090,156.294 324.090 C 156.130 324.090,155.683 323.402,155.300 322.561 C 154.917 321.720,154.448 320.979,154.259 320.915 C 154.070 320.850,153.854 320.329,153.779 319.757 C 153.704 319.185,153.716 318.951,153.806 319.237 C 153.896 319.523,154.336 320.243,154.783 320.837 M278.801 319.861 C 278.937 320.576,278.891 320.926,278.678 320.794 C 278.490 320.678,278.336 320.098,278.336 319.506 C 278.336 318.197,278.509 318.329,278.801 319.861 M284.459 319.733 C 284.355 320.005,284.160 320.824,284.026 321.553 C 283.892 322.281,283.688 322.955,283.572 323.050 C 283.457 323.146,283.195 323.526,282.991 323.896 C 282.787 324.266,282.427 324.633,282.191 324.712 C 281.932 324.798,282.044 324.330,282.476 323.524 C 282.868 322.793,283.189 321.919,283.189 321.582 C 283.189 321.246,283.345 320.971,283.536 320.971 C 283.726 320.971,283.882 320.581,283.882 320.104 C 283.882 319.627,284.055 319.237,284.266 319.237 C 284.477 319.237,284.564 319.460,284.459 319.733 M271.490 319.814 C 271.252 319.910,271.057 320.200,271.057 320.459 C 271.057 320.718,270.877 321.041,270.657 321.177 C 270.437 321.313,270.335 321.283,270.430 321.111 C 270.526 320.938,270.701 320.524,270.820 320.191 C 270.938 319.857,271.235 319.596,271.480 319.611 C 271.827 319.633,271.830 319.677,271.490 319.814 M192.548 320.971 L 191.508 321.235 192.441 321.276 C 192.954 321.299,193.470 321.161,193.588 320.971 C 193.705 320.780,193.754 320.642,193.695 320.665 C 193.636 320.687,193.120 320.825,192.548 320.971 M268.029 321.871 C 268.342 322.183,267.911 323.075,267.555 322.855 C 267.384 322.749,267.244 322.438,267.244 322.163 C 267.244 321.653,267.657 321.499,268.029 321.871 M285.269 322.184 C 285.269 322.470,285.113 322.704,284.922 322.704 C 284.731 322.704,284.575 322.470,284.575 322.184 C 284.575 321.898,284.731 321.664,284.922 321.664 C 285.113 321.664,285.269 321.898,285.269 322.184 M256.925 324.059 C 256.814 324.362,256.556 324.731,256.351 324.878 C 256.147 325.026,256.837 325.045,257.886 324.922 C 260.404 324.625,260.642 324.324,258.712 323.877 C 257.361 323.563,257.098 323.590,256.925 324.059 M272.097 325.303 C 272.097 325.589,271.868 325.823,271.588 325.823 C 271.278 325.823,271.157 325.620,271.278 325.303 C 271.388 325.017,271.617 324.783,271.788 324.783 C 271.958 324.783,272.097 325.017,272.097 325.303 M253.957 325.361 C 253.452 325.867,253.780 326.170,254.832 326.170 C 255.879 326.170,255.902 326.143,255.266 325.661 C 254.502 325.083,254.285 325.034,253.957 325.361 M261.284 327.502 C 260.646 328.149,259.272 328.409,259.272 327.881 C 259.272 327.174,257.277 327.541,257.083 328.284 C 256.957 328.767,256.738 328.923,256.436 328.749 C 256.185 328.604,256.095 328.613,256.236 328.769 C 256.377 328.925,256.331 329.248,256.133 329.487 C 255.272 330.523,260.646 329.854,262.045 328.750 C 262.331 328.525,262.778 328.417,263.038 328.510 C 263.533 328.688,264.110 328.040,264.119 327.296 C 264.127 326.646,261.972 326.802,261.284 327.502 M250.607 328.356 C 250.607 328.605,250.178 328.970,249.653 329.168 L 248.700 329.527 249.740 329.452 C 252.469 329.255,254.275 327.903,251.809 327.903 C 251.050 327.903,250.607 328.070,250.607 328.356 M253.010 330.792 C 253.241 331.023,253.616 331.023,254.134 330.792 C 254.851 330.472,254.824 330.445,253.787 330.445 C 253.037 330.445,252.779 330.560,253.010 330.792 M264.693 330.849 C 264.821 331.184,265.357 331.369,266.199 331.369 C 266.938 331.369,267.694 331.143,267.938 330.849 C 268.312 330.398,268.114 330.329,266.431 330.329 C 264.851 330.329,264.530 330.425,264.693 330.849 M268.284 330.849 C 267.920 331.288,267.988 331.369,268.719 331.369 C 269.196 331.369,269.780 331.135,270.017 330.849 C 270.381 330.411,270.313 330.329,269.582 330.329 C 269.106 330.329,268.522 330.563,268.284 330.849 M232.246 331.356 C 231.965 331.533,231.838 331.780,231.963 331.906 C 232.088 332.031,232.548 331.883,232.984 331.578 C 233.838 330.979,233.163 330.776,232.246 331.356 M241.797 331.592 C 241.448 332.502,241.888 332.597,242.651 331.777 C 243.336 331.043,243.336 331.023,242.685 331.023 C 242.317 331.023,241.917 331.279,241.797 331.592 M247.834 331.369 C 248.120 331.554,248.666 331.705,249.047 331.705 C 249.621 331.705,249.651 331.647,249.220 331.369 C 248.934 331.184,248.388 331.033,248.007 331.033 C 247.433 331.033,247.403 331.091,247.834 331.369 M256.412 331.275 C 255.698 331.350,255.113 331.541,255.113 331.699 C 255.113 332.045,256.847 332.524,257.118 332.253 C 257.222 332.148,257.087 332.055,256.817 332.047 C 256.547 332.038,256.794 331.817,257.366 331.555 C 257.938 331.293,258.250 331.092,258.059 331.109 C 257.868 331.126,257.127 331.200,256.412 331.275 M287.485 331.571 C 287.975 332.849,287.710 333.369,286.446 333.606 C 285.760 333.735,285.125 333.767,285.035 333.677 C 284.770 333.412,286.074 332.062,286.596 332.062 C 286.880 332.062,286.995 331.850,286.876 331.542 C 286.767 331.256,286.811 331.023,286.976 331.023 C 287.140 331.023,287.369 331.269,287.485 331.571 M250.260 331.720 C 250.260 332.126,251.530 332.184,251.774 331.789 C 251.867 331.639,251.564 331.485,251.102 331.447 C 250.639 331.408,250.260 331.531,250.260 331.720 M253.033 331.650 C 253.033 331.832,253.354 332.065,253.746 332.168 C 254.200 332.287,254.410 332.207,254.324 331.948 C 254.158 331.450,253.033 331.190,253.033 331.650 M284.229 332.756 C 284.229 333.255,284.011 333.438,283.449 333.409 C 282.823 333.376,282.794 333.336,283.301 333.205 C 283.673 333.109,283.856 332.840,283.745 332.552 C 283.642 332.283,283.708 332.062,283.893 332.062 C 284.078 332.062,284.229 332.374,284.229 332.756 M165.825 336.531 C 165.670 336.701,162.912 333.963,162.912 333.639 C 162.912 333.508,163.595 334.074,164.430 334.898 C 165.266 335.721,165.894 336.456,165.825 336.531 M280.541 334.315 C 280.330 334.865,279.723 335.037,279.723 334.547 C 279.723 334.180,280.102 333.795,280.463 333.795 C 280.616 333.795,280.651 334.029,280.541 334.315 M256.499 335.744 C 256.499 336.226,256.412 336.240,255.893 335.842 C 255.559 335.587,255.221 335.334,255.142 335.280 C 255.062 335.226,255.335 335.182,255.748 335.182 C 256.210 335.182,256.499 335.399,256.499 335.744 M274.697 335.529 C 275.318 335.796,275.291 335.834,274.437 335.894 C 273.912 335.931,273.289 335.991,273.050 336.028 C 272.169 336.161,271.960 335.723,272.794 335.491 C 273.910 335.181,273.886 335.180,274.697 335.529 M269.482 336.449 C 269.132 336.705,268.641 336.915,268.391 336.915 C 268.142 336.915,267.938 337.071,267.938 337.262 C 267.938 337.452,268.406 337.608,268.977 337.608 C 269.632 337.608,270.017 337.431,270.017 337.129 C 270.017 336.753,270.810 336.641,273.674 336.611 L 277.332 336.572 275.627 338.303 L 273.923 340.035 271.363 340.015 C 269.149 339.997,265.249 339.493,266.464 339.381 C 267.083 339.324,267.003 338.648,266.378 338.648 C 266.092 338.648,265.858 338.882,265.858 339.168 C 265.858 339.490,265.532 339.688,265.002 339.688 C 264.422 339.688,264.205 339.536,264.328 339.215 C 264.534 338.679,265.954 337.955,266.799 337.955 C 267.107 337.955,267.264 337.859,267.147 337.742 C 266.736 337.331,268.772 335.630,269.458 335.810 C 270.098 335.977,270.099 335.998,269.482 336.449 M216.551 336.466 C 216.980 336.549,217.682 336.549,218.111 336.466 C 218.540 336.384,218.189 336.316,217.331 336.316 C 216.473 336.316,216.122 336.384,216.551 336.466 M253.479 337.002 C 253.604 337.348,253.784 337.347,254.374 336.999 C 254.994 336.633,255.113 336.646,255.113 337.085 C 255.113 337.373,254.879 337.608,254.593 337.608 C 254.307 337.608,254.073 337.788,254.073 338.009 C 254.073 338.248,253.818 338.179,253.439 337.835 C 253.090 337.520,252.622 337.262,252.399 337.262 C 252.176 337.262,251.993 337.106,251.993 336.915 C 251.993 336.413,253.293 336.489,253.479 337.002 M244.887 337.262 C 245.556 337.549,245.553 337.560,244.821 337.584 C 244.403 337.597,243.965 337.452,243.847 337.262 C 243.594 336.852,243.933 336.852,244.887 337.262 M235.355 338.128 C 235.355 338.475,235.702 338.648,236.395 338.648 C 237.088 338.648,237.435 338.475,237.435 338.128 C 237.435 337.782,237.088 337.608,236.395 337.608 C 235.702 337.608,235.355 337.782,235.355 338.128 M270.248 337.839 C 269.563 338.525,270.104 338.995,271.577 338.995 C 272.679 338.995,273.137 338.853,273.137 338.512 C 273.137 337.750,270.867 337.221,270.248 337.839 M231.542 338.475 C 231.542 338.821,231.889 338.995,232.582 338.995 C 233.276 338.995,233.622 338.821,233.622 338.475 C 233.622 338.128,233.276 337.955,232.582 337.955 C 231.889 337.955,231.542 338.128,231.542 338.475 M264.125 338.302 C 264.125 338.492,263.891 338.648,263.605 338.648 C 263.319 338.648,263.085 338.492,263.085 338.302 C 263.085 338.111,263.319 337.955,263.605 337.955 C 263.891 337.955,264.125 338.111,264.125 338.302 M250.367 339.491 C 250.141 339.749,250.050 340.055,250.165 340.171 C 250.516 340.521,253.670 340.406,253.899 340.035 C 254.017 339.844,253.793 339.688,253.400 339.688 C 253.007 339.688,252.686 339.532,252.686 339.341 C 252.686 338.828,250.845 338.946,250.367 339.491 M169.804 340.225 C 170.259 340.704,170.571 341.152,170.497 341.219 C 170.424 341.287,169.925 340.892,169.389 340.342 C 168.853 339.792,168.541 339.344,168.696 339.347 C 168.851 339.351,169.350 339.746,169.804 340.225 M213.692 341.421 C 213.574 341.612,213.798 341.768,214.191 341.768 C 214.584 341.768,214.905 341.612,214.905 341.421 C 214.905 341.231,214.680 341.075,214.405 341.075 C 214.130 341.075,213.809 341.231,213.692 341.421 M216.811 342.114 C 216.929 342.305,217.250 342.461,217.525 342.461 C 217.800 342.461,218.024 342.305,218.024 342.114 C 218.024 341.924,217.703 341.768,217.311 341.768 C 216.918 341.768,216.693 341.924,216.811 342.114 M220.624 342.461 C 220.495 342.670,220.967 342.808,221.817 342.808 C 222.590 342.808,223.224 342.652,223.224 342.461 C 223.224 342.270,222.687 342.114,222.031 342.114 C 221.375 342.114,220.742 342.270,220.624 342.461 M229.463 342.461 C 229.463 342.662,230.567 342.808,232.083 342.808 C 233.741 342.808,234.624 342.680,234.489 342.461 C 234.371 342.270,233.192 342.114,231.869 342.114 C 230.496 342.114,229.463 342.263,229.463 342.461 ",stroke:"none",fill:"#d78408",fillRule:"evenodd"}),/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path",{id:"path8",d:"M312.305 80.838 C 312.305 81.131,312.071 81.565,311.785 81.802 C 311.420 82.106,311.264 82.917,311.260 84.531 C 311.254 87.579,311.012 88.385,310.098 88.404 C 309.692 88.412,310.919 89.175,312.825 90.098 C 323.373 95.209,323.282 102.931,312.624 107.256 C 310.892 107.958,310.302 108.337,310.714 108.481 C 311.261 108.673,311.251 108.764,310.594 109.599 C 309.739 110.686,309.668 112.046,310.435 112.682 C 310.741 112.935,311.132 113.515,311.305 113.969 C 311.691 114.986,313.697 114.915,317.851 113.740 C 322.532 112.416,326.819 111.842,324.118 112.902 C 322.665 113.471,323.829 113.615,325.997 113.133 C 327.140 112.879,328.856 112.512,329.809 112.317 C 331.892 111.892,334.070 110.978,334.984 110.146 C 335.352 109.811,337.146 108.977,338.971 108.292 C 343.218 106.698,347.216 104.740,347.446 104.141 C 347.566 103.828,347.445 103.744,347.075 103.886 C 345.896 104.338,346.875 103.099,348.199 102.463 C 353.336 99.995,356.023 93.190,353.397 89.299 C 352.366 87.772,352.416 86.908,353.522 87.156 C 354.286 87.328,354.326 87.301,353.792 86.977 C 353.447 86.768,352.938 86.684,352.661 86.790 C 351.897 87.083,350.299 86.270,350.857 85.872 C 351.156 85.658,351.038 85.613,350.493 85.733 C 349.876 85.869,349.733 85.788,349.886 85.389 C 350.045 84.973,349.888 84.911,349.107 85.082 C 347.828 85.363,345.897 84.682,346.632 84.209 C 346.978 83.987,346.780 83.952,346.014 84.099 C 345.282 84.240,344.887 84.179,344.887 83.925 C 344.887 83.711,344.651 83.536,344.363 83.536 C 344.074 83.536,343.567 83.389,343.236 83.209 C 339.825 81.362,312.305 79.252,312.305 80.838 M322.282 81.017 C 321.383 81.088,319.823 81.089,318.816 81.019 C 317.809 80.948,318.544 80.890,320.451 80.889 C 322.357 80.888,323.181 80.946,322.282 81.017 M338.475 84.699 C 342.120 85.670,345.746 88.669,346.546 91.375 C 350.008 103.093,328.004 108.446,322.512 97.221 C 318.747 89.525,328.341 81.998,338.475 84.699 M320.624 113.692 C 320.229 113.946,320.376 114.029,321.231 114.033 C 321.850 114.036,322.357 113.882,322.357 113.692 C 322.357 113.251,321.305 113.251,320.624 113.692 M317.517 114.542 C 317.158 114.975,317.257 115.001,318.215 114.726 C 319.678 114.307,319.913 114.038,318.818 114.038 C 318.333 114.038,317.748 114.265,317.517 114.542 ",stroke:"none",fill:"#048c7c",fillRule:"evenodd"}))));}const ForwardRef=/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(SvgImage2Vector);/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p+"static/media/image2vector.66c4547b5bbb19a9afb8ac32441f587c.svg");

/***/ }),

/***/ "./src/images/quiz-pictures/lottie-files.svg":
/*!***************************************************!*\
  !*** ./src/images/quiz-pictures/lottie-files.svg ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "ReactComponent": () => (/* binding */ ForwardRef)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _path;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }



function SvgLottieFiles(_ref, svgRef) {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    xmlns: "http://www.w3.org/2000/svg",
    fill: "#0DB8BA",
    "data-name": "Layer 1",
    viewBox: "0 0 24 24",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("title", {
    id: titleId
  }, title) : null, _path || (_path = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M19,2H5A3.00328,3.00328,0,0,0,2,5V19a3.00328,3.00328,0,0,0,3,3H19a3.00328,3.00328,0,0,0,3-3V5A3.00328,3.00328,0,0,0,19,2ZM17,8c-1.65918,0-2.85645,2.17725-4.124,4.48193C11.38379,15.19482,9.84082,18,7,18a1,1,0,0,1,0-2c1.65918,0,2.85645-2.17725,4.124-4.48193C12.61621,8.80518,14.15918,6,17,6a1,1,0,0,1,0,2Z"
  })));
}

const ForwardRef = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(SvgLottieFiles);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "static/media/lottie-files.c983820d4992dce2a5d6aa2042b350ec.svg");


/***/ }),

/***/ "./src/images/quiz-pictures/quizApi-logo.svg":
/*!***************************************************!*\
  !*** ./src/images/quiz-pictures/quizApi-logo.svg ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "ReactComponent": () => (/* binding */ ForwardRef)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _g;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }



function SvgQuizApiLogo(_ref, svgRef) {
  let {
    title,
    titleId,
    ...props
  } = _ref;
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", _extends({
    xmlns: "http://www.w3.org/2000/svg",
    width: "38px",
    height: "38px",
    viewBox: "0 0 108.000000 136.000000",
    preserveAspectRatio: "xMidYMid meet",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("title", {
    id: titleId
  }, title) : null, _g || (_g = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("g", {
    transform: "translate(0.000000,136.000000) scale(0.100000,-0.100000)",
    fill: "#c9d1d3",
    stroke: "none"
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M415 1257 c-145 -48 -237 -147 -269 -287 -32 -140 -20 -180 88 -285 103 -101 114 -125 96 -212 -10 -53 -10 -69 1 -91 29 -58 36 -62 128 -63 l86 -2 -82 -9 c-124 -15 -103 -30 30 -23 163 9 197 14 197 31 0 8 4 14 9 14 15 0 41 60 41 93 0 16 -5 47 -11 68 -16 52 0 88 72 164 120 128 140 177 119 295 -23 130 -102 236 -214 286 -50 23 -77 28 -156 31 -59 2 -110 -2 -135 -10z m310 -101 c71 -32 115 -96 115 -167 0 -64 -40 -116 -148 -189 -88 -61 -137 -103 -154 -134 -8 -14 -5 -25 9 -45 35 -48 35 -51 8 -61 -34 -13 -101 4 -132 33 -15 13 -23 32 -23 52 0 49 47 101 183 204 101 77 130 125 107 180 -33 81 -197 57 -309 -45 l-42 -38 25 -13 c38 -20 35 -58 -6 -83 -42 -25 -69 -25 -118 0 -52 27 -61 59 -30 117 27 50 107 129 170 166 106 62 241 71 345 23z m-110 -687 l20 -20 -33 -30 c-37 -33 -93 -39 -130 -13 -36 25 -23 67 28 87 27 11 94 -3 115 -24z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M473 271 c-107 -8 -118 -21 -16 -21 111 0 233 11 233 21 0 10 -83 9 -217 0z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M433 233 c-29 -2 -53 -9 -53 -14 0 -12 277 -1 300 12 15 8 -139 9 -247 2z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M493 201 c-56 -3 -105 -9 -109 -13 -9 -9 215 -10 269 -2 20 4 37 11 37 15 0 9 -30 9 -197 0z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M433 163 c-30 -2 -53 -9 -53 -15 0 -14 290 -2 304 13 10 9 -134 10 -251 2z"
  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", {
    d: "M585 133 c-22 -1 -77 -5 -122 -9 -62 -4 -83 -9 -83 -20 0 -11 28 -14 155 -14 l155 0 0 25 c0 27 0 27 -105 18z"
  }))));
}

const ForwardRef = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(SvgQuizApiLogo);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "static/media/quizApi-logo.37be44d8530c4f9682786030e3953590.svg");


/***/ }),

/***/ "./src/App.js":
/*!********************!*\
  !*** ./src/App.js ***!
  \********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _components_Navigation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/Navigation */ "./src/components/Navigation.js");
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router/index.js");
/* harmony import */ var _components_BackScreen__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/BackScreen */ "./src/components/BackScreen.js");
/* harmony import */ var _components_Home__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/Home */ "./src/components/Home.js");
/* harmony import */ var _components_Projects__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/Projects */ "./src/components/Projects.js");
/* harmony import */ var _components_ProjectSingle__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/ProjectSingle */ "./src/components/ProjectSingle.js");
/* harmony import */ var _components_ProjectsIndex__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/ProjectsIndex */ "./src/components/ProjectsIndex.js");
/* harmony import */ var _components_AboutMe__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/AboutMe */ "./src/components/AboutMe.js");
/* harmony import */ var _components_Contact__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./components/Contact */ "./src/components/Contact.js");
/* harmony import */ var _components_Footer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./components/Footer */ "./src/components/Footer.js");
/* harmony import */ var _components_NotFound__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./components/NotFound */ "./src/components/NotFound.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/habidbespinosa/Documents/projects_2022/new_portfolio/src/App.js";













function App() {
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)("div", {
    className: "app",
    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(_components_Navigation__WEBPACK_IMPORTED_MODULE_0__["default"], {}, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 16,
      columnNumber: 7
    }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(react_router_dom__WEBPACK_IMPORTED_MODULE_11__.Routes, {
      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(react_router_dom__WEBPACK_IMPORTED_MODULE_11__.Route, {
        path: "/",
        element: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(_components_BackScreen__WEBPACK_IMPORTED_MODULE_1__["default"], {}, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 18,
          columnNumber: 36
        }, this),
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(react_router_dom__WEBPACK_IMPORTED_MODULE_11__.Route, {
          index: true,
          element: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(_components_Home__WEBPACK_IMPORTED_MODULE_2__["default"], {}, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 19,
            columnNumber: 36
          }, this)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 19,
          columnNumber: 13
        }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(react_router_dom__WEBPACK_IMPORTED_MODULE_11__.Route, {
          path: "projects",
          element: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(_components_Projects__WEBPACK_IMPORTED_MODULE_3__["default"], {}, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 20,
            columnNumber: 46
          }, this),
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(react_router_dom__WEBPACK_IMPORTED_MODULE_11__.Route, {
            index: true,
            element: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(_components_ProjectsIndex__WEBPACK_IMPORTED_MODULE_5__["default"], {}, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 21,
              columnNumber: 38
            }, this)
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 21,
            columnNumber: 15
          }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(react_router_dom__WEBPACK_IMPORTED_MODULE_11__.Route, {
            path: ":projectId",
            element: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(_components_ProjectSingle__WEBPACK_IMPORTED_MODULE_4__["default"], {}, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 22,
              columnNumber: 50
            }, this)
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 22,
            columnNumber: 15
          }, this)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 20,
          columnNumber: 13
        }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(react_router_dom__WEBPACK_IMPORTED_MODULE_11__.Route, {
          path: "about-me",
          element: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(_components_AboutMe__WEBPACK_IMPORTED_MODULE_6__["default"], {}, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 24,
            columnNumber: 46
          }, this)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 24,
          columnNumber: 13
        }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(react_router_dom__WEBPACK_IMPORTED_MODULE_11__.Route, {
          path: "contact",
          element: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(_components_Contact__WEBPACK_IMPORTED_MODULE_7__["default"], {}, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 25,
            columnNumber: 45
          }, this)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 25,
          columnNumber: 13
        }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(react_router_dom__WEBPACK_IMPORTED_MODULE_11__.Route, {
          path: "*",
          element: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(_components_NotFound__WEBPACK_IMPORTED_MODULE_9__["default"], {}, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 26,
            columnNumber: 39
          }, this)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 26,
          columnNumber: 13
        }, this)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 18,
        columnNumber: 11
      }, this)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 17,
      columnNumber: 9
    }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_10__.jsxDEV)(_components_Footer__WEBPACK_IMPORTED_MODULE_8__["default"], {}, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 29,
      columnNumber: 9
    }, this)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 15,
    columnNumber: 5
  }, this);
}

_c = App;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (App);

var _c;

__webpack_require__.$Refresh$.register(_c, "App");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/components/AboutMe.js":
/*!***********************************!*\
  !*** ./src/components/AboutMe.js ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ AboutMe)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _GridPointsAbout__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GridPointsAbout */ "./src/components/GridPointsAbout.js");
/* harmony import */ var _Skills__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Skills */ "./src/components/Skills.js");
/* harmony import */ var _ScrollToTop__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ScrollToTop */ "./src/components/ScrollToTop.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/habidbespinosa/Documents/projects_2022/new_portfolio/src/components/AboutMe.js";





function AboutMe() {
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("div", {
    className: "wrapper",
    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("div", {
      className: "contact__heading",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("h1", {
        className: "heading-1 contact__heading--back",
        children: "About Me"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 11,
        columnNumber: 17
      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("h1", {
        className: "contact__heading--front",
        children: "About Me"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 12,
        columnNumber: 17
      }, this)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 10,
      columnNumber: 13
    }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("div", {
      className: "about-me",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("div", {
        className: "about-me__picture",
        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("div", {
          className: "about-me__points",
          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)(_GridPointsAbout__WEBPACK_IMPORTED_MODULE_1__["default"], {
            rows: 15,
            columns: 15,
            color: "rgba(255, 255, 255, 0.1)"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 17,
            columnNumber: 25
          }, this)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 16,
          columnNumber: 21
        }, this)
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 15,
        columnNumber: 17
      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("div", {
        className: "about-me__story",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("div", {
          className: "about-me__text",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("h1", {
            children: "My Story"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 26,
            columnNumber: 25
          }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("p", {
            children: "I am originally from Mexico and trained as a professional ballet dancer. My professional dance career took me to Germany 12 years ago where I have worked at several theaters across the country. My life and career as a dancer has taught me valuable skills such as having a genuine collaborative spirit in addition to attributes such as discipline, perseverance and good work ethics."
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 27,
            columnNumber: 25
          }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("p", {
            children: "Some time ago, I decided to start with something new, something that I could equally be passionate and enthusiastic about. Parallel to my dance career, I therefore evolved on my interest in programming web applications. In October 2020 I completed a 9-week web development bootcamp at Ironhack Berlin, which I enjoyed, and which encouraged me to develop myself further in this area."
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 31,
            columnNumber: 26
          }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("p", {
            children: "At Ironhack Berlin I was able to gain initial knowledge in the field of web development. I learned fast that all was quite complex and challenging, but that's exactly what attracted me to go even deeper and expand my knowledge and skills. At the end of the bootcamp, I decided to take another step in the direction of web development and started a one-year full-time apprenticeship at the DCI Digital Career Institute gGmbH in Berlin, which I just now completed on December 4th 2021."
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 35,
            columnNumber: 25
          }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("p", {
            children: "I am polishing my React skills right now with some projects, this website you are looking at being one of them!"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 39,
            columnNumber: 25
          }, this)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 25,
          columnNumber: 21
        }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)(_Skills__WEBPACK_IMPORTED_MODULE_2__["default"], {}, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 43,
          columnNumber: 21
        }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("div", {
          className: "about-me__footer",
          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)(_ScrollToTop__WEBPACK_IMPORTED_MODULE_3__["default"], {}, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 45,
            columnNumber: 25
          }, this)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 44,
          columnNumber: 21
        }, this)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 24,
        columnNumber: 17
      }, this)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 14,
      columnNumber: 13
    }, this)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 9,
    columnNumber: 9
  }, this);
}
_c = AboutMe;

var _c;

__webpack_require__.$Refresh$.register(_c, "AboutMe");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/components/Avatar.js":
/*!**********************************!*\
  !*** ./src/components/Avatar.js ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Avatar)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/habidbespinosa/Documents/projects_2022/new_portfolio/src/components/Avatar.js";


function Avatar(_ref) {
  let {
    image
  } = _ref;
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
    className: "avatar",
    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("img", {
      src: image,
      alt: "Circle"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 7,
      columnNumber: 13
    }, this)
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 6,
    columnNumber: 9
  }, this);
}
_c = Avatar;

var _c;

__webpack_require__.$Refresh$.register(_c, "Avatar");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/components/BackScreen.js":
/*!**************************************!*\
  !*** ./src/components/BackScreen.js ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ BackScreen)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router/index.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/habidbespinosa/Documents/projects_2022/new_portfolio/src/components/BackScreen.js";



function BackScreen() {
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
    className: "back-screen",
    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(react_router_dom__WEBPACK_IMPORTED_MODULE_2__.Outlet, {}, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 7,
      columnNumber: 14
    }, this)
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 6,
    columnNumber: 9
  }, this);
}
_c = BackScreen;

var _c;

__webpack_require__.$Refresh$.register(_c, "BackScreen");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/components/BluredScreen.js":
/*!****************************************!*\
  !*** ./src/components/BluredScreen.js ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ BluredScreen)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/habidbespinosa/Documents/projects_2022/new_portfolio/src/components/BluredScreen.js";


function BluredScreen(_ref) {
  let {
    children,
    displayScreen,
    setPopup,
    setPopupImg
  } = _ref;
  const style = {
    display: displayScreen ? 'flex' : 'none'
  };

  const closePopup = () => {
    setPopup(false);
    setPopupImg();
  };

  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
    className: "blured-screen",
    style: style,
    onClick: closePopup,
    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
      className: "blured-screen__content",
      children: children
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 20,
      columnNumber: 13
    }, this)
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 15,
    columnNumber: 9
  }, this);
}
_c = BluredScreen;

var _c;

__webpack_require__.$Refresh$.register(_c, "BluredScreen");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/components/ButtonFa.js":
/*!************************************!*\
  !*** ./src/components/ButtonFa.js ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ButtonFa)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/habidbespinosa/Documents/projects_2022/new_portfolio/src/components/ButtonFa.js";


function ButtonFa(_ref) {
  let {
    classFa
  } = _ref;
  const style = {
    borderRadius: "0.6rem"
  };
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("i", {
    className: `${classFa} button-fa`,
    style: style
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 10,
    columnNumber: 9
  }, this);
}
_c = ButtonFa;

var _c;

__webpack_require__.$Refresh$.register(_c, "ButtonFa");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/components/CardIcon.js":
/*!************************************!*\
  !*** ./src/components/CardIcon.js ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ CardIcon)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/habidbespinosa/Documents/projects_2022/new_portfolio/src/components/CardIcon.js";


function CardIcon(_ref) {
  let {
    icon,
    alt,
    name,
    width,
    fontSize
  } = _ref;
  const imageStyle = {
    width: width
  };
  const headingStyle = {
    fontSize: fontSize,
    textAlign: "center"
  };
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
    className: "skills__card",
    style: imageStyle,
    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("figure", {
      className: "skills__figure",
      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("img", {
        src: icon,
        alt: alt,
        className: "skills__image"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 16,
        columnNumber: 17
      }, this)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 15,
      columnNumber: 13
    }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("h3", {
      className: "heading-3",
      style: headingStyle,
      children: name
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 23,
      columnNumber: 13
    }, this)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 14,
    columnNumber: 9
  }, this);
}
_c = CardIcon;

var _c;

__webpack_require__.$Refresh$.register(_c, "CardIcon");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/components/Contact.js":
/*!***********************************!*\
  !*** ./src/components/Contact.js ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Contact)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _GridPointsContact__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GridPointsContact */ "./src/components/GridPointsContact.js");
/* harmony import */ var _ContactForm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ContactForm */ "./src/components/ContactForm.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/habidbespinosa/Documents/projects_2022/new_portfolio/src/components/Contact.js";




function Contact() {
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("div", {
    className: "wrapper",
    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("div", {
      className: "contact__heading",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("h1", {
        className: "heading-1 contact__heading--back",
        children: "Contact"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 9,
        columnNumber: 17
      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("h1", {
        className: "contact__heading--front",
        children: "Contact"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 10,
        columnNumber: 17
      }, this)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 8,
      columnNumber: 13
    }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("div", {
      className: "contact",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("div", {
        className: "contact__box--1",
        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("div", {
          className: "contact__form-container",
          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_ContactForm__WEBPACK_IMPORTED_MODULE_2__["default"], {}, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 15,
            columnNumber: 25
          }, this)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 14,
          columnNumber: 21
        }, this)
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 13,
        columnNumber: 17
      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("div", {
        className: "contact__profile",
        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_GridPointsContact__WEBPACK_IMPORTED_MODULE_1__["default"], {
          rows: 15,
          columns: 15,
          color: "rgba(255, 255, 255, 0.2)"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 19,
          columnNumber: 21
        }, this)
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 18,
        columnNumber: 17
      }, this)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 12,
      columnNumber: 13
    }, this)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 7,
    columnNumber: 9
  }, this);
}
_c = Contact;

var _c;

__webpack_require__.$Refresh$.register(_c, "Contact");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/components/ContactForm.js":
/*!***************************************!*\
  !*** ./src/components/ContactForm.js ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ContactForm)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _formspree_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @formspree/react */ "./node_modules/@formspree/react/dist/formspree-react.esm.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/habidbespinosa/Documents/projects_2022/new_portfolio/src/components/ContactForm.js",
    _s = __webpack_require__.$Refresh$.signature();




function ContactForm() {
  _s();

  const [state, handleSubmit] = (0,_formspree_react__WEBPACK_IMPORTED_MODULE_1__.useForm)("mzbodoqa");

  if (state.succeeded) {
    return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("h1", {
      className: "heading-1",
      style: {
        lineHeight: "8rem",
        textAlign: "center",
        color: "#96d4c6"
      },
      children: "Thanks for contact me!"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 9,
      columnNumber: 16
    }, this);
  }

  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("form", {
    className: "form",
    onSubmit: handleSubmit,
    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "form__group",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("input", {
        type: "text",
        className: "form__input",
        placeholder: "Full Name",
        id: "name",
        name: "name",
        minLength: 2,
        required: true
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 22,
        columnNumber: 17
      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
        htmlFor: "name",
        className: "form__label",
        children: "Full Name"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 31,
        columnNumber: 17
      }, this)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 21,
      columnNumber: 13
    }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "form__group",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("input", {
        type: "email",
        className: "form__input",
        placeholder: "Email Address",
        id: "email",
        name: "email",
        required: true
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 34,
        columnNumber: 17
      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
        htmlFor: "email",
        className: "form__label",
        children: ["Email Address\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0\xA0", /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(_formspree_react__WEBPACK_IMPORTED_MODULE_1__.ValidationError, {
          style: {
            display: 'inline-block',
            color: "#ff7730"
          },
          prefix: "Email",
          field: "email",
          errors: state.errors
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 47,
          columnNumber: 21
        }, this)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 42,
        columnNumber: 17
      }, this)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 33,
      columnNumber: 13
    }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "form__group",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("textarea", {
        className: "form__input",
        placeholder: "Message",
        minLength: 10,
        id: "message",
        name: "message",
        required: true
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 57,
        columnNumber: 17
      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("label", {
        htmlFor: "message",
        className: "form__label",
        children: "Message"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 65,
        columnNumber: 17
      }, this)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 56,
      columnNumber: 13
    }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "form__group"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 67,
      columnNumber: 13
    }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "form__group",
      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("button", {
        className: "btn btn--green",
        type: "submit",
        disabled: state.submitting,
        children: "Send Message"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 71,
        columnNumber: 17
      }, this)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 70,
      columnNumber: 13
    }, this)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 20,
    columnNumber: 9
  }, this);
}

_s(ContactForm, "JQV63ejNs/LvUCj0s4sJaEvjYBI=", false, function () {
  return [_formspree_react__WEBPACK_IMPORTED_MODULE_1__.useForm];
});

_c = ContactForm;

var _c;

__webpack_require__.$Refresh$.register(_c, "ContactForm");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/components/Footer.js":
/*!**********************************!*\
  !*** ./src/components/Footer.js ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Footer)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/habidbespinosa/Documents/projects_2022/new_portfolio/src/components/Footer.js";


function Footer() {
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("footer", {
    className: "footer",
    children: ["Copyright \xA9 2022 by Habid Badillo.", /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("br", {}, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 6,
      columnNumber: 47
    }, this), "All right reserved"]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 5,
    columnNumber: 9
  }, this);
}
_c = Footer;

var _c;

__webpack_require__.$Refresh$.register(_c, "Footer");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/components/GridPoints.js":
/*!**************************************!*\
  !*** ./src/components/GridPoints.js ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ GridPoints)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/habidbespinosa/Documents/projects_2022/new_portfolio/src/components/GridPoints.js",
    _s = __webpack_require__.$Refresh$.signature();



function GridPoints(_ref) {
  _s();

  let {
    color,
    rows = 25,
    columns = 25
  } = _ref;
  const [numberOfRows, setNumberOfRows] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(rows);
  const [numberOfColumns, setNumberOfColumns] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(columns);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    updateDimensions();
    window.addEventListener("resize", updateDimensions);
    return () => window.removeEventListener("resize", updateDimensions); // eslint-disable-next-line
  }, []);

  const updateDimensions = () => {
    const {
      innerWidth
    } = window; // console.log(innerWidth);

    if (innerWidth >= 1800) {
      setNumberOfColumns(columns + 2);
      setNumberOfRows(rows + 2);
      return;
    }

    if (innerWidth >= 1440) {
      setNumberOfColumns(columns);
      setNumberOfRows(rows);
      return;
    }

    if (innerWidth <= 700) {
      setNumberOfRows(rows - 5);
      setNumberOfColumns(columns - 7);
      return;
    }

    if (innerWidth <= 800) {
      setNumberOfRows(rows - 4);
      setNumberOfColumns(columns - 6);
      return;
    }

    if (innerWidth <= 900) {
      setNumberOfRows(rows - 2);
      setNumberOfColumns(columns - 4);
      return;
    }

    if (innerWidth <= 1000) {
      setNumberOfRows(rows - 2);
      setNumberOfColumns(columns - 3);
      return;
    }

    if (innerWidth <= 1060) {
      setNumberOfRows(rows - 1);
      setNumberOfColumns(columns - 1);
      return;
    }

    if (innerWidth <= 1190) {
      setNumberOfRows(rows);
      setNumberOfColumns(columns);
      return;
    }

    if (innerWidth <= 1279) {
      setNumberOfRows(rows - 2);
      setNumberOfColumns(columns - 2);
      return;
    }

    if (innerWidth <= 1439) {
      setNumberOfRows(rows - 1);
      setNumberOfColumns(columns - 1);
      return;
    }
  };

  const style = {
    width: "3rem",
    height: "3rem",
    color,
    display: "flex",
    justifyContent: "center",
    alignItems: "center"
  };

  const column = () => {
    return [...Array(numberOfRows).fill("•")].map((item, i) => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
      style: style,
      children: item
    }, i, false, {
      fileName: _jsxFileName,
      lineNumber: 96,
      columnNumber: 7
    }, this));
  };

  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
    className: "grid-points",
    children: Array(numberOfColumns).fill(0).map((item, i) => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
      children: column()
    }, i, false, {
      fileName: _jsxFileName,
      lineNumber: 111,
      columnNumber: 61
    }, this))
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 107,
    columnNumber: 9
  }, this);
}

_s(GridPoints, "f192nTKU4h27jOLRPawzxzUEkTk=");

_c = GridPoints;

var _c;

__webpack_require__.$Refresh$.register(_c, "GridPoints");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/components/GridPointsAbout.js":
/*!*******************************************!*\
  !*** ./src/components/GridPointsAbout.js ***!
  \*******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ GridPointsAbout)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _images_nord_kapp_jpeg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../images/nord-kapp.jpeg */ "./src/images/nord-kapp.jpeg");
/* harmony import */ var _Avatar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Avatar */ "./src/components/Avatar.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/habidbespinosa/Documents/projects_2022/new_portfolio/src/components/GridPointsAbout.js";




function GridPointsAbout(_ref) {
  let {
    color,
    rows = 20,
    columns = 20
  } = _ref;
  const style = {
    width: "3rem",
    height: "3rem",
    color,
    display: "flex",
    justifyContent: "center",
    alignItems: "center"
  };

  const column = () => {
    return [...Array(rows).fill("•")].map((item, i) => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("div", {
      style: style,
      children: item
    }, i, false, {
      fileName: _jsxFileName,
      lineNumber: 18,
      columnNumber: 11
    }, this));
  };

  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("div", {
    className: "grid-points-about",
    children: [Array(columns).fill(0).map((item, i) => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("div", {
      children: column()
    }, i, false, {
      fileName: _jsxFileName,
      lineNumber: 30,
      columnNumber: 51
    }, this)), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("div", {
      className: "grid-points-about__message",
      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("div", {
        className: "grid-points-contact__message--box",
        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("h1", {
          children: "Have a look at my story and my skills!"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 34,
          columnNumber: 21
        }, this)
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 33,
        columnNumber: 17
      }, this)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 32,
      columnNumber: 13
    }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("figure", {
      className: "grid-points-about__picture",
      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_Avatar__WEBPACK_IMPORTED_MODULE_2__["default"], {
        image: _images_nord_kapp_jpeg__WEBPACK_IMPORTED_MODULE_1__
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 38,
        columnNumber: 17
      }, this)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 37,
      columnNumber: 13
    }, this)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 28,
    columnNumber: 9
  }, this);
}
_c = GridPointsAbout;

var _c;

__webpack_require__.$Refresh$.register(_c, "GridPointsAbout");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/components/GridPointsContact.js":
/*!*********************************************!*\
  !*** ./src/components/GridPointsContact.js ***!
  \*********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ GridPointsContact)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _Avatar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Avatar */ "./src/components/Avatar.js");
/* harmony import */ var _images_portrait_jpg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../images/portrait.jpg */ "./src/images/portrait.jpg");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/habidbespinosa/Documents/projects_2022/new_portfolio/src/components/GridPointsContact.js";




function GridPointsContact(_ref) {
  let {
    color,
    rows = 20,
    columns = 20
  } = _ref;
  const style = {
    width: "3rem",
    height: "3rem",
    color,
    display: "flex",
    justifyContent: "center",
    alignItems: "center"
  };

  const column = () => {
    return [...Array(rows).fill("•")].map((item, i) => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("div", {
      style: style,
      children: item
    }, i, false, {
      fileName: _jsxFileName,
      lineNumber: 19,
      columnNumber: 7
    }, this));
  };

  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("div", {
    className: "grid-points-contact",
    children: [Array(columns).fill(0).map((item, i) => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("div", {
      children: column()
    }, i, false, {
      fileName: _jsxFileName,
      lineNumber: 33,
      columnNumber: 51
    }, this)), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("div", {
      className: "grid-points-contact__message",
      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("div", {
        className: "grid-points-contact__message--box",
        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("h1", {
          children: ["Drop me a note, if this page is of interest to you. ", /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("br", {}, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 37,
            columnNumber: 69
          }, this), "Looking forward to chat!"]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 37,
          columnNumber: 13
        }, this)
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 36,
        columnNumber: 11
      }, this)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 35,
      columnNumber: 9
    }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("div", {
      className: "grid-points-contact__picture",
      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_Avatar__WEBPACK_IMPORTED_MODULE_1__["default"], {
        image: _images_portrait_jpg__WEBPACK_IMPORTED_MODULE_2__
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 41,
        columnNumber: 13
      }, this)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 40,
      columnNumber: 9
    }, this)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 29,
    columnNumber: 7
  }, this);
}
_c = GridPointsContact;

var _c;

__webpack_require__.$Refresh$.register(_c, "GridPointsContact");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/components/GridPointsProjects.js":
/*!**********************************************!*\
  !*** ./src/components/GridPointsProjects.js ***!
  \**********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ GridPointsProjects)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router-dom/index.js");
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers */ "./src/helpers.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/habidbespinosa/Documents/projects_2022/new_portfolio/src/components/GridPointsProjects.js";




function GridPointsProjects(_ref) {
  let {
    color,
    rows = 20,
    columns = 20
  } = _ref;
  const style = {
    width: "3rem",
    height: "3rem",
    color,
    display: "flex",
    justifyContent: "center",
    alignItems: "center"
  };

  const column = () => {
    return [...Array(rows).fill("•")].map((item, i) => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      style: style,
      children: item
    }, i, false, {
      fileName: _jsxFileName,
      lineNumber: 19,
      columnNumber: 9
    }, this));
  };

  const scrollToTop = () => {
    window.scrollTo({
      top: 0,
      behavior: "smooth"
    });
  };

  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
    className: "grid-points-projects",
    children: [Array(columns).fill(0).map((item, i) => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      children: column()
    }, i, false, {
      fileName: _jsxFileName,
      lineNumber: 38,
      columnNumber: 57
    }, this)), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "grid-points-projects__back",
      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("ul", {
        className: "grid-points-projects__list",
        children: _helpers__WEBPACK_IMPORTED_MODULE_1__.projectsData.map(item => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("li", {
          className: "grid-points-projects__item",
          onClick: scrollToTop,
          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(react_router_dom__WEBPACK_IMPORTED_MODULE_3__.NavLink, {
            to: `${item.id}`,
            className: _ref2 => {
              let {
                isActive
              } = _ref2;
              return isActive ? "active-project" : "inactive";
            },
            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("h3", {
              className: "heading-3 heading-3--light",
              children: item.title
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 49,
              columnNumber: 37
            }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("h4", {
              className: "grid-points-projects__sentence",
              children: item.sentence
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 50,
              columnNumber: 37
            }, this)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 45,
            columnNumber: 33
          }, this)
        }, item.id, false, {
          fileName: _jsxFileName,
          lineNumber: 44,
          columnNumber: 29
        }, this))
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 41,
        columnNumber: 17
      }, this)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 40,
      columnNumber: 13
    }, this)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 36,
    columnNumber: 9
  }, this);
}
_c = GridPointsProjects;

var _c;

__webpack_require__.$Refresh$.register(_c, "GridPointsProjects");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/components/Home.js":
/*!********************************!*\
  !*** ./src/components/Home.js ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Home)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _images_land_scape_jpg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../images/land-scape.jpg */ "./src/images/land-scape.jpg");
/* harmony import */ var _GridPoints__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./GridPoints */ "./src/components/GridPoints.js");
/* harmony import */ var _ButtonFa__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ButtonFa */ "./src/components/ButtonFa.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/habidbespinosa/Documents/projects_2022/new_portfolio/src/components/Home.js";





function Home() {
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("div", {
    className: "home",
    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("div", {
      className: "home__box home__box--headings",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("div", {
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("h1", {
          className: "heading-1 heading-1--bold",
          children: "Habid Badillo"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 11,
          columnNumber: 21
        }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("h2", {
          className: "heading-3 heading-3--light",
          children: "Full Stack Web Developer"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 12,
          columnNumber: 21
        }, this)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 10,
        columnNumber: 17
      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("ul", {
        className: "home__icons",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("li", {
          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("a", {
            href: `mailto: ${"hab.bad@hotmail.com"}`,
            children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)(_ButtonFa__WEBPACK_IMPORTED_MODULE_3__["default"], {
              classFa: "fas fa-at"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 17,
              columnNumber: 29
            }, this)
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 16,
            columnNumber: 25
          }, this)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 15,
          columnNumber: 21
        }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("li", {
          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("a", {
            href: "https://github.com/habidbesp",
            target: "_blank",
            rel: "noreferrer",
            children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)(_ButtonFa__WEBPACK_IMPORTED_MODULE_3__["default"], {
              classFa: "fab fa-github"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 24,
              columnNumber: 29
            }, this)
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 23,
            columnNumber: 25
          }, this)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 22,
          columnNumber: 21
        }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("li", {
          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("a", {
            href: "https://www.linkedin.com/in/habidbadillo/",
            target: "_blank",
            rel: "noreferrer",
            children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)(_ButtonFa__WEBPACK_IMPORTED_MODULE_3__["default"], {
              classFa: "fab fa-linkedin-in"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 31,
              columnNumber: 29
            }, this)
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 30,
            columnNumber: 25
          }, this)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 29,
          columnNumber: 21
        }, this)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 14,
        columnNumber: 17
      }, this)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 9,
      columnNumber: 13
    }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("div", {
      className: "home__box home__box--image",
      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("div", {
        className: "home__points-container",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("div", {
          className: "home__points",
          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)(_GridPoints__WEBPACK_IMPORTED_MODULE_2__["default"], {
            rows: 13,
            columns: 18,
            color: "rgba(255, 255, 255, 0.2)"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 41,
            columnNumber: 25
          }, this)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 40,
          columnNumber: 21
        }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("figure", {
          className: "home__figure",
          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)("img", {
            src: _images_land_scape_jpg__WEBPACK_IMPORTED_MODULE_1__,
            alt: "hero"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 48,
            columnNumber: 25
          }, this)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 47,
          columnNumber: 21
        }, this)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 39,
        columnNumber: 17
      }, this)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 38,
      columnNumber: 13
    }, this)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 8,
    columnNumber: 9
  }, this);
}
_c = Home;

var _c;

__webpack_require__.$Refresh$.register(_c, "Home");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/components/MyLogo.js":
/*!**********************************!*\
  !*** ./src/components/MyLogo.js ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ MyLogo)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/habidbespinosa/Documents/projects_2022/new_portfolio/src/components/MyLogo.js";


function MyLogo() {
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
    className: "my-logo",
    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("i", {
      className: "fas fa-torii-gate"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 6,
      columnNumber: 13
    }, this)
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 5,
    columnNumber: 9
  }, this);
}
_c = MyLogo;

var _c;

__webpack_require__.$Refresh$.register(_c, "MyLogo");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/components/Navigation.js":
/*!**************************************!*\
  !*** ./src/components/Navigation.js ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Navigation)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _MyLogo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MyLogo */ "./src/components/MyLogo.js");
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router-dom/index.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/habidbespinosa/Documents/projects_2022/new_portfolio/src/components/Navigation.js";




function Navigation() {
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
    className: "navigation",
    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("ul", {
      className: "navigation__list",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("li", {
        className: "navigation__item",
        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(react_router_dom__WEBPACK_IMPORTED_MODULE_3__.Link, {
          to: "/",
          style: {
            textDecoration: "none"
          },
          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(_MyLogo__WEBPACK_IMPORTED_MODULE_1__["default"], {}, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 13,
            columnNumber: 25
          }, this)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 10,
          columnNumber: 21
        }, this)
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 9,
        columnNumber: 17
      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("li", {
        className: "navigation__item",
        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(react_router_dom__WEBPACK_IMPORTED_MODULE_3__.NavLink, {
          to: "projects",
          className: _ref => {
            let {
              isActive
            } = _ref;
            return isActive ? "active" : "inactive";
          },
          children: "Projects"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 17,
          columnNumber: 21
        }, this)
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 16,
        columnNumber: 17
      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("li", {
        className: "navigation__item",
        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(react_router_dom__WEBPACK_IMPORTED_MODULE_3__.NavLink, {
          to: "about-me",
          className: _ref2 => {
            let {
              isActive
            } = _ref2;
            return isActive ? "active" : "inactive";
          },
          children: "About Me"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 25,
          columnNumber: 21
        }, this)
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 24,
        columnNumber: 17
      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("li", {
        className: "navigation__item",
        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(react_router_dom__WEBPACK_IMPORTED_MODULE_3__.NavLink, {
          to: "contact",
          className: _ref3 => {
            let {
              isActive
            } = _ref3;
            return isActive ? "active" : "inactive";
          },
          children: "Contact"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 33,
          columnNumber: 21
        }, this)
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 32,
        columnNumber: 17
      }, this)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 8,
      columnNumber: 13
    }, this)
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 7,
    columnNumber: 9
  }, this);
}
_c = Navigation;

var _c;

__webpack_require__.$Refresh$.register(_c, "Navigation");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/components/NotFound.js":
/*!************************************!*\
  !*** ./src/components/NotFound.js ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ NotFound)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _images_logos_error_server_svg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../images/logos/error-server.svg */ "./src/images/logos/error-server.svg");
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router-dom/index.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/habidbespinosa/Documents/projects_2022/new_portfolio/src/components/NotFound.js";




function NotFound() {
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
    className: "not-found",
    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "not-found__container",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("h1", {
        className: "not-found__heading not-found__heading--1",
        children: "Upss you are lost!!!"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 9,
        columnNumber: 13
      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("figure", {
        className: "not-found__figure",
        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("img", {
          src: _images_logos_error_server_svg__WEBPACK_IMPORTED_MODULE_1__["default"],
          alt: "error404",
          className: "not-found__img"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 11,
          columnNumber: 17
        }, this)
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 10,
        columnNumber: 13
      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(react_router_dom__WEBPACK_IMPORTED_MODULE_3__.Link, {
        to: "/",
        className: "not-found__heading not-found__heading--link",
        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("h2", {
          className: "not-found__heading not-found__heading--2",
          children: ["Back to Home \xA0", `=>`, " \xA0\uD83C\uDFE1"]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 14,
          columnNumber: 17
        }, this)
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 13,
        columnNumber: 13
      }, this)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 8,
      columnNumber: 9
    }, this)
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 7,
    columnNumber: 5
  }, this);
}
_c = NotFound;

var _c;

__webpack_require__.$Refresh$.register(_c, "NotFound");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/components/ProjectSingle.js":
/*!*****************************************!*\
  !*** ./src/components/ProjectSingle.js ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ProjectSingle)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router/index.js");
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers */ "./src/helpers.js");
/* harmony import */ var _ButtonFa__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ButtonFa */ "./src/components/ButtonFa.js");
/* harmony import */ var _CardIcon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./CardIcon */ "./src/components/CardIcon.js");
/* harmony import */ var _ScrollToTop__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ScrollToTop */ "./src/components/ScrollToTop.js");
/* harmony import */ var _BluredScreen__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./BluredScreen */ "./src/components/BluredScreen.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/habidbespinosa/Documents/projects_2022/new_portfolio/src/components/ProjectSingle.js",
    _s = __webpack_require__.$Refresh$.signature();










function ProjectSingle() {
  _s();

  const [popup, setPopup] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  const [popupImg, setPopupImg] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();
  const {
    projectId
  } = (0,react_router_dom__WEBPACK_IMPORTED_MODULE_7__.useParams)();
  const targetObj = _helpers__WEBPACK_IMPORTED_MODULE_1__.projectsData.find(item => item.id === projectId);
  const {
    title,
    sentence,
    demoLink,
    githubLink,
    technologies,
    features
  } = targetObj;

  const displayPopup = e => {
    setPopupImg(e.target.id);
    setPopup(true);
  };

  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.Fragment, {
    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(_BluredScreen__WEBPACK_IMPORTED_MODULE_5__["default"], {
      displayScreen: popup,
      setPopup: setPopup,
      setPopupImg: setPopupImg,
      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)("img", {
        src: popupImg,
        alt: "project"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 34,
        columnNumber: 17
      }, this)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 29,
      columnNumber: 9
    }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)("div", {
      className: "project-single",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)("div", {
        className: "project-single__head",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)("div", {
          className: "contact__heading",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)("h1", {
            className: "heading-1 contact__heading--back",
            children: title
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 41,
            columnNumber: 21
          }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)("h1", {
            className: "contact__heading--front",
            children: title
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 42,
            columnNumber: 21
          }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)("h4", {
            className: "grid-points-projects__sentence project-single__head--subheading",
            children: sentence
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 43,
            columnNumber: 21
          }, this)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 40,
          columnNumber: 17
        }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)("ul", {
          className: "project-single__list",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)("li", {
            className: "project-single__item",
            children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)("a", {
              href: githubLink,
              target: "_blank",
              rel: "noreferrer",
              children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(_ButtonFa__WEBPACK_IMPORTED_MODULE_2__["default"], {
                classFa: "fab fa-github"
              }, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 48,
                columnNumber: 29
              }, this)
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 47,
              columnNumber: 25
            }, this)
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 46,
            columnNumber: 21
          }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)("li", {
            className: "project-single__item",
            children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)("a", {
              href: demoLink,
              target: "_blank",
              rel: "noreferrer",
              children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(_ButtonFa__WEBPACK_IMPORTED_MODULE_2__["default"], {
                classFa: "fas fa-link"
              }, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 55,
                columnNumber: 29
              }, this)
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 54,
              columnNumber: 25
            }, this)
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 53,
            columnNumber: 21
          }, this)]
        }, void 0, true, {
          fileName: _jsxFileName,
          lineNumber: 45,
          columnNumber: 17
        }, this)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 39,
        columnNumber: 13
      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)("div", {
        className: "project-single__technologies",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)("h1", {
          className: "heading-back",
          children: "Tools & Technologies"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 66,
          columnNumber: 17
        }, this), technologies.map((item, i) => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)("div", {
          className: "project-single__technologies--row",
          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(_CardIcon__WEBPACK_IMPORTED_MODULE_3__["default"], {
            icon: item.image,
            alt: item.alt,
            name: item.name // width="100%"
            // fontSize="1.2rem"

          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 70,
            columnNumber: 29
          }, this)
        }, i, false, {
          fileName: _jsxFileName,
          lineNumber: 69,
          columnNumber: 25
        }, this))]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 65,
        columnNumber: 13
      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)("div", {
        className: "project-single__body",
        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)("h1", {
          className: "heading-back",
          children: "Feautures"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 84,
          columnNumber: 17
        }, this), features.map((item, i) => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)("div", {
          className: "project-single__card",
          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)("figure", {
            onClick: displayPopup,
            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)("img", {
              src: item.image,
              alt: item.alt,
              className: "project-single__img",
              id: item.image
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 89,
              columnNumber: 33
            }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)("figcaption", {
              id: item.image,
              className: "project-single__caption",
              children: "Click Me!"
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 95,
              columnNumber: 33
            }, this)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 88,
            columnNumber: 29
          }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)("div", {
            className: "project-single__text",
            children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)("p", {
              children: item.description
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 100,
              columnNumber: 33
            }, this)
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 99,
            columnNumber: 29
          }, this)]
        }, i, true, {
          fileName: _jsxFileName,
          lineNumber: 87,
          columnNumber: 25
        }, this)), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)("div", {
          className: "project-single__footer",
          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)("ul", {
            className: "project-single__list",
            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)("li", {
              className: "project-single__item",
              children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)("a", {
                href: githubLink,
                target: "_blank",
                rel: "noreferrer",
                children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(_ButtonFa__WEBPACK_IMPORTED_MODULE_2__["default"], {
                  classFa: "fab fa-github"
                }, void 0, false, {
                  fileName: _jsxFileName,
                  lineNumber: 109,
                  columnNumber: 33
                }, this)
              }, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 108,
                columnNumber: 29
              }, this)
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 107,
              columnNumber: 25
            }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)("li", {
              className: "project-single__item",
              children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)("a", {
                href: demoLink,
                target: "_blank",
                rel: "noreferrer",
                children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(_ButtonFa__WEBPACK_IMPORTED_MODULE_2__["default"], {
                  classFa: "fas fa-link"
                }, void 0, false, {
                  fileName: _jsxFileName,
                  lineNumber: 116,
                  columnNumber: 33
                }, this)
              }, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 115,
                columnNumber: 29
              }, this)
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 114,
              columnNumber: 25
            }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)("li", {
              className: "project-single__item",
              children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(_ScrollToTop__WEBPACK_IMPORTED_MODULE_4__["default"], {}, void 0, false, {
                fileName: _jsxFileName,
                lineNumber: 122,
                columnNumber: 29
              }, this)
            }, void 0, false, {
              fileName: _jsxFileName,
              lineNumber: 121,
              columnNumber: 25
            }, this)]
          }, void 0, true, {
            fileName: _jsxFileName,
            lineNumber: 106,
            columnNumber: 21
          }, this)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 105,
          columnNumber: 17
        }, this)]
      }, void 0, true, {
        fileName: _jsxFileName,
        lineNumber: 83,
        columnNumber: 13
      }, this)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 37,
      columnNumber: 9
    }, this)]
  }, void 0, true);
}

_s(ProjectSingle, "v7owJE3w2FoJuBWhWILo/pS4bbU=", false, function () {
  return [react_router_dom__WEBPACK_IMPORTED_MODULE_7__.useParams];
});

_c = ProjectSingle;

var _c;

__webpack_require__.$Refresh$.register(_c, "ProjectSingle");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/components/Projects.js":
/*!************************************!*\
  !*** ./src/components/Projects.js ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Projects)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router/index.js");
/* harmony import */ var _GridPointsProjects__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GridPointsProjects */ "./src/components/GridPointsProjects.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/habidbespinosa/Documents/projects_2022/new_portfolio/src/components/Projects.js";




function Projects() {
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
    className: "wrapper",
    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "contact__heading",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("h1", {
        className: "heading-1 contact__heading--back",
        children: "Projects"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 9,
        columnNumber: 17
      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("h1", {
        className: "contact__heading--front",
        children: "Projects"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 10,
        columnNumber: 17
      }, this)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 8,
      columnNumber: 13
    }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
      className: "projects",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "projects__names",
        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
          className: "projects__names--points",
          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(_GridPointsProjects__WEBPACK_IMPORTED_MODULE_1__["default"], {
            rows: 15,
            columns: 15,
            color: "rgba(255, 255, 255, 0.1)"
          }, void 0, false, {
            fileName: _jsxFileName,
            lineNumber: 15,
            columnNumber: 25
          }, this)
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 14,
          columnNumber: 21
        }, this)
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 13,
        columnNumber: 17
      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
        className: "projects__description",
        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(react_router_dom__WEBPACK_IMPORTED_MODULE_3__.Outlet, {}, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 23,
          columnNumber: 21
        }, this)
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 22,
        columnNumber: 17
      }, this)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 12,
      columnNumber: 13
    }, this)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 7,
    columnNumber: 9
  }, this);
}
_c = Projects;

var _c;

__webpack_require__.$Refresh$.register(_c, "Projects");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/components/ProjectsIndex.js":
/*!*****************************************!*\
  !*** ./src/components/ProjectsIndex.js ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ProjectsIndex)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/habidbespinosa/Documents/projects_2022/new_portfolio/src/components/ProjectsIndex.js";


function ProjectsIndex() {
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
    className: "projects__index",
    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("div", {
      className: "contact__heading",
      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("h1", {
        className: "heading-1 contact__heading--back",
        children: "View a project"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 7,
        columnNumber: 17
      }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("h1", {
        className: "contact__heading--front",
        children: "View a project"
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 8,
        columnNumber: 17
      }, this)]
    }, void 0, true, {
      fileName: _jsxFileName,
      lineNumber: 6,
      columnNumber: 13
    }, this)
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 5,
    columnNumber: 9
  }, this);
}
_c = ProjectsIndex;

var _c;

__webpack_require__.$Refresh$.register(_c, "ProjectsIndex");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/components/ScrollToTop.js":
/*!***************************************!*\
  !*** ./src/components/ScrollToTop.js ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ScrollToTop)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _ButtonFa__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ButtonFa */ "./src/components/ButtonFa.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/habidbespinosa/Documents/projects_2022/new_portfolio/src/components/ScrollToTop.js";



function ScrollToTop() {
  const scrollToTop = () => {
    window.scrollTo({
      top: 0,
      behavior: "smooth"
    });
  };

  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
    onClick: scrollToTop,
    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(_ButtonFa__WEBPACK_IMPORTED_MODULE_1__["default"], {
      classFa: "fas fa-arrow-up"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 17,
      columnNumber: 11
    }, this)
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 14,
    columnNumber: 9
  }, this);
}
_c = ScrollToTop;

var _c;

__webpack_require__.$Refresh$.register(_c, "ScrollToTop");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/components/Skills.js":
/*!**********************************!*\
  !*** ./src/components/Skills.js ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Skills)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _CardIcon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CardIcon */ "./src/components/CardIcon.js");
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers */ "./src/helpers.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/habidbespinosa/Documents/projects_2022/new_portfolio/src/components/Skills.js";




function Skills() {
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("div", {
    className: "skills",
    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("h1", {
      children: "Skills"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 8,
      columnNumber: 13
    }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("div", {
      className: "skills__logos-container",
      children: _helpers__WEBPACK_IMPORTED_MODULE_2__.dataSkills.map((item, i) => item.learned ? /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("div", {
        className: "skills__row",
        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_CardIcon__WEBPACK_IMPORTED_MODULE_1__["default"], {
          icon: item.image,
          alt: item.alt,
          name: item.name,
          width: "100%"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 15,
          columnNumber: 33
        }, this)
      }, i, false, {
        fileName: _jsxFileName,
        lineNumber: 14,
        columnNumber: 29
      }, this) : "")
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 9,
      columnNumber: 13
    }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("h2", {
      children: "Currently Learning :"
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 28,
      columnNumber: 13
    }, this), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("div", {
      className: "skills__logos-container",
      children: _helpers__WEBPACK_IMPORTED_MODULE_2__.dataSkills.map((item, i) => !item.learned ? /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)("div", {
        className: "skills__row",
        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_CardIcon__WEBPACK_IMPORTED_MODULE_1__["default"], {
          icon: item.image,
          alt: item.alt,
          name: item.name,
          width: "100%"
        }, void 0, false, {
          fileName: _jsxFileName,
          lineNumber: 35,
          columnNumber: 33
        }, this)
      }, i, false, {
        fileName: _jsxFileName,
        lineNumber: 34,
        columnNumber: 29
      }, this) : "")
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 29,
      columnNumber: 13
    }, this)]
  }, void 0, true, {
    fileName: _jsxFileName,
    lineNumber: 7,
    columnNumber: 9
  }, this);
}
_c = Skills;

var _c;

__webpack_require__.$Refresh$.register(_c, "Skills");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/helpers.js":
/*!************************!*\
  !*** ./src/helpers.js ***!
  \************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "dataSkills": () => (/* binding */ dataSkills),
/* harmony export */   "projectsData": () => (/* binding */ projectsData)
/* harmony export */ });
/* harmony import */ var _images_logos_html5_svg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./images/logos/html5.svg */ "./src/images/logos/html5.svg");
/* harmony import */ var _images_logos_css3_svg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./images/logos/css3.svg */ "./src/images/logos/css3.svg");
/* harmony import */ var _images_logos_react_svg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./images/logos/react.svg */ "./src/images/logos/react.svg");
/* harmony import */ var _images_logos_sass_svg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./images/logos/sass.svg */ "./src/images/logos/sass.svg");
/* harmony import */ var _images_logos_javascript_svg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./images/logos/javascript.svg */ "./src/images/logos/javascript.svg");
/* harmony import */ var _images_logos_bootstrap_svg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./images/logos/bootstrap.svg */ "./src/images/logos/bootstrap.svg");
/* harmony import */ var _images_logos_git_icon_svg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./images/logos/git-icon.svg */ "./src/images/logos/git-icon.svg");
/* harmony import */ var _images_logos_mongodb_svg__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./images/logos/mongodb.svg */ "./src/images/logos/mongodb.svg");
/* harmony import */ var _images_logos_nodejs_svg__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./images/logos/nodejs.svg */ "./src/images/logos/nodejs.svg");
/* harmony import */ var _images_logos_express_svg__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./images/logos/express.svg */ "./src/images/logos/express.svg");
/* harmony import */ var _images_logos_cloudinary_svg__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./images/logos/cloudinary.svg */ "./src/images/logos/cloudinary.svg");
/* harmony import */ var _images_logos_mongoose_js_svg__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./images/logos/mongoose_js.svg */ "./src/images/logos/mongoose_js.svg");
/* harmony import */ var _images_logos_material_ui_svg__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./images/logos/material-ui.svg */ "./src/images/logos/material-ui.svg");
/* harmony import */ var _images_logos_react_bootstrap_svg__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./images/logos/react-bootstrap.svg */ "./src/images/logos/react-bootstrap.svg");
/* harmony import */ var _images_quiz_pictures_lottie_files_svg__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./images/quiz-pictures/lottie-files.svg */ "./src/images/quiz-pictures/lottie-files.svg");
/* harmony import */ var _images_quiz_pictures_quizApi_logo_svg__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./images/quiz-pictures/quizApi-logo.svg */ "./src/images/quiz-pictures/quizApi-logo.svg");
/* harmony import */ var _images_phaser_pictures_image2vector_svg__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./images/phaser-pictures/image2vector.svg */ "./src/images/phaser-pictures/image2vector.svg");
/* harmony import */ var _images_erwerk_pictures_erwerk_1_png__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./images/erwerk-pictures/erwerk_1.png */ "./src/images/erwerk-pictures/erwerk_1.png");
/* harmony import */ var _images_erwerk_pictures_erwerk_2_png__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./images/erwerk-pictures/erwerk_2.png */ "./src/images/erwerk-pictures/erwerk_2.png");
/* harmony import */ var _images_erwerk_pictures_erwerk_3_png__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./images/erwerk-pictures/erwerk_3.png */ "./src/images/erwerk-pictures/erwerk_3.png");
/* harmony import */ var _images_phaser_pictures_phaser_3_png__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./images/phaser-pictures/phaser_3.png */ "./src/images/phaser-pictures/phaser_3.png");
/* harmony import */ var _images_phaser_pictures_gameStarts_png__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./images/phaser-pictures/gameStarts.png */ "./src/images/phaser-pictures/gameStarts.png");
/* harmony import */ var _images_phaser_pictures_gameOver_png__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./images/phaser-pictures/gameOver.png */ "./src/images/phaser-pictures/gameOver.png");
/* harmony import */ var _images_quiz_pictures_quiz_1_png__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./images/quiz-pictures/quiz_1.png */ "./src/images/quiz-pictures/quiz_1.png");
/* harmony import */ var _images_quiz_pictures_quiz_2_png__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./images/quiz-pictures/quiz_2.png */ "./src/images/quiz-pictures/quiz_2.png");
/* harmony import */ var _images_quiz_pictures_quiz_3_png__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./images/quiz-pictures/quiz_3.png */ "./src/images/quiz-pictures/quiz_3.png");
/* harmony import */ var _images_quiz_pictures_quiz_4_png__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./images/quiz-pictures/quiz_4.png */ "./src/images/quiz-pictures/quiz_4.png");
/* harmony import */ var _images_sta_ber_pictures_sta_ber1_png__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./images/sta-ber-pictures/sta-ber1.png */ "./src/images/sta-ber-pictures/sta-ber1.png");
/* harmony import */ var _images_sta_ber_pictures_sta_ber2_png__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./images/sta-ber-pictures/sta-ber2.png */ "./src/images/sta-ber-pictures/sta-ber2.png");
/* harmony import */ var _images_sta_ber_pictures_sta_ber3_png__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./images/sta-ber-pictures/sta-ber3.png */ "./src/images/sta-ber-pictures/sta-ber3.png");
/* harmony import */ var _images_sta_ber_pictures_sta_ber4_png__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./images/sta-ber-pictures/sta-ber4.png */ "./src/images/sta-ber-pictures/sta-ber4.png");
/* harmony import */ var _images_sta_ber_pictures_sta_ber5_png__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./images/sta-ber-pictures/sta-ber5.png */ "./src/images/sta-ber-pictures/sta-ber5.png");
/* harmony import */ var _images_sta_ber_pictures_sta_ber6_png__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./images/sta-ber-pictures/sta-ber6.png */ "./src/images/sta-ber-pictures/sta-ber6.png");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");


































const dataSkills = [{
  image: _images_logos_html5_svg__WEBPACK_IMPORTED_MODULE_0__["default"],
  alt: "html5-logo",
  name: "html5",
  learned: true
}, {
  image: _images_logos_css3_svg__WEBPACK_IMPORTED_MODULE_1__["default"],
  alt: "css3-logo",
  name: "css3",
  learned: true
}, {
  image: _images_logos_sass_svg__WEBPACK_IMPORTED_MODULE_3__["default"],
  alt: "sass-logo",
  name: "sass",
  learned: true
}, {
  image: _images_logos_bootstrap_svg__WEBPACK_IMPORTED_MODULE_5__["default"],
  alt: "bootstrap-logo",
  name: "bootstrap",
  learned: true
}, {
  image: _images_logos_react_bootstrap_svg__WEBPACK_IMPORTED_MODULE_13__["default"],
  alt: "react-bootstrap-logo",
  name: "react-bootstrap",
  learned: true
}, {
  image: _images_logos_javascript_svg__WEBPACK_IMPORTED_MODULE_4__["default"],
  alt: "javascript-logo",
  name: "javascript",
  learned: true
}, {
  image: _images_logos_react_svg__WEBPACK_IMPORTED_MODULE_2__["default"],
  alt: "react-logo",
  name: "react",
  learned: true
}, {
  image: _images_logos_nodejs_svg__WEBPACK_IMPORTED_MODULE_8__["default"],
  alt: "node-logo",
  name: "nodejs",
  learned: false
}, {
  image: _images_logos_mongodb_svg__WEBPACK_IMPORTED_MODULE_7__["default"],
  alt: "mongo-logo",
  name: "mongodb",
  learned: true
}, {
  image: _images_logos_mongoose_js_svg__WEBPACK_IMPORTED_MODULE_11__["default"],
  alt: "mongoose-logo",
  name: "mongoose",
  learned: true
}, {
  image: _images_logos_express_svg__WEBPACK_IMPORTED_MODULE_9__["default"],
  alt: "express-logo",
  name: "express",
  learned: true
}, {
  image: _images_logos_git_icon_svg__WEBPACK_IMPORTED_MODULE_6__["default"],
  alt: "git-logo",
  name: "git",
  learned: true
}, {
  image: _images_logos_cloudinary_svg__WEBPACK_IMPORTED_MODULE_10__["default"],
  alt: "cloudinary-logo",
  name: "cloudinary",
  learned: true
}, {
  image: _images_logos_material_ui_svg__WEBPACK_IMPORTED_MODULE_12__["default"],
  alt: "mui-logo",
  name: "MaterialUI",
  learned: false
}];
const projectsData = [{
  id: "5f4e5202da9fa6465440e7e6",
  title: "Erwerk",
  sentence: "The Furniture Shop",
  demoLink: "https://habidbesp.github.io/furniture.github.io/",
  githubLink: "https://github.com/habidbesp/furniture.github.io",
  technologies: [{
    image: _images_logos_html5_svg__WEBPACK_IMPORTED_MODULE_0__["default"],
    alt: "html5-logo",
    name: "html5",
    learned: true
  }, {
    image: _images_logos_css3_svg__WEBPACK_IMPORTED_MODULE_1__["default"],
    alt: "css3-logo",
    name: "css3",
    learned: true
  }, {
    image: _images_logos_bootstrap_svg__WEBPACK_IMPORTED_MODULE_5__["default"],
    alt: "bootstrap-logo",
    name: "bootstrap",
    learned: true
  }],
  features: [{
    order: 1,
    image: _images_erwerk_pictures_erwerk_1_png__WEBPACK_IMPORTED_MODULE_17__,
    // description: `The idea behind this project is to create a page for a furniture store, where the visitor is automatically attracted by the elegance of the product for sale. 
    // In this group project, I had the opportunity to experience teamwork planning, as well as practice GIT and GitHub working from different branches and creating pull requests.`,
    description: `The story behind this project was brought to live by a furniture store, that intended to have a page where visitors would immediately get attracted by the elegance and class of the product being advertised. It was a group project, and I had the opportunity to experience teamwork planning, as well as practice GIT and GitHub working from different branches and creating pull requests.
                `
  }, {
    order: 2,
    image: _images_erwerk_pictures_erwerk_2_png__WEBPACK_IMPORTED_MODULE_18__,
    description: `The page has a horizontally scrollable gallery, thus making it easy for the visitor to choose between the different product categories.`
  }, {
    order: 3,
    image: _images_erwerk_pictures_erwerk_3_png__WEBPACK_IMPORTED_MODULE_19__,
    description: `By selecting a category, visitors will find the items for sale and will eventually be able to add to them shopping cart.`
  }]
}, {
  id: "61633ce18699e6e264d7b397",
  title: "Game",
  sentence: "Jump & Run",
  demoLink: "https://habidbesp.github.io/new_project_game.io/",
  githubLink: "https://github.com/habidbesp/new_project_game.io",
  technologies: [{
    image: _images_phaser_pictures_image2vector_svg__WEBPACK_IMPORTED_MODULE_16__["default"],
    alt: "phaser3-logo",
    name: "Phaser3",
    learned: true
  }, {
    image: _images_logos_javascript_svg__WEBPACK_IMPORTED_MODULE_4__["default"],
    alt: "javascript-logo",
    name: "javascript",
    learned: true
  }],
  features: [{
    order: 1,
    image: _images_phaser_pictures_phaser_3_png__WEBPACK_IMPORTED_MODULE_20__,
    description: `Phaser3 is a fast, free and fun open-source framework for canvas and WebGL powered browser game. It offers a unique user experience, and this framework surprises by a comprehensive and insightful set of possibilities at building a game.`
  }, {
    order: 2,
    image: _images_phaser_pictures_gameStarts_png__WEBPACK_IMPORTED_MODULE_21__,
    description: `In a simple but provenly fun way, PHASER 3 explains how to develop your game by using different features like animations and physics from different libraries like matter.js and arcade.js.

                The objective in this game is to collect as many coins as possible using the cursor "right" and "left" to move in the "X" axis, and the cursor "up" to jump over the platforms ("Y" axis).`
  }, {
    order: 3,
    image: _images_phaser_pictures_gameOver_png__WEBPACK_IMPORTED_MODULE_22__,
    description: `Each time the player collects a coin, the score will increase 10 points. If the player touches a bomb, the game finishes by displaying the message "Game Over".`
  }]
}, {
  id: "5f593108b41f145442dcb80a",
  title: "Quiz",
  sentence: "Javascript Quiz",
  demoLink: "https://habidbesp.github.io/quiz/",
  githubLink: "https://github.com/habidbesp/quiz/tree/master",
  technologies: [{
    image: _images_logos_react_svg__WEBPACK_IMPORTED_MODULE_2__["default"],
    alt: "react-logo",
    name: "react",
    learned: true
  }, {
    image: _images_quiz_pictures_quizApi_logo_svg__WEBPACK_IMPORTED_MODULE_15__["default"],
    alt: "quizApi-logo",
    name: "QuizApi",
    learned: true
  }, {
    image: _images_logos_bootstrap_svg__WEBPACK_IMPORTED_MODULE_5__["default"],
    alt: "bootstrap-logo",
    name: "bootstrap",
    learned: true
  }, {
    image: _images_logos_react_bootstrap_svg__WEBPACK_IMPORTED_MODULE_13__["default"],
    alt: "react-bootstrap-logo",
    name: "react-bootstrap",
    learned: true
  }, {
    image: _images_logos_sass_svg__WEBPACK_IMPORTED_MODULE_3__["default"],
    alt: "sass-logo",
    name: "sass",
    learned: true
  }, {
    image: _images_quiz_pictures_lottie_files_svg__WEBPACK_IMPORTED_MODULE_14__["default"],
    alt: "lottie-logo",
    name: "LottieFiles",
    learned: true
  }],
  features: [{
    order: 1,
    image: _images_quiz_pictures_quiz_1_png__WEBPACK_IMPORTED_MODULE_23__,
    description: `Using an API ( QuizApi ) and getting inspired by the QuizApi Homepage: this Quiz is about basic Javascript questions. Using React.js, learning how to implement the logic to create a quiz, and implementing LottieFiles animations with the LottieWeb package.  Developing this project was highly insightful and offers multiple learnings for future projects.
                `
  }, {
    order: 2,
    image: _images_quiz_pictures_quiz_2_png__WEBPACK_IMPORTED_MODULE_24__,
    description: "Starting the quiz, you have the option to choose how many questions you want to answer."
  }, {
    order: 3,
    image: _images_quiz_pictures_quiz_3_png__WEBPACK_IMPORTED_MODULE_25__,
    description: "Once you have started the quiz you will have the possibility to navigate through the questions by clicking on the boxes, or by using the buttons at the bottom."
  }, {
    order: 4,
    image: _images_quiz_pictures_quiz_4_png__WEBPACK_IMPORTED_MODULE_26__,
    description: "Once you submit your answers, you will find your average, as well as the number of correct or false answers that you provided."
  }]
}, {
  id: "5f592fc65109405423129df4",
  title: "Staging Berlin",
  sentence: "Job-Searching Platform For Independent Theatre Artist",
  demoLink: "https://staging-berlin.vercel.app/",
  githubLink: "https://github.com/stagingBerlin",
  technologies: [{
    image: _images_logos_sass_svg__WEBPACK_IMPORTED_MODULE_3__["default"],
    alt: "sass-logo",
    name: "sass",
    learned: true
  }, {
    image: _images_logos_material_ui_svg__WEBPACK_IMPORTED_MODULE_12__["default"],
    alt: "mui-logo",
    name: "MaterialUI",
    learned: false
  }, {
    image: _images_logos_react_svg__WEBPACK_IMPORTED_MODULE_2__["default"],
    alt: "react-logo",
    name: "react",
    learned: true
  }, {
    image: _images_logos_mongodb_svg__WEBPACK_IMPORTED_MODULE_7__["default"],
    alt: "mongo-logo",
    name: "mongodb",
    learned: true
  }, {
    image: _images_logos_mongoose_js_svg__WEBPACK_IMPORTED_MODULE_11__["default"],
    alt: "mongoose-logo",
    name: "mongoose",
    learned: true
  }, {
    image: _images_logos_express_svg__WEBPACK_IMPORTED_MODULE_9__["default"],
    alt: "express-logo",
    name: "express",
    learned: true
  }, {
    image: _images_logos_cloudinary_svg__WEBPACK_IMPORTED_MODULE_10__["default"],
    alt: "cloudinary-logo",
    name: "cloudinary",
    learned: true
  }],
  features: [{
    order: 1,
    image: _images_sta_ber_pictures_sta_ber1_png__WEBPACK_IMPORTED_MODULE_27__,
    description: `The concept behind this project is to offer a platform for independent artists in the area of Berlin. Artists in various spaces often struggle at finding projects to participate in or to easily connect with the right people to source their own projects. This platform helps exactly on these challenges and intends to help artists and project owners in further developing their skills and career by expanding their access to a related network of people.`
  }, {
    order: 2,
    image: _images_sta_ber_pictures_sta_ber2_png__WEBPACK_IMPORTED_MODULE_28__,
    description: `With a basic authentication (email and password), the user can open a profile, either as someone searching for a job or as an employer.`
  }, {
    order: 3,
    image: _images_sta_ber_pictures_sta_ber3_png__WEBPACK_IMPORTED_MODULE_29__,
    description: `Once users have a profile, they can update their details including a profile picture. They can also browse through other users’ profiles, various ongoing projects and then even apply or save them as favorites to their own profile. All is accessible from the user's own dashboard.`
  }, {
    order: 4,
    image: _images_sta_ber_pictures_sta_ber4_png__WEBPACK_IMPORTED_MODULE_30__,
    description: `The employer (artist director) can upload their own projects to the platform adding all desired details and images...`
  }, {
    order: 5,
    image: _images_sta_ber_pictures_sta_ber5_png__WEBPACK_IMPORTED_MODULE_31__,
    description: "...and can add job offers for other artists, depending on the staffing needs of the artist's own project."
  }, {
    order: 6,
    image: _images_sta_ber_pictures_sta_ber6_png__WEBPACK_IMPORTED_MODULE_32__,
    description: "Artists can apply and send a message to a project owner; in response, the project owner can either accept or reject the request."
  }]
}];

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
/* harmony import */ var _App__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./App */ "./src/App.js");
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router-dom/index.js");
/* harmony import */ var _fortawesome_fontawesome_free_css_all_min_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @fortawesome/fontawesome-free/css/all.min.css */ "./node_modules/@fortawesome/fontawesome-free/css/all.min.css");
/* harmony import */ var _sass_main_scss__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sass/main.scss */ "./src/sass/main.scss");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/habidbespinosa/Documents/projects_2022/new_portfolio/src/index.js";







react_dom__WEBPACK_IMPORTED_MODULE_1__.render( /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(react_router_dom__WEBPACK_IMPORTED_MODULE_6__.BrowserRouter, {
  children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(_App__WEBPACK_IMPORTED_MODULE_2__["default"], {}, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 10,
    columnNumber: 5
  }, undefined)
}, void 0, false, {
  fileName: _jsxFileName,
  lineNumber: 9,
  columnNumber: 3
}, undefined), document.getElementById('root'));

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (true) {
			errorOverlay = false;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./node_modules/@formspree/core/dist/formspree.esm.js":
/*!************************************************************!*\
  !*** ./node_modules/@formspree/core/dist/formspree.esm.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Client": () => (/* binding */ Client),
/* harmony export */   "createClient": () => (/* binding */ createClient),
/* harmony export */   "getDefaultClient": () => (/* binding */ getDefaultClient)
/* harmony export */ });
/* harmony import */ var promise_polyfill__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! promise-polyfill */ "./node_modules/promise-polyfill/src/index.js");
/* harmony import */ var fetch_ponyfill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fetch-ponyfill */ "./node_modules/fetch-ponyfill/build/fetch-browser.js");
/* harmony import */ var fetch_ponyfill__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fetch_ponyfill__WEBPACK_IMPORTED_MODULE_1__);



function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

var b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
var b64re = /^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/;

function btoa(string) {
  string = String(string);
  var bitmap,
      a,
      b,
      c,
      result = '',
      i = 0,
      rest = string.length % 3; // To determine the final padding

  for (; i < string.length;) {
    if ((a = string.charCodeAt(i++)) > 255 || (b = string.charCodeAt(i++)) > 255 || (c = string.charCodeAt(i++)) > 255) throw new TypeError("Failed to execute 'btoa' on 'Window': The string to be encoded contains characters outside of the Latin1 range.");
    bitmap = a << 16 | b << 8 | c;
    result += b64.charAt(bitmap >> 18 & 63) + b64.charAt(bitmap >> 12 & 63) + b64.charAt(bitmap >> 6 & 63) + b64.charAt(bitmap & 63);
  } // If there's need of padding, replace the last 'A's with equal signs


  return rest ? result.slice(0, rest - 3) + '==='.substring(rest) : result;
}

function atob(string) {
  // atob can work with strings with whitespaces, even inside the encoded part,
  // but only \t, \n, \f, \r and ' ', which can be stripped.
  string = String(string).replace(/[\t\n\f\r ]+/g, '');
  if (!b64re.test(string)) throw new TypeError("Failed to execute 'atob' on 'Window': The string to be decoded is not correctly encoded."); // Adding the padding if missing, for semplicity

  string += '=='.slice(2 - (string.length & 3));
  var bitmap,
      result = '',
      r1,
      r2,
      i = 0;

  for (; i < string.length;) {
    bitmap = b64.indexOf(string.charAt(i++)) << 18 | b64.indexOf(string.charAt(i++)) << 12 | (r1 = b64.indexOf(string.charAt(i++))) << 6 | (r2 = b64.indexOf(string.charAt(i++)));
    result += r1 === 64 ? String.fromCharCode(bitmap >> 16 & 255) : r2 === 64 ? String.fromCharCode(bitmap >> 16 & 255, bitmap >> 8 & 255) : String.fromCharCode(bitmap >> 16 & 255, bitmap >> 8 & 255, bitmap & 255);
  }

  return result;
}

var version = "2.6.2";
/**
 * Base-64 encodes a (JSON-castable) object.
 *
 * @param obj - The object to encode.
 */

var encode64 = function encode64(obj) {
  return btoa(JSON.stringify(obj));
};
/**
 * Generates a client header.
 *
 * @param givenLabel
 */


var clientHeader = function clientHeader(givenLabel) {
  var label = "@formspree/core@".concat(version);
  if (!givenLabel) return label;
  return "".concat(givenLabel, " ").concat(label);
};
/**
 * The current timestamp.
 */


var now = function now() {
  // @ts-ignore
  return 1 * new Date();
};

var webdriver = function webdriver() {
  return navigator.webdriver || !!document.documentElement.getAttribute(atob('d2ViZHJpdmVy')) || // @ts-ignore
  !!window.callPhantom || // @ts-ignore
  !!window._phantom;
};

var Session = /*#__PURE__*/function () {
  function Session() {
    _classCallCheck(this, Session);

    this.loadedAt = now();
    this.webdriver = webdriver();
  }

  _createClass(Session, [{
    key: "teardown",
    value: function teardown() {}
  }, {
    key: "data",
    value: function data() {
      return {
        loadedAt: this.loadedAt,
        webdriver: this.webdriver
      };
    }
  }]);

  return Session;
}();

var Client = /*#__PURE__*/function () {
  function Client() {
    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, Client);

    this.project = config.project;
    if (typeof window !== 'undefined') this.startBrowserSession();
  }
  /**
   * Starts a browser session.
   */


  _createClass(Client, [{
    key: "startBrowserSession",
    value: function startBrowserSession() {
      if (!this.session) {
        this.session = new Session();
      }
    }
    /**
     * Teardown the client session.
     */

  }, {
    key: "teardown",
    value: function teardown() {
      if (this.session) this.session.teardown();
    }
    /**
     * Submit a form.
     *
     * @param formKey - The form key.
     * @param data - An object or FormData instance containing submission data.
     * @param args - An object of form submission data.
     */

  }, {
    key: "submitForm",
    value: function submitForm(formKey, data) {
      var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var endpoint = opts.endpoint || 'https://formspree.io';
      var fetchImpl = opts.fetchImpl || fetch_ponyfill__WEBPACK_IMPORTED_MODULE_1___default()({
        Promise: promise_polyfill__WEBPACK_IMPORTED_MODULE_0__["default"]
      }).fetch;
      var url = this.project ? "".concat(endpoint, "/p/").concat(this.project, "/f/").concat(formKey) : "".concat(endpoint, "/f/").concat(formKey);

      var serializeBody = function serializeBody(data) {
        if (data instanceof FormData) return data;
        return JSON.stringify(data);
      };

      var headers = {
        Accept: 'application/json',
        'Formspree-Client': clientHeader(opts.clientName)
      };

      if (this.session) {
        headers['Formspree-Session-Data'] = encode64(this.session.data());
      }

      if (!(data instanceof FormData)) {
        headers['Content-Type'] = 'application/json';
      }

      var request = {
        method: 'POST',
        mode: 'cors',
        body: serializeBody(data),
        headers: headers
      };
      return fetchImpl(url, request).then(function (response) {
        return response.json().then(function (body) {
          return {
            body: body,
            response: response
          };
        });
      });
    }
  }]);

  return Client;
}();
/**
 * Constructs the client object.
 */


var createClient = function createClient(config) {
  return new Client(config);
};
/**
 * Fetches the global default client.
 */


var getDefaultClient = function getDefaultClient() {
  if (!defaultClientSingleton) {
    defaultClientSingleton = createClient();
  }

  return defaultClientSingleton;
};
/**
 * The global default client. Note, this client may not get torn down.
 */


var defaultClientSingleton;


/***/ }),

/***/ "./node_modules/@formspree/react/dist/formspree-react.esm.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@formspree/react/dist/formspree-react.esm.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FormspreeProvider": () => (/* binding */ FormspreeProvider),
/* harmony export */   "ValidationError": () => (/* binding */ ValidationError),
/* harmony export */   "useForm": () => (/* binding */ useForm),
/* harmony export */   "useFormspree": () => (/* binding */ useFormspree)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var _formspree_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @formspree/core */ "./node_modules/@formspree/core/dist/formspree.esm.js");



function _typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function (obj) {
      return typeof obj;
    };
  } else {
    _typeof = function (obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit(arr, i) {
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}

var FormspreeContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext({
  client: undefined
});
FormspreeContext.displayName = 'Formspree';

var FormspreeProvider = function FormspreeProvider(props) {
  if (!props.project) {
    throw new Error('project is required');
  }

  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(function () {
    return (0,_formspree_core__WEBPACK_IMPORTED_MODULE_1__.createClient)({
      project: props.project
    });
  }),
      _useState2 = _slicedToArray(_useState, 1),
      client = _useState2[0];

  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {
    client.startBrowserSession();
    return function () {
      client.teardown();
    };
  }, []);
  return react__WEBPACK_IMPORTED_MODULE_0__.createElement(FormspreeContext.Provider, {
    value: {
      client: client
    }
  }, props.children);
};

function useFormspree() {
  var _useContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(FormspreeContext),
      client = _useContext.client;

  return client || (0,_formspree_core__WEBPACK_IMPORTED_MODULE_1__.getDefaultClient)();
}

var version = "2.2.4";

function isEvent(data) {
  return data.preventDefault !== undefined;
}

function useForm(formKey) {
  var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),
      _useState2 = _slicedToArray(_useState, 2),
      submitting = _useState2[0],
      setSubmitting = _useState2[1];

  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),
      _useState4 = _slicedToArray(_useState3, 2),
      succeeded = _useState4[0],
      setSucceeded = _useState4[1];

  var _useState5 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),
      _useState6 = _slicedToArray(_useState5, 2),
      errors = _useState6[0],
      setErrors = _useState6[1];

  var globalClient = useFormspree();
  var client = args.client || globalClient;

  if (!client) {
    throw new Error('You must provide a Formspree client');
  }

  if (!formKey) {
    throw new Error('You must provide a form key or hashid ' + '(e.g. useForm("myForm") or useForm("123xyz")');
  }

  var debug = !!args.debug;
  var extraData = args.data;

  var reset = function reset() {
    setSubmitting(false);
    setSucceeded(false);
    setErrors([]);
  };

  var handleSubmit = function handleSubmit(submissionData) {
    var getFormData = function getFormData(event) {
      event.preventDefault();
      var form = event.target;

      if (form.tagName != 'FORM') {
        throw new Error('submit was triggered for a non-form element');
      }

      return new FormData(form);
    };

    var formData = isEvent(submissionData) ? getFormData(submissionData) : submissionData;

    var appendExtraData = function appendExtraData(prop, value) {
      if (formData instanceof FormData) {
        formData.append(prop, value);
      } else {
        formData = Object.assign(formData, _defineProperty({}, prop, value));
      }
    }; // Append extra data from config


    if (_typeof(extraData) === 'object') {
      for (var prop in extraData) {
        if (typeof extraData[prop] === 'function') {
          appendExtraData(prop, extraData[prop].call(null));
        } else {
          appendExtraData(prop, extraData[prop]);
        }
      }
    }

    setSubmitting(true);
    return client.submitForm(formKey, formData, {
      endpoint: args.endpoint,
      clientName: "@formspree/react@".concat(version)
    }).then(function (result) {
      var status = result.response.status;
      var body;

      if (status === 200) {
        if (debug) console.log('Form submitted', result);
        setSucceeded(true);
        setErrors([]);
      } else if (status >= 400 && status < 500) {
        body = result.body;
        if (body.errors) setErrors(body.errors);
        if (debug) console.log('Validation error', result);
        setSucceeded(false);
      } else {
        if (debug) console.log('Unexpected error', result);
        setSucceeded(false);
      }

      return result;
    })["catch"](function (error) {
      if (debug) console.log('Unexpected error', error);
      setSucceeded(false);
      throw error;
    })["finally"](function () {
      setSubmitting(false);
    });
  };

  return [{
    submitting: submitting,
    succeeded: succeeded,
    errors: errors
  }, handleSubmit, reset];
}

var ValidationError = function ValidationError(props) {
  var prefix = props.prefix,
      field = props.field,
      errors = props.errors,
      attrs = _objectWithoutProperties(props, ["prefix", "field", "errors"]);

  var error = (errors || []).find(function (error) {
    return error.field == field;
  });

  if (!error) {
    return null;
  }

  return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", attrs, prefix, " ", error.message);
};



/***/ }),

/***/ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js ***!
  \***************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* global __webpack_require__ */
var Refresh = __webpack_require__(/*! react-refresh/runtime */ "./node_modules/react-refresh/runtime.js");
/**
 * Extracts exports from a webpack module object.
 * @param {string} moduleId A Webpack module ID.
 * @returns {*} An exports object from the module.
 */


function getModuleExports(moduleId) {
  var maybeModule = __webpack_require__.c[moduleId];

  if (typeof maybeModule === 'undefined') {
    console.warn('[React Refresh] Failed to get exports for module: ' + moduleId + '.');
    return {};
  }

  var exportsOrPromise = maybeModule.exports;

  if (typeof Promise !== 'undefined' && exportsOrPromise instanceof Promise) {
    return exportsOrPromise.then(function (exports) {
      return exports;
    });
  }

  return exportsOrPromise;
}
/**
 * Calculates the signature of a React refresh boundary.
 * If this signature changes, it's unsafe to accept the boundary.
 *
 * This implementation is based on the one in [Metro](https://github.com/facebook/metro/blob/907d6af22ac6ebe58572be418e9253a90665ecbd/packages/metro/src/lib/polyfills/require.js#L795-L816).
 * @param {*} moduleExports A Webpack module exports object.
 * @returns {string[]} A React refresh boundary signature array.
 */


function getReactRefreshBoundarySignature(moduleExports) {
  var signature = [];
  signature.push(Refresh.getFamilyByType(moduleExports));

  if (moduleExports == null || typeof moduleExports !== 'object') {
    // Exit if we can't iterate over exports.
    return signature;
  }

  for (var key in moduleExports) {
    if (key === '__esModule') {
      continue;
    }

    signature.push(key);
    signature.push(Refresh.getFamilyByType(moduleExports[key]));
  }

  return signature;
}
/**
 * Creates a helper that performs a delayed React refresh.
 * @returns {function(function(): void): void} A debounced React refresh function.
 */


function createDebounceUpdate() {
  /**
   * A cached setTimeout handler.
   * @type {number | undefined}
   */
  var refreshTimeout;
  /**
   * Performs react refresh on a delay and clears the error overlay.
   * @param {function(): void} callback
   * @returns {void}
   */

  function enqueueUpdate(callback) {
    if (typeof refreshTimeout === 'undefined') {
      refreshTimeout = setTimeout(function () {
        refreshTimeout = undefined;
        Refresh.performReactRefresh();
        callback();
      }, 30);
    }
  }

  return enqueueUpdate;
}
/**
 * Checks if all exports are likely a React component.
 *
 * This implementation is based on the one in [Metro](https://github.com/facebook/metro/blob/febdba2383113c88296c61e28e4ef6a7f4939fda/packages/metro/src/lib/polyfills/require.js#L748-L774).
 * @param {*} moduleExports A Webpack module exports object.
 * @returns {boolean} Whether the exports are React component like.
 */


function isReactRefreshBoundary(moduleExports) {
  if (Refresh.isLikelyComponentType(moduleExports)) {
    return true;
  }

  if (moduleExports === undefined || moduleExports === null || typeof moduleExports !== 'object') {
    // Exit if we can't iterate over exports.
    return false;
  }

  var hasExports = false;
  var areAllExportsComponents = true;

  for (var key in moduleExports) {
    hasExports = true; // This is the ES Module indicator flag

    if (key === '__esModule') {
      continue;
    } // We can (and have to) safely execute getters here,
    // as Webpack manually assigns harmony exports to getters,
    // without any side-effects attached.
    // Ref: https://github.com/webpack/webpack/blob/b93048643fe74de2a6931755911da1212df55897/lib/MainTemplate.js#L281


    var exportValue = moduleExports[key];

    if (!Refresh.isLikelyComponentType(exportValue)) {
      areAllExportsComponents = false;
    }
  }

  return hasExports && areAllExportsComponents;
}
/**
 * Checks if exports are likely a React component and registers them.
 *
 * This implementation is based on the one in [Metro](https://github.com/facebook/metro/blob/febdba2383113c88296c61e28e4ef6a7f4939fda/packages/metro/src/lib/polyfills/require.js#L818-L835).
 * @param {*} moduleExports A Webpack module exports object.
 * @param {string} moduleId A Webpack module ID.
 * @returns {void}
 */


function registerExportsForReactRefresh(moduleExports, moduleId) {
  if (Refresh.isLikelyComponentType(moduleExports)) {
    // Register module.exports if it is likely a component
    Refresh.register(moduleExports, moduleId + ' %exports%');
  }

  if (moduleExports === undefined || moduleExports === null || typeof moduleExports !== 'object') {
    // Exit if we can't iterate over the exports.
    return;
  }

  for (var key in moduleExports) {
    // Skip registering the ES Module indicator
    if (key === '__esModule') {
      continue;
    }

    var exportValue = moduleExports[key];

    if (Refresh.isLikelyComponentType(exportValue)) {
      var typeID = moduleId + ' %exports% ' + key;
      Refresh.register(exportValue, typeID);
    }
  }
}
/**
 * Compares previous and next module objects to check for mutated boundaries.
 *
 * This implementation is based on the one in [Metro](https://github.com/facebook/metro/blob/907d6af22ac6ebe58572be418e9253a90665ecbd/packages/metro/src/lib/polyfills/require.js#L776-L792).
 * @param {*} prevExports The current Webpack module exports object.
 * @param {*} nextExports The next Webpack module exports object.
 * @returns {boolean} Whether the React refresh boundary should be invalidated.
 */


function shouldInvalidateReactRefreshBoundary(prevExports, nextExports) {
  var prevSignature = getReactRefreshBoundarySignature(prevExports);
  var nextSignature = getReactRefreshBoundarySignature(nextExports);

  if (prevSignature.length !== nextSignature.length) {
    return true;
  }

  for (var i = 0; i < nextSignature.length; i += 1) {
    if (prevSignature[i] !== nextSignature[i]) {
      return true;
    }
  }

  return false;
}

var enqueueUpdate = createDebounceUpdate();

function executeRuntime(moduleExports, moduleId, webpackHot, refreshOverlay, isTest) {
  registerExportsForReactRefresh(moduleExports, moduleId);

  if (webpackHot) {
    var isHotUpdate = !!webpackHot.data;
    var prevExports;

    if (isHotUpdate) {
      prevExports = webpackHot.data.prevExports;
    }

    if (isReactRefreshBoundary(moduleExports)) {
      webpackHot.dispose(
      /**
       * A callback to performs a full refresh if React has unrecoverable errors,
       * and also caches the to-be-disposed module.
       * @param {*} data A hot module data object from Webpack HMR.
       * @returns {void}
       */
      function hotDisposeCallback(data) {
        // We have to mutate the data object to get data registered and cached
        data.prevExports = moduleExports;
      });
      webpackHot.accept(
      /**
       * An error handler to allow self-recovering behaviours.
       * @param {Error} error An error occurred during evaluation of a module.
       * @returns {void}
       */
      function hotErrorHandler(error) {
        if (typeof refreshOverlay !== 'undefined' && refreshOverlay) {
          refreshOverlay.handleRuntimeError(error);
        }

        if (typeof isTest !== 'undefined' && isTest) {
          if (window.onHotAcceptError) {
            window.onHotAcceptError(error.message);
          }
        }

        __webpack_require__.c[moduleId].hot.accept(hotErrorHandler);
      });

      if (isHotUpdate) {
        if (isReactRefreshBoundary(prevExports) && shouldInvalidateReactRefreshBoundary(prevExports, moduleExports)) {
          webpackHot.invalidate();
        } else {
          enqueueUpdate(
          /**
           * A function to dismiss the error overlay after performing React refresh.
           * @returns {void}
           */
          function updateCallback() {
            if (typeof refreshOverlay !== 'undefined' && refreshOverlay) {
              refreshOverlay.clearRuntimeErrors();
            }
          });
        }
      }
    } else {
      if (isHotUpdate && typeof prevExports !== 'undefined') {
        webpackHot.invalidate();
      }
    }
  }
}

module.exports = Object.freeze({
  enqueueUpdate: enqueueUpdate,
  executeRuntime: executeRuntime,
  getModuleExports: getModuleExports,
  isReactRefreshBoundary: isReactRefreshBoundary,
  shouldInvalidateReactRefreshBoundary: shouldInvalidateReactRefreshBoundary,
  registerExportsForReactRefresh: registerExportsForReactRefresh
});

/***/ }),

/***/ "./node_modules/ansi-html-community/index.js":
/*!***************************************************!*\
  !*** ./node_modules/ansi-html-community/index.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";


module.exports = ansiHTML; // Reference to https://github.com/sindresorhus/ansi-regex

var _regANSI = /(?:(?:\u001b\[)|\u009b)(?:(?:[0-9]{1,3})?(?:(?:;[0-9]{0,3})*)?[A-M|f-m])|\u001b[A-M]/;
var _defColors = {
  reset: ['fff', '000'],
  // [FOREGROUD_COLOR, BACKGROUND_COLOR]
  black: '000',
  red: 'ff0000',
  green: '209805',
  yellow: 'e8bf03',
  blue: '0000ff',
  magenta: 'ff00ff',
  cyan: '00ffee',
  lightgrey: 'f0f0f0',
  darkgrey: '888'
};
var _styles = {
  30: 'black',
  31: 'red',
  32: 'green',
  33: 'yellow',
  34: 'blue',
  35: 'magenta',
  36: 'cyan',
  37: 'lightgrey'
};
var _openTags = {
  '1': 'font-weight:bold',
  // bold
  '2': 'opacity:0.5',
  // dim
  '3': '<i>',
  // italic
  '4': '<u>',
  // underscore
  '8': 'display:none',
  // hidden
  '9': '<del>' // delete

};
var _closeTags = {
  '23': '</i>',
  // reset italic
  '24': '</u>',
  // reset underscore
  '29': '</del>' // reset delete

};
[0, 21, 22, 27, 28, 39, 49].forEach(function (n) {
  _closeTags[n] = '</span>';
});
/**
 * Converts text with ANSI color codes to HTML markup.
 * @param {String} text
 * @returns {*}
 */

function ansiHTML(text) {
  // Returns the text if the string has no ANSI escape code.
  if (!_regANSI.test(text)) {
    return text;
  } // Cache opened sequence.


  var ansiCodes = []; // Replace with markup.

  var ret = text.replace(/\033\[(\d+)m/g, function (match, seq) {
    var ot = _openTags[seq];

    if (ot) {
      // If current sequence has been opened, close it.
      if (!!~ansiCodes.indexOf(seq)) {
        // eslint-disable-line no-extra-boolean-cast
        ansiCodes.pop();
        return '</span>';
      } // Open tag.


      ansiCodes.push(seq);
      return ot[0] === '<' ? ot : '<span style="' + ot + ';">';
    }

    var ct = _closeTags[seq];

    if (ct) {
      // Pop sequence
      ansiCodes.pop();
      return ct;
    }

    return '';
  }); // Make sure tags are closed.

  var l = ansiCodes.length;
  l > 0 && (ret += Array(l + 1).join('</span>'));
  return ret;
}
/**
 * Customize colors.
 * @param {Object} colors reference to _defColors
 */


ansiHTML.setColors = function (colors) {
  if (typeof colors !== 'object') {
    throw new Error('`colors` parameter must be an Object.');
  }

  var _finalColors = {};

  for (var key in _defColors) {
    var hex = colors.hasOwnProperty(key) ? colors[key] : null;

    if (!hex) {
      _finalColors[key] = _defColors[key];
      continue;
    }

    if ('reset' === key) {
      if (typeof hex === 'string') {
        hex = [hex];
      }

      if (!Array.isArray(hex) || hex.length === 0 || hex.some(function (h) {
        return typeof h !== 'string';
      })) {
        throw new Error('The value of `' + key + '` property must be an Array and each item could only be a hex string, e.g.: FF0000');
      }

      var defHexColor = _defColors[key];

      if (!hex[0]) {
        hex[0] = defHexColor[0];
      }

      if (hex.length === 1 || !hex[1]) {
        hex = [hex[0]];
        hex.push(defHexColor[1]);
      }

      hex = hex.slice(0, 2);
    } else if (typeof hex !== 'string') {
      throw new Error('The value of `' + key + '` property must be a hex string, e.g.: FF0000');
    }

    _finalColors[key] = hex;
  }

  _setTags(_finalColors);
};
/**
 * Reset colors.
 */


ansiHTML.reset = function () {
  _setTags(_defColors);
};
/**
 * Expose tags, including open and close.
 * @type {Object}
 */


ansiHTML.tags = {};

if (Object.defineProperty) {
  Object.defineProperty(ansiHTML.tags, 'open', {
    get: function () {
      return _openTags;
    }
  });
  Object.defineProperty(ansiHTML.tags, 'close', {
    get: function () {
      return _closeTags;
    }
  });
} else {
  ansiHTML.tags.open = _openTags;
  ansiHTML.tags.close = _closeTags;
}

function _setTags(colors) {
  // reset all
  _openTags['0'] = 'font-weight:normal;opacity:1;color:#' + colors.reset[0] + ';background:#' + colors.reset[1]; // inverse

  _openTags['7'] = 'color:#' + colors.reset[1] + ';background:#' + colors.reset[0]; // dark grey

  _openTags['90'] = 'color:#' + colors.darkgrey;

  for (var code in _styles) {
    var color = _styles[code];
    var oriColor = colors[color] || '000';
    _openTags[code] = 'color:#' + oriColor;
    code = parseInt(code);
    _openTags[(code + 10).toString()] = 'background:#' + oriColor;
  }
}

ansiHTML.reset();

/***/ }),

/***/ "./node_modules/core-js-pure/actual/global-this.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js-pure/actual/global-this.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(/*! ../stable/global-this */ "./node_modules/core-js-pure/stable/global-this.js");

module.exports = parent;

/***/ }),

/***/ "./node_modules/core-js-pure/es/global-this.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js-pure/es/global-this.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ../modules/es.global-this */ "./node_modules/core-js-pure/modules/es.global-this.js");

module.exports = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js-pure/internals/global.js");

/***/ }),

/***/ "./node_modules/core-js-pure/features/global-this.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js-pure/features/global-this.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// TODO: remove from `core-js@4`
__webpack_require__(/*! ../modules/esnext.global-this */ "./node_modules/core-js-pure/modules/esnext.global-this.js");

var parent = __webpack_require__(/*! ../actual/global-this */ "./node_modules/core-js-pure/actual/global-this.js");

module.exports = parent;

/***/ }),

/***/ "./node_modules/core-js-pure/internals/a-callable.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js-pure/internals/a-callable.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js-pure/internals/global.js");

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js-pure/internals/is-callable.js");

var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/core-js-pure/internals/try-to-string.js");

var TypeError = global.TypeError; // `Assert: IsCallable(argument) is true`

module.exports = function (argument) {
  if (isCallable(argument)) return argument;
  throw TypeError(tryToString(argument) + ' is not a function');
};

/***/ }),

/***/ "./node_modules/core-js-pure/internals/an-object.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js-pure/internals/an-object.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js-pure/internals/global.js");

var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js-pure/internals/is-object.js");

var String = global.String;
var TypeError = global.TypeError; // `Assert: Type(argument) is Object`

module.exports = function (argument) {
  if (isObject(argument)) return argument;
  throw TypeError(String(argument) + ' is not an object');
};

/***/ }),

/***/ "./node_modules/core-js-pure/internals/classof-raw.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/classof-raw.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js-pure/internals/function-uncurry-this.js");

var toString = uncurryThis({}.toString);
var stringSlice = uncurryThis(''.slice);

module.exports = function (it) {
  return stringSlice(toString(it), 8, -1);
};

/***/ }),

/***/ "./node_modules/core-js-pure/internals/create-non-enumerable-property.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/create-non-enumerable-property.js ***!
  \*******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js-pure/internals/descriptors.js");

var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js-pure/internals/object-define-property.js");

var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js-pure/internals/create-property-descriptor.js");

module.exports = DESCRIPTORS ? function (object, key, value) {
  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

/***/ }),

/***/ "./node_modules/core-js-pure/internals/create-property-descriptor.js":
/*!***************************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/create-property-descriptor.js ***!
  \***************************************************************************/
/***/ ((module) => {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

/***/ }),

/***/ "./node_modules/core-js-pure/internals/descriptors.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/descriptors.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js-pure/internals/fails.js"); // Detect IE8's incomplete defineProperty implementation


module.exports = !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty({}, 1, {
    get: function () {
      return 7;
    }
  })[1] != 7;
});

/***/ }),

/***/ "./node_modules/core-js-pure/internals/document-create-element.js":
/*!************************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/document-create-element.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js-pure/internals/global.js");

var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js-pure/internals/is-object.js");

var document = global.document; // typeof document.createElement is 'object' in old IE

var EXISTS = isObject(document) && isObject(document.createElement);

module.exports = function (it) {
  return EXISTS ? document.createElement(it) : {};
};

/***/ }),

/***/ "./node_modules/core-js-pure/internals/engine-user-agent.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/engine-user-agent.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js-pure/internals/get-built-in.js");

module.exports = getBuiltIn('navigator', 'userAgent') || '';

/***/ }),

/***/ "./node_modules/core-js-pure/internals/engine-v8-version.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/engine-v8-version.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js-pure/internals/global.js");

var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "./node_modules/core-js-pure/internals/engine-user-agent.js");

var process = global.process;
var Deno = global.Deno;
var versions = process && process.versions || Deno && Deno.version;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.'); // in old Chrome, versions of V8 isn't V8 = Chrome / 10
  // but their correct versions are not interesting for us

  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
} // BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
// so check `userAgent` even if `.v8` exists, but 0


if (!version && userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);

  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match) version = +match[1];
  }
}

module.exports = version;

/***/ }),

/***/ "./node_modules/core-js-pure/internals/export.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js-pure/internals/export.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js-pure/internals/global.js");

var apply = __webpack_require__(/*! ../internals/function-apply */ "./node_modules/core-js-pure/internals/function-apply.js");

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js-pure/internals/function-uncurry-this.js");

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js-pure/internals/is-callable.js");

var getOwnPropertyDescriptor = (__webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js-pure/internals/object-get-own-property-descriptor.js").f);

var isForced = __webpack_require__(/*! ../internals/is-forced */ "./node_modules/core-js-pure/internals/is-forced.js");

var path = __webpack_require__(/*! ../internals/path */ "./node_modules/core-js-pure/internals/path.js");

var bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/core-js-pure/internals/function-bind-context.js");

var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js-pure/internals/create-non-enumerable-property.js");

var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js-pure/internals/has-own-property.js");

var wrapConstructor = function (NativeConstructor) {
  var Wrapper = function (a, b, c) {
    if (this instanceof Wrapper) {
      switch (arguments.length) {
        case 0:
          return new NativeConstructor();

        case 1:
          return new NativeConstructor(a);

        case 2:
          return new NativeConstructor(a, b);
      }

      return new NativeConstructor(a, b, c);
    }

    return apply(NativeConstructor, this, arguments);
  };

  Wrapper.prototype = NativeConstructor.prototype;
  return Wrapper;
};
/*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
  options.name        - the .name of the function if it does not match the key
*/


module.exports = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var PROTO = options.proto;
  var nativeSource = GLOBAL ? global : STATIC ? global[TARGET] : (global[TARGET] || {}).prototype;
  var target = GLOBAL ? path : path[TARGET] || createNonEnumerableProperty(path, TARGET, {})[TARGET];
  var targetPrototype = target.prototype;
  var FORCED, USE_NATIVE, VIRTUAL_PROTOTYPE;
  var key, sourceProperty, targetProperty, nativeProperty, resultProperty, descriptor;

  for (key in source) {
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced); // contains in native

    USE_NATIVE = !FORCED && nativeSource && hasOwn(nativeSource, key);
    targetProperty = target[key];
    if (USE_NATIVE) if (options.noTargetGet) {
      descriptor = getOwnPropertyDescriptor(nativeSource, key);
      nativeProperty = descriptor && descriptor.value;
    } else nativeProperty = nativeSource[key]; // export native or implementation

    sourceProperty = USE_NATIVE && nativeProperty ? nativeProperty : source[key];
    if (USE_NATIVE && typeof targetProperty == typeof sourceProperty) continue; // bind timers to global for call from export context

    if (options.bind && USE_NATIVE) resultProperty = bind(sourceProperty, global); // wrap global constructors for prevent changs in this version
    else if (options.wrap && USE_NATIVE) resultProperty = wrapConstructor(sourceProperty); // make static versions for prototype methods
    else if (PROTO && isCallable(sourceProperty)) resultProperty = uncurryThis(sourceProperty); // default case
    else resultProperty = sourceProperty; // add a flag to not completely full polyfills

    if (options.sham || sourceProperty && sourceProperty.sham || targetProperty && targetProperty.sham) {
      createNonEnumerableProperty(resultProperty, 'sham', true);
    }

    createNonEnumerableProperty(target, key, resultProperty);

    if (PROTO) {
      VIRTUAL_PROTOTYPE = TARGET + 'Prototype';

      if (!hasOwn(path, VIRTUAL_PROTOTYPE)) {
        createNonEnumerableProperty(path, VIRTUAL_PROTOTYPE, {});
      } // export virtual prototype methods


      createNonEnumerableProperty(path[VIRTUAL_PROTOTYPE], key, sourceProperty); // export real prototype methods

      if (options.real && targetPrototype && !targetPrototype[key]) {
        createNonEnumerableProperty(targetPrototype, key, sourceProperty);
      }
    }
  }
};

/***/ }),

/***/ "./node_modules/core-js-pure/internals/fails.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js-pure/internals/fails.js ***!
  \******************************************************/
/***/ ((module) => {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};

/***/ }),

/***/ "./node_modules/core-js-pure/internals/function-apply.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/function-apply.js ***!
  \***************************************************************/
/***/ ((module) => {

var FunctionPrototype = Function.prototype;
var apply = FunctionPrototype.apply;
var bind = FunctionPrototype.bind;
var call = FunctionPrototype.call; // eslint-disable-next-line es/no-reflect -- safe

module.exports = typeof Reflect == 'object' && Reflect.apply || (bind ? call.bind(apply) : function () {
  return call.apply(apply, arguments);
});

/***/ }),

/***/ "./node_modules/core-js-pure/internals/function-bind-context.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/function-bind-context.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js-pure/internals/function-uncurry-this.js");

var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js-pure/internals/a-callable.js");

var bind = uncurryThis(uncurryThis.bind); // optional / simple context binding

module.exports = function (fn, that) {
  aCallable(fn);
  return that === undefined ? fn : bind ? bind(fn, that) : function
    /* ...args */
  () {
    return fn.apply(that, arguments);
  };
};

/***/ }),

/***/ "./node_modules/core-js-pure/internals/function-call.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/function-call.js ***!
  \**************************************************************/
/***/ ((module) => {

var call = Function.prototype.call;
module.exports = call.bind ? call.bind(call) : function () {
  return call.apply(call, arguments);
};

/***/ }),

/***/ "./node_modules/core-js-pure/internals/function-uncurry-this.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/function-uncurry-this.js ***!
  \**********************************************************************/
/***/ ((module) => {

var FunctionPrototype = Function.prototype;
var bind = FunctionPrototype.bind;
var call = FunctionPrototype.call;
var uncurryThis = bind && bind.bind(call, call);
module.exports = bind ? function (fn) {
  return fn && uncurryThis(fn);
} : function (fn) {
  return fn && function () {
    return call.apply(fn, arguments);
  };
};

/***/ }),

/***/ "./node_modules/core-js-pure/internals/get-built-in.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/get-built-in.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var path = __webpack_require__(/*! ../internals/path */ "./node_modules/core-js-pure/internals/path.js");

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js-pure/internals/global.js");

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js-pure/internals/is-callable.js");

var aFunction = function (variable) {
  return isCallable(variable) ? variable : undefined;
};

module.exports = function (namespace, method) {
  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace]) : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];
};

/***/ }),

/***/ "./node_modules/core-js-pure/internals/get-method.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js-pure/internals/get-method.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js-pure/internals/a-callable.js"); // `GetMethod` abstract operation
// https://tc39.es/ecma262/#sec-getmethod


module.exports = function (V, P) {
  var func = V[P];
  return func == null ? undefined : aCallable(func);
};

/***/ }),

/***/ "./node_modules/core-js-pure/internals/global.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js-pure/internals/global.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var check = function (it) {
  return it && it.Math == Math && it;
}; // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028


module.exports = // eslint-disable-next-line es/no-global-this -- safe
check(typeof globalThis == 'object' && globalThis) || check(typeof window == 'object' && window) || // eslint-disable-next-line no-restricted-globals -- safe
check(typeof self == 'object' && self) || check(typeof __webpack_require__.g == 'object' && __webpack_require__.g) || // eslint-disable-next-line no-new-func -- fallback
function () {
  return this;
}() || Function('return this')();

/***/ }),

/***/ "./node_modules/core-js-pure/internals/has-own-property.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/has-own-property.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js-pure/internals/function-uncurry-this.js");

var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js-pure/internals/to-object.js");

var hasOwnProperty = uncurryThis({}.hasOwnProperty); // `HasOwnProperty` abstract operation
// https://tc39.es/ecma262/#sec-hasownproperty

module.exports = Object.hasOwn || function hasOwn(it, key) {
  return hasOwnProperty(toObject(it), key);
};

/***/ }),

/***/ "./node_modules/core-js-pure/internals/ie8-dom-define.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/ie8-dom-define.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js-pure/internals/descriptors.js");

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js-pure/internals/fails.js");

var createElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js-pure/internals/document-create-element.js"); // Thank's IE8 for his funny defineProperty


module.exports = !DESCRIPTORS && !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () {
      return 7;
    }
  }).a != 7;
});

/***/ }),

/***/ "./node_modules/core-js-pure/internals/indexed-object.js":
/*!***************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/indexed-object.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js-pure/internals/global.js");

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js-pure/internals/function-uncurry-this.js");

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js-pure/internals/fails.js");

var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js-pure/internals/classof-raw.js");

var Object = global.Object;
var split = uncurryThis(''.split); // fallback for non-array-like ES3 and non-enumerable old V8 strings

module.exports = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins -- safe
  return !Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) == 'String' ? split(it, '') : Object(it);
} : Object;

/***/ }),

/***/ "./node_modules/core-js-pure/internals/is-callable.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/is-callable.js ***!
  \************************************************************/
/***/ ((module) => {

// `IsCallable` abstract operation
// https://tc39.es/ecma262/#sec-iscallable
module.exports = function (argument) {
  return typeof argument == 'function';
};

/***/ }),

/***/ "./node_modules/core-js-pure/internals/is-forced.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js-pure/internals/is-forced.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js-pure/internals/fails.js");

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js-pure/internals/is-callable.js");

var replacement = /#|\.prototype\./;

var isForced = function (feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true : value == NATIVE ? false : isCallable(detection) ? fails(detection) : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';
module.exports = isForced;

/***/ }),

/***/ "./node_modules/core-js-pure/internals/is-object.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js-pure/internals/is-object.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js-pure/internals/is-callable.js");

module.exports = function (it) {
  return typeof it == 'object' ? it !== null : isCallable(it);
};

/***/ }),

/***/ "./node_modules/core-js-pure/internals/is-pure.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js-pure/internals/is-pure.js ***!
  \********************************************************/
/***/ ((module) => {

module.exports = true;

/***/ }),

/***/ "./node_modules/core-js-pure/internals/is-symbol.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js-pure/internals/is-symbol.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js-pure/internals/global.js");

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js-pure/internals/get-built-in.js");

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js-pure/internals/is-callable.js");

var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js-pure/internals/object-is-prototype-of.js");

var USE_SYMBOL_AS_UID = __webpack_require__(/*! ../internals/use-symbol-as-uid */ "./node_modules/core-js-pure/internals/use-symbol-as-uid.js");

var Object = global.Object;
module.exports = USE_SYMBOL_AS_UID ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  var $Symbol = getBuiltIn('Symbol');
  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, Object(it));
};

/***/ }),

/***/ "./node_modules/core-js-pure/internals/native-symbol.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/native-symbol.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* eslint-disable es/no-symbol -- required for testing */
var V8_VERSION = __webpack_require__(/*! ../internals/engine-v8-version */ "./node_modules/core-js-pure/internals/engine-v8-version.js");

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js-pure/internals/fails.js"); // eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing


module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
  var symbol = Symbol(); // Chrome 38 Symbol has incorrect toString conversion
  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances

  return !String(symbol) || !(Object(symbol) instanceof Symbol) || // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
  !Symbol.sham && V8_VERSION && V8_VERSION < 41;
});

/***/ }),

/***/ "./node_modules/core-js-pure/internals/object-define-property.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/object-define-property.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js-pure/internals/global.js");

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js-pure/internals/descriptors.js");

var IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "./node_modules/core-js-pure/internals/ie8-dom-define.js");

var V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(/*! ../internals/v8-prototype-define-bug */ "./node_modules/core-js-pure/internals/v8-prototype-define-bug.js");

var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js-pure/internals/an-object.js");

var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "./node_modules/core-js-pure/internals/to-property-key.js");

var TypeError = global.TypeError; // eslint-disable-next-line es/no-object-defineproperty -- safe

var $defineProperty = Object.defineProperty; // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe

var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var ENUMERABLE = 'enumerable';
var CONFIGURABLE = 'configurable';
var WRITABLE = 'writable'; // `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty

exports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPropertyKey(P);
  anObject(Attributes);

  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
    var current = $getOwnPropertyDescriptor(O, P);

    if (current && current[WRITABLE]) {
      O[P] = Attributes.value;
      Attributes = {
        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],
        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
        writable: false
      };
    }
  }

  return $defineProperty(O, P, Attributes);
} : $defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPropertyKey(P);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return $defineProperty(O, P, Attributes);
  } catch (error) {
    /* empty */
  }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

/***/ }),

/***/ "./node_modules/core-js-pure/internals/object-get-own-property-descriptor.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/object-get-own-property-descriptor.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js-pure/internals/descriptors.js");

var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js-pure/internals/function-call.js");

var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "./node_modules/core-js-pure/internals/object-property-is-enumerable.js");

var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js-pure/internals/create-property-descriptor.js");

var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js-pure/internals/to-indexed-object.js");

var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "./node_modules/core-js-pure/internals/to-property-key.js");

var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js-pure/internals/has-own-property.js");

var IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "./node_modules/core-js-pure/internals/ie8-dom-define.js"); // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe


var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor; // `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor

exports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPropertyKey(P);
  if (IE8_DOM_DEFINE) try {
    return $getOwnPropertyDescriptor(O, P);
  } catch (error) {
    /* empty */
  }
  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);
};

/***/ }),

/***/ "./node_modules/core-js-pure/internals/object-is-prototype-of.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/object-is-prototype-of.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js-pure/internals/function-uncurry-this.js");

module.exports = uncurryThis({}.isPrototypeOf);

/***/ }),

/***/ "./node_modules/core-js-pure/internals/object-property-is-enumerable.js":
/*!******************************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/object-property-is-enumerable.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


var $propertyIsEnumerable = {}.propertyIsEnumerable; // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe

var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor; // Nashorn ~ JDK8 bug

var NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({
  1: 2
}, 1); // `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable

exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable;

/***/ }),

/***/ "./node_modules/core-js-pure/internals/ordinary-to-primitive.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/ordinary-to-primitive.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js-pure/internals/global.js");

var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js-pure/internals/function-call.js");

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js-pure/internals/is-callable.js");

var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js-pure/internals/is-object.js");

var TypeError = global.TypeError; // `OrdinaryToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-ordinarytoprimitive

module.exports = function (input, pref) {
  var fn, val;
  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;
  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
  throw TypeError("Can't convert object to primitive value");
};

/***/ }),

/***/ "./node_modules/core-js-pure/internals/path.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js-pure/internals/path.js ***!
  \*****************************************************/
/***/ ((module) => {

module.exports = {};

/***/ }),

/***/ "./node_modules/core-js-pure/internals/require-object-coercible.js":
/*!*************************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/require-object-coercible.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js-pure/internals/global.js");

var TypeError = global.TypeError; // `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible

module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on " + it);
  return it;
};

/***/ }),

/***/ "./node_modules/core-js-pure/internals/set-global.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js-pure/internals/set-global.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js-pure/internals/global.js"); // eslint-disable-next-line es/no-object-defineproperty -- safe


var defineProperty = Object.defineProperty;

module.exports = function (key, value) {
  try {
    defineProperty(global, key, {
      value: value,
      configurable: true,
      writable: true
    });
  } catch (error) {
    global[key] = value;
  }

  return value;
};

/***/ }),

/***/ "./node_modules/core-js-pure/internals/shared-store.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/shared-store.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js-pure/internals/global.js");

var setGlobal = __webpack_require__(/*! ../internals/set-global */ "./node_modules/core-js-pure/internals/set-global.js");

var SHARED = '__core-js_shared__';
var store = global[SHARED] || setGlobal(SHARED, {});
module.exports = store;

/***/ }),

/***/ "./node_modules/core-js-pure/internals/shared.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js-pure/internals/shared.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js-pure/internals/is-pure.js");

var store = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/core-js-pure/internals/shared-store.js");

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.20.2',
  mode: IS_PURE ? 'pure' : 'global',
  copyright: '© 2022 Denis Pushkarev (zloirock.ru)'
});

/***/ }),

/***/ "./node_modules/core-js-pure/internals/to-indexed-object.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/to-indexed-object.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// toObject with fallback for non-array-like ES3 strings
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js-pure/internals/indexed-object.js");

var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js-pure/internals/require-object-coercible.js");

module.exports = function (it) {
  return IndexedObject(requireObjectCoercible(it));
};

/***/ }),

/***/ "./node_modules/core-js-pure/internals/to-object.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js-pure/internals/to-object.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js-pure/internals/global.js");

var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js-pure/internals/require-object-coercible.js");

var Object = global.Object; // `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject

module.exports = function (argument) {
  return Object(requireObjectCoercible(argument));
};

/***/ }),

/***/ "./node_modules/core-js-pure/internals/to-primitive.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/to-primitive.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js-pure/internals/global.js");

var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js-pure/internals/function-call.js");

var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js-pure/internals/is-object.js");

var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "./node_modules/core-js-pure/internals/is-symbol.js");

var getMethod = __webpack_require__(/*! ../internals/get-method */ "./node_modules/core-js-pure/internals/get-method.js");

var ordinaryToPrimitive = __webpack_require__(/*! ../internals/ordinary-to-primitive */ "./node_modules/core-js-pure/internals/ordinary-to-primitive.js");

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js-pure/internals/well-known-symbol.js");

var TypeError = global.TypeError;
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive'); // `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive

module.exports = function (input, pref) {
  if (!isObject(input) || isSymbol(input)) return input;
  var exoticToPrim = getMethod(input, TO_PRIMITIVE);
  var result;

  if (exoticToPrim) {
    if (pref === undefined) pref = 'default';
    result = call(exoticToPrim, input, pref);
    if (!isObject(result) || isSymbol(result)) return result;
    throw TypeError("Can't convert object to primitive value");
  }

  if (pref === undefined) pref = 'number';
  return ordinaryToPrimitive(input, pref);
};

/***/ }),

/***/ "./node_modules/core-js-pure/internals/to-property-key.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/to-property-key.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "./node_modules/core-js-pure/internals/to-primitive.js");

var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "./node_modules/core-js-pure/internals/is-symbol.js"); // `ToPropertyKey` abstract operation
// https://tc39.es/ecma262/#sec-topropertykey


module.exports = function (argument) {
  var key = toPrimitive(argument, 'string');
  return isSymbol(key) ? key : key + '';
};

/***/ }),

/***/ "./node_modules/core-js-pure/internals/try-to-string.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/try-to-string.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js-pure/internals/global.js");

var String = global.String;

module.exports = function (argument) {
  try {
    return String(argument);
  } catch (error) {
    return 'Object';
  }
};

/***/ }),

/***/ "./node_modules/core-js-pure/internals/uid.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js-pure/internals/uid.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js-pure/internals/function-uncurry-this.js");

var id = 0;
var postfix = Math.random();
var toString = uncurryThis(1.0.toString);

module.exports = function (key) {
  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);
};

/***/ }),

/***/ "./node_modules/core-js-pure/internals/use-symbol-as-uid.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/use-symbol-as-uid.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* eslint-disable es/no-symbol -- required for testing */
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/native-symbol */ "./node_modules/core-js-pure/internals/native-symbol.js");

module.exports = NATIVE_SYMBOL && !Symbol.sham && typeof Symbol.iterator == 'symbol';

/***/ }),

/***/ "./node_modules/core-js-pure/internals/v8-prototype-define-bug.js":
/*!************************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/v8-prototype-define-bug.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js-pure/internals/descriptors.js");

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js-pure/internals/fails.js"); // V8 ~ Chrome 36-
// https://bugs.chromium.org/p/v8/issues/detail?id=3334


module.exports = DESCRIPTORS && fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(function () {
    /* empty */
  }, 'prototype', {
    value: 42,
    writable: false
  }).prototype != 42;
});

/***/ }),

/***/ "./node_modules/core-js-pure/internals/well-known-symbol.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js-pure/internals/well-known-symbol.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js-pure/internals/global.js");

var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js-pure/internals/shared.js");

var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js-pure/internals/has-own-property.js");

var uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/core-js-pure/internals/uid.js");

var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/native-symbol */ "./node_modules/core-js-pure/internals/native-symbol.js");

var USE_SYMBOL_AS_UID = __webpack_require__(/*! ../internals/use-symbol-as-uid */ "./node_modules/core-js-pure/internals/use-symbol-as-uid.js");

var WellKnownSymbolsStore = shared('wks');
var Symbol = global.Symbol;
var symbolFor = Symbol && Symbol['for'];
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;

module.exports = function (name) {
  if (!hasOwn(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {
    var description = 'Symbol.' + name;

    if (NATIVE_SYMBOL && hasOwn(Symbol, name)) {
      WellKnownSymbolsStore[name] = Symbol[name];
    } else if (USE_SYMBOL_AS_UID && symbolFor) {
      WellKnownSymbolsStore[name] = symbolFor(description);
    } else {
      WellKnownSymbolsStore[name] = createWellKnownSymbol(description);
    }
  }

  return WellKnownSymbolsStore[name];
};

/***/ }),

/***/ "./node_modules/core-js-pure/modules/es.global-this.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js-pure/modules/es.global-this.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js-pure/internals/export.js");

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js-pure/internals/global.js"); // `globalThis` object
// https://tc39.es/ecma262/#sec-globalthis


$({
  global: true
}, {
  globalThis: global
});

/***/ }),

/***/ "./node_modules/core-js-pure/modules/esnext.global-this.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js-pure/modules/esnext.global-this.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// TODO: Remove from `core-js@4`
__webpack_require__(/*! ../modules/es.global-this */ "./node_modules/core-js-pure/modules/es.global-this.js");

/***/ }),

/***/ "./node_modules/core-js-pure/stable/global-this.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js-pure/stable/global-this.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(/*! ../es/global-this */ "./node_modules/core-js-pure/es/global-this.js");

module.exports = parent;

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";

/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/

module.exports = function (cssWithMappingToString) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = "";
      var needLayer = typeof item[5] !== "undefined";

      if (item[4]) {
        content += "@supports (".concat(item[4], ") {");
      }

      if (item[2]) {
        content += "@media ".concat(item[2], " {");
      }

      if (needLayer) {
        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");
      }

      content += cssWithMappingToString(item);

      if (needLayer) {
        content += "}";
      }

      if (item[2]) {
        content += "}";
      }

      if (item[4]) {
        content += "}";
      }

      return content;
    }).join("");
  }; // import a list of modules into the list


  list.i = function i(modules, media, dedupe, supports, layer) {
    if (typeof modules === "string") {
      modules = [[null, modules, undefined]];
    }

    var alreadyImportedModules = {};

    if (dedupe) {
      for (var k = 0; k < this.length; k++) {
        var id = this[k][0];

        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }

    for (var _k = 0; _k < modules.length; _k++) {
      var item = [].concat(modules[_k]);

      if (dedupe && alreadyImportedModules[item[0]]) {
        continue;
      }

      if (typeof layer !== "undefined") {
        if (typeof item[5] === "undefined") {
          item[5] = layer;
        } else {
          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");
          item[5] = layer;
        }
      }

      if (media) {
        if (!item[2]) {
          item[2] = media;
        } else {
          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");
          item[2] = media;
        }
      }

      if (supports) {
        if (!item[4]) {
          item[4] = "".concat(supports);
        } else {
          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");
          item[4] = supports;
        }
      }

      list.push(item);
    }
  };

  return list;
};

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/getUrl.js":
/*!********************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/getUrl.js ***!
  \********************************************************/
/***/ ((module) => {

"use strict";


module.exports = function (url, options) {
  if (!options) {
    options = {};
  }

  if (!url) {
    return url;
  }

  url = String(url.__esModule ? url.default : url); // If url is already wrapped in quotes, remove them

  if (/^['"].*['"]$/.test(url)) {
    url = url.slice(1, -1);
  }

  if (options.hash) {
    url += options.hash;
  } // Should url be wrapped?
  // See https://drafts.csswg.org/css-values-3/#urls


  if (/["'() \t\n]|(%20)/.test(url) || options.needQuotes) {
    return "\"".concat(url.replace(/"/g, '\\"').replace(/\n/g, "\\n"), "\"");
  }

  return url;
};

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/sourceMaps.js":
/*!************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/sourceMaps.js ***!
  \************************************************************/
/***/ ((module) => {

"use strict";


module.exports = function (item) {
  var content = item[1];
  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (typeof btoa === "function") {
    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));
    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
    var sourceMapping = "/*# ".concat(data, " */");
    var sourceURLs = cssMapping.sources.map(function (source) {
      return "/*# sourceURL=".concat(cssMapping.sourceRoot || "").concat(source, " */");
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join("\n");
  }

  return [content].join("\n");
};

/***/ }),

/***/ "./node_modules/events/events.js":
/*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
/***/ ((module) => {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


var R = typeof Reflect === 'object' ? Reflect : null;
var ReflectApply = R && typeof R.apply === 'function' ? R.apply : function ReflectApply(target, receiver, args) {
  return Function.prototype.apply.call(target, receiver, args);
};
var ReflectOwnKeys;

if (R && typeof R.ownKeys === 'function') {
  ReflectOwnKeys = R.ownKeys;
} else if (Object.getOwnPropertySymbols) {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));
  };
} else {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target);
  };
}

function ProcessEmitWarning(warning) {
  if (console && console.warn) console.warn(warning);
}

var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
  return value !== value;
};

function EventEmitter() {
  EventEmitter.init.call(this);
}

module.exports = EventEmitter;
module.exports.once = once; // Backwards-compat with node 0.10.x

EventEmitter.EventEmitter = EventEmitter;
EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined; // By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.

var defaultMaxListeners = 10;

function checkListener(listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }
}

Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
  enumerable: true,
  get: function () {
    return defaultMaxListeners;
  },
  set: function (arg) {
    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
    }

    defaultMaxListeners = arg;
  }
});

EventEmitter.init = function () {
  if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {
    this._events = Object.create(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
}; // Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.


EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
  }

  this._maxListeners = n;
  return this;
};

function _getMaxListeners(that) {
  if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return _getMaxListeners(this);
};

EventEmitter.prototype.emit = function emit(type) {
  var args = [];

  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);

  var doError = type === 'error';
  var events = this._events;
  if (events !== undefined) doError = doError && events.error === undefined;else if (!doError) return false; // If there is no 'error' event listener then throw.

  if (doError) {
    var er;
    if (args.length > 0) er = args[0];

    if (er instanceof Error) {
      // Note: The comments on the `throw` lines are intentional, they show
      // up in Node's output if this results in an unhandled exception.
      throw er; // Unhandled 'error' event
    } // At least give some kind of context to the user


    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
    err.context = er;
    throw err; // Unhandled 'error' event
  }

  var handler = events[type];
  if (handler === undefined) return false;

  if (typeof handler === 'function') {
    ReflectApply(handler, this, args);
  } else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);

    for (var i = 0; i < len; ++i) ReflectApply(listeners[i], this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;
  checkListener(listener);
  events = target._events;

  if (events === undefined) {
    events = target._events = Object.create(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener !== undefined) {
      target.emit('newListener', type, listener.listener ? listener.listener : listener); // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object

      events = target._events;
    }

    existing = events[type];
  }

  if (existing === undefined) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] = prepend ? [listener, existing] : [existing, listener]; // If we've already got an array, just append.
    } else if (prepend) {
      existing.unshift(listener);
    } else {
      existing.push(listener);
    } // Check for listener leak


    m = _getMaxListeners(target);

    if (m > 0 && existing.length > m && !existing.warned) {
      existing.warned = true; // No error code for this since it is a Warning
      // eslint-disable-next-line no-restricted-syntax

      var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');
      w.name = 'MaxListenersExceededWarning';
      w.emitter = target;
      w.type = type;
      w.count = existing.length;
      ProcessEmitWarning(w);
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener = function prependListener(type, listener) {
  return _addListener(this, type, listener, true);
};

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    if (arguments.length === 0) return this.listener.call(this.target);
    return this.listener.apply(this.target, arguments);
  }
}

function _onceWrap(target, type, listener) {
  var state = {
    fired: false,
    wrapFn: undefined,
    target: target,
    type: type,
    listener: listener
  };
  var wrapped = onceWrapper.bind(state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  checkListener(listener);
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {
  checkListener(listener);
  this.prependListener(type, _onceWrap(this, type, listener));
  return this;
}; // Emits a 'removeListener' event if and only if the listener was removed.


EventEmitter.prototype.removeListener = function removeListener(type, listener) {
  var list, events, position, i, originalListener;
  checkListener(listener);
  events = this._events;
  if (events === undefined) return this;
  list = events[type];
  if (list === undefined) return this;

  if (list === listener || list.listener === listener) {
    if (--this._eventsCount === 0) this._events = Object.create(null);else {
      delete events[type];
      if (events.removeListener) this.emit('removeListener', type, list.listener || listener);
    }
  } else if (typeof list !== 'function') {
    position = -1;

    for (i = list.length - 1; i >= 0; i--) {
      if (list[i] === listener || list[i].listener === listener) {
        originalListener = list[i].listener;
        position = i;
        break;
      }
    }

    if (position < 0) return this;
    if (position === 0) list.shift();else {
      spliceOne(list, position);
    }
    if (list.length === 1) events[type] = list[0];
    if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);
  }

  return this;
};

EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {
  var listeners, events, i;
  events = this._events;
  if (events === undefined) return this; // not listening for removeListener, no need to emit

  if (events.removeListener === undefined) {
    if (arguments.length === 0) {
      this._events = Object.create(null);
      this._eventsCount = 0;
    } else if (events[type] !== undefined) {
      if (--this._eventsCount === 0) this._events = Object.create(null);else delete events[type];
    }

    return this;
  } // emit removeListener for all listeners on all events


  if (arguments.length === 0) {
    var keys = Object.keys(events);
    var key;

    for (i = 0; i < keys.length; ++i) {
      key = keys[i];
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }

    this.removeAllListeners('removeListener');
    this._events = Object.create(null);
    this._eventsCount = 0;
    return this;
  }

  listeners = events[type];

  if (typeof listeners === 'function') {
    this.removeListener(type, listeners);
  } else if (listeners !== undefined) {
    // LIFO order
    for (i = listeners.length - 1; i >= 0; i--) {
      this.removeListener(type, listeners[i]);
    }
  }

  return this;
};

function _listeners(target, type, unwrap) {
  var events = target._events;
  if (events === undefined) return [];
  var evlistener = events[type];
  if (evlistener === undefined) return [];
  if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];
  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function (emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;

function listenerCount(type) {
  var events = this._events;

  if (events !== undefined) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener !== undefined) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};

function arrayClone(arr, n) {
  var copy = new Array(n);

  for (var i = 0; i < n; ++i) copy[i] = arr[i];

  return copy;
}

function spliceOne(list, index) {
  for (; index + 1 < list.length; index++) list[index] = list[index + 1];

  list.pop();
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);

  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }

  return ret;
}

function once(emitter, name) {
  return new Promise(function (resolve, reject) {
    function errorListener(err) {
      emitter.removeListener(name, resolver);
      reject(err);
    }

    function resolver() {
      if (typeof emitter.removeListener === 'function') {
        emitter.removeListener('error', errorListener);
      }

      resolve([].slice.call(arguments));
    }

    ;
    eventTargetAgnosticAddListener(emitter, name, resolver, {
      once: true
    });

    if (name !== 'error') {
      addErrorHandlerIfEventEmitter(emitter, errorListener, {
        once: true
      });
    }
  });
}

function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
  if (typeof emitter.on === 'function') {
    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);
  }
}

function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
  if (typeof emitter.on === 'function') {
    if (flags.once) {
      emitter.once(name, listener);
    } else {
      emitter.on(name, listener);
    }
  } else if (typeof emitter.addEventListener === 'function') {
    // EventTarget does not have `error` event semantics like Node
    // EventEmitters, we do not listen for `error` events here.
    emitter.addEventListener(name, function wrapListener(arg) {
      // IE does not have builtin `{ once: true }` support so we
      // have to do it manually.
      if (flags.once) {
        emitter.removeEventListener(name, wrapListener);
      }

      listener(arg);
    });
  } else {
    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
  }
}

/***/ }),

/***/ "./node_modules/fetch-ponyfill/build/fetch-browser.js":
/*!************************************************************!*\
  !*** ./node_modules/fetch-ponyfill/build/fetch-browser.js ***!
  \************************************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;(function (self) {
  'use strict';

  function fetchPonyfill(options) {
    var Promise = options && options.Promise || self.Promise;
    var XMLHttpRequest = options && options.XMLHttpRequest || self.XMLHttpRequest;
    var global = self;
    return function () {
      var self = Object.create(global, {
        fetch: {
          value: undefined,
          writable: true
        }
      });

      (function (self) {
        'use strict';

        if (self.fetch) {
          return;
        }

        var support = {
          searchParams: 'URLSearchParams' in self,
          iterable: 'Symbol' in self && 'iterator' in Symbol,
          blob: 'FileReader' in self && 'Blob' in self && function () {
            try {
              new Blob();
              return true;
            } catch (e) {
              return false;
            }
          }(),
          formData: 'FormData' in self,
          arrayBuffer: 'ArrayBuffer' in self
        };

        if (support.arrayBuffer) {
          var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];

          var isDataView = function (obj) {
            return obj && DataView.prototype.isPrototypeOf(obj);
          };

          var isArrayBufferView = ArrayBuffer.isView || function (obj) {
            return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;
          };
        }

        function normalizeName(name) {
          if (typeof name !== 'string') {
            name = String(name);
          }

          if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
            throw new TypeError('Invalid character in header field name');
          }

          return name.toLowerCase();
        }

        function normalizeValue(value) {
          if (typeof value !== 'string') {
            value = String(value);
          }

          return value;
        } // Build a destructive iterator for the value list


        function iteratorFor(items) {
          var iterator = {
            next: function () {
              var value = items.shift();
              return {
                done: value === undefined,
                value: value
              };
            }
          };

          if (support.iterable) {
            iterator[Symbol.iterator] = function () {
              return iterator;
            };
          }

          return iterator;
        }

        function Headers(headers) {
          this.map = {};

          if (headers instanceof Headers) {
            headers.forEach(function (value, name) {
              this.append(name, value);
            }, this);
          } else if (Array.isArray(headers)) {
            headers.forEach(function (header) {
              this.append(header[0], header[1]);
            }, this);
          } else if (headers) {
            Object.getOwnPropertyNames(headers).forEach(function (name) {
              this.append(name, headers[name]);
            }, this);
          }
        }

        Headers.prototype.append = function (name, value) {
          name = normalizeName(name);
          value = normalizeValue(value);
          var oldValue = this.map[name];
          this.map[name] = oldValue ? oldValue + ',' + value : value;
        };

        Headers.prototype['delete'] = function (name) {
          delete this.map[normalizeName(name)];
        };

        Headers.prototype.get = function (name) {
          name = normalizeName(name);
          return this.has(name) ? this.map[name] : null;
        };

        Headers.prototype.has = function (name) {
          return this.map.hasOwnProperty(normalizeName(name));
        };

        Headers.prototype.set = function (name, value) {
          this.map[normalizeName(name)] = normalizeValue(value);
        };

        Headers.prototype.forEach = function (callback, thisArg) {
          for (var name in this.map) {
            if (this.map.hasOwnProperty(name)) {
              callback.call(thisArg, this.map[name], name, this);
            }
          }
        };

        Headers.prototype.keys = function () {
          var items = [];
          this.forEach(function (value, name) {
            items.push(name);
          });
          return iteratorFor(items);
        };

        Headers.prototype.values = function () {
          var items = [];
          this.forEach(function (value) {
            items.push(value);
          });
          return iteratorFor(items);
        };

        Headers.prototype.entries = function () {
          var items = [];
          this.forEach(function (value, name) {
            items.push([name, value]);
          });
          return iteratorFor(items);
        };

        if (support.iterable) {
          Headers.prototype[Symbol.iterator] = Headers.prototype.entries;
        }

        function consumed(body) {
          if (body.bodyUsed) {
            return Promise.reject(new TypeError('Already read'));
          }

          body.bodyUsed = true;
        }

        function fileReaderReady(reader) {
          return new Promise(function (resolve, reject) {
            reader.onload = function () {
              resolve(reader.result);
            };

            reader.onerror = function () {
              reject(reader.error);
            };
          });
        }

        function readBlobAsArrayBuffer(blob) {
          var reader = new FileReader();
          var promise = fileReaderReady(reader);
          reader.readAsArrayBuffer(blob);
          return promise;
        }

        function readBlobAsText(blob) {
          var reader = new FileReader();
          var promise = fileReaderReady(reader);
          reader.readAsText(blob);
          return promise;
        }

        function readArrayBufferAsText(buf) {
          var view = new Uint8Array(buf);
          var chars = new Array(view.length);

          for (var i = 0; i < view.length; i++) {
            chars[i] = String.fromCharCode(view[i]);
          }

          return chars.join('');
        }

        function bufferClone(buf) {
          if (buf.slice) {
            return buf.slice(0);
          } else {
            var view = new Uint8Array(buf.byteLength);
            view.set(new Uint8Array(buf));
            return view.buffer;
          }
        }

        function Body() {
          this.bodyUsed = false;

          this._initBody = function (body) {
            this._bodyInit = body;

            if (!body) {
              this._bodyText = '';
            } else if (typeof body === 'string') {
              this._bodyText = body;
            } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
              this._bodyBlob = body;
            } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
              this._bodyFormData = body;
            } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
              this._bodyText = body.toString();
            } else if (support.arrayBuffer && support.blob && isDataView(body)) {
              this._bodyArrayBuffer = bufferClone(body.buffer); // IE 10-11 can't handle a DataView body.

              this._bodyInit = new Blob([this._bodyArrayBuffer]);
            } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
              this._bodyArrayBuffer = bufferClone(body);
            } else {
              throw new Error('unsupported BodyInit type');
            }

            if (!this.headers.get('content-type')) {
              if (typeof body === 'string') {
                this.headers.set('content-type', 'text/plain;charset=UTF-8');
              } else if (this._bodyBlob && this._bodyBlob.type) {
                this.headers.set('content-type', this._bodyBlob.type);
              } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
                this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
              }
            }
          };

          if (support.blob) {
            this.blob = function () {
              var rejected = consumed(this);

              if (rejected) {
                return rejected;
              }

              if (this._bodyBlob) {
                return Promise.resolve(this._bodyBlob);
              } else if (this._bodyArrayBuffer) {
                return Promise.resolve(new Blob([this._bodyArrayBuffer]));
              } else if (this._bodyFormData) {
                throw new Error('could not read FormData body as blob');
              } else {
                return Promise.resolve(new Blob([this._bodyText]));
              }
            };

            this.arrayBuffer = function () {
              if (this._bodyArrayBuffer) {
                return consumed(this) || Promise.resolve(this._bodyArrayBuffer);
              } else {
                return this.blob().then(readBlobAsArrayBuffer);
              }
            };
          }

          this.text = function () {
            var rejected = consumed(this);

            if (rejected) {
              return rejected;
            }

            if (this._bodyBlob) {
              return readBlobAsText(this._bodyBlob);
            } else if (this._bodyArrayBuffer) {
              return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));
            } else if (this._bodyFormData) {
              throw new Error('could not read FormData body as text');
            } else {
              return Promise.resolve(this._bodyText);
            }
          };

          if (support.formData) {
            this.formData = function () {
              return this.text().then(decode);
            };
          }

          this.json = function () {
            return this.text().then(JSON.parse);
          };

          return this;
        } // HTTP methods whose capitalization should be normalized


        var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];

        function normalizeMethod(method) {
          var upcased = method.toUpperCase();
          return methods.indexOf(upcased) > -1 ? upcased : method;
        }

        function Request(input, options) {
          options = options || {};
          var body = options.body;

          if (input instanceof Request) {
            if (input.bodyUsed) {
              throw new TypeError('Already read');
            }

            this.url = input.url;
            this.credentials = input.credentials;

            if (!options.headers) {
              this.headers = new Headers(input.headers);
            }

            this.method = input.method;
            this.mode = input.mode;

            if (!body && input._bodyInit != null) {
              body = input._bodyInit;
              input.bodyUsed = true;
            }
          } else {
            this.url = String(input);
          }

          this.credentials = options.credentials || this.credentials || 'omit';

          if (options.headers || !this.headers) {
            this.headers = new Headers(options.headers);
          }

          this.method = normalizeMethod(options.method || this.method || 'GET');
          this.mode = options.mode || this.mode || null;
          this.referrer = null;

          if ((this.method === 'GET' || this.method === 'HEAD') && body) {
            throw new TypeError('Body not allowed for GET or HEAD requests');
          }

          this._initBody(body);
        }

        Request.prototype.clone = function () {
          return new Request(this, {
            body: this._bodyInit
          });
        };

        function decode(body) {
          var form = new FormData();
          body.trim().split('&').forEach(function (bytes) {
            if (bytes) {
              var split = bytes.split('=');
              var name = split.shift().replace(/\+/g, ' ');
              var value = split.join('=').replace(/\+/g, ' ');
              form.append(decodeURIComponent(name), decodeURIComponent(value));
            }
          });
          return form;
        }

        function parseHeaders(rawHeaders) {
          var headers = new Headers(); // Replace instances of \r\n and \n followed by at least one space or horizontal tab with a space
          // https://tools.ietf.org/html/rfc7230#section-3.2

          var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, ' ');
          preProcessedHeaders.split(/\r?\n/).forEach(function (line) {
            var parts = line.split(':');
            var key = parts.shift().trim();

            if (key) {
              var value = parts.join(':').trim();
              headers.append(key, value);
            }
          });
          return headers;
        }

        Body.call(Request.prototype);

        function Response(bodyInit, options) {
          if (!options) {
            options = {};
          }

          this.type = 'default';
          this.status = options.status === undefined ? 200 : options.status;
          this.ok = this.status >= 200 && this.status < 300;
          this.statusText = 'statusText' in options ? options.statusText : 'OK';
          this.headers = new Headers(options.headers);
          this.url = options.url || '';

          this._initBody(bodyInit);
        }

        Body.call(Response.prototype);

        Response.prototype.clone = function () {
          return new Response(this._bodyInit, {
            status: this.status,
            statusText: this.statusText,
            headers: new Headers(this.headers),
            url: this.url
          });
        };

        Response.error = function () {
          var response = new Response(null, {
            status: 0,
            statusText: ''
          });
          response.type = 'error';
          return response;
        };

        var redirectStatuses = [301, 302, 303, 307, 308];

        Response.redirect = function (url, status) {
          if (redirectStatuses.indexOf(status) === -1) {
            throw new RangeError('Invalid status code');
          }

          return new Response(null, {
            status: status,
            headers: {
              location: url
            }
          });
        };

        self.Headers = Headers;
        self.Request = Request;
        self.Response = Response;

        self.fetch = function (input, init) {
          return new Promise(function (resolve, reject) {
            var request = new Request(input, init);
            var xhr = new XMLHttpRequest();

            xhr.onload = function () {
              var options = {
                status: xhr.status,
                statusText: xhr.statusText,
                headers: parseHeaders(xhr.getAllResponseHeaders() || '')
              };
              options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');
              var body = 'response' in xhr ? xhr.response : xhr.responseText;
              resolve(new Response(body, options));
            };

            xhr.onerror = function () {
              reject(new TypeError('Network request failed'));
            };

            xhr.ontimeout = function () {
              reject(new TypeError('Network request failed'));
            };

            xhr.open(request.method, request.url, true);

            if (request.credentials === 'include') {
              xhr.withCredentials = true;
            } else if (request.credentials === 'omit') {
              xhr.withCredentials = false;
            }

            if ('responseType' in xhr && support.blob) {
              xhr.responseType = 'blob';
            }

            request.headers.forEach(function (value, name) {
              xhr.setRequestHeader(name, value);
            });
            xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
          });
        };

        self.fetch.polyfill = true;
      })(typeof self !== 'undefined' ? self : this);

      return {
        fetch: self.fetch,
        Headers: self.Headers,
        Request: self.Request,
        Response: self.Response
      };
    }();
  }

  if (true) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return fetchPonyfill;
    }).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(typeof self !== 'undefined' ? self : typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : this);

/***/ }),

/***/ "./node_modules/history/index.js":
/*!***************************************!*\
  !*** ./node_modules/history/index.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Action": () => (/* binding */ r),
/* harmony export */   "createBrowserHistory": () => (/* binding */ createBrowserHistory),
/* harmony export */   "createHashHistory": () => (/* binding */ createHashHistory),
/* harmony export */   "createMemoryHistory": () => (/* binding */ createMemoryHistory),
/* harmony export */   "createPath": () => (/* binding */ I),
/* harmony export */   "parsePath": () => (/* binding */ J)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");

var r,
    B = r || (r = {});
B.Pop = "POP";
B.Push = "PUSH";
B.Replace = "REPLACE";
var C =  true ? function (b) {
  return Object.freeze(b);
} : 0;

function D(b, h) {
  if (!b) {
    "undefined" !== typeof console && console.warn(h);

    try {
      throw Error(h);
    } catch (e) {}
  }
}

function E(b) {
  b.preventDefault();
  b.returnValue = "";
}

function F() {
  var b = [];
  return {
    get length() {
      return b.length;
    },

    push: function (h) {
      b.push(h);
      return function () {
        b = b.filter(function (e) {
          return e !== h;
        });
      };
    },
    call: function (h) {
      b.forEach(function (e) {
        return e && e(h);
      });
    }
  };
}

function H() {
  return Math.random().toString(36).substr(2, 8);
}

function I(b) {
  var h = b.pathname;
  h = void 0 === h ? "/" : h;
  var e = b.search;
  e = void 0 === e ? "" : e;
  b = b.hash;
  b = void 0 === b ? "" : b;
  e && "?" !== e && (h += "?" === e.charAt(0) ? e : "?" + e);
  b && "#" !== b && (h += "#" === b.charAt(0) ? b : "#" + b);
  return h;
}

function J(b) {
  var h = {};

  if (b) {
    var e = b.indexOf("#");
    0 <= e && (h.hash = b.substr(e), b = b.substr(0, e));
    e = b.indexOf("?");
    0 <= e && (h.search = b.substr(e), b = b.substr(0, e));
    b && (h.pathname = b);
  }

  return h;
}

function createBrowserHistory(b) {
  function h() {
    var c = p.location,
        a = m.state || {};
    return [a.idx, C({
      pathname: c.pathname,
      search: c.search,
      hash: c.hash,
      state: a.usr || null,
      key: a.key || "default"
    })];
  }

  function e(c) {
    return "string" === typeof c ? c : I(c);
  }

  function x(c, a) {
    void 0 === a && (a = null);
    return C((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      pathname: q.pathname,
      hash: "",
      search: ""
    }, "string" === typeof c ? J(c) : c, {
      state: a,
      key: H()
    }));
  }

  function z(c) {
    t = c;
    c = h();
    v = c[0];
    q = c[1];
    d.call({
      action: t,
      location: q
    });
  }

  function A(c, a) {
    function f() {
      A(c, a);
    }

    var l = r.Push,
        k = x(c, a);

    if (!g.length || (g.call({
      action: l,
      location: k,
      retry: f
    }), !1)) {
      var n = [{
        usr: k.state,
        key: k.key,
        idx: v + 1
      }, e(k)];
      k = n[0];
      n = n[1];

      try {
        m.pushState(k, "", n);
      } catch (G) {
        p.location.assign(n);
      }

      z(l);
    }
  }

  function y(c, a) {
    function f() {
      y(c, a);
    }

    var l = r.Replace,
        k = x(c, a);
    g.length && (g.call({
      action: l,
      location: k,
      retry: f
    }), 1) || (k = [{
      usr: k.state,
      key: k.key,
      idx: v
    }, e(k)], m.replaceState(k[0], "", k[1]), z(l));
  }

  function w(c) {
    m.go(c);
  }

  void 0 === b && (b = {});
  b = b.window;
  var p = void 0 === b ? document.defaultView : b,
      m = p.history,
      u = null;
  p.addEventListener("popstate", function () {
    if (u) g.call(u), u = null;else {
      var c = r.Pop,
          a = h(),
          f = a[0];
      a = a[1];
      if (g.length) {
        if (null != f) {
          var l = v - f;
          l && (u = {
            action: c,
            location: a,
            retry: function () {
              w(-1 * l);
            }
          }, w(l));
        } else  true ? D(!1, "You are trying to block a POP navigation to a location that was not created by the history library. The block will fail silently in production, but in general you should do all navigation with the history library (instead of using window.history.pushState directly) to avoid this situation.") : 0;
      } else z(c);
    }
  });
  var t = r.Pop;
  b = h();
  var v = b[0],
      q = b[1],
      d = F(),
      g = F();
  null == v && (v = 0, m.replaceState((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, m.state, {
    idx: v
  }), ""));
  return {
    get action() {
      return t;
    },

    get location() {
      return q;
    },

    createHref: e,
    push: A,
    replace: y,
    go: w,
    back: function () {
      w(-1);
    },
    forward: function () {
      w(1);
    },
    listen: function (c) {
      return d.push(c);
    },
    block: function (c) {
      var a = g.push(c);
      1 === g.length && p.addEventListener("beforeunload", E);
      return function () {
        a();
        g.length || p.removeEventListener("beforeunload", E);
      };
    }
  };
}

;

function createHashHistory(b) {
  function h() {
    var a = J(m.location.hash.substr(1)),
        f = a.pathname,
        l = a.search;
    a = a.hash;
    var k = u.state || {};
    return [k.idx, C({
      pathname: void 0 === f ? "/" : f,
      search: void 0 === l ? "" : l,
      hash: void 0 === a ? "" : a,
      state: k.usr || null,
      key: k.key || "default"
    })];
  }

  function e() {
    if (t) c.call(t), t = null;else {
      var a = r.Pop,
          f = h(),
          l = f[0];
      f = f[1];
      if (c.length) {
        if (null != l) {
          var k = q - l;
          k && (t = {
            action: a,
            location: f,
            retry: function () {
              p(-1 * k);
            }
          }, p(k));
        } else  true ? D(!1, "You are trying to block a POP navigation to a location that was not created by the history library. The block will fail silently in production, but in general you should do all navigation with the history library (instead of using window.history.pushState directly) to avoid this situation.") : 0;
      } else A(a);
    }
  }

  function x(a) {
    var f = document.querySelector("base"),
        l = "";
    f && f.getAttribute("href") && (f = m.location.href, l = f.indexOf("#"), l = -1 === l ? f : f.slice(0, l));
    return l + "#" + ("string" === typeof a ? a : I(a));
  }

  function z(a, f) {
    void 0 === f && (f = null);
    return C((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      pathname: d.pathname,
      hash: "",
      search: ""
    }, "string" === typeof a ? J(a) : a, {
      state: f,
      key: H()
    }));
  }

  function A(a) {
    v = a;
    a = h();
    q = a[0];
    d = a[1];
    g.call({
      action: v,
      location: d
    });
  }

  function y(a, f) {
    function l() {
      y(a, f);
    }

    var k = r.Push,
        n = z(a, f);
     true ? D("/" === n.pathname.charAt(0), "Relative pathnames are not supported in hash history.push(" + JSON.stringify(a) + ")") : 0;

    if (!c.length || (c.call({
      action: k,
      location: n,
      retry: l
    }), !1)) {
      var G = [{
        usr: n.state,
        key: n.key,
        idx: q + 1
      }, x(n)];
      n = G[0];
      G = G[1];

      try {
        u.pushState(n, "", G);
      } catch (K) {
        m.location.assign(G);
      }

      A(k);
    }
  }

  function w(a, f) {
    function l() {
      w(a, f);
    }

    var k = r.Replace,
        n = z(a, f);
     true ? D("/" === n.pathname.charAt(0), "Relative pathnames are not supported in hash history.replace(" + JSON.stringify(a) + ")") : 0;
    c.length && (c.call({
      action: k,
      location: n,
      retry: l
    }), 1) || (n = [{
      usr: n.state,
      key: n.key,
      idx: q
    }, x(n)], u.replaceState(n[0], "", n[1]), A(k));
  }

  function p(a) {
    u.go(a);
  }

  void 0 === b && (b = {});
  b = b.window;
  var m = void 0 === b ? document.defaultView : b,
      u = m.history,
      t = null;
  m.addEventListener("popstate", e);
  m.addEventListener("hashchange", function () {
    var a = h()[1];
    I(a) !== I(d) && e();
  });
  var v = r.Pop;
  b = h();
  var q = b[0],
      d = b[1],
      g = F(),
      c = F();
  null == q && (q = 0, u.replaceState((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, u.state, {
    idx: q
  }), ""));
  return {
    get action() {
      return v;
    },

    get location() {
      return d;
    },

    createHref: x,
    push: y,
    replace: w,
    go: p,
    back: function () {
      p(-1);
    },
    forward: function () {
      p(1);
    },
    listen: function (a) {
      return g.push(a);
    },
    block: function (a) {
      var f = c.push(a);
      1 === c.length && m.addEventListener("beforeunload", E);
      return function () {
        f();
        c.length || m.removeEventListener("beforeunload", E);
      };
    }
  };
}

;

function createMemoryHistory(b) {
  function h(d, g) {
    void 0 === g && (g = null);
    return C((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      pathname: t.pathname,
      search: "",
      hash: ""
    }, "string" === typeof d ? J(d) : d, {
      state: g,
      key: H()
    }));
  }

  function e(d, g, c) {
    return !q.length || (q.call({
      action: d,
      location: g,
      retry: c
    }), !1);
  }

  function x(d, g) {
    u = d;
    t = g;
    v.call({
      action: u,
      location: t
    });
  }

  function z(d, g) {
    var c = r.Push,
        a = h(d, g);
     true ? D("/" === t.pathname.charAt(0), "Relative pathnames are not supported in memory history.push(" + JSON.stringify(d) + ")") : 0;
    e(c, a, function () {
      z(d, g);
    }) && (m += 1, p.splice(m, p.length, a), x(c, a));
  }

  function A(d, g) {
    var c = r.Replace,
        a = h(d, g);
     true ? D("/" === t.pathname.charAt(0), "Relative pathnames are not supported in memory history.replace(" + JSON.stringify(d) + ")") : 0;
    e(c, a, function () {
      A(d, g);
    }) && (p[m] = a, x(c, a));
  }

  function y(d) {
    var g = Math.min(Math.max(m + d, 0), p.length - 1),
        c = r.Pop,
        a = p[g];
    e(c, a, function () {
      y(d);
    }) && (m = g, x(c, a));
  }

  void 0 === b && (b = {});
  var w = b;
  b = w.initialEntries;
  w = w.initialIndex;
  var p = (void 0 === b ? ["/"] : b).map(function (d) {
    var g = C((0,_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({
      pathname: "/",
      search: "",
      hash: "",
      state: null,
      key: H()
    }, "string" === typeof d ? J(d) : d));
     true ? D("/" === g.pathname.charAt(0), "Relative pathnames are not supported in createMemoryHistory({ initialEntries }) (invalid entry: " + JSON.stringify(d) + ")") : 0;
    return g;
  }),
      m = Math.min(Math.max(null == w ? p.length - 1 : w, 0), p.length - 1),
      u = r.Pop,
      t = p[m],
      v = F(),
      q = F();
  return {
    get index() {
      return m;
    },

    get action() {
      return u;
    },

    get location() {
      return t;
    },

    createHref: function (d) {
      return "string" === typeof d ? d : I(d);
    },
    push: z,
    replace: A,
    go: y,
    back: function () {
      y(-1);
    },
    forward: function () {
      y(1);
    },
    listen: function (d) {
      return v.push(d);
    },
    block: function (d) {
      return q.push(d);
    }
  };
}

;


/***/ }),

/***/ "./node_modules/html-entities/lib/index.js":
/*!*************************************************!*\
  !*** ./node_modules/html-entities/lib/index.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";


var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

Object.defineProperty(exports, "__esModule", ({
  value: true
}));

var named_references_1 = __webpack_require__(/*! ./named-references */ "./node_modules/html-entities/lib/named-references.js");

var numeric_unicode_map_1 = __webpack_require__(/*! ./numeric-unicode-map */ "./node_modules/html-entities/lib/numeric-unicode-map.js");

var surrogate_pairs_1 = __webpack_require__(/*! ./surrogate-pairs */ "./node_modules/html-entities/lib/surrogate-pairs.js");

var allNamedReferences = __assign(__assign({}, named_references_1.namedReferences), {
  all: named_references_1.namedReferences.html5
});

var encodeRegExps = {
  specialChars: /[<>'"&]/g,
  nonAscii: /(?:[<>'"&\u0080-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/g,
  nonAsciiPrintable: /(?:[<>'"&\x01-\x08\x11-\x15\x17-\x1F\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/g,
  extensive: /(?:[\x01-\x0c\x0e-\x1f\x21-\x2c\x2e-\x2f\x3a-\x40\x5b-\x60\x7b-\x7d\x7f-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/g
};
var defaultEncodeOptions = {
  mode: 'specialChars',
  level: 'all',
  numeric: 'decimal'
};
/** Encodes all the necessary (specified by `level`) characters in the text */

function encode(text, _a) {
  var _b = _a === void 0 ? defaultEncodeOptions : _a,
      _c = _b.mode,
      mode = _c === void 0 ? 'specialChars' : _c,
      _d = _b.numeric,
      numeric = _d === void 0 ? 'decimal' : _d,
      _e = _b.level,
      level = _e === void 0 ? 'all' : _e;

  if (!text) {
    return '';
  }

  var encodeRegExp = encodeRegExps[mode];
  var references = allNamedReferences[level].characters;
  var isHex = numeric === 'hexadecimal';
  encodeRegExp.lastIndex = 0;

  var _b = encodeRegExp.exec(text);

  var _c;

  if (_b) {
    _c = '';
    var _d = 0;

    do {
      if (_d !== _b.index) {
        _c += text.substring(_d, _b.index);
      }

      var _e = _b[0];
      var result_1 = references[_e];

      if (!result_1) {
        var code_1 = _e.length > 1 ? surrogate_pairs_1.getCodePoint(_e, 0) : _e.charCodeAt(0);
        result_1 = (isHex ? '&#x' + code_1.toString(16) : '&#' + code_1) + ';';
      }

      _c += result_1;
      _d = _b.index + _e.length;
    } while (_b = encodeRegExp.exec(text));

    if (_d !== text.length) {
      _c += text.substring(_d);
    }
  } else {
    _c = text;
  }

  return _c;
}

exports.encode = encode;
var defaultDecodeOptions = {
  scope: 'body',
  level: 'all'
};
var strict = /&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);/g;
var attribute = /&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+)[;=]?/g;
var baseDecodeRegExps = {
  xml: {
    strict: strict,
    attribute: attribute,
    body: named_references_1.bodyRegExps.xml
  },
  html4: {
    strict: strict,
    attribute: attribute,
    body: named_references_1.bodyRegExps.html4
  },
  html5: {
    strict: strict,
    attribute: attribute,
    body: named_references_1.bodyRegExps.html5
  }
};

var decodeRegExps = __assign(__assign({}, baseDecodeRegExps), {
  all: baseDecodeRegExps.html5
});

var fromCharCode = String.fromCharCode;
var outOfBoundsChar = fromCharCode(65533);
var defaultDecodeEntityOptions = {
  level: 'all'
};
/** Decodes a single entity */

function decodeEntity(entity, _a) {
  var _b = (_a === void 0 ? defaultDecodeEntityOptions : _a).level,
      level = _b === void 0 ? 'all' : _b;

  if (!entity) {
    return '';
  }

  var _b = entity;
  var decodeEntityLastChar_1 = entity[entity.length - 1];

  if (false) {} else if (false) {} else {
    var decodeResultByReference_1 = allNamedReferences[level].entities[entity];

    if (decodeResultByReference_1) {
      _b = decodeResultByReference_1;
    } else if (entity[0] === '&' && entity[1] === '#') {
      var decodeSecondChar_1 = entity[2];
      var decodeCode_1 = decodeSecondChar_1 == 'x' || decodeSecondChar_1 == 'X' ? parseInt(entity.substr(3), 16) : parseInt(entity.substr(2));
      _b = decodeCode_1 >= 0x10ffff ? outOfBoundsChar : decodeCode_1 > 65535 ? surrogate_pairs_1.fromCodePoint(decodeCode_1) : fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode_1] || decodeCode_1);
    }
  }

  return _b;
}

exports.decodeEntity = decodeEntity;
/** Decodes all entities in the text */

function decode(text, _a) {
  var decodeSecondChar_1 = _a === void 0 ? defaultDecodeOptions : _a,
      decodeCode_1 = decodeSecondChar_1.level,
      level = decodeCode_1 === void 0 ? 'all' : decodeCode_1,
      _b = decodeSecondChar_1.scope,
      scope = _b === void 0 ? level === 'xml' ? 'strict' : 'body' : _b;

  if (!text) {
    return '';
  }

  var decodeRegExp = decodeRegExps[level][scope];
  var references = allNamedReferences[level].entities;
  var isAttribute = scope === 'attribute';
  var isStrict = scope === 'strict';
  decodeRegExp.lastIndex = 0;
  var replaceMatch_1 = decodeRegExp.exec(text);
  var replaceResult_1;

  if (replaceMatch_1) {
    replaceResult_1 = '';
    var replaceLastIndex_1 = 0;

    do {
      if (replaceLastIndex_1 !== replaceMatch_1.index) {
        replaceResult_1 += text.substring(replaceLastIndex_1, replaceMatch_1.index);
      }

      var replaceInput_1 = replaceMatch_1[0];
      var decodeResult_1 = replaceInput_1;
      var decodeEntityLastChar_2 = replaceInput_1[replaceInput_1.length - 1];

      if (isAttribute && decodeEntityLastChar_2 === '=') {
        decodeResult_1 = replaceInput_1;
      } else if (isStrict && decodeEntityLastChar_2 !== ';') {
        decodeResult_1 = replaceInput_1;
      } else {
        var decodeResultByReference_2 = references[replaceInput_1];

        if (decodeResultByReference_2) {
          decodeResult_1 = decodeResultByReference_2;
        } else if (replaceInput_1[0] === '&' && replaceInput_1[1] === '#') {
          var decodeSecondChar_2 = replaceInput_1[2];
          var decodeCode_2 = decodeSecondChar_2 == 'x' || decodeSecondChar_2 == 'X' ? parseInt(replaceInput_1.substr(3), 16) : parseInt(replaceInput_1.substr(2));
          decodeResult_1 = decodeCode_2 >= 0x10ffff ? outOfBoundsChar : decodeCode_2 > 65535 ? surrogate_pairs_1.fromCodePoint(decodeCode_2) : fromCharCode(numeric_unicode_map_1.numericUnicodeMap[decodeCode_2] || decodeCode_2);
        }
      }

      replaceResult_1 += decodeResult_1;
      replaceLastIndex_1 = replaceMatch_1.index + replaceInput_1.length;
    } while (replaceMatch_1 = decodeRegExp.exec(text));

    if (replaceLastIndex_1 !== text.length) {
      replaceResult_1 += text.substring(replaceLastIndex_1);
    }
  } else {
    replaceResult_1 = text;
  }

  return replaceResult_1;
}

exports.decode = decode;

/***/ }),

/***/ "./node_modules/html-entities/lib/named-references.js":
/*!************************************************************!*\
  !*** ./node_modules/html-entities/lib/named-references.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.bodyRegExps = {
  xml: /&(?:#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g,
  html4: /&(?:nbsp|iexcl|cent|pound|curren|yen|brvbar|sect|uml|copy|ordf|laquo|not|shy|reg|macr|deg|plusmn|sup2|sup3|acute|micro|para|middot|cedil|sup1|ordm|raquo|frac14|frac12|frac34|iquest|Agrave|Aacute|Acirc|Atilde|Auml|Aring|AElig|Ccedil|Egrave|Eacute|Ecirc|Euml|Igrave|Iacute|Icirc|Iuml|ETH|Ntilde|Ograve|Oacute|Ocirc|Otilde|Ouml|times|Oslash|Ugrave|Uacute|Ucirc|Uuml|Yacute|THORN|szlig|agrave|aacute|acirc|atilde|auml|aring|aelig|ccedil|egrave|eacute|ecirc|euml|igrave|iacute|icirc|iuml|eth|ntilde|ograve|oacute|ocirc|otilde|ouml|divide|oslash|ugrave|uacute|ucirc|uuml|yacute|thorn|yuml|quot|amp|lt|gt|#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g,
  html5: /&(?:AElig|AMP|Aacute|Acirc|Agrave|Aring|Atilde|Auml|COPY|Ccedil|ETH|Eacute|Ecirc|Egrave|Euml|GT|Iacute|Icirc|Igrave|Iuml|LT|Ntilde|Oacute|Ocirc|Ograve|Oslash|Otilde|Ouml|QUOT|REG|THORN|Uacute|Ucirc|Ugrave|Uuml|Yacute|aacute|acirc|acute|aelig|agrave|amp|aring|atilde|auml|brvbar|ccedil|cedil|cent|copy|curren|deg|divide|eacute|ecirc|egrave|eth|euml|frac12|frac14|frac34|gt|iacute|icirc|iexcl|igrave|iquest|iuml|laquo|lt|macr|micro|middot|nbsp|not|ntilde|oacute|ocirc|ograve|ordf|ordm|oslash|otilde|ouml|para|plusmn|pound|quot|raquo|reg|sect|shy|sup1|sup2|sup3|szlig|thorn|times|uacute|ucirc|ugrave|uml|uuml|yacute|yen|yuml|#\d+|#[xX][\da-fA-F]+|[0-9a-zA-Z]+);?/g
};
exports.namedReferences = {
  xml: {
    entities: {
      "&lt;": "<",
      "&gt;": ">",
      "&quot;": '"',
      "&apos;": "'",
      "&amp;": "&"
    },
    characters: {
      "<": "&lt;",
      ">": "&gt;",
      '"': "&quot;",
      "'": "&apos;",
      "&": "&amp;"
    }
  },
  html4: {
    entities: {
      "&apos;": "'",
      "&nbsp": " ",
      "&nbsp;": " ",
      "&iexcl": "¡",
      "&iexcl;": "¡",
      "&cent": "¢",
      "&cent;": "¢",
      "&pound": "£",
      "&pound;": "£",
      "&curren": "¤",
      "&curren;": "¤",
      "&yen": "¥",
      "&yen;": "¥",
      "&brvbar": "¦",
      "&brvbar;": "¦",
      "&sect": "§",
      "&sect;": "§",
      "&uml": "¨",
      "&uml;": "¨",
      "&copy": "©",
      "&copy;": "©",
      "&ordf": "ª",
      "&ordf;": "ª",
      "&laquo": "«",
      "&laquo;": "«",
      "&not": "¬",
      "&not;": "¬",
      "&shy": "­",
      "&shy;": "­",
      "&reg": "®",
      "&reg;": "®",
      "&macr": "¯",
      "&macr;": "¯",
      "&deg": "°",
      "&deg;": "°",
      "&plusmn": "±",
      "&plusmn;": "±",
      "&sup2": "²",
      "&sup2;": "²",
      "&sup3": "³",
      "&sup3;": "³",
      "&acute": "´",
      "&acute;": "´",
      "&micro": "µ",
      "&micro;": "µ",
      "&para": "¶",
      "&para;": "¶",
      "&middot": "·",
      "&middot;": "·",
      "&cedil": "¸",
      "&cedil;": "¸",
      "&sup1": "¹",
      "&sup1;": "¹",
      "&ordm": "º",
      "&ordm;": "º",
      "&raquo": "»",
      "&raquo;": "»",
      "&frac14": "¼",
      "&frac14;": "¼",
      "&frac12": "½",
      "&frac12;": "½",
      "&frac34": "¾",
      "&frac34;": "¾",
      "&iquest": "¿",
      "&iquest;": "¿",
      "&Agrave": "À",
      "&Agrave;": "À",
      "&Aacute": "Á",
      "&Aacute;": "Á",
      "&Acirc": "Â",
      "&Acirc;": "Â",
      "&Atilde": "Ã",
      "&Atilde;": "Ã",
      "&Auml": "Ä",
      "&Auml;": "Ä",
      "&Aring": "Å",
      "&Aring;": "Å",
      "&AElig": "Æ",
      "&AElig;": "Æ",
      "&Ccedil": "Ç",
      "&Ccedil;": "Ç",
      "&Egrave": "È",
      "&Egrave;": "È",
      "&Eacute": "É",
      "&Eacute;": "É",
      "&Ecirc": "Ê",
      "&Ecirc;": "Ê",
      "&Euml": "Ë",
      "&Euml;": "Ë",
      "&Igrave": "Ì",
      "&Igrave;": "Ì",
      "&Iacute": "Í",
      "&Iacute;": "Í",
      "&Icirc": "Î",
      "&Icirc;": "Î",
      "&Iuml": "Ï",
      "&Iuml;": "Ï",
      "&ETH": "Ð",
      "&ETH;": "Ð",
      "&Ntilde": "Ñ",
      "&Ntilde;": "Ñ",
      "&Ograve": "Ò",
      "&Ograve;": "Ò",
      "&Oacute": "Ó",
      "&Oacute;": "Ó",
      "&Ocirc": "Ô",
      "&Ocirc;": "Ô",
      "&Otilde": "Õ",
      "&Otilde;": "Õ",
      "&Ouml": "Ö",
      "&Ouml;": "Ö",
      "&times": "×",
      "&times;": "×",
      "&Oslash": "Ø",
      "&Oslash;": "Ø",
      "&Ugrave": "Ù",
      "&Ugrave;": "Ù",
      "&Uacute": "Ú",
      "&Uacute;": "Ú",
      "&Ucirc": "Û",
      "&Ucirc;": "Û",
      "&Uuml": "Ü",
      "&Uuml;": "Ü",
      "&Yacute": "Ý",
      "&Yacute;": "Ý",
      "&THORN": "Þ",
      "&THORN;": "Þ",
      "&szlig": "ß",
      "&szlig;": "ß",
      "&agrave": "à",
      "&agrave;": "à",
      "&aacute": "á",
      "&aacute;": "á",
      "&acirc": "â",
      "&acirc;": "â",
      "&atilde": "ã",
      "&atilde;": "ã",
      "&auml": "ä",
      "&auml;": "ä",
      "&aring": "å",
      "&aring;": "å",
      "&aelig": "æ",
      "&aelig;": "æ",
      "&ccedil": "ç",
      "&ccedil;": "ç",
      "&egrave": "è",
      "&egrave;": "è",
      "&eacute": "é",
      "&eacute;": "é",
      "&ecirc": "ê",
      "&ecirc;": "ê",
      "&euml": "ë",
      "&euml;": "ë",
      "&igrave": "ì",
      "&igrave;": "ì",
      "&iacute": "í",
      "&iacute;": "í",
      "&icirc": "î",
      "&icirc;": "î",
      "&iuml": "ï",
      "&iuml;": "ï",
      "&eth": "ð",
      "&eth;": "ð",
      "&ntilde": "ñ",
      "&ntilde;": "ñ",
      "&ograve": "ò",
      "&ograve;": "ò",
      "&oacute": "ó",
      "&oacute;": "ó",
      "&ocirc": "ô",
      "&ocirc;": "ô",
      "&otilde": "õ",
      "&otilde;": "õ",
      "&ouml": "ö",
      "&ouml;": "ö",
      "&divide": "÷",
      "&divide;": "÷",
      "&oslash": "ø",
      "&oslash;": "ø",
      "&ugrave": "ù",
      "&ugrave;": "ù",
      "&uacute": "ú",
      "&uacute;": "ú",
      "&ucirc": "û",
      "&ucirc;": "û",
      "&uuml": "ü",
      "&uuml;": "ü",
      "&yacute": "ý",
      "&yacute;": "ý",
      "&thorn": "þ",
      "&thorn;": "þ",
      "&yuml": "ÿ",
      "&yuml;": "ÿ",
      "&quot": '"',
      "&quot;": '"',
      "&amp": "&",
      "&amp;": "&",
      "&lt": "<",
      "&lt;": "<",
      "&gt": ">",
      "&gt;": ">",
      "&OElig;": "Œ",
      "&oelig;": "œ",
      "&Scaron;": "Š",
      "&scaron;": "š",
      "&Yuml;": "Ÿ",
      "&circ;": "ˆ",
      "&tilde;": "˜",
      "&ensp;": " ",
      "&emsp;": " ",
      "&thinsp;": " ",
      "&zwnj;": "‌",
      "&zwj;": "‍",
      "&lrm;": "‎",
      "&rlm;": "‏",
      "&ndash;": "–",
      "&mdash;": "—",
      "&lsquo;": "‘",
      "&rsquo;": "’",
      "&sbquo;": "‚",
      "&ldquo;": "“",
      "&rdquo;": "”",
      "&bdquo;": "„",
      "&dagger;": "†",
      "&Dagger;": "‡",
      "&permil;": "‰",
      "&lsaquo;": "‹",
      "&rsaquo;": "›",
      "&euro;": "€",
      "&fnof;": "ƒ",
      "&Alpha;": "Α",
      "&Beta;": "Β",
      "&Gamma;": "Γ",
      "&Delta;": "Δ",
      "&Epsilon;": "Ε",
      "&Zeta;": "Ζ",
      "&Eta;": "Η",
      "&Theta;": "Θ",
      "&Iota;": "Ι",
      "&Kappa;": "Κ",
      "&Lambda;": "Λ",
      "&Mu;": "Μ",
      "&Nu;": "Ν",
      "&Xi;": "Ξ",
      "&Omicron;": "Ο",
      "&Pi;": "Π",
      "&Rho;": "Ρ",
      "&Sigma;": "Σ",
      "&Tau;": "Τ",
      "&Upsilon;": "Υ",
      "&Phi;": "Φ",
      "&Chi;": "Χ",
      "&Psi;": "Ψ",
      "&Omega;": "Ω",
      "&alpha;": "α",
      "&beta;": "β",
      "&gamma;": "γ",
      "&delta;": "δ",
      "&epsilon;": "ε",
      "&zeta;": "ζ",
      "&eta;": "η",
      "&theta;": "θ",
      "&iota;": "ι",
      "&kappa;": "κ",
      "&lambda;": "λ",
      "&mu;": "μ",
      "&nu;": "ν",
      "&xi;": "ξ",
      "&omicron;": "ο",
      "&pi;": "π",
      "&rho;": "ρ",
      "&sigmaf;": "ς",
      "&sigma;": "σ",
      "&tau;": "τ",
      "&upsilon;": "υ",
      "&phi;": "φ",
      "&chi;": "χ",
      "&psi;": "ψ",
      "&omega;": "ω",
      "&thetasym;": "ϑ",
      "&upsih;": "ϒ",
      "&piv;": "ϖ",
      "&bull;": "•",
      "&hellip;": "…",
      "&prime;": "′",
      "&Prime;": "″",
      "&oline;": "‾",
      "&frasl;": "⁄",
      "&weierp;": "℘",
      "&image;": "ℑ",
      "&real;": "ℜ",
      "&trade;": "™",
      "&alefsym;": "ℵ",
      "&larr;": "←",
      "&uarr;": "↑",
      "&rarr;": "→",
      "&darr;": "↓",
      "&harr;": "↔",
      "&crarr;": "↵",
      "&lArr;": "⇐",
      "&uArr;": "⇑",
      "&rArr;": "⇒",
      "&dArr;": "⇓",
      "&hArr;": "⇔",
      "&forall;": "∀",
      "&part;": "∂",
      "&exist;": "∃",
      "&empty;": "∅",
      "&nabla;": "∇",
      "&isin;": "∈",
      "&notin;": "∉",
      "&ni;": "∋",
      "&prod;": "∏",
      "&sum;": "∑",
      "&minus;": "−",
      "&lowast;": "∗",
      "&radic;": "√",
      "&prop;": "∝",
      "&infin;": "∞",
      "&ang;": "∠",
      "&and;": "∧",
      "&or;": "∨",
      "&cap;": "∩",
      "&cup;": "∪",
      "&int;": "∫",
      "&there4;": "∴",
      "&sim;": "∼",
      "&cong;": "≅",
      "&asymp;": "≈",
      "&ne;": "≠",
      "&equiv;": "≡",
      "&le;": "≤",
      "&ge;": "≥",
      "&sub;": "⊂",
      "&sup;": "⊃",
      "&nsub;": "⊄",
      "&sube;": "⊆",
      "&supe;": "⊇",
      "&oplus;": "⊕",
      "&otimes;": "⊗",
      "&perp;": "⊥",
      "&sdot;": "⋅",
      "&lceil;": "⌈",
      "&rceil;": "⌉",
      "&lfloor;": "⌊",
      "&rfloor;": "⌋",
      "&lang;": "〈",
      "&rang;": "〉",
      "&loz;": "◊",
      "&spades;": "♠",
      "&clubs;": "♣",
      "&hearts;": "♥",
      "&diams;": "♦"
    },
    characters: {
      "'": "&apos;",
      " ": "&nbsp;",
      "¡": "&iexcl;",
      "¢": "&cent;",
      "£": "&pound;",
      "¤": "&curren;",
      "¥": "&yen;",
      "¦": "&brvbar;",
      "§": "&sect;",
      "¨": "&uml;",
      "©": "&copy;",
      "ª": "&ordf;",
      "«": "&laquo;",
      "¬": "&not;",
      "­": "&shy;",
      "®": "&reg;",
      "¯": "&macr;",
      "°": "&deg;",
      "±": "&plusmn;",
      "²": "&sup2;",
      "³": "&sup3;",
      "´": "&acute;",
      "µ": "&micro;",
      "¶": "&para;",
      "·": "&middot;",
      "¸": "&cedil;",
      "¹": "&sup1;",
      "º": "&ordm;",
      "»": "&raquo;",
      "¼": "&frac14;",
      "½": "&frac12;",
      "¾": "&frac34;",
      "¿": "&iquest;",
      "À": "&Agrave;",
      "Á": "&Aacute;",
      "Â": "&Acirc;",
      "Ã": "&Atilde;",
      "Ä": "&Auml;",
      "Å": "&Aring;",
      "Æ": "&AElig;",
      "Ç": "&Ccedil;",
      "È": "&Egrave;",
      "É": "&Eacute;",
      "Ê": "&Ecirc;",
      "Ë": "&Euml;",
      "Ì": "&Igrave;",
      "Í": "&Iacute;",
      "Î": "&Icirc;",
      "Ï": "&Iuml;",
      "Ð": "&ETH;",
      "Ñ": "&Ntilde;",
      "Ò": "&Ograve;",
      "Ó": "&Oacute;",
      "Ô": "&Ocirc;",
      "Õ": "&Otilde;",
      "Ö": "&Ouml;",
      "×": "&times;",
      "Ø": "&Oslash;",
      "Ù": "&Ugrave;",
      "Ú": "&Uacute;",
      "Û": "&Ucirc;",
      "Ü": "&Uuml;",
      "Ý": "&Yacute;",
      "Þ": "&THORN;",
      "ß": "&szlig;",
      "à": "&agrave;",
      "á": "&aacute;",
      "â": "&acirc;",
      "ã": "&atilde;",
      "ä": "&auml;",
      "å": "&aring;",
      "æ": "&aelig;",
      "ç": "&ccedil;",
      "è": "&egrave;",
      "é": "&eacute;",
      "ê": "&ecirc;",
      "ë": "&euml;",
      "ì": "&igrave;",
      "í": "&iacute;",
      "î": "&icirc;",
      "ï": "&iuml;",
      "ð": "&eth;",
      "ñ": "&ntilde;",
      "ò": "&ograve;",
      "ó": "&oacute;",
      "ô": "&ocirc;",
      "õ": "&otilde;",
      "ö": "&ouml;",
      "÷": "&divide;",
      "ø": "&oslash;",
      "ù": "&ugrave;",
      "ú": "&uacute;",
      "û": "&ucirc;",
      "ü": "&uuml;",
      "ý": "&yacute;",
      "þ": "&thorn;",
      "ÿ": "&yuml;",
      '"': "&quot;",
      "&": "&amp;",
      "<": "&lt;",
      ">": "&gt;",
      "Œ": "&OElig;",
      "œ": "&oelig;",
      "Š": "&Scaron;",
      "š": "&scaron;",
      "Ÿ": "&Yuml;",
      "ˆ": "&circ;",
      "˜": "&tilde;",
      " ": "&ensp;",
      " ": "&emsp;",
      " ": "&thinsp;",
      "‌": "&zwnj;",
      "‍": "&zwj;",
      "‎": "&lrm;",
      "‏": "&rlm;",
      "–": "&ndash;",
      "—": "&mdash;",
      "‘": "&lsquo;",
      "’": "&rsquo;",
      "‚": "&sbquo;",
      "“": "&ldquo;",
      "”": "&rdquo;",
      "„": "&bdquo;",
      "†": "&dagger;",
      "‡": "&Dagger;",
      "‰": "&permil;",
      "‹": "&lsaquo;",
      "›": "&rsaquo;",
      "€": "&euro;",
      "ƒ": "&fnof;",
      "Α": "&Alpha;",
      "Β": "&Beta;",
      "Γ": "&Gamma;",
      "Δ": "&Delta;",
      "Ε": "&Epsilon;",
      "Ζ": "&Zeta;",
      "Η": "&Eta;",
      "Θ": "&Theta;",
      "Ι": "&Iota;",
      "Κ": "&Kappa;",
      "Λ": "&Lambda;",
      "Μ": "&Mu;",
      "Ν": "&Nu;",
      "Ξ": "&Xi;",
      "Ο": "&Omicron;",
      "Π": "&Pi;",
      "Ρ": "&Rho;",
      "Σ": "&Sigma;",
      "Τ": "&Tau;",
      "Υ": "&Upsilon;",
      "Φ": "&Phi;",
      "Χ": "&Chi;",
      "Ψ": "&Psi;",
      "Ω": "&Omega;",
      "α": "&alpha;",
      "β": "&beta;",
      "γ": "&gamma;",
      "δ": "&delta;",
      "ε": "&epsilon;",
      "ζ": "&zeta;",
      "η": "&eta;",
      "θ": "&theta;",
      "ι": "&iota;",
      "κ": "&kappa;",
      "λ": "&lambda;",
      "μ": "&mu;",
      "ν": "&nu;",
      "ξ": "&xi;",
      "ο": "&omicron;",
      "π": "&pi;",
      "ρ": "&rho;",
      "ς": "&sigmaf;",
      "σ": "&sigma;",
      "τ": "&tau;",
      "υ": "&upsilon;",
      "φ": "&phi;",
      "χ": "&chi;",
      "ψ": "&psi;",
      "ω": "&omega;",
      "ϑ": "&thetasym;",
      "ϒ": "&upsih;",
      "ϖ": "&piv;",
      "•": "&bull;",
      "…": "&hellip;",
      "′": "&prime;",
      "″": "&Prime;",
      "‾": "&oline;",
      "⁄": "&frasl;",
      "℘": "&weierp;",
      "ℑ": "&image;",
      "ℜ": "&real;",
      "™": "&trade;",
      "ℵ": "&alefsym;",
      "←": "&larr;",
      "↑": "&uarr;",
      "→": "&rarr;",
      "↓": "&darr;",
      "↔": "&harr;",
      "↵": "&crarr;",
      "⇐": "&lArr;",
      "⇑": "&uArr;",
      "⇒": "&rArr;",
      "⇓": "&dArr;",
      "⇔": "&hArr;",
      "∀": "&forall;",
      "∂": "&part;",
      "∃": "&exist;",
      "∅": "&empty;",
      "∇": "&nabla;",
      "∈": "&isin;",
      "∉": "&notin;",
      "∋": "&ni;",
      "∏": "&prod;",
      "∑": "&sum;",
      "−": "&minus;",
      "∗": "&lowast;",
      "√": "&radic;",
      "∝": "&prop;",
      "∞": "&infin;",
      "∠": "&ang;",
      "∧": "&and;",
      "∨": "&or;",
      "∩": "&cap;",
      "∪": "&cup;",
      "∫": "&int;",
      "∴": "&there4;",
      "∼": "&sim;",
      "≅": "&cong;",
      "≈": "&asymp;",
      "≠": "&ne;",
      "≡": "&equiv;",
      "≤": "&le;",
      "≥": "&ge;",
      "⊂": "&sub;",
      "⊃": "&sup;",
      "⊄": "&nsub;",
      "⊆": "&sube;",
      "⊇": "&supe;",
      "⊕": "&oplus;",
      "⊗": "&otimes;",
      "⊥": "&perp;",
      "⋅": "&sdot;",
      "⌈": "&lceil;",
      "⌉": "&rceil;",
      "⌊": "&lfloor;",
      "⌋": "&rfloor;",
      "〈": "&lang;",
      "〉": "&rang;",
      "◊": "&loz;",
      "♠": "&spades;",
      "♣": "&clubs;",
      "♥": "&hearts;",
      "♦": "&diams;"
    }
  },
  html5: {
    entities: {
      "&AElig": "Æ",
      "&AElig;": "Æ",
      "&AMP": "&",
      "&AMP;": "&",
      "&Aacute": "Á",
      "&Aacute;": "Á",
      "&Abreve;": "Ă",
      "&Acirc": "Â",
      "&Acirc;": "Â",
      "&Acy;": "А",
      "&Afr;": "𝔄",
      "&Agrave": "À",
      "&Agrave;": "À",
      "&Alpha;": "Α",
      "&Amacr;": "Ā",
      "&And;": "⩓",
      "&Aogon;": "Ą",
      "&Aopf;": "𝔸",
      "&ApplyFunction;": "⁡",
      "&Aring": "Å",
      "&Aring;": "Å",
      "&Ascr;": "𝒜",
      "&Assign;": "≔",
      "&Atilde": "Ã",
      "&Atilde;": "Ã",
      "&Auml": "Ä",
      "&Auml;": "Ä",
      "&Backslash;": "∖",
      "&Barv;": "⫧",
      "&Barwed;": "⌆",
      "&Bcy;": "Б",
      "&Because;": "∵",
      "&Bernoullis;": "ℬ",
      "&Beta;": "Β",
      "&Bfr;": "𝔅",
      "&Bopf;": "𝔹",
      "&Breve;": "˘",
      "&Bscr;": "ℬ",
      "&Bumpeq;": "≎",
      "&CHcy;": "Ч",
      "&COPY": "©",
      "&COPY;": "©",
      "&Cacute;": "Ć",
      "&Cap;": "⋒",
      "&CapitalDifferentialD;": "ⅅ",
      "&Cayleys;": "ℭ",
      "&Ccaron;": "Č",
      "&Ccedil": "Ç",
      "&Ccedil;": "Ç",
      "&Ccirc;": "Ĉ",
      "&Cconint;": "∰",
      "&Cdot;": "Ċ",
      "&Cedilla;": "¸",
      "&CenterDot;": "·",
      "&Cfr;": "ℭ",
      "&Chi;": "Χ",
      "&CircleDot;": "⊙",
      "&CircleMinus;": "⊖",
      "&CirclePlus;": "⊕",
      "&CircleTimes;": "⊗",
      "&ClockwiseContourIntegral;": "∲",
      "&CloseCurlyDoubleQuote;": "”",
      "&CloseCurlyQuote;": "’",
      "&Colon;": "∷",
      "&Colone;": "⩴",
      "&Congruent;": "≡",
      "&Conint;": "∯",
      "&ContourIntegral;": "∮",
      "&Copf;": "ℂ",
      "&Coproduct;": "∐",
      "&CounterClockwiseContourIntegral;": "∳",
      "&Cross;": "⨯",
      "&Cscr;": "𝒞",
      "&Cup;": "⋓",
      "&CupCap;": "≍",
      "&DD;": "ⅅ",
      "&DDotrahd;": "⤑",
      "&DJcy;": "Ђ",
      "&DScy;": "Ѕ",
      "&DZcy;": "Џ",
      "&Dagger;": "‡",
      "&Darr;": "↡",
      "&Dashv;": "⫤",
      "&Dcaron;": "Ď",
      "&Dcy;": "Д",
      "&Del;": "∇",
      "&Delta;": "Δ",
      "&Dfr;": "𝔇",
      "&DiacriticalAcute;": "´",
      "&DiacriticalDot;": "˙",
      "&DiacriticalDoubleAcute;": "˝",
      "&DiacriticalGrave;": "`",
      "&DiacriticalTilde;": "˜",
      "&Diamond;": "⋄",
      "&DifferentialD;": "ⅆ",
      "&Dopf;": "𝔻",
      "&Dot;": "¨",
      "&DotDot;": "⃜",
      "&DotEqual;": "≐",
      "&DoubleContourIntegral;": "∯",
      "&DoubleDot;": "¨",
      "&DoubleDownArrow;": "⇓",
      "&DoubleLeftArrow;": "⇐",
      "&DoubleLeftRightArrow;": "⇔",
      "&DoubleLeftTee;": "⫤",
      "&DoubleLongLeftArrow;": "⟸",
      "&DoubleLongLeftRightArrow;": "⟺",
      "&DoubleLongRightArrow;": "⟹",
      "&DoubleRightArrow;": "⇒",
      "&DoubleRightTee;": "⊨",
      "&DoubleUpArrow;": "⇑",
      "&DoubleUpDownArrow;": "⇕",
      "&DoubleVerticalBar;": "∥",
      "&DownArrow;": "↓",
      "&DownArrowBar;": "⤓",
      "&DownArrowUpArrow;": "⇵",
      "&DownBreve;": "̑",
      "&DownLeftRightVector;": "⥐",
      "&DownLeftTeeVector;": "⥞",
      "&DownLeftVector;": "↽",
      "&DownLeftVectorBar;": "⥖",
      "&DownRightTeeVector;": "⥟",
      "&DownRightVector;": "⇁",
      "&DownRightVectorBar;": "⥗",
      "&DownTee;": "⊤",
      "&DownTeeArrow;": "↧",
      "&Downarrow;": "⇓",
      "&Dscr;": "𝒟",
      "&Dstrok;": "Đ",
      "&ENG;": "Ŋ",
      "&ETH": "Ð",
      "&ETH;": "Ð",
      "&Eacute": "É",
      "&Eacute;": "É",
      "&Ecaron;": "Ě",
      "&Ecirc": "Ê",
      "&Ecirc;": "Ê",
      "&Ecy;": "Э",
      "&Edot;": "Ė",
      "&Efr;": "𝔈",
      "&Egrave": "È",
      "&Egrave;": "È",
      "&Element;": "∈",
      "&Emacr;": "Ē",
      "&EmptySmallSquare;": "◻",
      "&EmptyVerySmallSquare;": "▫",
      "&Eogon;": "Ę",
      "&Eopf;": "𝔼",
      "&Epsilon;": "Ε",
      "&Equal;": "⩵",
      "&EqualTilde;": "≂",
      "&Equilibrium;": "⇌",
      "&Escr;": "ℰ",
      "&Esim;": "⩳",
      "&Eta;": "Η",
      "&Euml": "Ë",
      "&Euml;": "Ë",
      "&Exists;": "∃",
      "&ExponentialE;": "ⅇ",
      "&Fcy;": "Ф",
      "&Ffr;": "𝔉",
      "&FilledSmallSquare;": "◼",
      "&FilledVerySmallSquare;": "▪",
      "&Fopf;": "𝔽",
      "&ForAll;": "∀",
      "&Fouriertrf;": "ℱ",
      "&Fscr;": "ℱ",
      "&GJcy;": "Ѓ",
      "&GT": ">",
      "&GT;": ">",
      "&Gamma;": "Γ",
      "&Gammad;": "Ϝ",
      "&Gbreve;": "Ğ",
      "&Gcedil;": "Ģ",
      "&Gcirc;": "Ĝ",
      "&Gcy;": "Г",
      "&Gdot;": "Ġ",
      "&Gfr;": "𝔊",
      "&Gg;": "⋙",
      "&Gopf;": "𝔾",
      "&GreaterEqual;": "≥",
      "&GreaterEqualLess;": "⋛",
      "&GreaterFullEqual;": "≧",
      "&GreaterGreater;": "⪢",
      "&GreaterLess;": "≷",
      "&GreaterSlantEqual;": "⩾",
      "&GreaterTilde;": "≳",
      "&Gscr;": "𝒢",
      "&Gt;": "≫",
      "&HARDcy;": "Ъ",
      "&Hacek;": "ˇ",
      "&Hat;": "^",
      "&Hcirc;": "Ĥ",
      "&Hfr;": "ℌ",
      "&HilbertSpace;": "ℋ",
      "&Hopf;": "ℍ",
      "&HorizontalLine;": "─",
      "&Hscr;": "ℋ",
      "&Hstrok;": "Ħ",
      "&HumpDownHump;": "≎",
      "&HumpEqual;": "≏",
      "&IEcy;": "Е",
      "&IJlig;": "Ĳ",
      "&IOcy;": "Ё",
      "&Iacute": "Í",
      "&Iacute;": "Í",
      "&Icirc": "Î",
      "&Icirc;": "Î",
      "&Icy;": "И",
      "&Idot;": "İ",
      "&Ifr;": "ℑ",
      "&Igrave": "Ì",
      "&Igrave;": "Ì",
      "&Im;": "ℑ",
      "&Imacr;": "Ī",
      "&ImaginaryI;": "ⅈ",
      "&Implies;": "⇒",
      "&Int;": "∬",
      "&Integral;": "∫",
      "&Intersection;": "⋂",
      "&InvisibleComma;": "⁣",
      "&InvisibleTimes;": "⁢",
      "&Iogon;": "Į",
      "&Iopf;": "𝕀",
      "&Iota;": "Ι",
      "&Iscr;": "ℐ",
      "&Itilde;": "Ĩ",
      "&Iukcy;": "І",
      "&Iuml": "Ï",
      "&Iuml;": "Ï",
      "&Jcirc;": "Ĵ",
      "&Jcy;": "Й",
      "&Jfr;": "𝔍",
      "&Jopf;": "𝕁",
      "&Jscr;": "𝒥",
      "&Jsercy;": "Ј",
      "&Jukcy;": "Є",
      "&KHcy;": "Х",
      "&KJcy;": "Ќ",
      "&Kappa;": "Κ",
      "&Kcedil;": "Ķ",
      "&Kcy;": "К",
      "&Kfr;": "𝔎",
      "&Kopf;": "𝕂",
      "&Kscr;": "𝒦",
      "&LJcy;": "Љ",
      "&LT": "<",
      "&LT;": "<",
      "&Lacute;": "Ĺ",
      "&Lambda;": "Λ",
      "&Lang;": "⟪",
      "&Laplacetrf;": "ℒ",
      "&Larr;": "↞",
      "&Lcaron;": "Ľ",
      "&Lcedil;": "Ļ",
      "&Lcy;": "Л",
      "&LeftAngleBracket;": "⟨",
      "&LeftArrow;": "←",
      "&LeftArrowBar;": "⇤",
      "&LeftArrowRightArrow;": "⇆",
      "&LeftCeiling;": "⌈",
      "&LeftDoubleBracket;": "⟦",
      "&LeftDownTeeVector;": "⥡",
      "&LeftDownVector;": "⇃",
      "&LeftDownVectorBar;": "⥙",
      "&LeftFloor;": "⌊",
      "&LeftRightArrow;": "↔",
      "&LeftRightVector;": "⥎",
      "&LeftTee;": "⊣",
      "&LeftTeeArrow;": "↤",
      "&LeftTeeVector;": "⥚",
      "&LeftTriangle;": "⊲",
      "&LeftTriangleBar;": "⧏",
      "&LeftTriangleEqual;": "⊴",
      "&LeftUpDownVector;": "⥑",
      "&LeftUpTeeVector;": "⥠",
      "&LeftUpVector;": "↿",
      "&LeftUpVectorBar;": "⥘",
      "&LeftVector;": "↼",
      "&LeftVectorBar;": "⥒",
      "&Leftarrow;": "⇐",
      "&Leftrightarrow;": "⇔",
      "&LessEqualGreater;": "⋚",
      "&LessFullEqual;": "≦",
      "&LessGreater;": "≶",
      "&LessLess;": "⪡",
      "&LessSlantEqual;": "⩽",
      "&LessTilde;": "≲",
      "&Lfr;": "𝔏",
      "&Ll;": "⋘",
      "&Lleftarrow;": "⇚",
      "&Lmidot;": "Ŀ",
      "&LongLeftArrow;": "⟵",
      "&LongLeftRightArrow;": "⟷",
      "&LongRightArrow;": "⟶",
      "&Longleftarrow;": "⟸",
      "&Longleftrightarrow;": "⟺",
      "&Longrightarrow;": "⟹",
      "&Lopf;": "𝕃",
      "&LowerLeftArrow;": "↙",
      "&LowerRightArrow;": "↘",
      "&Lscr;": "ℒ",
      "&Lsh;": "↰",
      "&Lstrok;": "Ł",
      "&Lt;": "≪",
      "&Map;": "⤅",
      "&Mcy;": "М",
      "&MediumSpace;": " ",
      "&Mellintrf;": "ℳ",
      "&Mfr;": "𝔐",
      "&MinusPlus;": "∓",
      "&Mopf;": "𝕄",
      "&Mscr;": "ℳ",
      "&Mu;": "Μ",
      "&NJcy;": "Њ",
      "&Nacute;": "Ń",
      "&Ncaron;": "Ň",
      "&Ncedil;": "Ņ",
      "&Ncy;": "Н",
      "&NegativeMediumSpace;": "​",
      "&NegativeThickSpace;": "​",
      "&NegativeThinSpace;": "​",
      "&NegativeVeryThinSpace;": "​",
      "&NestedGreaterGreater;": "≫",
      "&NestedLessLess;": "≪",
      "&NewLine;": "\n",
      "&Nfr;": "𝔑",
      "&NoBreak;": "⁠",
      "&NonBreakingSpace;": " ",
      "&Nopf;": "ℕ",
      "&Not;": "⫬",
      "&NotCongruent;": "≢",
      "&NotCupCap;": "≭",
      "&NotDoubleVerticalBar;": "∦",
      "&NotElement;": "∉",
      "&NotEqual;": "≠",
      "&NotEqualTilde;": "≂̸",
      "&NotExists;": "∄",
      "&NotGreater;": "≯",
      "&NotGreaterEqual;": "≱",
      "&NotGreaterFullEqual;": "≧̸",
      "&NotGreaterGreater;": "≫̸",
      "&NotGreaterLess;": "≹",
      "&NotGreaterSlantEqual;": "⩾̸",
      "&NotGreaterTilde;": "≵",
      "&NotHumpDownHump;": "≎̸",
      "&NotHumpEqual;": "≏̸",
      "&NotLeftTriangle;": "⋪",
      "&NotLeftTriangleBar;": "⧏̸",
      "&NotLeftTriangleEqual;": "⋬",
      "&NotLess;": "≮",
      "&NotLessEqual;": "≰",
      "&NotLessGreater;": "≸",
      "&NotLessLess;": "≪̸",
      "&NotLessSlantEqual;": "⩽̸",
      "&NotLessTilde;": "≴",
      "&NotNestedGreaterGreater;": "⪢̸",
      "&NotNestedLessLess;": "⪡̸",
      "&NotPrecedes;": "⊀",
      "&NotPrecedesEqual;": "⪯̸",
      "&NotPrecedesSlantEqual;": "⋠",
      "&NotReverseElement;": "∌",
      "&NotRightTriangle;": "⋫",
      "&NotRightTriangleBar;": "⧐̸",
      "&NotRightTriangleEqual;": "⋭",
      "&NotSquareSubset;": "⊏̸",
      "&NotSquareSubsetEqual;": "⋢",
      "&NotSquareSuperset;": "⊐̸",
      "&NotSquareSupersetEqual;": "⋣",
      "&NotSubset;": "⊂⃒",
      "&NotSubsetEqual;": "⊈",
      "&NotSucceeds;": "⊁",
      "&NotSucceedsEqual;": "⪰̸",
      "&NotSucceedsSlantEqual;": "⋡",
      "&NotSucceedsTilde;": "≿̸",
      "&NotSuperset;": "⊃⃒",
      "&NotSupersetEqual;": "⊉",
      "&NotTilde;": "≁",
      "&NotTildeEqual;": "≄",
      "&NotTildeFullEqual;": "≇",
      "&NotTildeTilde;": "≉",
      "&NotVerticalBar;": "∤",
      "&Nscr;": "𝒩",
      "&Ntilde": "Ñ",
      "&Ntilde;": "Ñ",
      "&Nu;": "Ν",
      "&OElig;": "Œ",
      "&Oacute": "Ó",
      "&Oacute;": "Ó",
      "&Ocirc": "Ô",
      "&Ocirc;": "Ô",
      "&Ocy;": "О",
      "&Odblac;": "Ő",
      "&Ofr;": "𝔒",
      "&Ograve": "Ò",
      "&Ograve;": "Ò",
      "&Omacr;": "Ō",
      "&Omega;": "Ω",
      "&Omicron;": "Ο",
      "&Oopf;": "𝕆",
      "&OpenCurlyDoubleQuote;": "“",
      "&OpenCurlyQuote;": "‘",
      "&Or;": "⩔",
      "&Oscr;": "𝒪",
      "&Oslash": "Ø",
      "&Oslash;": "Ø",
      "&Otilde": "Õ",
      "&Otilde;": "Õ",
      "&Otimes;": "⨷",
      "&Ouml": "Ö",
      "&Ouml;": "Ö",
      "&OverBar;": "‾",
      "&OverBrace;": "⏞",
      "&OverBracket;": "⎴",
      "&OverParenthesis;": "⏜",
      "&PartialD;": "∂",
      "&Pcy;": "П",
      "&Pfr;": "𝔓",
      "&Phi;": "Φ",
      "&Pi;": "Π",
      "&PlusMinus;": "±",
      "&Poincareplane;": "ℌ",
      "&Popf;": "ℙ",
      "&Pr;": "⪻",
      "&Precedes;": "≺",
      "&PrecedesEqual;": "⪯",
      "&PrecedesSlantEqual;": "≼",
      "&PrecedesTilde;": "≾",
      "&Prime;": "″",
      "&Product;": "∏",
      "&Proportion;": "∷",
      "&Proportional;": "∝",
      "&Pscr;": "𝒫",
      "&Psi;": "Ψ",
      "&QUOT": '"',
      "&QUOT;": '"',
      "&Qfr;": "𝔔",
      "&Qopf;": "ℚ",
      "&Qscr;": "𝒬",
      "&RBarr;": "⤐",
      "&REG": "®",
      "&REG;": "®",
      "&Racute;": "Ŕ",
      "&Rang;": "⟫",
      "&Rarr;": "↠",
      "&Rarrtl;": "⤖",
      "&Rcaron;": "Ř",
      "&Rcedil;": "Ŗ",
      "&Rcy;": "Р",
      "&Re;": "ℜ",
      "&ReverseElement;": "∋",
      "&ReverseEquilibrium;": "⇋",
      "&ReverseUpEquilibrium;": "⥯",
      "&Rfr;": "ℜ",
      "&Rho;": "Ρ",
      "&RightAngleBracket;": "⟩",
      "&RightArrow;": "→",
      "&RightArrowBar;": "⇥",
      "&RightArrowLeftArrow;": "⇄",
      "&RightCeiling;": "⌉",
      "&RightDoubleBracket;": "⟧",
      "&RightDownTeeVector;": "⥝",
      "&RightDownVector;": "⇂",
      "&RightDownVectorBar;": "⥕",
      "&RightFloor;": "⌋",
      "&RightTee;": "⊢",
      "&RightTeeArrow;": "↦",
      "&RightTeeVector;": "⥛",
      "&RightTriangle;": "⊳",
      "&RightTriangleBar;": "⧐",
      "&RightTriangleEqual;": "⊵",
      "&RightUpDownVector;": "⥏",
      "&RightUpTeeVector;": "⥜",
      "&RightUpVector;": "↾",
      "&RightUpVectorBar;": "⥔",
      "&RightVector;": "⇀",
      "&RightVectorBar;": "⥓",
      "&Rightarrow;": "⇒",
      "&Ropf;": "ℝ",
      "&RoundImplies;": "⥰",
      "&Rrightarrow;": "⇛",
      "&Rscr;": "ℛ",
      "&Rsh;": "↱",
      "&RuleDelayed;": "⧴",
      "&SHCHcy;": "Щ",
      "&SHcy;": "Ш",
      "&SOFTcy;": "Ь",
      "&Sacute;": "Ś",
      "&Sc;": "⪼",
      "&Scaron;": "Š",
      "&Scedil;": "Ş",
      "&Scirc;": "Ŝ",
      "&Scy;": "С",
      "&Sfr;": "𝔖",
      "&ShortDownArrow;": "↓",
      "&ShortLeftArrow;": "←",
      "&ShortRightArrow;": "→",
      "&ShortUpArrow;": "↑",
      "&Sigma;": "Σ",
      "&SmallCircle;": "∘",
      "&Sopf;": "𝕊",
      "&Sqrt;": "√",
      "&Square;": "□",
      "&SquareIntersection;": "⊓",
      "&SquareSubset;": "⊏",
      "&SquareSubsetEqual;": "⊑",
      "&SquareSuperset;": "⊐",
      "&SquareSupersetEqual;": "⊒",
      "&SquareUnion;": "⊔",
      "&Sscr;": "𝒮",
      "&Star;": "⋆",
      "&Sub;": "⋐",
      "&Subset;": "⋐",
      "&SubsetEqual;": "⊆",
      "&Succeeds;": "≻",
      "&SucceedsEqual;": "⪰",
      "&SucceedsSlantEqual;": "≽",
      "&SucceedsTilde;": "≿",
      "&SuchThat;": "∋",
      "&Sum;": "∑",
      "&Sup;": "⋑",
      "&Superset;": "⊃",
      "&SupersetEqual;": "⊇",
      "&Supset;": "⋑",
      "&THORN": "Þ",
      "&THORN;": "Þ",
      "&TRADE;": "™",
      "&TSHcy;": "Ћ",
      "&TScy;": "Ц",
      "&Tab;": "\t",
      "&Tau;": "Τ",
      "&Tcaron;": "Ť",
      "&Tcedil;": "Ţ",
      "&Tcy;": "Т",
      "&Tfr;": "𝔗",
      "&Therefore;": "∴",
      "&Theta;": "Θ",
      "&ThickSpace;": "  ",
      "&ThinSpace;": " ",
      "&Tilde;": "∼",
      "&TildeEqual;": "≃",
      "&TildeFullEqual;": "≅",
      "&TildeTilde;": "≈",
      "&Topf;": "𝕋",
      "&TripleDot;": "⃛",
      "&Tscr;": "𝒯",
      "&Tstrok;": "Ŧ",
      "&Uacute": "Ú",
      "&Uacute;": "Ú",
      "&Uarr;": "↟",
      "&Uarrocir;": "⥉",
      "&Ubrcy;": "Ў",
      "&Ubreve;": "Ŭ",
      "&Ucirc": "Û",
      "&Ucirc;": "Û",
      "&Ucy;": "У",
      "&Udblac;": "Ű",
      "&Ufr;": "𝔘",
      "&Ugrave": "Ù",
      "&Ugrave;": "Ù",
      "&Umacr;": "Ū",
      "&UnderBar;": "_",
      "&UnderBrace;": "⏟",
      "&UnderBracket;": "⎵",
      "&UnderParenthesis;": "⏝",
      "&Union;": "⋃",
      "&UnionPlus;": "⊎",
      "&Uogon;": "Ų",
      "&Uopf;": "𝕌",
      "&UpArrow;": "↑",
      "&UpArrowBar;": "⤒",
      "&UpArrowDownArrow;": "⇅",
      "&UpDownArrow;": "↕",
      "&UpEquilibrium;": "⥮",
      "&UpTee;": "⊥",
      "&UpTeeArrow;": "↥",
      "&Uparrow;": "⇑",
      "&Updownarrow;": "⇕",
      "&UpperLeftArrow;": "↖",
      "&UpperRightArrow;": "↗",
      "&Upsi;": "ϒ",
      "&Upsilon;": "Υ",
      "&Uring;": "Ů",
      "&Uscr;": "𝒰",
      "&Utilde;": "Ũ",
      "&Uuml": "Ü",
      "&Uuml;": "Ü",
      "&VDash;": "⊫",
      "&Vbar;": "⫫",
      "&Vcy;": "В",
      "&Vdash;": "⊩",
      "&Vdashl;": "⫦",
      "&Vee;": "⋁",
      "&Verbar;": "‖",
      "&Vert;": "‖",
      "&VerticalBar;": "∣",
      "&VerticalLine;": "|",
      "&VerticalSeparator;": "❘",
      "&VerticalTilde;": "≀",
      "&VeryThinSpace;": " ",
      "&Vfr;": "𝔙",
      "&Vopf;": "𝕍",
      "&Vscr;": "𝒱",
      "&Vvdash;": "⊪",
      "&Wcirc;": "Ŵ",
      "&Wedge;": "⋀",
      "&Wfr;": "𝔚",
      "&Wopf;": "𝕎",
      "&Wscr;": "𝒲",
      "&Xfr;": "𝔛",
      "&Xi;": "Ξ",
      "&Xopf;": "𝕏",
      "&Xscr;": "𝒳",
      "&YAcy;": "Я",
      "&YIcy;": "Ї",
      "&YUcy;": "Ю",
      "&Yacute": "Ý",
      "&Yacute;": "Ý",
      "&Ycirc;": "Ŷ",
      "&Ycy;": "Ы",
      "&Yfr;": "𝔜",
      "&Yopf;": "𝕐",
      "&Yscr;": "𝒴",
      "&Yuml;": "Ÿ",
      "&ZHcy;": "Ж",
      "&Zacute;": "Ź",
      "&Zcaron;": "Ž",
      "&Zcy;": "З",
      "&Zdot;": "Ż",
      "&ZeroWidthSpace;": "​",
      "&Zeta;": "Ζ",
      "&Zfr;": "ℨ",
      "&Zopf;": "ℤ",
      "&Zscr;": "𝒵",
      "&aacute": "á",
      "&aacute;": "á",
      "&abreve;": "ă",
      "&ac;": "∾",
      "&acE;": "∾̳",
      "&acd;": "∿",
      "&acirc": "â",
      "&acirc;": "â",
      "&acute": "´",
      "&acute;": "´",
      "&acy;": "а",
      "&aelig": "æ",
      "&aelig;": "æ",
      "&af;": "⁡",
      "&afr;": "𝔞",
      "&agrave": "à",
      "&agrave;": "à",
      "&alefsym;": "ℵ",
      "&aleph;": "ℵ",
      "&alpha;": "α",
      "&amacr;": "ā",
      "&amalg;": "⨿",
      "&amp": "&",
      "&amp;": "&",
      "&and;": "∧",
      "&andand;": "⩕",
      "&andd;": "⩜",
      "&andslope;": "⩘",
      "&andv;": "⩚",
      "&ang;": "∠",
      "&ange;": "⦤",
      "&angle;": "∠",
      "&angmsd;": "∡",
      "&angmsdaa;": "⦨",
      "&angmsdab;": "⦩",
      "&angmsdac;": "⦪",
      "&angmsdad;": "⦫",
      "&angmsdae;": "⦬",
      "&angmsdaf;": "⦭",
      "&angmsdag;": "⦮",
      "&angmsdah;": "⦯",
      "&angrt;": "∟",
      "&angrtvb;": "⊾",
      "&angrtvbd;": "⦝",
      "&angsph;": "∢",
      "&angst;": "Å",
      "&angzarr;": "⍼",
      "&aogon;": "ą",
      "&aopf;": "𝕒",
      "&ap;": "≈",
      "&apE;": "⩰",
      "&apacir;": "⩯",
      "&ape;": "≊",
      "&apid;": "≋",
      "&apos;": "'",
      "&approx;": "≈",
      "&approxeq;": "≊",
      "&aring": "å",
      "&aring;": "å",
      "&ascr;": "𝒶",
      "&ast;": "*",
      "&asymp;": "≈",
      "&asympeq;": "≍",
      "&atilde": "ã",
      "&atilde;": "ã",
      "&auml": "ä",
      "&auml;": "ä",
      "&awconint;": "∳",
      "&awint;": "⨑",
      "&bNot;": "⫭",
      "&backcong;": "≌",
      "&backepsilon;": "϶",
      "&backprime;": "‵",
      "&backsim;": "∽",
      "&backsimeq;": "⋍",
      "&barvee;": "⊽",
      "&barwed;": "⌅",
      "&barwedge;": "⌅",
      "&bbrk;": "⎵",
      "&bbrktbrk;": "⎶",
      "&bcong;": "≌",
      "&bcy;": "б",
      "&bdquo;": "„",
      "&becaus;": "∵",
      "&because;": "∵",
      "&bemptyv;": "⦰",
      "&bepsi;": "϶",
      "&bernou;": "ℬ",
      "&beta;": "β",
      "&beth;": "ℶ",
      "&between;": "≬",
      "&bfr;": "𝔟",
      "&bigcap;": "⋂",
      "&bigcirc;": "◯",
      "&bigcup;": "⋃",
      "&bigodot;": "⨀",
      "&bigoplus;": "⨁",
      "&bigotimes;": "⨂",
      "&bigsqcup;": "⨆",
      "&bigstar;": "★",
      "&bigtriangledown;": "▽",
      "&bigtriangleup;": "△",
      "&biguplus;": "⨄",
      "&bigvee;": "⋁",
      "&bigwedge;": "⋀",
      "&bkarow;": "⤍",
      "&blacklozenge;": "⧫",
      "&blacksquare;": "▪",
      "&blacktriangle;": "▴",
      "&blacktriangledown;": "▾",
      "&blacktriangleleft;": "◂",
      "&blacktriangleright;": "▸",
      "&blank;": "␣",
      "&blk12;": "▒",
      "&blk14;": "░",
      "&blk34;": "▓",
      "&block;": "█",
      "&bne;": "=⃥",
      "&bnequiv;": "≡⃥",
      "&bnot;": "⌐",
      "&bopf;": "𝕓",
      "&bot;": "⊥",
      "&bottom;": "⊥",
      "&bowtie;": "⋈",
      "&boxDL;": "╗",
      "&boxDR;": "╔",
      "&boxDl;": "╖",
      "&boxDr;": "╓",
      "&boxH;": "═",
      "&boxHD;": "╦",
      "&boxHU;": "╩",
      "&boxHd;": "╤",
      "&boxHu;": "╧",
      "&boxUL;": "╝",
      "&boxUR;": "╚",
      "&boxUl;": "╜",
      "&boxUr;": "╙",
      "&boxV;": "║",
      "&boxVH;": "╬",
      "&boxVL;": "╣",
      "&boxVR;": "╠",
      "&boxVh;": "╫",
      "&boxVl;": "╢",
      "&boxVr;": "╟",
      "&boxbox;": "⧉",
      "&boxdL;": "╕",
      "&boxdR;": "╒",
      "&boxdl;": "┐",
      "&boxdr;": "┌",
      "&boxh;": "─",
      "&boxhD;": "╥",
      "&boxhU;": "╨",
      "&boxhd;": "┬",
      "&boxhu;": "┴",
      "&boxminus;": "⊟",
      "&boxplus;": "⊞",
      "&boxtimes;": "⊠",
      "&boxuL;": "╛",
      "&boxuR;": "╘",
      "&boxul;": "┘",
      "&boxur;": "└",
      "&boxv;": "│",
      "&boxvH;": "╪",
      "&boxvL;": "╡",
      "&boxvR;": "╞",
      "&boxvh;": "┼",
      "&boxvl;": "┤",
      "&boxvr;": "├",
      "&bprime;": "‵",
      "&breve;": "˘",
      "&brvbar": "¦",
      "&brvbar;": "¦",
      "&bscr;": "𝒷",
      "&bsemi;": "⁏",
      "&bsim;": "∽",
      "&bsime;": "⋍",
      "&bsol;": "\\",
      "&bsolb;": "⧅",
      "&bsolhsub;": "⟈",
      "&bull;": "•",
      "&bullet;": "•",
      "&bump;": "≎",
      "&bumpE;": "⪮",
      "&bumpe;": "≏",
      "&bumpeq;": "≏",
      "&cacute;": "ć",
      "&cap;": "∩",
      "&capand;": "⩄",
      "&capbrcup;": "⩉",
      "&capcap;": "⩋",
      "&capcup;": "⩇",
      "&capdot;": "⩀",
      "&caps;": "∩︀",
      "&caret;": "⁁",
      "&caron;": "ˇ",
      "&ccaps;": "⩍",
      "&ccaron;": "č",
      "&ccedil": "ç",
      "&ccedil;": "ç",
      "&ccirc;": "ĉ",
      "&ccups;": "⩌",
      "&ccupssm;": "⩐",
      "&cdot;": "ċ",
      "&cedil": "¸",
      "&cedil;": "¸",
      "&cemptyv;": "⦲",
      "&cent": "¢",
      "&cent;": "¢",
      "&centerdot;": "·",
      "&cfr;": "𝔠",
      "&chcy;": "ч",
      "&check;": "✓",
      "&checkmark;": "✓",
      "&chi;": "χ",
      "&cir;": "○",
      "&cirE;": "⧃",
      "&circ;": "ˆ",
      "&circeq;": "≗",
      "&circlearrowleft;": "↺",
      "&circlearrowright;": "↻",
      "&circledR;": "®",
      "&circledS;": "Ⓢ",
      "&circledast;": "⊛",
      "&circledcirc;": "⊚",
      "&circleddash;": "⊝",
      "&cire;": "≗",
      "&cirfnint;": "⨐",
      "&cirmid;": "⫯",
      "&cirscir;": "⧂",
      "&clubs;": "♣",
      "&clubsuit;": "♣",
      "&colon;": ":",
      "&colone;": "≔",
      "&coloneq;": "≔",
      "&comma;": ",",
      "&commat;": "@",
      "&comp;": "∁",
      "&compfn;": "∘",
      "&complement;": "∁",
      "&complexes;": "ℂ",
      "&cong;": "≅",
      "&congdot;": "⩭",
      "&conint;": "∮",
      "&copf;": "𝕔",
      "&coprod;": "∐",
      "&copy": "©",
      "&copy;": "©",
      "&copysr;": "℗",
      "&crarr;": "↵",
      "&cross;": "✗",
      "&cscr;": "𝒸",
      "&csub;": "⫏",
      "&csube;": "⫑",
      "&csup;": "⫐",
      "&csupe;": "⫒",
      "&ctdot;": "⋯",
      "&cudarrl;": "⤸",
      "&cudarrr;": "⤵",
      "&cuepr;": "⋞",
      "&cuesc;": "⋟",
      "&cularr;": "↶",
      "&cularrp;": "⤽",
      "&cup;": "∪",
      "&cupbrcap;": "⩈",
      "&cupcap;": "⩆",
      "&cupcup;": "⩊",
      "&cupdot;": "⊍",
      "&cupor;": "⩅",
      "&cups;": "∪︀",
      "&curarr;": "↷",
      "&curarrm;": "⤼",
      "&curlyeqprec;": "⋞",
      "&curlyeqsucc;": "⋟",
      "&curlyvee;": "⋎",
      "&curlywedge;": "⋏",
      "&curren": "¤",
      "&curren;": "¤",
      "&curvearrowleft;": "↶",
      "&curvearrowright;": "↷",
      "&cuvee;": "⋎",
      "&cuwed;": "⋏",
      "&cwconint;": "∲",
      "&cwint;": "∱",
      "&cylcty;": "⌭",
      "&dArr;": "⇓",
      "&dHar;": "⥥",
      "&dagger;": "†",
      "&daleth;": "ℸ",
      "&darr;": "↓",
      "&dash;": "‐",
      "&dashv;": "⊣",
      "&dbkarow;": "⤏",
      "&dblac;": "˝",
      "&dcaron;": "ď",
      "&dcy;": "д",
      "&dd;": "ⅆ",
      "&ddagger;": "‡",
      "&ddarr;": "⇊",
      "&ddotseq;": "⩷",
      "&deg": "°",
      "&deg;": "°",
      "&delta;": "δ",
      "&demptyv;": "⦱",
      "&dfisht;": "⥿",
      "&dfr;": "𝔡",
      "&dharl;": "⇃",
      "&dharr;": "⇂",
      "&diam;": "⋄",
      "&diamond;": "⋄",
      "&diamondsuit;": "♦",
      "&diams;": "♦",
      "&die;": "¨",
      "&digamma;": "ϝ",
      "&disin;": "⋲",
      "&div;": "÷",
      "&divide": "÷",
      "&divide;": "÷",
      "&divideontimes;": "⋇",
      "&divonx;": "⋇",
      "&djcy;": "ђ",
      "&dlcorn;": "⌞",
      "&dlcrop;": "⌍",
      "&dollar;": "$",
      "&dopf;": "𝕕",
      "&dot;": "˙",
      "&doteq;": "≐",
      "&doteqdot;": "≑",
      "&dotminus;": "∸",
      "&dotplus;": "∔",
      "&dotsquare;": "⊡",
      "&doublebarwedge;": "⌆",
      "&downarrow;": "↓",
      "&downdownarrows;": "⇊",
      "&downharpoonleft;": "⇃",
      "&downharpoonright;": "⇂",
      "&drbkarow;": "⤐",
      "&drcorn;": "⌟",
      "&drcrop;": "⌌",
      "&dscr;": "𝒹",
      "&dscy;": "ѕ",
      "&dsol;": "⧶",
      "&dstrok;": "đ",
      "&dtdot;": "⋱",
      "&dtri;": "▿",
      "&dtrif;": "▾",
      "&duarr;": "⇵",
      "&duhar;": "⥯",
      "&dwangle;": "⦦",
      "&dzcy;": "џ",
      "&dzigrarr;": "⟿",
      "&eDDot;": "⩷",
      "&eDot;": "≑",
      "&eacute": "é",
      "&eacute;": "é",
      "&easter;": "⩮",
      "&ecaron;": "ě",
      "&ecir;": "≖",
      "&ecirc": "ê",
      "&ecirc;": "ê",
      "&ecolon;": "≕",
      "&ecy;": "э",
      "&edot;": "ė",
      "&ee;": "ⅇ",
      "&efDot;": "≒",
      "&efr;": "𝔢",
      "&eg;": "⪚",
      "&egrave": "è",
      "&egrave;": "è",
      "&egs;": "⪖",
      "&egsdot;": "⪘",
      "&el;": "⪙",
      "&elinters;": "⏧",
      "&ell;": "ℓ",
      "&els;": "⪕",
      "&elsdot;": "⪗",
      "&emacr;": "ē",
      "&empty;": "∅",
      "&emptyset;": "∅",
      "&emptyv;": "∅",
      "&emsp13;": " ",
      "&emsp14;": " ",
      "&emsp;": " ",
      "&eng;": "ŋ",
      "&ensp;": " ",
      "&eogon;": "ę",
      "&eopf;": "𝕖",
      "&epar;": "⋕",
      "&eparsl;": "⧣",
      "&eplus;": "⩱",
      "&epsi;": "ε",
      "&epsilon;": "ε",
      "&epsiv;": "ϵ",
      "&eqcirc;": "≖",
      "&eqcolon;": "≕",
      "&eqsim;": "≂",
      "&eqslantgtr;": "⪖",
      "&eqslantless;": "⪕",
      "&equals;": "=",
      "&equest;": "≟",
      "&equiv;": "≡",
      "&equivDD;": "⩸",
      "&eqvparsl;": "⧥",
      "&erDot;": "≓",
      "&erarr;": "⥱",
      "&escr;": "ℯ",
      "&esdot;": "≐",
      "&esim;": "≂",
      "&eta;": "η",
      "&eth": "ð",
      "&eth;": "ð",
      "&euml": "ë",
      "&euml;": "ë",
      "&euro;": "€",
      "&excl;": "!",
      "&exist;": "∃",
      "&expectation;": "ℰ",
      "&exponentiale;": "ⅇ",
      "&fallingdotseq;": "≒",
      "&fcy;": "ф",
      "&female;": "♀",
      "&ffilig;": "ﬃ",
      "&fflig;": "ﬀ",
      "&ffllig;": "ﬄ",
      "&ffr;": "𝔣",
      "&filig;": "ﬁ",
      "&fjlig;": "fj",
      "&flat;": "♭",
      "&fllig;": "ﬂ",
      "&fltns;": "▱",
      "&fnof;": "ƒ",
      "&fopf;": "𝕗",
      "&forall;": "∀",
      "&fork;": "⋔",
      "&forkv;": "⫙",
      "&fpartint;": "⨍",
      "&frac12": "½",
      "&frac12;": "½",
      "&frac13;": "⅓",
      "&frac14": "¼",
      "&frac14;": "¼",
      "&frac15;": "⅕",
      "&frac16;": "⅙",
      "&frac18;": "⅛",
      "&frac23;": "⅔",
      "&frac25;": "⅖",
      "&frac34": "¾",
      "&frac34;": "¾",
      "&frac35;": "⅗",
      "&frac38;": "⅜",
      "&frac45;": "⅘",
      "&frac56;": "⅚",
      "&frac58;": "⅝",
      "&frac78;": "⅞",
      "&frasl;": "⁄",
      "&frown;": "⌢",
      "&fscr;": "𝒻",
      "&gE;": "≧",
      "&gEl;": "⪌",
      "&gacute;": "ǵ",
      "&gamma;": "γ",
      "&gammad;": "ϝ",
      "&gap;": "⪆",
      "&gbreve;": "ğ",
      "&gcirc;": "ĝ",
      "&gcy;": "г",
      "&gdot;": "ġ",
      "&ge;": "≥",
      "&gel;": "⋛",
      "&geq;": "≥",
      "&geqq;": "≧",
      "&geqslant;": "⩾",
      "&ges;": "⩾",
      "&gescc;": "⪩",
      "&gesdot;": "⪀",
      "&gesdoto;": "⪂",
      "&gesdotol;": "⪄",
      "&gesl;": "⋛︀",
      "&gesles;": "⪔",
      "&gfr;": "𝔤",
      "&gg;": "≫",
      "&ggg;": "⋙",
      "&gimel;": "ℷ",
      "&gjcy;": "ѓ",
      "&gl;": "≷",
      "&glE;": "⪒",
      "&gla;": "⪥",
      "&glj;": "⪤",
      "&gnE;": "≩",
      "&gnap;": "⪊",
      "&gnapprox;": "⪊",
      "&gne;": "⪈",
      "&gneq;": "⪈",
      "&gneqq;": "≩",
      "&gnsim;": "⋧",
      "&gopf;": "𝕘",
      "&grave;": "`",
      "&gscr;": "ℊ",
      "&gsim;": "≳",
      "&gsime;": "⪎",
      "&gsiml;": "⪐",
      "&gt": ">",
      "&gt;": ">",
      "&gtcc;": "⪧",
      "&gtcir;": "⩺",
      "&gtdot;": "⋗",
      "&gtlPar;": "⦕",
      "&gtquest;": "⩼",
      "&gtrapprox;": "⪆",
      "&gtrarr;": "⥸",
      "&gtrdot;": "⋗",
      "&gtreqless;": "⋛",
      "&gtreqqless;": "⪌",
      "&gtrless;": "≷",
      "&gtrsim;": "≳",
      "&gvertneqq;": "≩︀",
      "&gvnE;": "≩︀",
      "&hArr;": "⇔",
      "&hairsp;": " ",
      "&half;": "½",
      "&hamilt;": "ℋ",
      "&hardcy;": "ъ",
      "&harr;": "↔",
      "&harrcir;": "⥈",
      "&harrw;": "↭",
      "&hbar;": "ℏ",
      "&hcirc;": "ĥ",
      "&hearts;": "♥",
      "&heartsuit;": "♥",
      "&hellip;": "…",
      "&hercon;": "⊹",
      "&hfr;": "𝔥",
      "&hksearow;": "⤥",
      "&hkswarow;": "⤦",
      "&hoarr;": "⇿",
      "&homtht;": "∻",
      "&hookleftarrow;": "↩",
      "&hookrightarrow;": "↪",
      "&hopf;": "𝕙",
      "&horbar;": "―",
      "&hscr;": "𝒽",
      "&hslash;": "ℏ",
      "&hstrok;": "ħ",
      "&hybull;": "⁃",
      "&hyphen;": "‐",
      "&iacute": "í",
      "&iacute;": "í",
      "&ic;": "⁣",
      "&icirc": "î",
      "&icirc;": "î",
      "&icy;": "и",
      "&iecy;": "е",
      "&iexcl": "¡",
      "&iexcl;": "¡",
      "&iff;": "⇔",
      "&ifr;": "𝔦",
      "&igrave": "ì",
      "&igrave;": "ì",
      "&ii;": "ⅈ",
      "&iiiint;": "⨌",
      "&iiint;": "∭",
      "&iinfin;": "⧜",
      "&iiota;": "℩",
      "&ijlig;": "ĳ",
      "&imacr;": "ī",
      "&image;": "ℑ",
      "&imagline;": "ℐ",
      "&imagpart;": "ℑ",
      "&imath;": "ı",
      "&imof;": "⊷",
      "&imped;": "Ƶ",
      "&in;": "∈",
      "&incare;": "℅",
      "&infin;": "∞",
      "&infintie;": "⧝",
      "&inodot;": "ı",
      "&int;": "∫",
      "&intcal;": "⊺",
      "&integers;": "ℤ",
      "&intercal;": "⊺",
      "&intlarhk;": "⨗",
      "&intprod;": "⨼",
      "&iocy;": "ё",
      "&iogon;": "į",
      "&iopf;": "𝕚",
      "&iota;": "ι",
      "&iprod;": "⨼",
      "&iquest": "¿",
      "&iquest;": "¿",
      "&iscr;": "𝒾",
      "&isin;": "∈",
      "&isinE;": "⋹",
      "&isindot;": "⋵",
      "&isins;": "⋴",
      "&isinsv;": "⋳",
      "&isinv;": "∈",
      "&it;": "⁢",
      "&itilde;": "ĩ",
      "&iukcy;": "і",
      "&iuml": "ï",
      "&iuml;": "ï",
      "&jcirc;": "ĵ",
      "&jcy;": "й",
      "&jfr;": "𝔧",
      "&jmath;": "ȷ",
      "&jopf;": "𝕛",
      "&jscr;": "𝒿",
      "&jsercy;": "ј",
      "&jukcy;": "є",
      "&kappa;": "κ",
      "&kappav;": "ϰ",
      "&kcedil;": "ķ",
      "&kcy;": "к",
      "&kfr;": "𝔨",
      "&kgreen;": "ĸ",
      "&khcy;": "х",
      "&kjcy;": "ќ",
      "&kopf;": "𝕜",
      "&kscr;": "𝓀",
      "&lAarr;": "⇚",
      "&lArr;": "⇐",
      "&lAtail;": "⤛",
      "&lBarr;": "⤎",
      "&lE;": "≦",
      "&lEg;": "⪋",
      "&lHar;": "⥢",
      "&lacute;": "ĺ",
      "&laemptyv;": "⦴",
      "&lagran;": "ℒ",
      "&lambda;": "λ",
      "&lang;": "⟨",
      "&langd;": "⦑",
      "&langle;": "⟨",
      "&lap;": "⪅",
      "&laquo": "«",
      "&laquo;": "«",
      "&larr;": "←",
      "&larrb;": "⇤",
      "&larrbfs;": "⤟",
      "&larrfs;": "⤝",
      "&larrhk;": "↩",
      "&larrlp;": "↫",
      "&larrpl;": "⤹",
      "&larrsim;": "⥳",
      "&larrtl;": "↢",
      "&lat;": "⪫",
      "&latail;": "⤙",
      "&late;": "⪭",
      "&lates;": "⪭︀",
      "&lbarr;": "⤌",
      "&lbbrk;": "❲",
      "&lbrace;": "{",
      "&lbrack;": "[",
      "&lbrke;": "⦋",
      "&lbrksld;": "⦏",
      "&lbrkslu;": "⦍",
      "&lcaron;": "ľ",
      "&lcedil;": "ļ",
      "&lceil;": "⌈",
      "&lcub;": "{",
      "&lcy;": "л",
      "&ldca;": "⤶",
      "&ldquo;": "“",
      "&ldquor;": "„",
      "&ldrdhar;": "⥧",
      "&ldrushar;": "⥋",
      "&ldsh;": "↲",
      "&le;": "≤",
      "&leftarrow;": "←",
      "&leftarrowtail;": "↢",
      "&leftharpoondown;": "↽",
      "&leftharpoonup;": "↼",
      "&leftleftarrows;": "⇇",
      "&leftrightarrow;": "↔",
      "&leftrightarrows;": "⇆",
      "&leftrightharpoons;": "⇋",
      "&leftrightsquigarrow;": "↭",
      "&leftthreetimes;": "⋋",
      "&leg;": "⋚",
      "&leq;": "≤",
      "&leqq;": "≦",
      "&leqslant;": "⩽",
      "&les;": "⩽",
      "&lescc;": "⪨",
      "&lesdot;": "⩿",
      "&lesdoto;": "⪁",
      "&lesdotor;": "⪃",
      "&lesg;": "⋚︀",
      "&lesges;": "⪓",
      "&lessapprox;": "⪅",
      "&lessdot;": "⋖",
      "&lesseqgtr;": "⋚",
      "&lesseqqgtr;": "⪋",
      "&lessgtr;": "≶",
      "&lesssim;": "≲",
      "&lfisht;": "⥼",
      "&lfloor;": "⌊",
      "&lfr;": "𝔩",
      "&lg;": "≶",
      "&lgE;": "⪑",
      "&lhard;": "↽",
      "&lharu;": "↼",
      "&lharul;": "⥪",
      "&lhblk;": "▄",
      "&ljcy;": "љ",
      "&ll;": "≪",
      "&llarr;": "⇇",
      "&llcorner;": "⌞",
      "&llhard;": "⥫",
      "&lltri;": "◺",
      "&lmidot;": "ŀ",
      "&lmoust;": "⎰",
      "&lmoustache;": "⎰",
      "&lnE;": "≨",
      "&lnap;": "⪉",
      "&lnapprox;": "⪉",
      "&lne;": "⪇",
      "&lneq;": "⪇",
      "&lneqq;": "≨",
      "&lnsim;": "⋦",
      "&loang;": "⟬",
      "&loarr;": "⇽",
      "&lobrk;": "⟦",
      "&longleftarrow;": "⟵",
      "&longleftrightarrow;": "⟷",
      "&longmapsto;": "⟼",
      "&longrightarrow;": "⟶",
      "&looparrowleft;": "↫",
      "&looparrowright;": "↬",
      "&lopar;": "⦅",
      "&lopf;": "𝕝",
      "&loplus;": "⨭",
      "&lotimes;": "⨴",
      "&lowast;": "∗",
      "&lowbar;": "_",
      "&loz;": "◊",
      "&lozenge;": "◊",
      "&lozf;": "⧫",
      "&lpar;": "(",
      "&lparlt;": "⦓",
      "&lrarr;": "⇆",
      "&lrcorner;": "⌟",
      "&lrhar;": "⇋",
      "&lrhard;": "⥭",
      "&lrm;": "‎",
      "&lrtri;": "⊿",
      "&lsaquo;": "‹",
      "&lscr;": "𝓁",
      "&lsh;": "↰",
      "&lsim;": "≲",
      "&lsime;": "⪍",
      "&lsimg;": "⪏",
      "&lsqb;": "[",
      "&lsquo;": "‘",
      "&lsquor;": "‚",
      "&lstrok;": "ł",
      "&lt": "<",
      "&lt;": "<",
      "&ltcc;": "⪦",
      "&ltcir;": "⩹",
      "&ltdot;": "⋖",
      "&lthree;": "⋋",
      "&ltimes;": "⋉",
      "&ltlarr;": "⥶",
      "&ltquest;": "⩻",
      "&ltrPar;": "⦖",
      "&ltri;": "◃",
      "&ltrie;": "⊴",
      "&ltrif;": "◂",
      "&lurdshar;": "⥊",
      "&luruhar;": "⥦",
      "&lvertneqq;": "≨︀",
      "&lvnE;": "≨︀",
      "&mDDot;": "∺",
      "&macr": "¯",
      "&macr;": "¯",
      "&male;": "♂",
      "&malt;": "✠",
      "&maltese;": "✠",
      "&map;": "↦",
      "&mapsto;": "↦",
      "&mapstodown;": "↧",
      "&mapstoleft;": "↤",
      "&mapstoup;": "↥",
      "&marker;": "▮",
      "&mcomma;": "⨩",
      "&mcy;": "м",
      "&mdash;": "—",
      "&measuredangle;": "∡",
      "&mfr;": "𝔪",
      "&mho;": "℧",
      "&micro": "µ",
      "&micro;": "µ",
      "&mid;": "∣",
      "&midast;": "*",
      "&midcir;": "⫰",
      "&middot": "·",
      "&middot;": "·",
      "&minus;": "−",
      "&minusb;": "⊟",
      "&minusd;": "∸",
      "&minusdu;": "⨪",
      "&mlcp;": "⫛",
      "&mldr;": "…",
      "&mnplus;": "∓",
      "&models;": "⊧",
      "&mopf;": "𝕞",
      "&mp;": "∓",
      "&mscr;": "𝓂",
      "&mstpos;": "∾",
      "&mu;": "μ",
      "&multimap;": "⊸",
      "&mumap;": "⊸",
      "&nGg;": "⋙̸",
      "&nGt;": "≫⃒",
      "&nGtv;": "≫̸",
      "&nLeftarrow;": "⇍",
      "&nLeftrightarrow;": "⇎",
      "&nLl;": "⋘̸",
      "&nLt;": "≪⃒",
      "&nLtv;": "≪̸",
      "&nRightarrow;": "⇏",
      "&nVDash;": "⊯",
      "&nVdash;": "⊮",
      "&nabla;": "∇",
      "&nacute;": "ń",
      "&nang;": "∠⃒",
      "&nap;": "≉",
      "&napE;": "⩰̸",
      "&napid;": "≋̸",
      "&napos;": "ŉ",
      "&napprox;": "≉",
      "&natur;": "♮",
      "&natural;": "♮",
      "&naturals;": "ℕ",
      "&nbsp": " ",
      "&nbsp;": " ",
      "&nbump;": "≎̸",
      "&nbumpe;": "≏̸",
      "&ncap;": "⩃",
      "&ncaron;": "ň",
      "&ncedil;": "ņ",
      "&ncong;": "≇",
      "&ncongdot;": "⩭̸",
      "&ncup;": "⩂",
      "&ncy;": "н",
      "&ndash;": "–",
      "&ne;": "≠",
      "&neArr;": "⇗",
      "&nearhk;": "⤤",
      "&nearr;": "↗",
      "&nearrow;": "↗",
      "&nedot;": "≐̸",
      "&nequiv;": "≢",
      "&nesear;": "⤨",
      "&nesim;": "≂̸",
      "&nexist;": "∄",
      "&nexists;": "∄",
      "&nfr;": "𝔫",
      "&ngE;": "≧̸",
      "&nge;": "≱",
      "&ngeq;": "≱",
      "&ngeqq;": "≧̸",
      "&ngeqslant;": "⩾̸",
      "&nges;": "⩾̸",
      "&ngsim;": "≵",
      "&ngt;": "≯",
      "&ngtr;": "≯",
      "&nhArr;": "⇎",
      "&nharr;": "↮",
      "&nhpar;": "⫲",
      "&ni;": "∋",
      "&nis;": "⋼",
      "&nisd;": "⋺",
      "&niv;": "∋",
      "&njcy;": "њ",
      "&nlArr;": "⇍",
      "&nlE;": "≦̸",
      "&nlarr;": "↚",
      "&nldr;": "‥",
      "&nle;": "≰",
      "&nleftarrow;": "↚",
      "&nleftrightarrow;": "↮",
      "&nleq;": "≰",
      "&nleqq;": "≦̸",
      "&nleqslant;": "⩽̸",
      "&nles;": "⩽̸",
      "&nless;": "≮",
      "&nlsim;": "≴",
      "&nlt;": "≮",
      "&nltri;": "⋪",
      "&nltrie;": "⋬",
      "&nmid;": "∤",
      "&nopf;": "𝕟",
      "&not": "¬",
      "&not;": "¬",
      "&notin;": "∉",
      "&notinE;": "⋹̸",
      "&notindot;": "⋵̸",
      "&notinva;": "∉",
      "&notinvb;": "⋷",
      "&notinvc;": "⋶",
      "&notni;": "∌",
      "&notniva;": "∌",
      "&notnivb;": "⋾",
      "&notnivc;": "⋽",
      "&npar;": "∦",
      "&nparallel;": "∦",
      "&nparsl;": "⫽⃥",
      "&npart;": "∂̸",
      "&npolint;": "⨔",
      "&npr;": "⊀",
      "&nprcue;": "⋠",
      "&npre;": "⪯̸",
      "&nprec;": "⊀",
      "&npreceq;": "⪯̸",
      "&nrArr;": "⇏",
      "&nrarr;": "↛",
      "&nrarrc;": "⤳̸",
      "&nrarrw;": "↝̸",
      "&nrightarrow;": "↛",
      "&nrtri;": "⋫",
      "&nrtrie;": "⋭",
      "&nsc;": "⊁",
      "&nsccue;": "⋡",
      "&nsce;": "⪰̸",
      "&nscr;": "𝓃",
      "&nshortmid;": "∤",
      "&nshortparallel;": "∦",
      "&nsim;": "≁",
      "&nsime;": "≄",
      "&nsimeq;": "≄",
      "&nsmid;": "∤",
      "&nspar;": "∦",
      "&nsqsube;": "⋢",
      "&nsqsupe;": "⋣",
      "&nsub;": "⊄",
      "&nsubE;": "⫅̸",
      "&nsube;": "⊈",
      "&nsubset;": "⊂⃒",
      "&nsubseteq;": "⊈",
      "&nsubseteqq;": "⫅̸",
      "&nsucc;": "⊁",
      "&nsucceq;": "⪰̸",
      "&nsup;": "⊅",
      "&nsupE;": "⫆̸",
      "&nsupe;": "⊉",
      "&nsupset;": "⊃⃒",
      "&nsupseteq;": "⊉",
      "&nsupseteqq;": "⫆̸",
      "&ntgl;": "≹",
      "&ntilde": "ñ",
      "&ntilde;": "ñ",
      "&ntlg;": "≸",
      "&ntriangleleft;": "⋪",
      "&ntrianglelefteq;": "⋬",
      "&ntriangleright;": "⋫",
      "&ntrianglerighteq;": "⋭",
      "&nu;": "ν",
      "&num;": "#",
      "&numero;": "№",
      "&numsp;": " ",
      "&nvDash;": "⊭",
      "&nvHarr;": "⤄",
      "&nvap;": "≍⃒",
      "&nvdash;": "⊬",
      "&nvge;": "≥⃒",
      "&nvgt;": ">⃒",
      "&nvinfin;": "⧞",
      "&nvlArr;": "⤂",
      "&nvle;": "≤⃒",
      "&nvlt;": "<⃒",
      "&nvltrie;": "⊴⃒",
      "&nvrArr;": "⤃",
      "&nvrtrie;": "⊵⃒",
      "&nvsim;": "∼⃒",
      "&nwArr;": "⇖",
      "&nwarhk;": "⤣",
      "&nwarr;": "↖",
      "&nwarrow;": "↖",
      "&nwnear;": "⤧",
      "&oS;": "Ⓢ",
      "&oacute": "ó",
      "&oacute;": "ó",
      "&oast;": "⊛",
      "&ocir;": "⊚",
      "&ocirc": "ô",
      "&ocirc;": "ô",
      "&ocy;": "о",
      "&odash;": "⊝",
      "&odblac;": "ő",
      "&odiv;": "⨸",
      "&odot;": "⊙",
      "&odsold;": "⦼",
      "&oelig;": "œ",
      "&ofcir;": "⦿",
      "&ofr;": "𝔬",
      "&ogon;": "˛",
      "&ograve": "ò",
      "&ograve;": "ò",
      "&ogt;": "⧁",
      "&ohbar;": "⦵",
      "&ohm;": "Ω",
      "&oint;": "∮",
      "&olarr;": "↺",
      "&olcir;": "⦾",
      "&olcross;": "⦻",
      "&oline;": "‾",
      "&olt;": "⧀",
      "&omacr;": "ō",
      "&omega;": "ω",
      "&omicron;": "ο",
      "&omid;": "⦶",
      "&ominus;": "⊖",
      "&oopf;": "𝕠",
      "&opar;": "⦷",
      "&operp;": "⦹",
      "&oplus;": "⊕",
      "&or;": "∨",
      "&orarr;": "↻",
      "&ord;": "⩝",
      "&order;": "ℴ",
      "&orderof;": "ℴ",
      "&ordf": "ª",
      "&ordf;": "ª",
      "&ordm": "º",
      "&ordm;": "º",
      "&origof;": "⊶",
      "&oror;": "⩖",
      "&orslope;": "⩗",
      "&orv;": "⩛",
      "&oscr;": "ℴ",
      "&oslash": "ø",
      "&oslash;": "ø",
      "&osol;": "⊘",
      "&otilde": "õ",
      "&otilde;": "õ",
      "&otimes;": "⊗",
      "&otimesas;": "⨶",
      "&ouml": "ö",
      "&ouml;": "ö",
      "&ovbar;": "⌽",
      "&par;": "∥",
      "&para": "¶",
      "&para;": "¶",
      "&parallel;": "∥",
      "&parsim;": "⫳",
      "&parsl;": "⫽",
      "&part;": "∂",
      "&pcy;": "п",
      "&percnt;": "%",
      "&period;": ".",
      "&permil;": "‰",
      "&perp;": "⊥",
      "&pertenk;": "‱",
      "&pfr;": "𝔭",
      "&phi;": "φ",
      "&phiv;": "ϕ",
      "&phmmat;": "ℳ",
      "&phone;": "☎",
      "&pi;": "π",
      "&pitchfork;": "⋔",
      "&piv;": "ϖ",
      "&planck;": "ℏ",
      "&planckh;": "ℎ",
      "&plankv;": "ℏ",
      "&plus;": "+",
      "&plusacir;": "⨣",
      "&plusb;": "⊞",
      "&pluscir;": "⨢",
      "&plusdo;": "∔",
      "&plusdu;": "⨥",
      "&pluse;": "⩲",
      "&plusmn": "±",
      "&plusmn;": "±",
      "&plussim;": "⨦",
      "&plustwo;": "⨧",
      "&pm;": "±",
      "&pointint;": "⨕",
      "&popf;": "𝕡",
      "&pound": "£",
      "&pound;": "£",
      "&pr;": "≺",
      "&prE;": "⪳",
      "&prap;": "⪷",
      "&prcue;": "≼",
      "&pre;": "⪯",
      "&prec;": "≺",
      "&precapprox;": "⪷",
      "&preccurlyeq;": "≼",
      "&preceq;": "⪯",
      "&precnapprox;": "⪹",
      "&precneqq;": "⪵",
      "&precnsim;": "⋨",
      "&precsim;": "≾",
      "&prime;": "′",
      "&primes;": "ℙ",
      "&prnE;": "⪵",
      "&prnap;": "⪹",
      "&prnsim;": "⋨",
      "&prod;": "∏",
      "&profalar;": "⌮",
      "&profline;": "⌒",
      "&profsurf;": "⌓",
      "&prop;": "∝",
      "&propto;": "∝",
      "&prsim;": "≾",
      "&prurel;": "⊰",
      "&pscr;": "𝓅",
      "&psi;": "ψ",
      "&puncsp;": " ",
      "&qfr;": "𝔮",
      "&qint;": "⨌",
      "&qopf;": "𝕢",
      "&qprime;": "⁗",
      "&qscr;": "𝓆",
      "&quaternions;": "ℍ",
      "&quatint;": "⨖",
      "&quest;": "?",
      "&questeq;": "≟",
      "&quot": '"',
      "&quot;": '"',
      "&rAarr;": "⇛",
      "&rArr;": "⇒",
      "&rAtail;": "⤜",
      "&rBarr;": "⤏",
      "&rHar;": "⥤",
      "&race;": "∽̱",
      "&racute;": "ŕ",
      "&radic;": "√",
      "&raemptyv;": "⦳",
      "&rang;": "⟩",
      "&rangd;": "⦒",
      "&range;": "⦥",
      "&rangle;": "⟩",
      "&raquo": "»",
      "&raquo;": "»",
      "&rarr;": "→",
      "&rarrap;": "⥵",
      "&rarrb;": "⇥",
      "&rarrbfs;": "⤠",
      "&rarrc;": "⤳",
      "&rarrfs;": "⤞",
      "&rarrhk;": "↪",
      "&rarrlp;": "↬",
      "&rarrpl;": "⥅",
      "&rarrsim;": "⥴",
      "&rarrtl;": "↣",
      "&rarrw;": "↝",
      "&ratail;": "⤚",
      "&ratio;": "∶",
      "&rationals;": "ℚ",
      "&rbarr;": "⤍",
      "&rbbrk;": "❳",
      "&rbrace;": "}",
      "&rbrack;": "]",
      "&rbrke;": "⦌",
      "&rbrksld;": "⦎",
      "&rbrkslu;": "⦐",
      "&rcaron;": "ř",
      "&rcedil;": "ŗ",
      "&rceil;": "⌉",
      "&rcub;": "}",
      "&rcy;": "р",
      "&rdca;": "⤷",
      "&rdldhar;": "⥩",
      "&rdquo;": "”",
      "&rdquor;": "”",
      "&rdsh;": "↳",
      "&real;": "ℜ",
      "&realine;": "ℛ",
      "&realpart;": "ℜ",
      "&reals;": "ℝ",
      "&rect;": "▭",
      "&reg": "®",
      "&reg;": "®",
      "&rfisht;": "⥽",
      "&rfloor;": "⌋",
      "&rfr;": "𝔯",
      "&rhard;": "⇁",
      "&rharu;": "⇀",
      "&rharul;": "⥬",
      "&rho;": "ρ",
      "&rhov;": "ϱ",
      "&rightarrow;": "→",
      "&rightarrowtail;": "↣",
      "&rightharpoondown;": "⇁",
      "&rightharpoonup;": "⇀",
      "&rightleftarrows;": "⇄",
      "&rightleftharpoons;": "⇌",
      "&rightrightarrows;": "⇉",
      "&rightsquigarrow;": "↝",
      "&rightthreetimes;": "⋌",
      "&ring;": "˚",
      "&risingdotseq;": "≓",
      "&rlarr;": "⇄",
      "&rlhar;": "⇌",
      "&rlm;": "‏",
      "&rmoust;": "⎱",
      "&rmoustache;": "⎱",
      "&rnmid;": "⫮",
      "&roang;": "⟭",
      "&roarr;": "⇾",
      "&robrk;": "⟧",
      "&ropar;": "⦆",
      "&ropf;": "𝕣",
      "&roplus;": "⨮",
      "&rotimes;": "⨵",
      "&rpar;": ")",
      "&rpargt;": "⦔",
      "&rppolint;": "⨒",
      "&rrarr;": "⇉",
      "&rsaquo;": "›",
      "&rscr;": "𝓇",
      "&rsh;": "↱",
      "&rsqb;": "]",
      "&rsquo;": "’",
      "&rsquor;": "’",
      "&rthree;": "⋌",
      "&rtimes;": "⋊",
      "&rtri;": "▹",
      "&rtrie;": "⊵",
      "&rtrif;": "▸",
      "&rtriltri;": "⧎",
      "&ruluhar;": "⥨",
      "&rx;": "℞",
      "&sacute;": "ś",
      "&sbquo;": "‚",
      "&sc;": "≻",
      "&scE;": "⪴",
      "&scap;": "⪸",
      "&scaron;": "š",
      "&sccue;": "≽",
      "&sce;": "⪰",
      "&scedil;": "ş",
      "&scirc;": "ŝ",
      "&scnE;": "⪶",
      "&scnap;": "⪺",
      "&scnsim;": "⋩",
      "&scpolint;": "⨓",
      "&scsim;": "≿",
      "&scy;": "с",
      "&sdot;": "⋅",
      "&sdotb;": "⊡",
      "&sdote;": "⩦",
      "&seArr;": "⇘",
      "&searhk;": "⤥",
      "&searr;": "↘",
      "&searrow;": "↘",
      "&sect": "§",
      "&sect;": "§",
      "&semi;": ";",
      "&seswar;": "⤩",
      "&setminus;": "∖",
      "&setmn;": "∖",
      "&sext;": "✶",
      "&sfr;": "𝔰",
      "&sfrown;": "⌢",
      "&sharp;": "♯",
      "&shchcy;": "щ",
      "&shcy;": "ш",
      "&shortmid;": "∣",
      "&shortparallel;": "∥",
      "&shy": "­",
      "&shy;": "­",
      "&sigma;": "σ",
      "&sigmaf;": "ς",
      "&sigmav;": "ς",
      "&sim;": "∼",
      "&simdot;": "⩪",
      "&sime;": "≃",
      "&simeq;": "≃",
      "&simg;": "⪞",
      "&simgE;": "⪠",
      "&siml;": "⪝",
      "&simlE;": "⪟",
      "&simne;": "≆",
      "&simplus;": "⨤",
      "&simrarr;": "⥲",
      "&slarr;": "←",
      "&smallsetminus;": "∖",
      "&smashp;": "⨳",
      "&smeparsl;": "⧤",
      "&smid;": "∣",
      "&smile;": "⌣",
      "&smt;": "⪪",
      "&smte;": "⪬",
      "&smtes;": "⪬︀",
      "&softcy;": "ь",
      "&sol;": "/",
      "&solb;": "⧄",
      "&solbar;": "⌿",
      "&sopf;": "𝕤",
      "&spades;": "♠",
      "&spadesuit;": "♠",
      "&spar;": "∥",
      "&sqcap;": "⊓",
      "&sqcaps;": "⊓︀",
      "&sqcup;": "⊔",
      "&sqcups;": "⊔︀",
      "&sqsub;": "⊏",
      "&sqsube;": "⊑",
      "&sqsubset;": "⊏",
      "&sqsubseteq;": "⊑",
      "&sqsup;": "⊐",
      "&sqsupe;": "⊒",
      "&sqsupset;": "⊐",
      "&sqsupseteq;": "⊒",
      "&squ;": "□",
      "&square;": "□",
      "&squarf;": "▪",
      "&squf;": "▪",
      "&srarr;": "→",
      "&sscr;": "𝓈",
      "&ssetmn;": "∖",
      "&ssmile;": "⌣",
      "&sstarf;": "⋆",
      "&star;": "☆",
      "&starf;": "★",
      "&straightepsilon;": "ϵ",
      "&straightphi;": "ϕ",
      "&strns;": "¯",
      "&sub;": "⊂",
      "&subE;": "⫅",
      "&subdot;": "⪽",
      "&sube;": "⊆",
      "&subedot;": "⫃",
      "&submult;": "⫁",
      "&subnE;": "⫋",
      "&subne;": "⊊",
      "&subplus;": "⪿",
      "&subrarr;": "⥹",
      "&subset;": "⊂",
      "&subseteq;": "⊆",
      "&subseteqq;": "⫅",
      "&subsetneq;": "⊊",
      "&subsetneqq;": "⫋",
      "&subsim;": "⫇",
      "&subsub;": "⫕",
      "&subsup;": "⫓",
      "&succ;": "≻",
      "&succapprox;": "⪸",
      "&succcurlyeq;": "≽",
      "&succeq;": "⪰",
      "&succnapprox;": "⪺",
      "&succneqq;": "⪶",
      "&succnsim;": "⋩",
      "&succsim;": "≿",
      "&sum;": "∑",
      "&sung;": "♪",
      "&sup1": "¹",
      "&sup1;": "¹",
      "&sup2": "²",
      "&sup2;": "²",
      "&sup3": "³",
      "&sup3;": "³",
      "&sup;": "⊃",
      "&supE;": "⫆",
      "&supdot;": "⪾",
      "&supdsub;": "⫘",
      "&supe;": "⊇",
      "&supedot;": "⫄",
      "&suphsol;": "⟉",
      "&suphsub;": "⫗",
      "&suplarr;": "⥻",
      "&supmult;": "⫂",
      "&supnE;": "⫌",
      "&supne;": "⊋",
      "&supplus;": "⫀",
      "&supset;": "⊃",
      "&supseteq;": "⊇",
      "&supseteqq;": "⫆",
      "&supsetneq;": "⊋",
      "&supsetneqq;": "⫌",
      "&supsim;": "⫈",
      "&supsub;": "⫔",
      "&supsup;": "⫖",
      "&swArr;": "⇙",
      "&swarhk;": "⤦",
      "&swarr;": "↙",
      "&swarrow;": "↙",
      "&swnwar;": "⤪",
      "&szlig": "ß",
      "&szlig;": "ß",
      "&target;": "⌖",
      "&tau;": "τ",
      "&tbrk;": "⎴",
      "&tcaron;": "ť",
      "&tcedil;": "ţ",
      "&tcy;": "т",
      "&tdot;": "⃛",
      "&telrec;": "⌕",
      "&tfr;": "𝔱",
      "&there4;": "∴",
      "&therefore;": "∴",
      "&theta;": "θ",
      "&thetasym;": "ϑ",
      "&thetav;": "ϑ",
      "&thickapprox;": "≈",
      "&thicksim;": "∼",
      "&thinsp;": " ",
      "&thkap;": "≈",
      "&thksim;": "∼",
      "&thorn": "þ",
      "&thorn;": "þ",
      "&tilde;": "˜",
      "&times": "×",
      "&times;": "×",
      "&timesb;": "⊠",
      "&timesbar;": "⨱",
      "&timesd;": "⨰",
      "&tint;": "∭",
      "&toea;": "⤨",
      "&top;": "⊤",
      "&topbot;": "⌶",
      "&topcir;": "⫱",
      "&topf;": "𝕥",
      "&topfork;": "⫚",
      "&tosa;": "⤩",
      "&tprime;": "‴",
      "&trade;": "™",
      "&triangle;": "▵",
      "&triangledown;": "▿",
      "&triangleleft;": "◃",
      "&trianglelefteq;": "⊴",
      "&triangleq;": "≜",
      "&triangleright;": "▹",
      "&trianglerighteq;": "⊵",
      "&tridot;": "◬",
      "&trie;": "≜",
      "&triminus;": "⨺",
      "&triplus;": "⨹",
      "&trisb;": "⧍",
      "&tritime;": "⨻",
      "&trpezium;": "⏢",
      "&tscr;": "𝓉",
      "&tscy;": "ц",
      "&tshcy;": "ћ",
      "&tstrok;": "ŧ",
      "&twixt;": "≬",
      "&twoheadleftarrow;": "↞",
      "&twoheadrightarrow;": "↠",
      "&uArr;": "⇑",
      "&uHar;": "⥣",
      "&uacute": "ú",
      "&uacute;": "ú",
      "&uarr;": "↑",
      "&ubrcy;": "ў",
      "&ubreve;": "ŭ",
      "&ucirc": "û",
      "&ucirc;": "û",
      "&ucy;": "у",
      "&udarr;": "⇅",
      "&udblac;": "ű",
      "&udhar;": "⥮",
      "&ufisht;": "⥾",
      "&ufr;": "𝔲",
      "&ugrave": "ù",
      "&ugrave;": "ù",
      "&uharl;": "↿",
      "&uharr;": "↾",
      "&uhblk;": "▀",
      "&ulcorn;": "⌜",
      "&ulcorner;": "⌜",
      "&ulcrop;": "⌏",
      "&ultri;": "◸",
      "&umacr;": "ū",
      "&uml": "¨",
      "&uml;": "¨",
      "&uogon;": "ų",
      "&uopf;": "𝕦",
      "&uparrow;": "↑",
      "&updownarrow;": "↕",
      "&upharpoonleft;": "↿",
      "&upharpoonright;": "↾",
      "&uplus;": "⊎",
      "&upsi;": "υ",
      "&upsih;": "ϒ",
      "&upsilon;": "υ",
      "&upuparrows;": "⇈",
      "&urcorn;": "⌝",
      "&urcorner;": "⌝",
      "&urcrop;": "⌎",
      "&uring;": "ů",
      "&urtri;": "◹",
      "&uscr;": "𝓊",
      "&utdot;": "⋰",
      "&utilde;": "ũ",
      "&utri;": "▵",
      "&utrif;": "▴",
      "&uuarr;": "⇈",
      "&uuml": "ü",
      "&uuml;": "ü",
      "&uwangle;": "⦧",
      "&vArr;": "⇕",
      "&vBar;": "⫨",
      "&vBarv;": "⫩",
      "&vDash;": "⊨",
      "&vangrt;": "⦜",
      "&varepsilon;": "ϵ",
      "&varkappa;": "ϰ",
      "&varnothing;": "∅",
      "&varphi;": "ϕ",
      "&varpi;": "ϖ",
      "&varpropto;": "∝",
      "&varr;": "↕",
      "&varrho;": "ϱ",
      "&varsigma;": "ς",
      "&varsubsetneq;": "⊊︀",
      "&varsubsetneqq;": "⫋︀",
      "&varsupsetneq;": "⊋︀",
      "&varsupsetneqq;": "⫌︀",
      "&vartheta;": "ϑ",
      "&vartriangleleft;": "⊲",
      "&vartriangleright;": "⊳",
      "&vcy;": "в",
      "&vdash;": "⊢",
      "&vee;": "∨",
      "&veebar;": "⊻",
      "&veeeq;": "≚",
      "&vellip;": "⋮",
      "&verbar;": "|",
      "&vert;": "|",
      "&vfr;": "𝔳",
      "&vltri;": "⊲",
      "&vnsub;": "⊂⃒",
      "&vnsup;": "⊃⃒",
      "&vopf;": "𝕧",
      "&vprop;": "∝",
      "&vrtri;": "⊳",
      "&vscr;": "𝓋",
      "&vsubnE;": "⫋︀",
      "&vsubne;": "⊊︀",
      "&vsupnE;": "⫌︀",
      "&vsupne;": "⊋︀",
      "&vzigzag;": "⦚",
      "&wcirc;": "ŵ",
      "&wedbar;": "⩟",
      "&wedge;": "∧",
      "&wedgeq;": "≙",
      "&weierp;": "℘",
      "&wfr;": "𝔴",
      "&wopf;": "𝕨",
      "&wp;": "℘",
      "&wr;": "≀",
      "&wreath;": "≀",
      "&wscr;": "𝓌",
      "&xcap;": "⋂",
      "&xcirc;": "◯",
      "&xcup;": "⋃",
      "&xdtri;": "▽",
      "&xfr;": "𝔵",
      "&xhArr;": "⟺",
      "&xharr;": "⟷",
      "&xi;": "ξ",
      "&xlArr;": "⟸",
      "&xlarr;": "⟵",
      "&xmap;": "⟼",
      "&xnis;": "⋻",
      "&xodot;": "⨀",
      "&xopf;": "𝕩",
      "&xoplus;": "⨁",
      "&xotime;": "⨂",
      "&xrArr;": "⟹",
      "&xrarr;": "⟶",
      "&xscr;": "𝓍",
      "&xsqcup;": "⨆",
      "&xuplus;": "⨄",
      "&xutri;": "△",
      "&xvee;": "⋁",
      "&xwedge;": "⋀",
      "&yacute": "ý",
      "&yacute;": "ý",
      "&yacy;": "я",
      "&ycirc;": "ŷ",
      "&ycy;": "ы",
      "&yen": "¥",
      "&yen;": "¥",
      "&yfr;": "𝔶",
      "&yicy;": "ї",
      "&yopf;": "𝕪",
      "&yscr;": "𝓎",
      "&yucy;": "ю",
      "&yuml": "ÿ",
      "&yuml;": "ÿ",
      "&zacute;": "ź",
      "&zcaron;": "ž",
      "&zcy;": "з",
      "&zdot;": "ż",
      "&zeetrf;": "ℨ",
      "&zeta;": "ζ",
      "&zfr;": "𝔷",
      "&zhcy;": "ж",
      "&zigrarr;": "⇝",
      "&zopf;": "𝕫",
      "&zscr;": "𝓏",
      "&zwj;": "‍",
      "&zwnj;": "‌"
    },
    characters: {
      "Æ": "&AElig;",
      "&": "&amp;",
      "Á": "&Aacute;",
      "Ă": "&Abreve;",
      "Â": "&Acirc;",
      "А": "&Acy;",
      "𝔄": "&Afr;",
      "À": "&Agrave;",
      "Α": "&Alpha;",
      "Ā": "&Amacr;",
      "⩓": "&And;",
      "Ą": "&Aogon;",
      "𝔸": "&Aopf;",
      "⁡": "&af;",
      "Å": "&angst;",
      "𝒜": "&Ascr;",
      "≔": "&coloneq;",
      "Ã": "&Atilde;",
      "Ä": "&Auml;",
      "∖": "&ssetmn;",
      "⫧": "&Barv;",
      "⌆": "&doublebarwedge;",
      "Б": "&Bcy;",
      "∵": "&because;",
      "ℬ": "&bernou;",
      "Β": "&Beta;",
      "𝔅": "&Bfr;",
      "𝔹": "&Bopf;",
      "˘": "&breve;",
      "≎": "&bump;",
      "Ч": "&CHcy;",
      "©": "&copy;",
      "Ć": "&Cacute;",
      "⋒": "&Cap;",
      "ⅅ": "&DD;",
      "ℭ": "&Cfr;",
      "Č": "&Ccaron;",
      "Ç": "&Ccedil;",
      "Ĉ": "&Ccirc;",
      "∰": "&Cconint;",
      "Ċ": "&Cdot;",
      "¸": "&cedil;",
      "·": "&middot;",
      "Χ": "&Chi;",
      "⊙": "&odot;",
      "⊖": "&ominus;",
      "⊕": "&oplus;",
      "⊗": "&otimes;",
      "∲": "&cwconint;",
      "”": "&rdquor;",
      "’": "&rsquor;",
      "∷": "&Proportion;",
      "⩴": "&Colone;",
      "≡": "&equiv;",
      "∯": "&DoubleContourIntegral;",
      "∮": "&oint;",
      "ℂ": "&complexes;",
      "∐": "&coprod;",
      "∳": "&awconint;",
      "⨯": "&Cross;",
      "𝒞": "&Cscr;",
      "⋓": "&Cup;",
      "≍": "&asympeq;",
      "⤑": "&DDotrahd;",
      "Ђ": "&DJcy;",
      "Ѕ": "&DScy;",
      "Џ": "&DZcy;",
      "‡": "&ddagger;",
      "↡": "&Darr;",
      "⫤": "&DoubleLeftTee;",
      "Ď": "&Dcaron;",
      "Д": "&Dcy;",
      "∇": "&nabla;",
      "Δ": "&Delta;",
      "𝔇": "&Dfr;",
      "´": "&acute;",
      "˙": "&dot;",
      "˝": "&dblac;",
      "`": "&grave;",
      "˜": "&tilde;",
      "⋄": "&diamond;",
      "ⅆ": "&dd;",
      "𝔻": "&Dopf;",
      "¨": "&uml;",
      "⃜": "&DotDot;",
      "≐": "&esdot;",
      "⇓": "&dArr;",
      "⇐": "&lArr;",
      "⇔": "&iff;",
      "⟸": "&xlArr;",
      "⟺": "&xhArr;",
      "⟹": "&xrArr;",
      "⇒": "&rArr;",
      "⊨": "&vDash;",
      "⇑": "&uArr;",
      "⇕": "&vArr;",
      "∥": "&spar;",
      "↓": "&downarrow;",
      "⤓": "&DownArrowBar;",
      "⇵": "&duarr;",
      "̑": "&DownBreve;",
      "⥐": "&DownLeftRightVector;",
      "⥞": "&DownLeftTeeVector;",
      "↽": "&lhard;",
      "⥖": "&DownLeftVectorBar;",
      "⥟": "&DownRightTeeVector;",
      "⇁": "&rightharpoondown;",
      "⥗": "&DownRightVectorBar;",
      "⊤": "&top;",
      "↧": "&mapstodown;",
      "𝒟": "&Dscr;",
      "Đ": "&Dstrok;",
      "Ŋ": "&ENG;",
      "Ð": "&ETH;",
      "É": "&Eacute;",
      "Ě": "&Ecaron;",
      "Ê": "&Ecirc;",
      "Э": "&Ecy;",
      "Ė": "&Edot;",
      "𝔈": "&Efr;",
      "È": "&Egrave;",
      "∈": "&isinv;",
      "Ē": "&Emacr;",
      "◻": "&EmptySmallSquare;",
      "▫": "&EmptyVerySmallSquare;",
      "Ę": "&Eogon;",
      "𝔼": "&Eopf;",
      "Ε": "&Epsilon;",
      "⩵": "&Equal;",
      "≂": "&esim;",
      "⇌": "&rlhar;",
      "ℰ": "&expectation;",
      "⩳": "&Esim;",
      "Η": "&Eta;",
      "Ë": "&Euml;",
      "∃": "&exist;",
      "ⅇ": "&exponentiale;",
      "Ф": "&Fcy;",
      "𝔉": "&Ffr;",
      "◼": "&FilledSmallSquare;",
      "▪": "&squf;",
      "𝔽": "&Fopf;",
      "∀": "&forall;",
      "ℱ": "&Fscr;",
      "Ѓ": "&GJcy;",
      ">": "&gt;",
      "Γ": "&Gamma;",
      "Ϝ": "&Gammad;",
      "Ğ": "&Gbreve;",
      "Ģ": "&Gcedil;",
      "Ĝ": "&Gcirc;",
      "Г": "&Gcy;",
      "Ġ": "&Gdot;",
      "𝔊": "&Gfr;",
      "⋙": "&ggg;",
      "𝔾": "&Gopf;",
      "≥": "&geq;",
      "⋛": "&gtreqless;",
      "≧": "&geqq;",
      "⪢": "&GreaterGreater;",
      "≷": "&gtrless;",
      "⩾": "&ges;",
      "≳": "&gtrsim;",
      "𝒢": "&Gscr;",
      "≫": "&gg;",
      "Ъ": "&HARDcy;",
      "ˇ": "&caron;",
      "^": "&Hat;",
      "Ĥ": "&Hcirc;",
      "ℌ": "&Poincareplane;",
      "ℋ": "&hamilt;",
      "ℍ": "&quaternions;",
      "─": "&boxh;",
      "Ħ": "&Hstrok;",
      "≏": "&bumpeq;",
      "Е": "&IEcy;",
      "Ĳ": "&IJlig;",
      "Ё": "&IOcy;",
      "Í": "&Iacute;",
      "Î": "&Icirc;",
      "И": "&Icy;",
      "İ": "&Idot;",
      "ℑ": "&imagpart;",
      "Ì": "&Igrave;",
      "Ī": "&Imacr;",
      "ⅈ": "&ii;",
      "∬": "&Int;",
      "∫": "&int;",
      "⋂": "&xcap;",
      "⁣": "&ic;",
      "⁢": "&it;",
      "Į": "&Iogon;",
      "𝕀": "&Iopf;",
      "Ι": "&Iota;",
      "ℐ": "&imagline;",
      "Ĩ": "&Itilde;",
      "І": "&Iukcy;",
      "Ï": "&Iuml;",
      "Ĵ": "&Jcirc;",
      "Й": "&Jcy;",
      "𝔍": "&Jfr;",
      "𝕁": "&Jopf;",
      "𝒥": "&Jscr;",
      "Ј": "&Jsercy;",
      "Є": "&Jukcy;",
      "Х": "&KHcy;",
      "Ќ": "&KJcy;",
      "Κ": "&Kappa;",
      "Ķ": "&Kcedil;",
      "К": "&Kcy;",
      "𝔎": "&Kfr;",
      "𝕂": "&Kopf;",
      "𝒦": "&Kscr;",
      "Љ": "&LJcy;",
      "<": "&lt;",
      "Ĺ": "&Lacute;",
      "Λ": "&Lambda;",
      "⟪": "&Lang;",
      "ℒ": "&lagran;",
      "↞": "&twoheadleftarrow;",
      "Ľ": "&Lcaron;",
      "Ļ": "&Lcedil;",
      "Л": "&Lcy;",
      "⟨": "&langle;",
      "←": "&slarr;",
      "⇤": "&larrb;",
      "⇆": "&lrarr;",
      "⌈": "&lceil;",
      "⟦": "&lobrk;",
      "⥡": "&LeftDownTeeVector;",
      "⇃": "&downharpoonleft;",
      "⥙": "&LeftDownVectorBar;",
      "⌊": "&lfloor;",
      "↔": "&leftrightarrow;",
      "⥎": "&LeftRightVector;",
      "⊣": "&dashv;",
      "↤": "&mapstoleft;",
      "⥚": "&LeftTeeVector;",
      "⊲": "&vltri;",
      "⧏": "&LeftTriangleBar;",
      "⊴": "&trianglelefteq;",
      "⥑": "&LeftUpDownVector;",
      "⥠": "&LeftUpTeeVector;",
      "↿": "&upharpoonleft;",
      "⥘": "&LeftUpVectorBar;",
      "↼": "&lharu;",
      "⥒": "&LeftVectorBar;",
      "⋚": "&lesseqgtr;",
      "≦": "&leqq;",
      "≶": "&lg;",
      "⪡": "&LessLess;",
      "⩽": "&les;",
      "≲": "&lsim;",
      "𝔏": "&Lfr;",
      "⋘": "&Ll;",
      "⇚": "&lAarr;",
      "Ŀ": "&Lmidot;",
      "⟵": "&xlarr;",
      "⟷": "&xharr;",
      "⟶": "&xrarr;",
      "𝕃": "&Lopf;",
      "↙": "&swarrow;",
      "↘": "&searrow;",
      "↰": "&lsh;",
      "Ł": "&Lstrok;",
      "≪": "&ll;",
      "⤅": "&Map;",
      "М": "&Mcy;",
      " ": "&MediumSpace;",
      "ℳ": "&phmmat;",
      "𝔐": "&Mfr;",
      "∓": "&mp;",
      "𝕄": "&Mopf;",
      "Μ": "&Mu;",
      "Њ": "&NJcy;",
      "Ń": "&Nacute;",
      "Ň": "&Ncaron;",
      "Ņ": "&Ncedil;",
      "Н": "&Ncy;",
      "​": "&ZeroWidthSpace;",
      "\n": "&NewLine;",
      "𝔑": "&Nfr;",
      "⁠": "&NoBreak;",
      " ": "&nbsp;",
      "ℕ": "&naturals;",
      "⫬": "&Not;",
      "≢": "&nequiv;",
      "≭": "&NotCupCap;",
      "∦": "&nspar;",
      "∉": "&notinva;",
      "≠": "&ne;",
      "≂̸": "&nesim;",
      "∄": "&nexists;",
      "≯": "&ngtr;",
      "≱": "&ngeq;",
      "≧̸": "&ngeqq;",
      "≫̸": "&nGtv;",
      "≹": "&ntgl;",
      "⩾̸": "&nges;",
      "≵": "&ngsim;",
      "≎̸": "&nbump;",
      "≏̸": "&nbumpe;",
      "⋪": "&ntriangleleft;",
      "⧏̸": "&NotLeftTriangleBar;",
      "⋬": "&ntrianglelefteq;",
      "≮": "&nlt;",
      "≰": "&nleq;",
      "≸": "&ntlg;",
      "≪̸": "&nLtv;",
      "⩽̸": "&nles;",
      "≴": "&nlsim;",
      "⪢̸": "&NotNestedGreaterGreater;",
      "⪡̸": "&NotNestedLessLess;",
      "⊀": "&nprec;",
      "⪯̸": "&npreceq;",
      "⋠": "&nprcue;",
      "∌": "&notniva;",
      "⋫": "&ntriangleright;",
      "⧐̸": "&NotRightTriangleBar;",
      "⋭": "&ntrianglerighteq;",
      "⊏̸": "&NotSquareSubset;",
      "⋢": "&nsqsube;",
      "⊐̸": "&NotSquareSuperset;",
      "⋣": "&nsqsupe;",
      "⊂⃒": "&vnsub;",
      "⊈": "&nsubseteq;",
      "⊁": "&nsucc;",
      "⪰̸": "&nsucceq;",
      "⋡": "&nsccue;",
      "≿̸": "&NotSucceedsTilde;",
      "⊃⃒": "&vnsup;",
      "⊉": "&nsupseteq;",
      "≁": "&nsim;",
      "≄": "&nsimeq;",
      "≇": "&ncong;",
      "≉": "&napprox;",
      "∤": "&nsmid;",
      "𝒩": "&Nscr;",
      "Ñ": "&Ntilde;",
      "Ν": "&Nu;",
      "Œ": "&OElig;",
      "Ó": "&Oacute;",
      "Ô": "&Ocirc;",
      "О": "&Ocy;",
      "Ő": "&Odblac;",
      "𝔒": "&Ofr;",
      "Ò": "&Ograve;",
      "Ō": "&Omacr;",
      "Ω": "&ohm;",
      "Ο": "&Omicron;",
      "𝕆": "&Oopf;",
      "“": "&ldquo;",
      "‘": "&lsquo;",
      "⩔": "&Or;",
      "𝒪": "&Oscr;",
      "Ø": "&Oslash;",
      "Õ": "&Otilde;",
      "⨷": "&Otimes;",
      "Ö": "&Ouml;",
      "‾": "&oline;",
      "⏞": "&OverBrace;",
      "⎴": "&tbrk;",
      "⏜": "&OverParenthesis;",
      "∂": "&part;",
      "П": "&Pcy;",
      "𝔓": "&Pfr;",
      "Φ": "&Phi;",
      "Π": "&Pi;",
      "±": "&pm;",
      "ℙ": "&primes;",
      "⪻": "&Pr;",
      "≺": "&prec;",
      "⪯": "&preceq;",
      "≼": "&preccurlyeq;",
      "≾": "&prsim;",
      "″": "&Prime;",
      "∏": "&prod;",
      "∝": "&vprop;",
      "𝒫": "&Pscr;",
      "Ψ": "&Psi;",
      '"': "&quot;",
      "𝔔": "&Qfr;",
      "ℚ": "&rationals;",
      "𝒬": "&Qscr;",
      "⤐": "&drbkarow;",
      "®": "&reg;",
      "Ŕ": "&Racute;",
      "⟫": "&Rang;",
      "↠": "&twoheadrightarrow;",
      "⤖": "&Rarrtl;",
      "Ř": "&Rcaron;",
      "Ŗ": "&Rcedil;",
      "Р": "&Rcy;",
      "ℜ": "&realpart;",
      "∋": "&niv;",
      "⇋": "&lrhar;",
      "⥯": "&duhar;",
      "Ρ": "&Rho;",
      "⟩": "&rangle;",
      "→": "&srarr;",
      "⇥": "&rarrb;",
      "⇄": "&rlarr;",
      "⌉": "&rceil;",
      "⟧": "&robrk;",
      "⥝": "&RightDownTeeVector;",
      "⇂": "&downharpoonright;",
      "⥕": "&RightDownVectorBar;",
      "⌋": "&rfloor;",
      "⊢": "&vdash;",
      "↦": "&mapsto;",
      "⥛": "&RightTeeVector;",
      "⊳": "&vrtri;",
      "⧐": "&RightTriangleBar;",
      "⊵": "&trianglerighteq;",
      "⥏": "&RightUpDownVector;",
      "⥜": "&RightUpTeeVector;",
      "↾": "&upharpoonright;",
      "⥔": "&RightUpVectorBar;",
      "⇀": "&rightharpoonup;",
      "⥓": "&RightVectorBar;",
      "ℝ": "&reals;",
      "⥰": "&RoundImplies;",
      "⇛": "&rAarr;",
      "ℛ": "&realine;",
      "↱": "&rsh;",
      "⧴": "&RuleDelayed;",
      "Щ": "&SHCHcy;",
      "Ш": "&SHcy;",
      "Ь": "&SOFTcy;",
      "Ś": "&Sacute;",
      "⪼": "&Sc;",
      "Š": "&Scaron;",
      "Ş": "&Scedil;",
      "Ŝ": "&Scirc;",
      "С": "&Scy;",
      "𝔖": "&Sfr;",
      "↑": "&uparrow;",
      "Σ": "&Sigma;",
      "∘": "&compfn;",
      "𝕊": "&Sopf;",
      "√": "&radic;",
      "□": "&square;",
      "⊓": "&sqcap;",
      "⊏": "&sqsubset;",
      "⊑": "&sqsubseteq;",
      "⊐": "&sqsupset;",
      "⊒": "&sqsupseteq;",
      "⊔": "&sqcup;",
      "𝒮": "&Sscr;",
      "⋆": "&sstarf;",
      "⋐": "&Subset;",
      "⊆": "&subseteq;",
      "≻": "&succ;",
      "⪰": "&succeq;",
      "≽": "&succcurlyeq;",
      "≿": "&succsim;",
      "∑": "&sum;",
      "⋑": "&Supset;",
      "⊃": "&supset;",
      "⊇": "&supseteq;",
      "Þ": "&THORN;",
      "™": "&trade;",
      "Ћ": "&TSHcy;",
      "Ц": "&TScy;",
      "\t": "&Tab;",
      "Τ": "&Tau;",
      "Ť": "&Tcaron;",
      "Ţ": "&Tcedil;",
      "Т": "&Tcy;",
      "𝔗": "&Tfr;",
      "∴": "&therefore;",
      "Θ": "&Theta;",
      "  ": "&ThickSpace;",
      " ": "&thinsp;",
      "∼": "&thksim;",
      "≃": "&simeq;",
      "≅": "&cong;",
      "≈": "&thkap;",
      "𝕋": "&Topf;",
      "⃛": "&tdot;",
      "𝒯": "&Tscr;",
      "Ŧ": "&Tstrok;",
      "Ú": "&Uacute;",
      "↟": "&Uarr;",
      "⥉": "&Uarrocir;",
      "Ў": "&Ubrcy;",
      "Ŭ": "&Ubreve;",
      "Û": "&Ucirc;",
      "У": "&Ucy;",
      "Ű": "&Udblac;",
      "𝔘": "&Ufr;",
      "Ù": "&Ugrave;",
      "Ū": "&Umacr;",
      _: "&lowbar;",
      "⏟": "&UnderBrace;",
      "⎵": "&bbrk;",
      "⏝": "&UnderParenthesis;",
      "⋃": "&xcup;",
      "⊎": "&uplus;",
      "Ų": "&Uogon;",
      "𝕌": "&Uopf;",
      "⤒": "&UpArrowBar;",
      "⇅": "&udarr;",
      "↕": "&varr;",
      "⥮": "&udhar;",
      "⊥": "&perp;",
      "↥": "&mapstoup;",
      "↖": "&nwarrow;",
      "↗": "&nearrow;",
      "ϒ": "&upsih;",
      "Υ": "&Upsilon;",
      "Ů": "&Uring;",
      "𝒰": "&Uscr;",
      "Ũ": "&Utilde;",
      "Ü": "&Uuml;",
      "⊫": "&VDash;",
      "⫫": "&Vbar;",
      "В": "&Vcy;",
      "⊩": "&Vdash;",
      "⫦": "&Vdashl;",
      "⋁": "&xvee;",
      "‖": "&Vert;",
      "∣": "&smid;",
      "|": "&vert;",
      "❘": "&VerticalSeparator;",
      "≀": "&wreath;",
      " ": "&hairsp;",
      "𝔙": "&Vfr;",
      "𝕍": "&Vopf;",
      "𝒱": "&Vscr;",
      "⊪": "&Vvdash;",
      "Ŵ": "&Wcirc;",
      "⋀": "&xwedge;",
      "𝔚": "&Wfr;",
      "𝕎": "&Wopf;",
      "𝒲": "&Wscr;",
      "𝔛": "&Xfr;",
      "Ξ": "&Xi;",
      "𝕏": "&Xopf;",
      "𝒳": "&Xscr;",
      "Я": "&YAcy;",
      "Ї": "&YIcy;",
      "Ю": "&YUcy;",
      "Ý": "&Yacute;",
      "Ŷ": "&Ycirc;",
      "Ы": "&Ycy;",
      "𝔜": "&Yfr;",
      "𝕐": "&Yopf;",
      "𝒴": "&Yscr;",
      "Ÿ": "&Yuml;",
      "Ж": "&ZHcy;",
      "Ź": "&Zacute;",
      "Ž": "&Zcaron;",
      "З": "&Zcy;",
      "Ż": "&Zdot;",
      "Ζ": "&Zeta;",
      "ℨ": "&zeetrf;",
      "ℤ": "&integers;",
      "𝒵": "&Zscr;",
      "á": "&aacute;",
      "ă": "&abreve;",
      "∾": "&mstpos;",
      "∾̳": "&acE;",
      "∿": "&acd;",
      "â": "&acirc;",
      "а": "&acy;",
      "æ": "&aelig;",
      "𝔞": "&afr;",
      "à": "&agrave;",
      "ℵ": "&aleph;",
      "α": "&alpha;",
      "ā": "&amacr;",
      "⨿": "&amalg;",
      "∧": "&wedge;",
      "⩕": "&andand;",
      "⩜": "&andd;",
      "⩘": "&andslope;",
      "⩚": "&andv;",
      "∠": "&angle;",
      "⦤": "&ange;",
      "∡": "&measuredangle;",
      "⦨": "&angmsdaa;",
      "⦩": "&angmsdab;",
      "⦪": "&angmsdac;",
      "⦫": "&angmsdad;",
      "⦬": "&angmsdae;",
      "⦭": "&angmsdaf;",
      "⦮": "&angmsdag;",
      "⦯": "&angmsdah;",
      "∟": "&angrt;",
      "⊾": "&angrtvb;",
      "⦝": "&angrtvbd;",
      "∢": "&angsph;",
      "⍼": "&angzarr;",
      "ą": "&aogon;",
      "𝕒": "&aopf;",
      "⩰": "&apE;",
      "⩯": "&apacir;",
      "≊": "&approxeq;",
      "≋": "&apid;",
      "'": "&apos;",
      "å": "&aring;",
      "𝒶": "&ascr;",
      "*": "&midast;",
      "ã": "&atilde;",
      "ä": "&auml;",
      "⨑": "&awint;",
      "⫭": "&bNot;",
      "≌": "&bcong;",
      "϶": "&bepsi;",
      "‵": "&bprime;",
      "∽": "&bsim;",
      "⋍": "&bsime;",
      "⊽": "&barvee;",
      "⌅": "&barwedge;",
      "⎶": "&bbrktbrk;",
      "б": "&bcy;",
      "„": "&ldquor;",
      "⦰": "&bemptyv;",
      "β": "&beta;",
      "ℶ": "&beth;",
      "≬": "&twixt;",
      "𝔟": "&bfr;",
      "◯": "&xcirc;",
      "⨀": "&xodot;",
      "⨁": "&xoplus;",
      "⨂": "&xotime;",
      "⨆": "&xsqcup;",
      "★": "&starf;",
      "▽": "&xdtri;",
      "△": "&xutri;",
      "⨄": "&xuplus;",
      "⤍": "&rbarr;",
      "⧫": "&lozf;",
      "▴": "&utrif;",
      "▾": "&dtrif;",
      "◂": "&ltrif;",
      "▸": "&rtrif;",
      "␣": "&blank;",
      "▒": "&blk12;",
      "░": "&blk14;",
      "▓": "&blk34;",
      "█": "&block;",
      "=⃥": "&bne;",
      "≡⃥": "&bnequiv;",
      "⌐": "&bnot;",
      "𝕓": "&bopf;",
      "⋈": "&bowtie;",
      "╗": "&boxDL;",
      "╔": "&boxDR;",
      "╖": "&boxDl;",
      "╓": "&boxDr;",
      "═": "&boxH;",
      "╦": "&boxHD;",
      "╩": "&boxHU;",
      "╤": "&boxHd;",
      "╧": "&boxHu;",
      "╝": "&boxUL;",
      "╚": "&boxUR;",
      "╜": "&boxUl;",
      "╙": "&boxUr;",
      "║": "&boxV;",
      "╬": "&boxVH;",
      "╣": "&boxVL;",
      "╠": "&boxVR;",
      "╫": "&boxVh;",
      "╢": "&boxVl;",
      "╟": "&boxVr;",
      "⧉": "&boxbox;",
      "╕": "&boxdL;",
      "╒": "&boxdR;",
      "┐": "&boxdl;",
      "┌": "&boxdr;",
      "╥": "&boxhD;",
      "╨": "&boxhU;",
      "┬": "&boxhd;",
      "┴": "&boxhu;",
      "⊟": "&minusb;",
      "⊞": "&plusb;",
      "⊠": "&timesb;",
      "╛": "&boxuL;",
      "╘": "&boxuR;",
      "┘": "&boxul;",
      "└": "&boxur;",
      "│": "&boxv;",
      "╪": "&boxvH;",
      "╡": "&boxvL;",
      "╞": "&boxvR;",
      "┼": "&boxvh;",
      "┤": "&boxvl;",
      "├": "&boxvr;",
      "¦": "&brvbar;",
      "𝒷": "&bscr;",
      "⁏": "&bsemi;",
      "\\": "&bsol;",
      "⧅": "&bsolb;",
      "⟈": "&bsolhsub;",
      "•": "&bullet;",
      "⪮": "&bumpE;",
      "ć": "&cacute;",
      "∩": "&cap;",
      "⩄": "&capand;",
      "⩉": "&capbrcup;",
      "⩋": "&capcap;",
      "⩇": "&capcup;",
      "⩀": "&capdot;",
      "∩︀": "&caps;",
      "⁁": "&caret;",
      "⩍": "&ccaps;",
      "č": "&ccaron;",
      "ç": "&ccedil;",
      "ĉ": "&ccirc;",
      "⩌": "&ccups;",
      "⩐": "&ccupssm;",
      "ċ": "&cdot;",
      "⦲": "&cemptyv;",
      "¢": "&cent;",
      "𝔠": "&cfr;",
      "ч": "&chcy;",
      "✓": "&checkmark;",
      "χ": "&chi;",
      "○": "&cir;",
      "⧃": "&cirE;",
      "ˆ": "&circ;",
      "≗": "&cire;",
      "↺": "&olarr;",
      "↻": "&orarr;",
      "Ⓢ": "&oS;",
      "⊛": "&oast;",
      "⊚": "&ocir;",
      "⊝": "&odash;",
      "⨐": "&cirfnint;",
      "⫯": "&cirmid;",
      "⧂": "&cirscir;",
      "♣": "&clubsuit;",
      ":": "&colon;",
      ",": "&comma;",
      "@": "&commat;",
      "∁": "&complement;",
      "⩭": "&congdot;",
      "𝕔": "&copf;",
      "℗": "&copysr;",
      "↵": "&crarr;",
      "✗": "&cross;",
      "𝒸": "&cscr;",
      "⫏": "&csub;",
      "⫑": "&csube;",
      "⫐": "&csup;",
      "⫒": "&csupe;",
      "⋯": "&ctdot;",
      "⤸": "&cudarrl;",
      "⤵": "&cudarrr;",
      "⋞": "&curlyeqprec;",
      "⋟": "&curlyeqsucc;",
      "↶": "&curvearrowleft;",
      "⤽": "&cularrp;",
      "∪": "&cup;",
      "⩈": "&cupbrcap;",
      "⩆": "&cupcap;",
      "⩊": "&cupcup;",
      "⊍": "&cupdot;",
      "⩅": "&cupor;",
      "∪︀": "&cups;",
      "↷": "&curvearrowright;",
      "⤼": "&curarrm;",
      "⋎": "&cuvee;",
      "⋏": "&cuwed;",
      "¤": "&curren;",
      "∱": "&cwint;",
      "⌭": "&cylcty;",
      "⥥": "&dHar;",
      "†": "&dagger;",
      "ℸ": "&daleth;",
      "‐": "&hyphen;",
      "⤏": "&rBarr;",
      "ď": "&dcaron;",
      "д": "&dcy;",
      "⇊": "&downdownarrows;",
      "⩷": "&eDDot;",
      "°": "&deg;",
      "δ": "&delta;",
      "⦱": "&demptyv;",
      "⥿": "&dfisht;",
      "𝔡": "&dfr;",
      "♦": "&diams;",
      "ϝ": "&gammad;",
      "⋲": "&disin;",
      "÷": "&divide;",
      "⋇": "&divonx;",
      "ђ": "&djcy;",
      "⌞": "&llcorner;",
      "⌍": "&dlcrop;",
      $: "&dollar;",
      "𝕕": "&dopf;",
      "≑": "&eDot;",
      "∸": "&minusd;",
      "∔": "&plusdo;",
      "⊡": "&sdotb;",
      "⌟": "&lrcorner;",
      "⌌": "&drcrop;",
      "𝒹": "&dscr;",
      "ѕ": "&dscy;",
      "⧶": "&dsol;",
      "đ": "&dstrok;",
      "⋱": "&dtdot;",
      "▿": "&triangledown;",
      "⦦": "&dwangle;",
      "џ": "&dzcy;",
      "⟿": "&dzigrarr;",
      "é": "&eacute;",
      "⩮": "&easter;",
      "ě": "&ecaron;",
      "≖": "&eqcirc;",
      "ê": "&ecirc;",
      "≕": "&eqcolon;",
      "э": "&ecy;",
      "ė": "&edot;",
      "≒": "&fallingdotseq;",
      "𝔢": "&efr;",
      "⪚": "&eg;",
      "è": "&egrave;",
      "⪖": "&eqslantgtr;",
      "⪘": "&egsdot;",
      "⪙": "&el;",
      "⏧": "&elinters;",
      "ℓ": "&ell;",
      "⪕": "&eqslantless;",
      "⪗": "&elsdot;",
      "ē": "&emacr;",
      "∅": "&varnothing;",
      " ": "&emsp13;",
      " ": "&emsp14;",
      " ": "&emsp;",
      "ŋ": "&eng;",
      " ": "&ensp;",
      "ę": "&eogon;",
      "𝕖": "&eopf;",
      "⋕": "&epar;",
      "⧣": "&eparsl;",
      "⩱": "&eplus;",
      "ε": "&epsilon;",
      "ϵ": "&varepsilon;",
      "=": "&equals;",
      "≟": "&questeq;",
      "⩸": "&equivDD;",
      "⧥": "&eqvparsl;",
      "≓": "&risingdotseq;",
      "⥱": "&erarr;",
      "ℯ": "&escr;",
      "η": "&eta;",
      "ð": "&eth;",
      "ë": "&euml;",
      "€": "&euro;",
      "!": "&excl;",
      "ф": "&fcy;",
      "♀": "&female;",
      "ﬃ": "&ffilig;",
      "ﬀ": "&fflig;",
      "ﬄ": "&ffllig;",
      "𝔣": "&ffr;",
      "ﬁ": "&filig;",
      fj: "&fjlig;",
      "♭": "&flat;",
      "ﬂ": "&fllig;",
      "▱": "&fltns;",
      "ƒ": "&fnof;",
      "𝕗": "&fopf;",
      "⋔": "&pitchfork;",
      "⫙": "&forkv;",
      "⨍": "&fpartint;",
      "½": "&half;",
      "⅓": "&frac13;",
      "¼": "&frac14;",
      "⅕": "&frac15;",
      "⅙": "&frac16;",
      "⅛": "&frac18;",
      "⅔": "&frac23;",
      "⅖": "&frac25;",
      "¾": "&frac34;",
      "⅗": "&frac35;",
      "⅜": "&frac38;",
      "⅘": "&frac45;",
      "⅚": "&frac56;",
      "⅝": "&frac58;",
      "⅞": "&frac78;",
      "⁄": "&frasl;",
      "⌢": "&sfrown;",
      "𝒻": "&fscr;",
      "⪌": "&gtreqqless;",
      "ǵ": "&gacute;",
      "γ": "&gamma;",
      "⪆": "&gtrapprox;",
      "ğ": "&gbreve;",
      "ĝ": "&gcirc;",
      "г": "&gcy;",
      "ġ": "&gdot;",
      "⪩": "&gescc;",
      "⪀": "&gesdot;",
      "⪂": "&gesdoto;",
      "⪄": "&gesdotol;",
      "⋛︀": "&gesl;",
      "⪔": "&gesles;",
      "𝔤": "&gfr;",
      "ℷ": "&gimel;",
      "ѓ": "&gjcy;",
      "⪒": "&glE;",
      "⪥": "&gla;",
      "⪤": "&glj;",
      "≩": "&gneqq;",
      "⪊": "&gnapprox;",
      "⪈": "&gneq;",
      "⋧": "&gnsim;",
      "𝕘": "&gopf;",
      "ℊ": "&gscr;",
      "⪎": "&gsime;",
      "⪐": "&gsiml;",
      "⪧": "&gtcc;",
      "⩺": "&gtcir;",
      "⋗": "&gtrdot;",
      "⦕": "&gtlPar;",
      "⩼": "&gtquest;",
      "⥸": "&gtrarr;",
      "≩︀": "&gvnE;",
      "ъ": "&hardcy;",
      "⥈": "&harrcir;",
      "↭": "&leftrightsquigarrow;",
      "ℏ": "&plankv;",
      "ĥ": "&hcirc;",
      "♥": "&heartsuit;",
      "…": "&mldr;",
      "⊹": "&hercon;",
      "𝔥": "&hfr;",
      "⤥": "&searhk;",
      "⤦": "&swarhk;",
      "⇿": "&hoarr;",
      "∻": "&homtht;",
      "↩": "&larrhk;",
      "↪": "&rarrhk;",
      "𝕙": "&hopf;",
      "―": "&horbar;",
      "𝒽": "&hscr;",
      "ħ": "&hstrok;",
      "⁃": "&hybull;",
      "í": "&iacute;",
      "î": "&icirc;",
      "и": "&icy;",
      "е": "&iecy;",
      "¡": "&iexcl;",
      "𝔦": "&ifr;",
      "ì": "&igrave;",
      "⨌": "&qint;",
      "∭": "&tint;",
      "⧜": "&iinfin;",
      "℩": "&iiota;",
      "ĳ": "&ijlig;",
      "ī": "&imacr;",
      "ı": "&inodot;",
      "⊷": "&imof;",
      "Ƶ": "&imped;",
      "℅": "&incare;",
      "∞": "&infin;",
      "⧝": "&infintie;",
      "⊺": "&intercal;",
      "⨗": "&intlarhk;",
      "⨼": "&iprod;",
      "ё": "&iocy;",
      "į": "&iogon;",
      "𝕚": "&iopf;",
      "ι": "&iota;",
      "¿": "&iquest;",
      "𝒾": "&iscr;",
      "⋹": "&isinE;",
      "⋵": "&isindot;",
      "⋴": "&isins;",
      "⋳": "&isinsv;",
      "ĩ": "&itilde;",
      "і": "&iukcy;",
      "ï": "&iuml;",
      "ĵ": "&jcirc;",
      "й": "&jcy;",
      "𝔧": "&jfr;",
      "ȷ": "&jmath;",
      "𝕛": "&jopf;",
      "𝒿": "&jscr;",
      "ј": "&jsercy;",
      "є": "&jukcy;",
      "κ": "&kappa;",
      "ϰ": "&varkappa;",
      "ķ": "&kcedil;",
      "к": "&kcy;",
      "𝔨": "&kfr;",
      "ĸ": "&kgreen;",
      "х": "&khcy;",
      "ќ": "&kjcy;",
      "𝕜": "&kopf;",
      "𝓀": "&kscr;",
      "⤛": "&lAtail;",
      "⤎": "&lBarr;",
      "⪋": "&lesseqqgtr;",
      "⥢": "&lHar;",
      "ĺ": "&lacute;",
      "⦴": "&laemptyv;",
      "λ": "&lambda;",
      "⦑": "&langd;",
      "⪅": "&lessapprox;",
      "«": "&laquo;",
      "⤟": "&larrbfs;",
      "⤝": "&larrfs;",
      "↫": "&looparrowleft;",
      "⤹": "&larrpl;",
      "⥳": "&larrsim;",
      "↢": "&leftarrowtail;",
      "⪫": "&lat;",
      "⤙": "&latail;",
      "⪭": "&late;",
      "⪭︀": "&lates;",
      "⤌": "&lbarr;",
      "❲": "&lbbrk;",
      "{": "&lcub;",
      "[": "&lsqb;",
      "⦋": "&lbrke;",
      "⦏": "&lbrksld;",
      "⦍": "&lbrkslu;",
      "ľ": "&lcaron;",
      "ļ": "&lcedil;",
      "л": "&lcy;",
      "⤶": "&ldca;",
      "⥧": "&ldrdhar;",
      "⥋": "&ldrushar;",
      "↲": "&ldsh;",
      "≤": "&leq;",
      "⇇": "&llarr;",
      "⋋": "&lthree;",
      "⪨": "&lescc;",
      "⩿": "&lesdot;",
      "⪁": "&lesdoto;",
      "⪃": "&lesdotor;",
      "⋚︀": "&lesg;",
      "⪓": "&lesges;",
      "⋖": "&ltdot;",
      "⥼": "&lfisht;",
      "𝔩": "&lfr;",
      "⪑": "&lgE;",
      "⥪": "&lharul;",
      "▄": "&lhblk;",
      "љ": "&ljcy;",
      "⥫": "&llhard;",
      "◺": "&lltri;",
      "ŀ": "&lmidot;",
      "⎰": "&lmoustache;",
      "≨": "&lneqq;",
      "⪉": "&lnapprox;",
      "⪇": "&lneq;",
      "⋦": "&lnsim;",
      "⟬": "&loang;",
      "⇽": "&loarr;",
      "⟼": "&xmap;",
      "↬": "&rarrlp;",
      "⦅": "&lopar;",
      "𝕝": "&lopf;",
      "⨭": "&loplus;",
      "⨴": "&lotimes;",
      "∗": "&lowast;",
      "◊": "&lozenge;",
      "(": "&lpar;",
      "⦓": "&lparlt;",
      "⥭": "&lrhard;",
      "‎": "&lrm;",
      "⊿": "&lrtri;",
      "‹": "&lsaquo;",
      "𝓁": "&lscr;",
      "⪍": "&lsime;",
      "⪏": "&lsimg;",
      "‚": "&sbquo;",
      "ł": "&lstrok;",
      "⪦": "&ltcc;",
      "⩹": "&ltcir;",
      "⋉": "&ltimes;",
      "⥶": "&ltlarr;",
      "⩻": "&ltquest;",
      "⦖": "&ltrPar;",
      "◃": "&triangleleft;",
      "⥊": "&lurdshar;",
      "⥦": "&luruhar;",
      "≨︀": "&lvnE;",
      "∺": "&mDDot;",
      "¯": "&strns;",
      "♂": "&male;",
      "✠": "&maltese;",
      "▮": "&marker;",
      "⨩": "&mcomma;",
      "м": "&mcy;",
      "—": "&mdash;",
      "𝔪": "&mfr;",
      "℧": "&mho;",
      "µ": "&micro;",
      "⫰": "&midcir;",
      "−": "&minus;",
      "⨪": "&minusdu;",
      "⫛": "&mlcp;",
      "⊧": "&models;",
      "𝕞": "&mopf;",
      "𝓂": "&mscr;",
      "μ": "&mu;",
      "⊸": "&mumap;",
      "⋙̸": "&nGg;",
      "≫⃒": "&nGt;",
      "⇍": "&nlArr;",
      "⇎": "&nhArr;",
      "⋘̸": "&nLl;",
      "≪⃒": "&nLt;",
      "⇏": "&nrArr;",
      "⊯": "&nVDash;",
      "⊮": "&nVdash;",
      "ń": "&nacute;",
      "∠⃒": "&nang;",
      "⩰̸": "&napE;",
      "≋̸": "&napid;",
      "ŉ": "&napos;",
      "♮": "&natural;",
      "⩃": "&ncap;",
      "ň": "&ncaron;",
      "ņ": "&ncedil;",
      "⩭̸": "&ncongdot;",
      "⩂": "&ncup;",
      "н": "&ncy;",
      "–": "&ndash;",
      "⇗": "&neArr;",
      "⤤": "&nearhk;",
      "≐̸": "&nedot;",
      "⤨": "&toea;",
      "𝔫": "&nfr;",
      "↮": "&nleftrightarrow;",
      "⫲": "&nhpar;",
      "⋼": "&nis;",
      "⋺": "&nisd;",
      "њ": "&njcy;",
      "≦̸": "&nleqq;",
      "↚": "&nleftarrow;",
      "‥": "&nldr;",
      "𝕟": "&nopf;",
      "¬": "&not;",
      "⋹̸": "&notinE;",
      "⋵̸": "&notindot;",
      "⋷": "&notinvb;",
      "⋶": "&notinvc;",
      "⋾": "&notnivb;",
      "⋽": "&notnivc;",
      "⫽⃥": "&nparsl;",
      "∂̸": "&npart;",
      "⨔": "&npolint;",
      "↛": "&nrightarrow;",
      "⤳̸": "&nrarrc;",
      "↝̸": "&nrarrw;",
      "𝓃": "&nscr;",
      "⊄": "&nsub;",
      "⫅̸": "&nsubseteqq;",
      "⊅": "&nsup;",
      "⫆̸": "&nsupseteqq;",
      "ñ": "&ntilde;",
      "ν": "&nu;",
      "#": "&num;",
      "№": "&numero;",
      " ": "&numsp;",
      "⊭": "&nvDash;",
      "⤄": "&nvHarr;",
      "≍⃒": "&nvap;",
      "⊬": "&nvdash;",
      "≥⃒": "&nvge;",
      ">⃒": "&nvgt;",
      "⧞": "&nvinfin;",
      "⤂": "&nvlArr;",
      "≤⃒": "&nvle;",
      "<⃒": "&nvlt;",
      "⊴⃒": "&nvltrie;",
      "⤃": "&nvrArr;",
      "⊵⃒": "&nvrtrie;",
      "∼⃒": "&nvsim;",
      "⇖": "&nwArr;",
      "⤣": "&nwarhk;",
      "⤧": "&nwnear;",
      "ó": "&oacute;",
      "ô": "&ocirc;",
      "о": "&ocy;",
      "ő": "&odblac;",
      "⨸": "&odiv;",
      "⦼": "&odsold;",
      "œ": "&oelig;",
      "⦿": "&ofcir;",
      "𝔬": "&ofr;",
      "˛": "&ogon;",
      "ò": "&ograve;",
      "⧁": "&ogt;",
      "⦵": "&ohbar;",
      "⦾": "&olcir;",
      "⦻": "&olcross;",
      "⧀": "&olt;",
      "ō": "&omacr;",
      "ω": "&omega;",
      "ο": "&omicron;",
      "⦶": "&omid;",
      "𝕠": "&oopf;",
      "⦷": "&opar;",
      "⦹": "&operp;",
      "∨": "&vee;",
      "⩝": "&ord;",
      "ℴ": "&oscr;",
      "ª": "&ordf;",
      "º": "&ordm;",
      "⊶": "&origof;",
      "⩖": "&oror;",
      "⩗": "&orslope;",
      "⩛": "&orv;",
      "ø": "&oslash;",
      "⊘": "&osol;",
      "õ": "&otilde;",
      "⨶": "&otimesas;",
      "ö": "&ouml;",
      "⌽": "&ovbar;",
      "¶": "&para;",
      "⫳": "&parsim;",
      "⫽": "&parsl;",
      "п": "&pcy;",
      "%": "&percnt;",
      ".": "&period;",
      "‰": "&permil;",
      "‱": "&pertenk;",
      "𝔭": "&pfr;",
      "φ": "&phi;",
      "ϕ": "&varphi;",
      "☎": "&phone;",
      "π": "&pi;",
      "ϖ": "&varpi;",
      "ℎ": "&planckh;",
      "+": "&plus;",
      "⨣": "&plusacir;",
      "⨢": "&pluscir;",
      "⨥": "&plusdu;",
      "⩲": "&pluse;",
      "⨦": "&plussim;",
      "⨧": "&plustwo;",
      "⨕": "&pointint;",
      "𝕡": "&popf;",
      "£": "&pound;",
      "⪳": "&prE;",
      "⪷": "&precapprox;",
      "⪹": "&prnap;",
      "⪵": "&prnE;",
      "⋨": "&prnsim;",
      "′": "&prime;",
      "⌮": "&profalar;",
      "⌒": "&profline;",
      "⌓": "&profsurf;",
      "⊰": "&prurel;",
      "𝓅": "&pscr;",
      "ψ": "&psi;",
      " ": "&puncsp;",
      "𝔮": "&qfr;",
      "𝕢": "&qopf;",
      "⁗": "&qprime;",
      "𝓆": "&qscr;",
      "⨖": "&quatint;",
      "?": "&quest;",
      "⤜": "&rAtail;",
      "⥤": "&rHar;",
      "∽̱": "&race;",
      "ŕ": "&racute;",
      "⦳": "&raemptyv;",
      "⦒": "&rangd;",
      "⦥": "&range;",
      "»": "&raquo;",
      "⥵": "&rarrap;",
      "⤠": "&rarrbfs;",
      "⤳": "&rarrc;",
      "⤞": "&rarrfs;",
      "⥅": "&rarrpl;",
      "⥴": "&rarrsim;",
      "↣": "&rightarrowtail;",
      "↝": "&rightsquigarrow;",
      "⤚": "&ratail;",
      "∶": "&ratio;",
      "❳": "&rbbrk;",
      "}": "&rcub;",
      "]": "&rsqb;",
      "⦌": "&rbrke;",
      "⦎": "&rbrksld;",
      "⦐": "&rbrkslu;",
      "ř": "&rcaron;",
      "ŗ": "&rcedil;",
      "р": "&rcy;",
      "⤷": "&rdca;",
      "⥩": "&rdldhar;",
      "↳": "&rdsh;",
      "▭": "&rect;",
      "⥽": "&rfisht;",
      "𝔯": "&rfr;",
      "⥬": "&rharul;",
      "ρ": "&rho;",
      "ϱ": "&varrho;",
      "⇉": "&rrarr;",
      "⋌": "&rthree;",
      "˚": "&ring;",
      "‏": "&rlm;",
      "⎱": "&rmoustache;",
      "⫮": "&rnmid;",
      "⟭": "&roang;",
      "⇾": "&roarr;",
      "⦆": "&ropar;",
      "𝕣": "&ropf;",
      "⨮": "&roplus;",
      "⨵": "&rotimes;",
      ")": "&rpar;",
      "⦔": "&rpargt;",
      "⨒": "&rppolint;",
      "›": "&rsaquo;",
      "𝓇": "&rscr;",
      "⋊": "&rtimes;",
      "▹": "&triangleright;",
      "⧎": "&rtriltri;",
      "⥨": "&ruluhar;",
      "℞": "&rx;",
      "ś": "&sacute;",
      "⪴": "&scE;",
      "⪸": "&succapprox;",
      "š": "&scaron;",
      "ş": "&scedil;",
      "ŝ": "&scirc;",
      "⪶": "&succneqq;",
      "⪺": "&succnapprox;",
      "⋩": "&succnsim;",
      "⨓": "&scpolint;",
      "с": "&scy;",
      "⋅": "&sdot;",
      "⩦": "&sdote;",
      "⇘": "&seArr;",
      "§": "&sect;",
      ";": "&semi;",
      "⤩": "&tosa;",
      "✶": "&sext;",
      "𝔰": "&sfr;",
      "♯": "&sharp;",
      "щ": "&shchcy;",
      "ш": "&shcy;",
      "­": "&shy;",
      "σ": "&sigma;",
      "ς": "&varsigma;",
      "⩪": "&simdot;",
      "⪞": "&simg;",
      "⪠": "&simgE;",
      "⪝": "&siml;",
      "⪟": "&simlE;",
      "≆": "&simne;",
      "⨤": "&simplus;",
      "⥲": "&simrarr;",
      "⨳": "&smashp;",
      "⧤": "&smeparsl;",
      "⌣": "&ssmile;",
      "⪪": "&smt;",
      "⪬": "&smte;",
      "⪬︀": "&smtes;",
      "ь": "&softcy;",
      "/": "&sol;",
      "⧄": "&solb;",
      "⌿": "&solbar;",
      "𝕤": "&sopf;",
      "♠": "&spadesuit;",
      "⊓︀": "&sqcaps;",
      "⊔︀": "&sqcups;",
      "𝓈": "&sscr;",
      "☆": "&star;",
      "⊂": "&subset;",
      "⫅": "&subseteqq;",
      "⪽": "&subdot;",
      "⫃": "&subedot;",
      "⫁": "&submult;",
      "⫋": "&subsetneqq;",
      "⊊": "&subsetneq;",
      "⪿": "&subplus;",
      "⥹": "&subrarr;",
      "⫇": "&subsim;",
      "⫕": "&subsub;",
      "⫓": "&subsup;",
      "♪": "&sung;",
      "¹": "&sup1;",
      "²": "&sup2;",
      "³": "&sup3;",
      "⫆": "&supseteqq;",
      "⪾": "&supdot;",
      "⫘": "&supdsub;",
      "⫄": "&supedot;",
      "⟉": "&suphsol;",
      "⫗": "&suphsub;",
      "⥻": "&suplarr;",
      "⫂": "&supmult;",
      "⫌": "&supsetneqq;",
      "⊋": "&supsetneq;",
      "⫀": "&supplus;",
      "⫈": "&supsim;",
      "⫔": "&supsub;",
      "⫖": "&supsup;",
      "⇙": "&swArr;",
      "⤪": "&swnwar;",
      "ß": "&szlig;",
      "⌖": "&target;",
      "τ": "&tau;",
      "ť": "&tcaron;",
      "ţ": "&tcedil;",
      "т": "&tcy;",
      "⌕": "&telrec;",
      "𝔱": "&tfr;",
      "θ": "&theta;",
      "ϑ": "&vartheta;",
      "þ": "&thorn;",
      "×": "&times;",
      "⨱": "&timesbar;",
      "⨰": "&timesd;",
      "⌶": "&topbot;",
      "⫱": "&topcir;",
      "𝕥": "&topf;",
      "⫚": "&topfork;",
      "‴": "&tprime;",
      "▵": "&utri;",
      "≜": "&trie;",
      "◬": "&tridot;",
      "⨺": "&triminus;",
      "⨹": "&triplus;",
      "⧍": "&trisb;",
      "⨻": "&tritime;",
      "⏢": "&trpezium;",
      "𝓉": "&tscr;",
      "ц": "&tscy;",
      "ћ": "&tshcy;",
      "ŧ": "&tstrok;",
      "⥣": "&uHar;",
      "ú": "&uacute;",
      "ў": "&ubrcy;",
      "ŭ": "&ubreve;",
      "û": "&ucirc;",
      "у": "&ucy;",
      "ű": "&udblac;",
      "⥾": "&ufisht;",
      "𝔲": "&ufr;",
      "ù": "&ugrave;",
      "▀": "&uhblk;",
      "⌜": "&ulcorner;",
      "⌏": "&ulcrop;",
      "◸": "&ultri;",
      "ū": "&umacr;",
      "ų": "&uogon;",
      "𝕦": "&uopf;",
      "υ": "&upsilon;",
      "⇈": "&uuarr;",
      "⌝": "&urcorner;",
      "⌎": "&urcrop;",
      "ů": "&uring;",
      "◹": "&urtri;",
      "𝓊": "&uscr;",
      "⋰": "&utdot;",
      "ũ": "&utilde;",
      "ü": "&uuml;",
      "⦧": "&uwangle;",
      "⫨": "&vBar;",
      "⫩": "&vBarv;",
      "⦜": "&vangrt;",
      "⊊︀": "&vsubne;",
      "⫋︀": "&vsubnE;",
      "⊋︀": "&vsupne;",
      "⫌︀": "&vsupnE;",
      "в": "&vcy;",
      "⊻": "&veebar;",
      "≚": "&veeeq;",
      "⋮": "&vellip;",
      "𝔳": "&vfr;",
      "𝕧": "&vopf;",
      "𝓋": "&vscr;",
      "⦚": "&vzigzag;",
      "ŵ": "&wcirc;",
      "⩟": "&wedbar;",
      "≙": "&wedgeq;",
      "℘": "&wp;",
      "𝔴": "&wfr;",
      "𝕨": "&wopf;",
      "𝓌": "&wscr;",
      "𝔵": "&xfr;",
      "ξ": "&xi;",
      "⋻": "&xnis;",
      "𝕩": "&xopf;",
      "𝓍": "&xscr;",
      "ý": "&yacute;",
      "я": "&yacy;",
      "ŷ": "&ycirc;",
      "ы": "&ycy;",
      "¥": "&yen;",
      "𝔶": "&yfr;",
      "ї": "&yicy;",
      "𝕪": "&yopf;",
      "𝓎": "&yscr;",
      "ю": "&yucy;",
      "ÿ": "&yuml;",
      "ź": "&zacute;",
      "ž": "&zcaron;",
      "з": "&zcy;",
      "ż": "&zdot;",
      "ζ": "&zeta;",
      "𝔷": "&zfr;",
      "ж": "&zhcy;",
      "⇝": "&zigrarr;",
      "𝕫": "&zopf;",
      "𝓏": "&zscr;",
      "‍": "&zwj;",
      "‌": "&zwnj;"
    }
  }
};

/***/ }),

/***/ "./node_modules/html-entities/lib/numeric-unicode-map.js":
/*!***************************************************************!*\
  !*** ./node_modules/html-entities/lib/numeric-unicode-map.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.numericUnicodeMap = {
  0: 65533,
  128: 8364,
  130: 8218,
  131: 402,
  132: 8222,
  133: 8230,
  134: 8224,
  135: 8225,
  136: 710,
  137: 8240,
  138: 352,
  139: 8249,
  140: 338,
  142: 381,
  145: 8216,
  146: 8217,
  147: 8220,
  148: 8221,
  149: 8226,
  150: 8211,
  151: 8212,
  152: 732,
  153: 8482,
  154: 353,
  155: 8250,
  156: 339,
  158: 382,
  159: 376
};

/***/ }),

/***/ "./node_modules/html-entities/lib/surrogate-pairs.js":
/*!***********************************************************!*\
  !*** ./node_modules/html-entities/lib/surrogate-pairs.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));

exports.fromCodePoint = String.fromCodePoint || function (astralCodePoint) {
  return String.fromCharCode(Math.floor((astralCodePoint - 65536) / 1024) + 55296, (astralCodePoint - 65536) % 1024 + 56320);
};

exports.getCodePoint = String.prototype.codePointAt ? function (input, position) {
  return input.codePointAt(position);
} : function (input, position) {
  return (input.charCodeAt(position) - 55296) * 1024 + input.charCodeAt(position + 1) - 56320 + 65536;
};
exports.highSurrogateFrom = 55296;
exports.highSurrogateTo = 56319;

/***/ }),

/***/ "./node_modules/object-assign/index.js":
/*!*********************************************!*\
  !*** ./node_modules/object-assign/index.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

/* eslint-disable no-unused-vars */

var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
  if (val === null || val === undefined) {
    throw new TypeError('Object.assign cannot be called with null or undefined');
  }

  return Object(val);
}

function shouldUseNative() {
  try {
    if (!Object.assign) {
      return false;
    } // Detect buggy property enumeration order in older V8 versions.
    // https://bugs.chromium.org/p/v8/issues/detail?id=4118


    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers

    test1[5] = 'de';

    if (Object.getOwnPropertyNames(test1)[0] === '5') {
      return false;
    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


    var test2 = {};

    for (var i = 0; i < 10; i++) {
      test2['_' + String.fromCharCode(i)] = i;
    }

    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
      return test2[n];
    });

    if (order2.join('') !== '0123456789') {
      return false;
    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


    var test3 = {};
    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
      test3[letter] = letter;
    });

    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
      return false;
    }

    return true;
  } catch (err) {
    // We don't expect any of the above to throw, but better to be safe.
    return false;
  }
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
  var from;
  var to = toObject(target);
  var symbols;

  for (var s = 1; s < arguments.length; s++) {
    from = Object(arguments[s]);

    for (var key in from) {
      if (hasOwnProperty.call(from, key)) {
        to[key] = from[key];
      }
    }

    if (getOwnPropertySymbols) {
      symbols = getOwnPropertySymbols(from);

      for (var i = 0; i < symbols.length; i++) {
        if (propIsEnumerable.call(from, symbols[i])) {
          to[symbols[i]] = from[symbols[i]];
        }
      }
    }
  }

  return to;
};

/***/ }),

/***/ "./node_modules/promise-polyfill/src/allSettled.js":
/*!*********************************************************!*\
  !*** ./node_modules/promise-polyfill/src/allSettled.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function allSettled(arr) {
  var P = this;
  return new P(function (resolve, reject) {
    if (!(arr && typeof arr.length !== 'undefined')) {
      return reject(new TypeError(typeof arr + ' ' + arr + ' is not iterable(cannot read property Symbol(Symbol.iterator))'));
    }

    var args = Array.prototype.slice.call(arr);
    if (args.length === 0) return resolve([]);
    var remaining = args.length;

    function res(i, val) {
      if (val && (typeof val === 'object' || typeof val === 'function')) {
        var then = val.then;

        if (typeof then === 'function') {
          then.call(val, function (val) {
            res(i, val);
          }, function (e) {
            args[i] = {
              status: 'rejected',
              reason: e
            };

            if (--remaining === 0) {
              resolve(args);
            }
          });
          return;
        }
      }

      args[i] = {
        status: 'fulfilled',
        value: val
      };

      if (--remaining === 0) {
        resolve(args);
      }
    }

    for (var i = 0; i < args.length; i++) {
      res(i, args[i]);
    }
  });
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (allSettled);

/***/ }),

/***/ "./node_modules/promise-polyfill/src/finally.js":
/*!******************************************************!*\
  !*** ./node_modules/promise-polyfill/src/finally.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @this {Promise}
 */
function finallyConstructor(callback) {
  var constructor = this.constructor;
  return this.then(function (value) {
    // @ts-ignore
    return constructor.resolve(callback()).then(function () {
      return value;
    });
  }, function (reason) {
    // @ts-ignore
    return constructor.resolve(callback()).then(function () {
      // @ts-ignore
      return constructor.reject(reason);
    });
  });
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (finallyConstructor);

/***/ }),

/***/ "./node_modules/promise-polyfill/src/index.js":
/*!****************************************************!*\
  !*** ./node_modules/promise-polyfill/src/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _finally__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./finally */ "./node_modules/promise-polyfill/src/finally.js");
/* harmony import */ var _allSettled__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./allSettled */ "./node_modules/promise-polyfill/src/allSettled.js");

 // Store setTimeout reference so promise-polyfill will be unaffected by
// other code modifying setTimeout (like sinon.useFakeTimers())

var setTimeoutFunc = setTimeout; // @ts-ignore

var setImmediateFunc = typeof setImmediate !== 'undefined' ? setImmediate : null;

function isArray(x) {
  return Boolean(x && typeof x.length !== 'undefined');
}

function noop() {} // Polyfill for Function.prototype.bind


function bind(fn, thisArg) {
  return function () {
    fn.apply(thisArg, arguments);
  };
}
/**
 * @constructor
 * @param {Function} fn
 */


function Promise(fn) {
  if (!(this instanceof Promise)) throw new TypeError('Promises must be constructed via new');
  if (typeof fn !== 'function') throw new TypeError('not a function');
  /** @type {!number} */

  this._state = 0;
  /** @type {!boolean} */

  this._handled = false;
  /** @type {Promise|undefined} */

  this._value = undefined;
  /** @type {!Array<!Function>} */

  this._deferreds = [];
  doResolve(fn, this);
}

function handle(self, deferred) {
  while (self._state === 3) {
    self = self._value;
  }

  if (self._state === 0) {
    self._deferreds.push(deferred);

    return;
  }

  self._handled = true;

  Promise._immediateFn(function () {
    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;

    if (cb === null) {
      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);
      return;
    }

    var ret;

    try {
      ret = cb(self._value);
    } catch (e) {
      reject(deferred.promise, e);
      return;
    }

    resolve(deferred.promise, ret);
  });
}

function resolve(self, newValue) {
  try {
    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure
    if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');

    if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {
      var then = newValue.then;

      if (newValue instanceof Promise) {
        self._state = 3;
        self._value = newValue;
        finale(self);
        return;
      } else if (typeof then === 'function') {
        doResolve(bind(then, newValue), self);
        return;
      }
    }

    self._state = 1;
    self._value = newValue;
    finale(self);
  } catch (e) {
    reject(self, e);
  }
}

function reject(self, newValue) {
  self._state = 2;
  self._value = newValue;
  finale(self);
}

function finale(self) {
  if (self._state === 2 && self._deferreds.length === 0) {
    Promise._immediateFn(function () {
      if (!self._handled) {
        Promise._unhandledRejectionFn(self._value);
      }
    });
  }

  for (var i = 0, len = self._deferreds.length; i < len; i++) {
    handle(self, self._deferreds[i]);
  }

  self._deferreds = null;
}
/**
 * @constructor
 */


function Handler(onFulfilled, onRejected, promise) {
  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;
  this.onRejected = typeof onRejected === 'function' ? onRejected : null;
  this.promise = promise;
}
/**
 * Take a potentially misbehaving resolver function and make sure
 * onFulfilled and onRejected are only called once.
 *
 * Makes no guarantees about asynchrony.
 */


function doResolve(fn, self) {
  var done = false;

  try {
    fn(function (value) {
      if (done) return;
      done = true;
      resolve(self, value);
    }, function (reason) {
      if (done) return;
      done = true;
      reject(self, reason);
    });
  } catch (ex) {
    if (done) return;
    done = true;
    reject(self, ex);
  }
}

Promise.prototype['catch'] = function (onRejected) {
  return this.then(null, onRejected);
};

Promise.prototype.then = function (onFulfilled, onRejected) {
  // @ts-ignore
  var prom = new this.constructor(noop);
  handle(this, new Handler(onFulfilled, onRejected, prom));
  return prom;
};

Promise.prototype['finally'] = _finally__WEBPACK_IMPORTED_MODULE_0__["default"];

Promise.all = function (arr) {
  return new Promise(function (resolve, reject) {
    if (!isArray(arr)) {
      return reject(new TypeError('Promise.all accepts an array'));
    }

    var args = Array.prototype.slice.call(arr);
    if (args.length === 0) return resolve([]);
    var remaining = args.length;

    function res(i, val) {
      try {
        if (val && (typeof val === 'object' || typeof val === 'function')) {
          var then = val.then;

          if (typeof then === 'function') {
            then.call(val, function (val) {
              res(i, val);
            }, reject);
            return;
          }
        }

        args[i] = val;

        if (--remaining === 0) {
          resolve(args);
        }
      } catch (ex) {
        reject(ex);
      }
    }

    for (var i = 0; i < args.length; i++) {
      res(i, args[i]);
    }
  });
};

Promise.allSettled = _allSettled__WEBPACK_IMPORTED_MODULE_1__["default"];

Promise.resolve = function (value) {
  if (value && typeof value === 'object' && value.constructor === Promise) {
    return value;
  }

  return new Promise(function (resolve) {
    resolve(value);
  });
};

Promise.reject = function (value) {
  return new Promise(function (resolve, reject) {
    reject(value);
  });
};

Promise.race = function (arr) {
  return new Promise(function (resolve, reject) {
    if (!isArray(arr)) {
      return reject(new TypeError('Promise.race accepts an array'));
    }

    for (var i = 0, len = arr.length; i < len; i++) {
      Promise.resolve(arr[i]).then(resolve, reject);
    }
  });
}; // Use polyfill for setImmediate for performance gains


Promise._immediateFn = // @ts-ignore
typeof setImmediateFunc === 'function' && function (fn) {
  // @ts-ignore
  setImmediateFunc(fn);
} || function (fn) {
  setTimeoutFunc(fn, 0);
};

Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {
  if (typeof console !== 'undefined' && console) {
    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console
  }
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Promise);

/***/ }),

/***/ "./node_modules/react-dom/cjs/react-dom.development.js":
/*!*************************************************************!*\
  !*** ./node_modules/react-dom/cjs/react-dom.development.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** @license React v17.0.2
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


if (true) {
  (function () {
    'use strict';

    var React = __webpack_require__(/*! react */ "./node_modules/react/index.js");

    var _assign = __webpack_require__(/*! object-assign */ "./node_modules/object-assign/index.js");

    var Scheduler = __webpack_require__(/*! scheduler */ "./node_modules/scheduler/index.js");

    var tracing = __webpack_require__(/*! scheduler/tracing */ "./node_modules/scheduler/tracing.js");

    var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED; // by calls to these methods by a Babel plugin.
    //
    // In PROD (or in packages without access to React internals),
    // they are left as they are instead.

    function warn(format) {
      {
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        printWarning('warn', format, args);
      }
    }

    function error(format) {
      {
        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
          args[_key2 - 1] = arguments[_key2];
        }

        printWarning('error', format, args);
      }
    }

    function printWarning(level, format, args) {
      // When changing this logic, you might want to also
      // update consoleWithStackDev.www.js as well.
      {
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum();

        if (stack !== '') {
          format += '%s';
          args = args.concat([stack]);
        }

        var argsWithFormat = args.map(function (item) {
          return '' + item;
        }); // Careful: RN currently depends on this prefix

        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
        // breaks IE9: https://github.com/facebook/react/issues/13610
        // eslint-disable-next-line react-internal/no-production-logging

        Function.prototype.apply.call(console[level], console, argsWithFormat);
      }
    }

    if (!React) {
      {
        throw Error("ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM.");
      }
    }

    var FunctionComponent = 0;
    var ClassComponent = 1;
    var IndeterminateComponent = 2; // Before we know whether it is function or class

    var HostRoot = 3; // Root of a host tree. Could be nested inside another node.

    var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.

    var HostComponent = 5;
    var HostText = 6;
    var Fragment = 7;
    var Mode = 8;
    var ContextConsumer = 9;
    var ContextProvider = 10;
    var ForwardRef = 11;
    var Profiler = 12;
    var SuspenseComponent = 13;
    var MemoComponent = 14;
    var SimpleMemoComponent = 15;
    var LazyComponent = 16;
    var IncompleteClassComponent = 17;
    var DehydratedFragment = 18;
    var SuspenseListComponent = 19;
    var FundamentalComponent = 20;
    var ScopeComponent = 21;
    var Block = 22;
    var OffscreenComponent = 23;
    var LegacyHiddenComponent = 24; // Filter certain DOM attributes (e.g. src, href) if their values are empty strings.

    var enableProfilerTimer = true; // Record durations for commit and passive effects phases.

    var enableFundamentalAPI = false; // Experimental Scope support.

    var enableNewReconciler = false; // Errors that are thrown while unmounting (or after in the case of passive effects)

    var warnAboutStringRefs = false;
    var allNativeEvents = new Set();
    /**
     * Mapping from registration name to event name
     */

    var registrationNameDependencies = {};
    /**
     * Mapping from lowercase registration names to the properly cased version,
     * used to warn in the case of missing event handlers. Available
     * only in true.
     * @type {Object}
     */

    var possibleRegistrationNames = {}; // Trust the developer to only use possibleRegistrationNames in true

    function registerTwoPhaseEvent(registrationName, dependencies) {
      registerDirectEvent(registrationName, dependencies);
      registerDirectEvent(registrationName + 'Capture', dependencies);
    }

    function registerDirectEvent(registrationName, dependencies) {
      {
        if (registrationNameDependencies[registrationName]) {
          error('EventRegistry: More than one plugin attempted to publish the same ' + 'registration name, `%s`.', registrationName);
        }
      }
      registrationNameDependencies[registrationName] = dependencies;
      {
        var lowerCasedName = registrationName.toLowerCase();
        possibleRegistrationNames[lowerCasedName] = registrationName;

        if (registrationName === 'onDoubleClick') {
          possibleRegistrationNames.ondblclick = registrationName;
        }
      }

      for (var i = 0; i < dependencies.length; i++) {
        allNativeEvents.add(dependencies[i]);
      }
    }

    var canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined'); // A reserved attribute.
    // It is handled by React separately and shouldn't be written to the DOM.

    var RESERVED = 0; // A simple string attribute.
    // Attributes that aren't in the filter are presumed to have this type.

    var STRING = 1; // A string attribute that accepts booleans in React. In HTML, these are called
    // "enumerated" attributes with "true" and "false" as possible values.
    // When true, it should be set to a "true" string.
    // When false, it should be set to a "false" string.

    var BOOLEANISH_STRING = 2; // A real boolean attribute.
    // When true, it should be present (set either to an empty string or its name).
    // When false, it should be omitted.

    var BOOLEAN = 3; // An attribute that can be used as a flag as well as with a value.
    // When true, it should be present (set either to an empty string or its name).
    // When false, it should be omitted.
    // For any other value, should be present with that value.

    var OVERLOADED_BOOLEAN = 4; // An attribute that must be numeric or parse as a numeric.
    // When falsy, it should be removed.

    var NUMERIC = 5; // An attribute that must be positive numeric or parse as a positive numeric.
    // When falsy, it should be removed.

    var POSITIVE_NUMERIC = 6;
    /* eslint-disable max-len */

    var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
    /* eslint-enable max-len */

    var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
    var ROOT_ATTRIBUTE_NAME = 'data-reactroot';
    var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var illegalAttributeNameCache = {};
    var validatedAttributeNameCache = {};

    function isAttributeNameSafe(attributeName) {
      if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
        return true;
      }

      if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
        return false;
      }

      if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
        validatedAttributeNameCache[attributeName] = true;
        return true;
      }

      illegalAttributeNameCache[attributeName] = true;
      {
        error('Invalid attribute name: `%s`', attributeName);
      }
      return false;
    }

    function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
      if (propertyInfo !== null) {
        return propertyInfo.type === RESERVED;
      }

      if (isCustomComponentTag) {
        return false;
      }

      if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {
        return true;
      }

      return false;
    }

    function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
      if (propertyInfo !== null && propertyInfo.type === RESERVED) {
        return false;
      }

      switch (typeof value) {
        case 'function': // $FlowIssue symbol is perfectly valid here

        case 'symbol':
          // eslint-disable-line
          return true;

        case 'boolean':
          {
            if (isCustomComponentTag) {
              return false;
            }

            if (propertyInfo !== null) {
              return !propertyInfo.acceptsBooleans;
            } else {
              var prefix = name.toLowerCase().slice(0, 5);
              return prefix !== 'data-' && prefix !== 'aria-';
            }
          }

        default:
          return false;
      }
    }

    function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
      if (value === null || typeof value === 'undefined') {
        return true;
      }

      if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {
        return true;
      }

      if (isCustomComponentTag) {
        return false;
      }

      if (propertyInfo !== null) {
        switch (propertyInfo.type) {
          case BOOLEAN:
            return !value;

          case OVERLOADED_BOOLEAN:
            return value === false;

          case NUMERIC:
            return isNaN(value);

          case POSITIVE_NUMERIC:
            return isNaN(value) || value < 1;
        }
      }

      return false;
    }

    function getPropertyInfo(name) {
      return properties.hasOwnProperty(name) ? properties[name] : null;
    }

    function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL, removeEmptyString) {
      this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
      this.attributeName = attributeName;
      this.attributeNamespace = attributeNamespace;
      this.mustUseProperty = mustUseProperty;
      this.propertyName = name;
      this.type = type;
      this.sanitizeURL = sanitizeURL;
      this.removeEmptyString = removeEmptyString;
    } // When adding attributes to this list, be sure to also add them to
    // the `possibleStandardNames` module to ensure casing and incorrect
    // name warnings.


    var properties = {}; // These props are reserved by React. They shouldn't be written to the DOM.

    var reservedProps = ['children', 'dangerouslySetInnerHTML', // TODO: This prevents the assignment of defaultValue to regular
    // elements (not just inputs). Now that ReactDOMInput assigns to the
    // defaultValue property -- do we need this?
    'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'];
    reservedProps.forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, RESERVED, false, // mustUseProperty
      name, // attributeName
      null, // attributeNamespace
      false, // sanitizeURL
      false);
    }); // A few React string attributes have a different name.
    // This is a mapping from React prop names to the attribute names.

    [['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach(function (_ref) {
      var name = _ref[0],
          attributeName = _ref[1];
      properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
      attributeName, // attributeName
      null, // attributeNamespace
      false, // sanitizeURL
      false);
    }); // These are "enumerated" HTML attributes that accept "true" and "false".
    // In React, we let users pass `true` and `false` even though technically
    // these aren't boolean attributes (they are coerced to strings).

    ['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
      name.toLowerCase(), // attributeName
      null, // attributeNamespace
      false, // sanitizeURL
      false);
    }); // These are "enumerated" SVG attributes that accept "true" and "false".
    // In React, we let users pass `true` and `false` even though technically
    // these aren't boolean attributes (they are coerced to strings).
    // Since these are SVG attributes, their attribute names are case-sensitive.

    ['autoReverse', 'externalResourcesRequired', 'focusable', 'preserveAlpha'].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
      name, // attributeName
      null, // attributeNamespace
      false, // sanitizeURL
      false);
    }); // These are HTML boolean attributes.

    ['allowFullScreen', 'async', // Note: there is a special case that prevents it from being written to the DOM
    // on the client side because the browsers are inconsistent. Instead we call focus().
    'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'disablePictureInPicture', 'disableRemotePlayback', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless', // Microdata
    'itemScope'].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, // mustUseProperty
      name.toLowerCase(), // attributeName
      null, // attributeNamespace
      false, // sanitizeURL
      false);
    }); // These are the few React props that we set as DOM properties
    // rather than attributes. These are all booleans.

    ['checked', // Note: `option.selected` is not updated if `select.multiple` is
    // disabled with `removeAttribute`. We have special logic for handling this.
    'multiple', 'muted', 'selected' // NOTE: if you add a camelCased prop to this list,
    // you'll need to set attributeName to name.toLowerCase()
    // instead in the assignment below.
    ].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, // mustUseProperty
      name, // attributeName
      null, // attributeNamespace
      false, // sanitizeURL
      false);
    }); // These are HTML attributes that are "overloaded booleans": they behave like
    // booleans, but can also accept a string value.

    ['capture', 'download' // NOTE: if you add a camelCased prop to this list,
    // you'll need to set attributeName to name.toLowerCase()
    // instead in the assignment below.
    ].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, // mustUseProperty
      name, // attributeName
      null, // attributeNamespace
      false, // sanitizeURL
      false);
    }); // These are HTML attributes that must be positive numbers.

    ['cols', 'rows', 'size', 'span' // NOTE: if you add a camelCased prop to this list,
    // you'll need to set attributeName to name.toLowerCase()
    // instead in the assignment below.
    ].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, // mustUseProperty
      name, // attributeName
      null, // attributeNamespace
      false, // sanitizeURL
      false);
    }); // These are HTML attributes that must be numbers.

    ['rowSpan', 'start'].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, NUMERIC, false, // mustUseProperty
      name.toLowerCase(), // attributeName
      null, // attributeNamespace
      false, // sanitizeURL
      false);
    });
    var CAMELIZE = /[\-\:]([a-z])/g;

    var capitalize = function (token) {
      return token[1].toUpperCase();
    }; // This is a list of all SVG attributes that need special casing, namespacing,
    // or boolean value assignment. Regular attributes that just accept strings
    // and have the same names are omitted, just like in the HTML attribute filter.
    // Some of these attributes can be hard to find. This list was created by
    // scraping the MDN documentation.


    ['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height' // NOTE: if you add a camelCased prop to this list,
    // you'll need to set attributeName to name.toLowerCase()
    // instead in the assignment below.
    ].forEach(function (attributeName) {
      var name = attributeName.replace(CAMELIZE, capitalize);
      properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
      attributeName, null, // attributeNamespace
      false, // sanitizeURL
      false);
    }); // String SVG attributes with the xlink namespace.

    ['xlink:actuate', 'xlink:arcrole', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type' // NOTE: if you add a camelCased prop to this list,
    // you'll need to set attributeName to name.toLowerCase()
    // instead in the assignment below.
    ].forEach(function (attributeName) {
      var name = attributeName.replace(CAMELIZE, capitalize);
      properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
      attributeName, 'http://www.w3.org/1999/xlink', false, // sanitizeURL
      false);
    }); // String SVG attributes with the xml namespace.

    ['xml:base', 'xml:lang', 'xml:space' // NOTE: if you add a camelCased prop to this list,
    // you'll need to set attributeName to name.toLowerCase()
    // instead in the assignment below.
    ].forEach(function (attributeName) {
      var name = attributeName.replace(CAMELIZE, capitalize);
      properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
      attributeName, 'http://www.w3.org/XML/1998/namespace', false, // sanitizeURL
      false);
    }); // These attribute exists both in HTML and SVG.
    // The attribute name is case-sensitive in SVG so we can't just use
    // the React name like we do for attributes that exist only in HTML.

    ['tabIndex', 'crossOrigin'].forEach(function (attributeName) {
      properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty
      attributeName.toLowerCase(), // attributeName
      null, // attributeNamespace
      false, // sanitizeURL
      false);
    }); // These attributes accept URLs. These must not allow javascript: URLS.
    // These will also need to accept Trusted Types object in the future.

    var xlinkHref = 'xlinkHref';
    properties[xlinkHref] = new PropertyInfoRecord('xlinkHref', STRING, false, // mustUseProperty
    'xlink:href', 'http://www.w3.org/1999/xlink', true, // sanitizeURL
    false);
    ['src', 'href', 'action', 'formAction'].forEach(function (attributeName) {
      properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty
      attributeName.toLowerCase(), // attributeName
      null, // attributeNamespace
      true, // sanitizeURL
      true);
    }); // and any newline or tab are filtered out as if they're not part of the URL.
    // https://url.spec.whatwg.org/#url-parsing
    // Tab or newline are defined as \r\n\t:
    // https://infra.spec.whatwg.org/#ascii-tab-or-newline
    // A C0 control is a code point in the range \u0000 NULL to \u001F
    // INFORMATION SEPARATOR ONE, inclusive:
    // https://infra.spec.whatwg.org/#c0-control-or-space

    /* eslint-disable max-len */

    var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
    var didWarn = false;

    function sanitizeURL(url) {
      {
        if (!didWarn && isJavaScriptProtocol.test(url)) {
          didWarn = true;
          error('A future version of React will block javascript: URLs as a security precaution. ' + 'Use event handlers instead if you can. If you need to generate unsafe HTML try ' + 'using dangerouslySetInnerHTML instead. React was passed %s.', JSON.stringify(url));
        }
      }
    }
    /**
     * Get the value for a property on a node. Only used in DEV for SSR validation.
     * The "expected" argument is used as a hint of what the expected value is.
     * Some properties have multiple equivalent values.
     */


    function getValueForProperty(node, name, expected, propertyInfo) {
      {
        if (propertyInfo.mustUseProperty) {
          var propertyName = propertyInfo.propertyName;
          return node[propertyName];
        } else {
          if (propertyInfo.sanitizeURL) {
            // If we haven't fully disabled javascript: URLs, and if
            // the hydration is successful of a javascript: URL, we
            // still want to warn on the client.
            sanitizeURL('' + expected);
          }

          var attributeName = propertyInfo.attributeName;
          var stringValue = null;

          if (propertyInfo.type === OVERLOADED_BOOLEAN) {
            if (node.hasAttribute(attributeName)) {
              var value = node.getAttribute(attributeName);

              if (value === '') {
                return true;
              }

              if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
                return value;
              }

              if (value === '' + expected) {
                return expected;
              }

              return value;
            }
          } else if (node.hasAttribute(attributeName)) {
            if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
              // We had an attribute but shouldn't have had one, so read it
              // for the error message.
              return node.getAttribute(attributeName);
            }

            if (propertyInfo.type === BOOLEAN) {
              // If this was a boolean, it doesn't matter what the value is
              // the fact that we have it is the same as the expected.
              return expected;
            } // Even if this property uses a namespace we use getAttribute
            // because we assume its namespaced name is the same as our config.
            // To use getAttributeNS we need the local name which we don't have
            // in our config atm.


            stringValue = node.getAttribute(attributeName);
          }

          if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
            return stringValue === null ? expected : stringValue;
          } else if (stringValue === '' + expected) {
            return expected;
          } else {
            return stringValue;
          }
        }
      }
    }
    /**
     * Get the value for a attribute on a node. Only used in DEV for SSR validation.
     * The third argument is used as a hint of what the expected value is. Some
     * attributes have multiple equivalent values.
     */


    function getValueForAttribute(node, name, expected) {
      {
        if (!isAttributeNameSafe(name)) {
          return;
        } // If the object is an opaque reference ID, it's expected that
        // the next prop is different than the server value, so just return
        // expected


        if (isOpaqueHydratingObject(expected)) {
          return expected;
        }

        if (!node.hasAttribute(name)) {
          return expected === undefined ? undefined : null;
        }

        var value = node.getAttribute(name);

        if (value === '' + expected) {
          return expected;
        }

        return value;
      }
    }
    /**
     * Sets the value for a property on a node.
     *
     * @param {DOMElement} node
     * @param {string} name
     * @param {*} value
     */


    function setValueForProperty(node, name, value, isCustomComponentTag) {
      var propertyInfo = getPropertyInfo(name);

      if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {
        return;
      }

      if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {
        value = null;
      } // If the prop isn't in the special list, treat it as a simple attribute.


      if (isCustomComponentTag || propertyInfo === null) {
        if (isAttributeNameSafe(name)) {
          var _attributeName = name;

          if (value === null) {
            node.removeAttribute(_attributeName);
          } else {
            node.setAttribute(_attributeName, '' + value);
          }
        }

        return;
      }

      var mustUseProperty = propertyInfo.mustUseProperty;

      if (mustUseProperty) {
        var propertyName = propertyInfo.propertyName;

        if (value === null) {
          var type = propertyInfo.type;
          node[propertyName] = type === BOOLEAN ? false : '';
        } else {
          // Contrary to `setAttribute`, object properties are properly
          // `toString`ed by IE8/9.
          node[propertyName] = value;
        }

        return;
      } // The rest are treated as attributes with special cases.


      var attributeName = propertyInfo.attributeName,
          attributeNamespace = propertyInfo.attributeNamespace;

      if (value === null) {
        node.removeAttribute(attributeName);
      } else {
        var _type = propertyInfo.type;
        var attributeValue;

        if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) {
          // If attribute type is boolean, we know for sure it won't be an execution sink
          // and we won't require Trusted Type here.
          attributeValue = '';
        } else {
          // `setAttribute` with objects becomes only `[object]` in IE8/9,
          // ('' + value) makes it output the correct toString()-value.
          {
            attributeValue = '' + value;
          }

          if (propertyInfo.sanitizeURL) {
            sanitizeURL(attributeValue.toString());
          }
        }

        if (attributeNamespace) {
          node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
        } else {
          node.setAttribute(attributeName, attributeValue);
        }
      }
    } // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.


    var REACT_ELEMENT_TYPE = 0xeac7;
    var REACT_PORTAL_TYPE = 0xeaca;
    var REACT_FRAGMENT_TYPE = 0xeacb;
    var REACT_STRICT_MODE_TYPE = 0xeacc;
    var REACT_PROFILER_TYPE = 0xead2;
    var REACT_PROVIDER_TYPE = 0xeacd;
    var REACT_CONTEXT_TYPE = 0xeace;
    var REACT_FORWARD_REF_TYPE = 0xead0;
    var REACT_SUSPENSE_TYPE = 0xead1;
    var REACT_SUSPENSE_LIST_TYPE = 0xead8;
    var REACT_MEMO_TYPE = 0xead3;
    var REACT_LAZY_TYPE = 0xead4;
    var REACT_BLOCK_TYPE = 0xead9;
    var REACT_SERVER_BLOCK_TYPE = 0xeada;
    var REACT_FUNDAMENTAL_TYPE = 0xead5;
    var REACT_SCOPE_TYPE = 0xead7;
    var REACT_OPAQUE_ID_TYPE = 0xeae0;
    var REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;
    var REACT_OFFSCREEN_TYPE = 0xeae2;
    var REACT_LEGACY_HIDDEN_TYPE = 0xeae3;

    if (typeof Symbol === 'function' && Symbol.for) {
      var symbolFor = Symbol.for;
      REACT_ELEMENT_TYPE = symbolFor('react.element');
      REACT_PORTAL_TYPE = symbolFor('react.portal');
      REACT_FRAGMENT_TYPE = symbolFor('react.fragment');
      REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');
      REACT_PROFILER_TYPE = symbolFor('react.profiler');
      REACT_PROVIDER_TYPE = symbolFor('react.provider');
      REACT_CONTEXT_TYPE = symbolFor('react.context');
      REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');
      REACT_SUSPENSE_TYPE = symbolFor('react.suspense');
      REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');
      REACT_MEMO_TYPE = symbolFor('react.memo');
      REACT_LAZY_TYPE = symbolFor('react.lazy');
      REACT_BLOCK_TYPE = symbolFor('react.block');
      REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');
      REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');
      REACT_SCOPE_TYPE = symbolFor('react.scope');
      REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');
      REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');
      REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');
      REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');
    }

    var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator';

    function getIteratorFn(maybeIterable) {
      if (maybeIterable === null || typeof maybeIterable !== 'object') {
        return null;
      }

      var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

      if (typeof maybeIterator === 'function') {
        return maybeIterator;
      }

      return null;
    } // Helpers to patch console.logs to avoid logging during side-effect free
    // replaying on render function. This currently only patches the object
    // lazily which won't cover if the log function was extracted eagerly.
    // We could also eagerly patch the method.


    var disabledDepth = 0;
    var prevLog;
    var prevInfo;
    var prevWarn;
    var prevError;
    var prevGroup;
    var prevGroupCollapsed;
    var prevGroupEnd;

    function disabledLog() {}

    disabledLog.__reactDisabledLog = true;

    function disableLogs() {
      {
        if (disabledDepth === 0) {
          /* eslint-disable react-internal/no-production-logging */
          prevLog = console.log;
          prevInfo = console.info;
          prevWarn = console.warn;
          prevError = console.error;
          prevGroup = console.group;
          prevGroupCollapsed = console.groupCollapsed;
          prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099

          var props = {
            configurable: true,
            enumerable: true,
            value: disabledLog,
            writable: true
          }; // $FlowFixMe Flow thinks console is immutable.

          Object.defineProperties(console, {
            info: props,
            log: props,
            warn: props,
            error: props,
            group: props,
            groupCollapsed: props,
            groupEnd: props
          });
          /* eslint-enable react-internal/no-production-logging */
        }

        disabledDepth++;
      }
    }

    function reenableLogs() {
      {
        disabledDepth--;

        if (disabledDepth === 0) {
          /* eslint-disable react-internal/no-production-logging */
          var props = {
            configurable: true,
            enumerable: true,
            writable: true
          }; // $FlowFixMe Flow thinks console is immutable.

          Object.defineProperties(console, {
            log: _assign({}, props, {
              value: prevLog
            }),
            info: _assign({}, props, {
              value: prevInfo
            }),
            warn: _assign({}, props, {
              value: prevWarn
            }),
            error: _assign({}, props, {
              value: prevError
            }),
            group: _assign({}, props, {
              value: prevGroup
            }),
            groupCollapsed: _assign({}, props, {
              value: prevGroupCollapsed
            }),
            groupEnd: _assign({}, props, {
              value: prevGroupEnd
            })
          });
          /* eslint-enable react-internal/no-production-logging */
        }

        if (disabledDepth < 0) {
          error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
        }
      }
    }

    var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
    var prefix;

    function describeBuiltInComponentFrame(name, source, ownerFn) {
      {
        if (prefix === undefined) {
          // Extract the VM specific prefix used by each line.
          try {
            throw Error();
          } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || '';
          }
        } // We use the prefix to ensure our stacks line up with native stack frames.


        return '\n' + prefix + name;
      }
    }

    var reentry = false;
    var componentFrameCache;
    {
      var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
      componentFrameCache = new PossiblyWeakMap();
    }

    function describeNativeComponentFrame(fn, construct) {
      // If something asked for a stack inside a fake render, it should get ignored.
      if (!fn || reentry) {
        return '';
      }

      {
        var frame = componentFrameCache.get(fn);

        if (frame !== undefined) {
          return frame;
        }
      }
      var control;
      reentry = true;
      var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.

      Error.prepareStackTrace = undefined;
      var previousDispatcher;
      {
        previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
        // for warnings.

        ReactCurrentDispatcher.current = null;
        disableLogs();
      }

      try {
        // This should throw.
        if (construct) {
          // Something should be setting the props in the constructor.
          var Fake = function () {
            throw Error();
          }; // $FlowFixMe


          Object.defineProperty(Fake.prototype, 'props', {
            set: function () {
              // We use a throwing setter instead of frozen or non-writable props
              // because that won't throw in a non-strict mode function.
              throw Error();
            }
          });

          if (typeof Reflect === 'object' && Reflect.construct) {
            // We construct a different control for this case to include any extra
            // frames added by the construct call.
            try {
              Reflect.construct(Fake, []);
            } catch (x) {
              control = x;
            }

            Reflect.construct(fn, [], Fake);
          } else {
            try {
              Fake.call();
            } catch (x) {
              control = x;
            }

            fn.call(Fake.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (x) {
            control = x;
          }

          fn();
        }
      } catch (sample) {
        // This is inlined manually because closure doesn't do it for us.
        if (sample && control && typeof sample.stack === 'string') {
          // This extracts the first frame from the sample that isn't also in the control.
          // Skipping one frame that we assume is the frame that calls the two.
          var sampleLines = sample.stack.split('\n');
          var controlLines = control.stack.split('\n');
          var s = sampleLines.length - 1;
          var c = controlLines.length - 1;

          while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
            // We expect at least one stack frame to be shared.
            // Typically this will be the root most one. However, stack frames may be
            // cut off due to maximum stack limits. In this case, one maybe cut off
            // earlier than the other. We assume that the sample is longer or the same
            // and there for cut off earlier. So we should find the root most frame in
            // the sample somewhere in the control.
            c--;
          }

          for (; s >= 1 && c >= 0; s--, c--) {
            // Next we find the first one that isn't the same which should be the
            // frame that called our sample function and the control.
            if (sampleLines[s] !== controlLines[c]) {
              // In V8, the first line is describing the message but other VMs don't.
              // If we're about to return the first line, and the control is also on the same
              // line, that's a pretty good indicator that our sample threw at same line as
              // the control. I.e. before we entered the sample frame. So we ignore this result.
              // This can happen if you passed a class to function component, or non-function.
              if (s !== 1 || c !== 1) {
                do {
                  s--;
                  c--; // We may still have similar intermediate frames from the construct call.
                  // The next one that isn't the same should be our match though.

                  if (c < 0 || sampleLines[s] !== controlLines[c]) {
                    // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                    var _frame = '\n' + sampleLines[s].replace(' at new ', ' at ');

                    {
                      if (typeof fn === 'function') {
                        componentFrameCache.set(fn, _frame);
                      }
                    } // Return the line we found.

                    return _frame;
                  }
                } while (s >= 1 && c >= 0);
              }

              break;
            }
          }
        }
      } finally {
        reentry = false;
        {
          ReactCurrentDispatcher.current = previousDispatcher;
          reenableLogs();
        }
        Error.prepareStackTrace = previousPrepareStackTrace;
      } // Fallback to just using the name if we couldn't make it throw.


      var name = fn ? fn.displayName || fn.name : '';
      var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';
      {
        if (typeof fn === 'function') {
          componentFrameCache.set(fn, syntheticFrame);
        }
      }
      return syntheticFrame;
    }

    function describeClassComponentFrame(ctor, source, ownerFn) {
      {
        return describeNativeComponentFrame(ctor, true);
      }
    }

    function describeFunctionComponentFrame(fn, source, ownerFn) {
      {
        return describeNativeComponentFrame(fn, false);
      }
    }

    function shouldConstruct(Component) {
      var prototype = Component.prototype;
      return !!(prototype && prototype.isReactComponent);
    }

    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
      if (type == null) {
        return '';
      }

      if (typeof type === 'function') {
        {
          return describeNativeComponentFrame(type, shouldConstruct(type));
        }
      }

      if (typeof type === 'string') {
        return describeBuiltInComponentFrame(type);
      }

      switch (type) {
        case REACT_SUSPENSE_TYPE:
          return describeBuiltInComponentFrame('Suspense');

        case REACT_SUSPENSE_LIST_TYPE:
          return describeBuiltInComponentFrame('SuspenseList');
      }

      if (typeof type === 'object') {
        switch (type.$$typeof) {
          case REACT_FORWARD_REF_TYPE:
            return describeFunctionComponentFrame(type.render);

          case REACT_MEMO_TYPE:
            // Memo may contain any component type so we recursively resolve it.
            return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);

          case REACT_BLOCK_TYPE:
            return describeFunctionComponentFrame(type._render);

          case REACT_LAZY_TYPE:
            {
              var lazyComponent = type;
              var payload = lazyComponent._payload;
              var init = lazyComponent._init;

              try {
                // Lazy may contain any component type so we recursively resolve it.
                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
              } catch (x) {}
            }
        }
      }

      return '';
    }

    function describeFiber(fiber) {
      var owner = fiber._debugOwner ? fiber._debugOwner.type : null;
      var source = fiber._debugSource;

      switch (fiber.tag) {
        case HostComponent:
          return describeBuiltInComponentFrame(fiber.type);

        case LazyComponent:
          return describeBuiltInComponentFrame('Lazy');

        case SuspenseComponent:
          return describeBuiltInComponentFrame('Suspense');

        case SuspenseListComponent:
          return describeBuiltInComponentFrame('SuspenseList');

        case FunctionComponent:
        case IndeterminateComponent:
        case SimpleMemoComponent:
          return describeFunctionComponentFrame(fiber.type);

        case ForwardRef:
          return describeFunctionComponentFrame(fiber.type.render);

        case Block:
          return describeFunctionComponentFrame(fiber.type._render);

        case ClassComponent:
          return describeClassComponentFrame(fiber.type);

        default:
          return '';
      }
    }

    function getStackByFiberInDevAndProd(workInProgress) {
      try {
        var info = '';
        var node = workInProgress;

        do {
          info += describeFiber(node);
          node = node.return;
        } while (node);

        return info;
      } catch (x) {
        return '\nError generating stack: ' + x.message + '\n' + x.stack;
      }
    }

    function getWrappedName(outerType, innerType, wrapperName) {
      var functionName = innerType.displayName || innerType.name || '';
      return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
    }

    function getContextName(type) {
      return type.displayName || 'Context';
    }

    function getComponentName(type) {
      if (type == null) {
        // Host root, text node or just invalid type.
        return null;
      }

      {
        if (typeof type.tag === 'number') {
          error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
        }
      }

      if (typeof type === 'function') {
        return type.displayName || type.name || null;
      }

      if (typeof type === 'string') {
        return type;
      }

      switch (type) {
        case REACT_FRAGMENT_TYPE:
          return 'Fragment';

        case REACT_PORTAL_TYPE:
          return 'Portal';

        case REACT_PROFILER_TYPE:
          return 'Profiler';

        case REACT_STRICT_MODE_TYPE:
          return 'StrictMode';

        case REACT_SUSPENSE_TYPE:
          return 'Suspense';

        case REACT_SUSPENSE_LIST_TYPE:
          return 'SuspenseList';
      }

      if (typeof type === 'object') {
        switch (type.$$typeof) {
          case REACT_CONTEXT_TYPE:
            var context = type;
            return getContextName(context) + '.Consumer';

          case REACT_PROVIDER_TYPE:
            var provider = type;
            return getContextName(provider._context) + '.Provider';

          case REACT_FORWARD_REF_TYPE:
            return getWrappedName(type, type.render, 'ForwardRef');

          case REACT_MEMO_TYPE:
            return getComponentName(type.type);

          case REACT_BLOCK_TYPE:
            return getComponentName(type._render);

          case REACT_LAZY_TYPE:
            {
              var lazyComponent = type;
              var payload = lazyComponent._payload;
              var init = lazyComponent._init;

              try {
                return getComponentName(init(payload));
              } catch (x) {
                return null;
              }
            }
        }
      }

      return null;
    }

    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var current = null;
    var isRendering = false;

    function getCurrentFiberOwnerNameInDevOrNull() {
      {
        if (current === null) {
          return null;
        }

        var owner = current._debugOwner;

        if (owner !== null && typeof owner !== 'undefined') {
          return getComponentName(owner.type);
        }
      }
      return null;
    }

    function getCurrentFiberStackInDev() {
      {
        if (current === null) {
          return '';
        } // Safe because if current fiber exists, we are reconciling,
        // and it is guaranteed to be the work-in-progress version.


        return getStackByFiberInDevAndProd(current);
      }
    }

    function resetCurrentFiber() {
      {
        ReactDebugCurrentFrame.getCurrentStack = null;
        current = null;
        isRendering = false;
      }
    }

    function setCurrentFiber(fiber) {
      {
        ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackInDev;
        current = fiber;
        isRendering = false;
      }
    }

    function setIsRendering(rendering) {
      {
        isRendering = rendering;
      }
    }

    function getIsRendering() {
      {
        return isRendering;
      }
    } // Flow does not allow string concatenation of most non-string types. To work
    // around this limitation, we use an opaque type that can only be obtained by
    // passing the value through getToStringValue first.


    function toString(value) {
      return '' + value;
    }

    function getToStringValue(value) {
      switch (typeof value) {
        case 'boolean':
        case 'number':
        case 'object':
        case 'string':
        case 'undefined':
          return value;

        default:
          // function, symbol are assigned as empty strings
          return '';
      }
    }

    var hasReadOnlyValue = {
      button: true,
      checkbox: true,
      image: true,
      hidden: true,
      radio: true,
      reset: true,
      submit: true
    };

    function checkControlledValueProps(tagName, props) {
      {
        if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) {
          error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
        }

        if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) {
          error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
        }
      }
    }

    function isCheckable(elem) {
      var type = elem.type;
      var nodeName = elem.nodeName;
      return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
    }

    function getTracker(node) {
      return node._valueTracker;
    }

    function detachTracker(node) {
      node._valueTracker = null;
    }

    function getValueFromNode(node) {
      var value = '';

      if (!node) {
        return value;
      }

      if (isCheckable(node)) {
        value = node.checked ? 'true' : 'false';
      } else {
        value = node.value;
      }

      return value;
    }

    function trackValueOnNode(node) {
      var valueField = isCheckable(node) ? 'checked' : 'value';
      var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
      var currentValue = '' + node[valueField]; // if someone has already defined a value or Safari, then bail
      // and don't track value will cause over reporting of changes,
      // but it's better then a hard failure
      // (needed for certain tests that spyOn input values and Safari)

      if (node.hasOwnProperty(valueField) || typeof descriptor === 'undefined' || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
        return;
      }

      var get = descriptor.get,
          set = descriptor.set;
      Object.defineProperty(node, valueField, {
        configurable: true,
        get: function () {
          return get.call(this);
        },
        set: function (value) {
          currentValue = '' + value;
          set.call(this, value);
        }
      }); // We could've passed this the first time
      // but it triggers a bug in IE11 and Edge 14/15.
      // Calling defineProperty() again should be equivalent.
      // https://github.com/facebook/react/issues/11768

      Object.defineProperty(node, valueField, {
        enumerable: descriptor.enumerable
      });
      var tracker = {
        getValue: function () {
          return currentValue;
        },
        setValue: function (value) {
          currentValue = '' + value;
        },
        stopTracking: function () {
          detachTracker(node);
          delete node[valueField];
        }
      };
      return tracker;
    }

    function track(node) {
      if (getTracker(node)) {
        return;
      } // TODO: Once it's just Fiber we can move this to node._wrapperState


      node._valueTracker = trackValueOnNode(node);
    }

    function updateValueIfChanged(node) {
      if (!node) {
        return false;
      }

      var tracker = getTracker(node); // if there is no tracker at this point it's unlikely
      // that trying again will succeed

      if (!tracker) {
        return true;
      }

      var lastValue = tracker.getValue();
      var nextValue = getValueFromNode(node);

      if (nextValue !== lastValue) {
        tracker.setValue(nextValue);
        return true;
      }

      return false;
    }

    function getActiveElement(doc) {
      doc = doc || (typeof document !== 'undefined' ? document : undefined);

      if (typeof doc === 'undefined') {
        return null;
      }

      try {
        return doc.activeElement || doc.body;
      } catch (e) {
        return doc.body;
      }
    }

    var didWarnValueDefaultValue = false;
    var didWarnCheckedDefaultChecked = false;
    var didWarnControlledToUncontrolled = false;
    var didWarnUncontrolledToControlled = false;

    function isControlled(props) {
      var usesChecked = props.type === 'checkbox' || props.type === 'radio';
      return usesChecked ? props.checked != null : props.value != null;
    }
    /**
     * Implements an <input> host component that allows setting these optional
     * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
     *
     * If `checked` or `value` are not supplied (or null/undefined), user actions
     * that affect the checked state or value will trigger updates to the element.
     *
     * If they are supplied (and not null/undefined), the rendered element will not
     * trigger updates to the element. Instead, the props must change in order for
     * the rendered element to be updated.
     *
     * The rendered element will be initialized as unchecked (or `defaultChecked`)
     * with an empty value (or `defaultValue`).
     *
     * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
     */


    function getHostProps(element, props) {
      var node = element;
      var checked = props.checked;

      var hostProps = _assign({}, props, {
        defaultChecked: undefined,
        defaultValue: undefined,
        value: undefined,
        checked: checked != null ? checked : node._wrapperState.initialChecked
      });

      return hostProps;
    }

    function initWrapperState(element, props) {
      {
        checkControlledValueProps('input', props);

        if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
          error('%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);
          didWarnCheckedDefaultChecked = true;
        }

        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
          error('%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);
          didWarnValueDefaultValue = true;
        }
      }
      var node = element;
      var defaultValue = props.defaultValue == null ? '' : props.defaultValue;
      node._wrapperState = {
        initialChecked: props.checked != null ? props.checked : props.defaultChecked,
        initialValue: getToStringValue(props.value != null ? props.value : defaultValue),
        controlled: isControlled(props)
      };
    }

    function updateChecked(element, props) {
      var node = element;
      var checked = props.checked;

      if (checked != null) {
        setValueForProperty(node, 'checked', checked, false);
      }
    }

    function updateWrapper(element, props) {
      var node = element;
      {
        var controlled = isControlled(props);

        if (!node._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
          error('A component is changing an uncontrolled input to be controlled. ' + 'This is likely caused by the value changing from undefined to ' + 'a defined value, which should not happen. ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components');
          didWarnUncontrolledToControlled = true;
        }

        if (node._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
          error('A component is changing a controlled input to be uncontrolled. ' + 'This is likely caused by the value changing from a defined to ' + 'undefined, which should not happen. ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components');
          didWarnControlledToUncontrolled = true;
        }
      }
      updateChecked(element, props);
      var value = getToStringValue(props.value);
      var type = props.type;

      if (value != null) {
        if (type === 'number') {
          if (value === 0 && node.value === '' || // We explicitly want to coerce to number here if possible.
          // eslint-disable-next-line
          node.value != value) {
            node.value = toString(value);
          }
        } else if (node.value !== toString(value)) {
          node.value = toString(value);
        }
      } else if (type === 'submit' || type === 'reset') {
        // Submit/reset inputs need the attribute removed completely to avoid
        // blank-text buttons.
        node.removeAttribute('value');
        return;
      }

      {
        // When syncing the value attribute, the value comes from a cascade of
        // properties:
        //  1. The value React property
        //  2. The defaultValue React property
        //  3. Otherwise there should be no change
        if (props.hasOwnProperty('value')) {
          setDefaultValue(node, props.type, value);
        } else if (props.hasOwnProperty('defaultValue')) {
          setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
        }
      }
      {
        // When syncing the checked attribute, it only changes when it needs
        // to be removed, such as transitioning from a checkbox into a text input
        if (props.checked == null && props.defaultChecked != null) {
          node.defaultChecked = !!props.defaultChecked;
        }
      }
    }

    function postMountWrapper(element, props, isHydrating) {
      var node = element; // Do not assign value if it is already set. This prevents user text input
      // from being lost during SSR hydration.

      if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {
        var type = props.type;
        var isButton = type === 'submit' || type === 'reset'; // Avoid setting value attribute on submit/reset inputs as it overrides the
        // default value provided by the browser. See: #12872

        if (isButton && (props.value === undefined || props.value === null)) {
          return;
        }

        var initialValue = toString(node._wrapperState.initialValue); // Do not assign value if it is already set. This prevents user text input
        // from being lost during SSR hydration.

        if (!isHydrating) {
          {
            // When syncing the value attribute, the value property should use
            // the wrapperState._initialValue property. This uses:
            //
            //   1. The value React property when present
            //   2. The defaultValue React property when present
            //   3. An empty string
            if (initialValue !== node.value) {
              node.value = initialValue;
            }
          }
        }

        {
          // Otherwise, the value attribute is synchronized to the property,
          // so we assign defaultValue to the same thing as the value property
          // assignment step above.
          node.defaultValue = initialValue;
        }
      } // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
      // this is needed to work around a chrome bug where setting defaultChecked
      // will sometimes influence the value of checked (even after detachment).
      // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
      // We need to temporarily unset name to avoid disrupting radio button groups.


      var name = node.name;

      if (name !== '') {
        node.name = '';
      }

      {
        // When syncing the checked attribute, both the checked property and
        // attribute are assigned at the same time using defaultChecked. This uses:
        //
        //   1. The checked React property when present
        //   2. The defaultChecked React property when present
        //   3. Otherwise, false
        node.defaultChecked = !node.defaultChecked;
        node.defaultChecked = !!node._wrapperState.initialChecked;
      }

      if (name !== '') {
        node.name = name;
      }
    }

    function restoreControlledState(element, props) {
      var node = element;
      updateWrapper(node, props);
      updateNamedCousins(node, props);
    }

    function updateNamedCousins(rootNode, props) {
      var name = props.name;

      if (props.type === 'radio' && name != null) {
        var queryRoot = rootNode;

        while (queryRoot.parentNode) {
          queryRoot = queryRoot.parentNode;
        } // If `rootNode.form` was non-null, then we could try `form.elements`,
        // but that sometimes behaves strangely in IE8. We could also try using
        // `form.getElementsByName`, but that will only return direct children
        // and won't include inputs that use the HTML5 `form=` attribute. Since
        // the input might not even be in a form. It might not even be in the
        // document. Let's just use the local `querySelectorAll` to ensure we don't
        // miss anything.


        var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

        for (var i = 0; i < group.length; i++) {
          var otherNode = group[i];

          if (otherNode === rootNode || otherNode.form !== rootNode.form) {
            continue;
          } // This will throw if radio buttons rendered by different copies of React
          // and the same name are rendered into the same form (same as #1939).
          // That's probably okay; we don't support it just as we don't support
          // mixing React radio buttons with non-React ones.


          var otherProps = getFiberCurrentPropsFromNode(otherNode);

          if (!otherProps) {
            {
              throw Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
            }
          } // We need update the tracked value on the named cousin since the value
          // was changed but the input saw no event or value set


          updateValueIfChanged(otherNode); // If this is a controlled radio button group, forcing the input that
          // was previously checked to update will cause it to be come re-checked
          // as appropriate.

          updateWrapper(otherNode, otherProps);
        }
      }
    } // In Chrome, assigning defaultValue to certain input types triggers input validation.
    // For number inputs, the display value loses trailing decimal points. For email inputs,
    // Chrome raises "The specified value <x> is not a valid email address".
    //
    // Here we check to see if the defaultValue has actually changed, avoiding these problems
    // when the user is inputting text
    //
    // https://github.com/facebook/react/issues/7253


    function setDefaultValue(node, type, value) {
      if ( // Focused number inputs synchronize on blur. See ChangeEventPlugin.js
      type !== 'number' || getActiveElement(node.ownerDocument) !== node) {
        if (value == null) {
          node.defaultValue = toString(node._wrapperState.initialValue);
        } else if (node.defaultValue !== toString(value)) {
          node.defaultValue = toString(value);
        }
      }
    }

    var didWarnSelectedSetOnOption = false;
    var didWarnInvalidChild = false;

    function flattenChildren(children) {
      var content = ''; // Flatten children. We'll warn if they are invalid
      // during validateProps() which runs for hydration too.
      // Note that this would throw on non-element objects.
      // Elements are stringified (which is normally irrelevant
      // but matters for <fbt>).

      React.Children.forEach(children, function (child) {
        if (child == null) {
          return;
        }

        content += child; // Note: we don't warn about invalid children here.
        // Instead, this is done separately below so that
        // it happens during the hydration code path too.
      });
      return content;
    }
    /**
     * Implements an <option> host component that warns when `selected` is set.
     */


    function validateProps(element, props) {
      {
        // This mirrors the code path above, but runs for hydration too.
        // Warn about invalid children here so that client and hydration are consistent.
        // TODO: this seems like it could cause a DEV-only throw for hydration
        // if children contains a non-element object. We should try to avoid that.
        if (typeof props.children === 'object' && props.children !== null) {
          React.Children.forEach(props.children, function (child) {
            if (child == null) {
              return;
            }

            if (typeof child === 'string' || typeof child === 'number') {
              return;
            }

            if (typeof child.type !== 'string') {
              return;
            }

            if (!didWarnInvalidChild) {
              didWarnInvalidChild = true;
              error('Only strings and numbers are supported as <option> children.');
            }
          });
        } // TODO: Remove support for `selected` in <option>.


        if (props.selected != null && !didWarnSelectedSetOnOption) {
          error('Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.');
          didWarnSelectedSetOnOption = true;
        }
      }
    }

    function postMountWrapper$1(element, props) {
      // value="" should make a value attribute (#6219)
      if (props.value != null) {
        element.setAttribute('value', toString(getToStringValue(props.value)));
      }
    }

    function getHostProps$1(element, props) {
      var hostProps = _assign({
        children: undefined
      }, props);

      var content = flattenChildren(props.children);

      if (content) {
        hostProps.children = content;
      }

      return hostProps;
    }

    var didWarnValueDefaultValue$1;
    {
      didWarnValueDefaultValue$1 = false;
    }

    function getDeclarationErrorAddendum() {
      var ownerName = getCurrentFiberOwnerNameInDevOrNull();

      if (ownerName) {
        return '\n\nCheck the render method of `' + ownerName + '`.';
      }

      return '';
    }

    var valuePropNames = ['value', 'defaultValue'];
    /**
     * Validation function for `value` and `defaultValue`.
     */

    function checkSelectPropTypes(props) {
      {
        checkControlledValueProps('select', props);

        for (var i = 0; i < valuePropNames.length; i++) {
          var propName = valuePropNames[i];

          if (props[propName] == null) {
            continue;
          }

          var isArray = Array.isArray(props[propName]);

          if (props.multiple && !isArray) {
            error('The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum());
          } else if (!props.multiple && isArray) {
            error('The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum());
          }
        }
      }
    }

    function updateOptions(node, multiple, propValue, setDefaultSelected) {
      var options = node.options;

      if (multiple) {
        var selectedValues = propValue;
        var selectedValue = {};

        for (var i = 0; i < selectedValues.length; i++) {
          // Prefix to avoid chaos with special keys.
          selectedValue['$' + selectedValues[i]] = true;
        }

        for (var _i = 0; _i < options.length; _i++) {
          var selected = selectedValue.hasOwnProperty('$' + options[_i].value);

          if (options[_i].selected !== selected) {
            options[_i].selected = selected;
          }

          if (selected && setDefaultSelected) {
            options[_i].defaultSelected = true;
          }
        }
      } else {
        // Do not set `select.value` as exact behavior isn't consistent across all
        // browsers for all cases.
        var _selectedValue = toString(getToStringValue(propValue));

        var defaultSelected = null;

        for (var _i2 = 0; _i2 < options.length; _i2++) {
          if (options[_i2].value === _selectedValue) {
            options[_i2].selected = true;

            if (setDefaultSelected) {
              options[_i2].defaultSelected = true;
            }

            return;
          }

          if (defaultSelected === null && !options[_i2].disabled) {
            defaultSelected = options[_i2];
          }
        }

        if (defaultSelected !== null) {
          defaultSelected.selected = true;
        }
      }
    }
    /**
     * Implements a <select> host component that allows optionally setting the
     * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
     * stringable. If `multiple` is true, the prop must be an array of stringables.
     *
     * If `value` is not supplied (or null/undefined), user actions that change the
     * selected option will trigger updates to the rendered options.
     *
     * If it is supplied (and not null/undefined), the rendered options will not
     * update in response to user actions. Instead, the `value` prop must change in
     * order for the rendered options to update.
     *
     * If `defaultValue` is provided, any options with the supplied values will be
     * selected.
     */


    function getHostProps$2(element, props) {
      return _assign({}, props, {
        value: undefined
      });
    }

    function initWrapperState$1(element, props) {
      var node = element;
      {
        checkSelectPropTypes(props);
      }
      node._wrapperState = {
        wasMultiple: !!props.multiple
      };
      {
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
          error('Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components');
          didWarnValueDefaultValue$1 = true;
        }
      }
    }

    function postMountWrapper$2(element, props) {
      var node = element;
      node.multiple = !!props.multiple;
      var value = props.value;

      if (value != null) {
        updateOptions(node, !!props.multiple, value, false);
      } else if (props.defaultValue != null) {
        updateOptions(node, !!props.multiple, props.defaultValue, true);
      }
    }

    function postUpdateWrapper(element, props) {
      var node = element;
      var wasMultiple = node._wrapperState.wasMultiple;
      node._wrapperState.wasMultiple = !!props.multiple;
      var value = props.value;

      if (value != null) {
        updateOptions(node, !!props.multiple, value, false);
      } else if (wasMultiple !== !!props.multiple) {
        // For simplicity, reapply `defaultValue` if `multiple` is toggled.
        if (props.defaultValue != null) {
          updateOptions(node, !!props.multiple, props.defaultValue, true);
        } else {
          // Revert the select back to its default unselected state.
          updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);
        }
      }
    }

    function restoreControlledState$1(element, props) {
      var node = element;
      var value = props.value;

      if (value != null) {
        updateOptions(node, !!props.multiple, value, false);
      }
    }

    var didWarnValDefaultVal = false;
    /**
     * Implements a <textarea> host component that allows setting `value`, and
     * `defaultValue`. This differs from the traditional DOM API because value is
     * usually set as PCDATA children.
     *
     * If `value` is not supplied (or null/undefined), user actions that affect the
     * value will trigger updates to the element.
     *
     * If `value` is supplied (and not null/undefined), the rendered element will
     * not trigger updates to the element. Instead, the `value` prop must change in
     * order for the rendered element to be updated.
     *
     * The rendered element will be initialized with an empty value, the prop
     * `defaultValue` if specified, or the children content (deprecated).
     */

    function getHostProps$3(element, props) {
      var node = element;

      if (!(props.dangerouslySetInnerHTML == null)) {
        {
          throw Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
        }
      } // Always set children to the same thing. In IE9, the selection range will
      // get reset if `textContent` is mutated.  We could add a check in setTextContent
      // to only set the value if/when the value differs from the node value (which would
      // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
      // solution. The value can be a boolean or object so that's why it's forced
      // to be a string.


      var hostProps = _assign({}, props, {
        value: undefined,
        defaultValue: undefined,
        children: toString(node._wrapperState.initialValue)
      });

      return hostProps;
    }

    function initWrapperState$2(element, props) {
      var node = element;
      {
        checkControlledValueProps('textarea', props);

        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
          error('%s contains a textarea with both value and defaultValue props. ' + 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://reactjs.org/link/controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component');
          didWarnValDefaultVal = true;
        }
      }
      var initialValue = props.value; // Only bother fetching default value if we're going to use it

      if (initialValue == null) {
        var children = props.children,
            defaultValue = props.defaultValue;

        if (children != null) {
          {
            error('Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');
          }
          {
            if (!(defaultValue == null)) {
              {
                throw Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
              }
            }

            if (Array.isArray(children)) {
              if (!(children.length <= 1)) {
                {
                  throw Error("<textarea> can only have at most one child.");
                }
              }

              children = children[0];
            }

            defaultValue = children;
          }
        }

        if (defaultValue == null) {
          defaultValue = '';
        }

        initialValue = defaultValue;
      }

      node._wrapperState = {
        initialValue: getToStringValue(initialValue)
      };
    }

    function updateWrapper$1(element, props) {
      var node = element;
      var value = getToStringValue(props.value);
      var defaultValue = getToStringValue(props.defaultValue);

      if (value != null) {
        // Cast `value` to a string to ensure the value is set correctly. While
        // browsers typically do this as necessary, jsdom doesn't.
        var newValue = toString(value); // To avoid side effects (such as losing text selection), only set value if changed

        if (newValue !== node.value) {
          node.value = newValue;
        }

        if (props.defaultValue == null && node.defaultValue !== newValue) {
          node.defaultValue = newValue;
        }
      }

      if (defaultValue != null) {
        node.defaultValue = toString(defaultValue);
      }
    }

    function postMountWrapper$3(element, props) {
      var node = element; // This is in postMount because we need access to the DOM node, which is not
      // available until after the component has mounted.

      var textContent = node.textContent; // Only set node.value if textContent is equal to the expected
      // initial value. In IE10/IE11 there is a bug where the placeholder attribute
      // will populate textContent as well.
      // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/

      if (textContent === node._wrapperState.initialValue) {
        if (textContent !== '' && textContent !== null) {
          node.value = textContent;
        }
      }
    }

    function restoreControlledState$2(element, props) {
      // DOM component is still mounted; update
      updateWrapper$1(element, props);
    }

    var HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';
    var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
    var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';
    var Namespaces = {
      html: HTML_NAMESPACE,
      mathml: MATH_NAMESPACE,
      svg: SVG_NAMESPACE
    }; // Assumes there is no parent namespace.

    function getIntrinsicNamespace(type) {
      switch (type) {
        case 'svg':
          return SVG_NAMESPACE;

        case 'math':
          return MATH_NAMESPACE;

        default:
          return HTML_NAMESPACE;
      }
    }

    function getChildNamespace(parentNamespace, type) {
      if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) {
        // No (or default) parent namespace: potential entry point.
        return getIntrinsicNamespace(type);
      }

      if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {
        // We're leaving SVG.
        return HTML_NAMESPACE;
      } // By default, pass namespace below.


      return parentNamespace;
    }
    /* globals MSApp */

    /**
     * Create a function which has 'unsafe' privileges (required by windows8 apps)
     */


    var createMicrosoftUnsafeLocalFunction = function (func) {
      if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
        return function (arg0, arg1, arg2, arg3) {
          MSApp.execUnsafeLocalFunction(function () {
            return func(arg0, arg1, arg2, arg3);
          });
        };
      } else {
        return func;
      }
    };

    var reusableSVGContainer;
    /**
     * Set the innerHTML property of a node
     *
     * @param {DOMElement} node
     * @param {string} html
     * @internal
     */

    var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
      if (node.namespaceURI === Namespaces.svg) {
        if (!('innerHTML' in node)) {
          // IE does not have innerHTML for SVG nodes, so instead we inject the
          // new markup in a temp node and then move the child nodes across into
          // the target node
          reusableSVGContainer = reusableSVGContainer || document.createElement('div');
          reusableSVGContainer.innerHTML = '<svg>' + html.valueOf().toString() + '</svg>';
          var svgNode = reusableSVGContainer.firstChild;

          while (node.firstChild) {
            node.removeChild(node.firstChild);
          }

          while (svgNode.firstChild) {
            node.appendChild(svgNode.firstChild);
          }

          return;
        }
      }

      node.innerHTML = html;
    });
    /**
     * HTML nodeType values that represent the type of the node
     */

    var ELEMENT_NODE = 1;
    var TEXT_NODE = 3;
    var COMMENT_NODE = 8;
    var DOCUMENT_NODE = 9;
    var DOCUMENT_FRAGMENT_NODE = 11;
    /**
     * Set the textContent property of a node. For text updates, it's faster
     * to set the `nodeValue` of the Text node directly instead of using
     * `.textContent` which will remove the existing node and create a new one.
     *
     * @param {DOMElement} node
     * @param {string} text
     * @internal
     */

    var setTextContent = function (node, text) {
      if (text) {
        var firstChild = node.firstChild;

        if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
          firstChild.nodeValue = text;
          return;
        }
      }

      node.textContent = text;
    }; // List derived from Gecko source code:
    // https://github.com/mozilla/gecko-dev/blob/4e638efc71/layout/style/test/property_database.js


    var shorthandToLonghand = {
      animation: ['animationDelay', 'animationDirection', 'animationDuration', 'animationFillMode', 'animationIterationCount', 'animationName', 'animationPlayState', 'animationTimingFunction'],
      background: ['backgroundAttachment', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPositionX', 'backgroundPositionY', 'backgroundRepeat', 'backgroundSize'],
      backgroundPosition: ['backgroundPositionX', 'backgroundPositionY'],
      border: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth', 'borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderTopColor', 'borderTopStyle', 'borderTopWidth'],
      borderBlockEnd: ['borderBlockEndColor', 'borderBlockEndStyle', 'borderBlockEndWidth'],
      borderBlockStart: ['borderBlockStartColor', 'borderBlockStartStyle', 'borderBlockStartWidth'],
      borderBottom: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth'],
      borderColor: ['borderBottomColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor'],
      borderImage: ['borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth'],
      borderInlineEnd: ['borderInlineEndColor', 'borderInlineEndStyle', 'borderInlineEndWidth'],
      borderInlineStart: ['borderInlineStartColor', 'borderInlineStartStyle', 'borderInlineStartWidth'],
      borderLeft: ['borderLeftColor', 'borderLeftStyle', 'borderLeftWidth'],
      borderRadius: ['borderBottomLeftRadius', 'borderBottomRightRadius', 'borderTopLeftRadius', 'borderTopRightRadius'],
      borderRight: ['borderRightColor', 'borderRightStyle', 'borderRightWidth'],
      borderStyle: ['borderBottomStyle', 'borderLeftStyle', 'borderRightStyle', 'borderTopStyle'],
      borderTop: ['borderTopColor', 'borderTopStyle', 'borderTopWidth'],
      borderWidth: ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth'],
      columnRule: ['columnRuleColor', 'columnRuleStyle', 'columnRuleWidth'],
      columns: ['columnCount', 'columnWidth'],
      flex: ['flexBasis', 'flexGrow', 'flexShrink'],
      flexFlow: ['flexDirection', 'flexWrap'],
      font: ['fontFamily', 'fontFeatureSettings', 'fontKerning', 'fontLanguageOverride', 'fontSize', 'fontSizeAdjust', 'fontStretch', 'fontStyle', 'fontVariant', 'fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition', 'fontWeight', 'lineHeight'],
      fontVariant: ['fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition'],
      gap: ['columnGap', 'rowGap'],
      grid: ['gridAutoColumns', 'gridAutoFlow', 'gridAutoRows', 'gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],
      gridArea: ['gridColumnEnd', 'gridColumnStart', 'gridRowEnd', 'gridRowStart'],
      gridColumn: ['gridColumnEnd', 'gridColumnStart'],
      gridColumnGap: ['columnGap'],
      gridGap: ['columnGap', 'rowGap'],
      gridRow: ['gridRowEnd', 'gridRowStart'],
      gridRowGap: ['rowGap'],
      gridTemplate: ['gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],
      listStyle: ['listStyleImage', 'listStylePosition', 'listStyleType'],
      margin: ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],
      marker: ['markerEnd', 'markerMid', 'markerStart'],
      mask: ['maskClip', 'maskComposite', 'maskImage', 'maskMode', 'maskOrigin', 'maskPositionX', 'maskPositionY', 'maskRepeat', 'maskSize'],
      maskPosition: ['maskPositionX', 'maskPositionY'],
      outline: ['outlineColor', 'outlineStyle', 'outlineWidth'],
      overflow: ['overflowX', 'overflowY'],
      padding: ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],
      placeContent: ['alignContent', 'justifyContent'],
      placeItems: ['alignItems', 'justifyItems'],
      placeSelf: ['alignSelf', 'justifySelf'],
      textDecoration: ['textDecorationColor', 'textDecorationLine', 'textDecorationStyle'],
      textEmphasis: ['textEmphasisColor', 'textEmphasisStyle'],
      transition: ['transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction'],
      wordWrap: ['overflowWrap']
    };
    /**
     * CSS properties which accept numbers but are not in units of "px".
     */

    var isUnitlessNumber = {
      animationIterationCount: true,
      borderImageOutset: true,
      borderImageSlice: true,
      borderImageWidth: true,
      boxFlex: true,
      boxFlexGroup: true,
      boxOrdinalGroup: true,
      columnCount: true,
      columns: true,
      flex: true,
      flexGrow: true,
      flexPositive: true,
      flexShrink: true,
      flexNegative: true,
      flexOrder: true,
      gridArea: true,
      gridRow: true,
      gridRowEnd: true,
      gridRowSpan: true,
      gridRowStart: true,
      gridColumn: true,
      gridColumnEnd: true,
      gridColumnSpan: true,
      gridColumnStart: true,
      fontWeight: true,
      lineClamp: true,
      lineHeight: true,
      opacity: true,
      order: true,
      orphans: true,
      tabSize: true,
      widows: true,
      zIndex: true,
      zoom: true,
      // SVG-related properties
      fillOpacity: true,
      floodOpacity: true,
      stopOpacity: true,
      strokeDasharray: true,
      strokeDashoffset: true,
      strokeMiterlimit: true,
      strokeOpacity: true,
      strokeWidth: true
    };
    /**
     * @param {string} prefix vendor-specific prefix, eg: Webkit
     * @param {string} key style name, eg: transitionDuration
     * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
     * WebkitTransitionDuration
     */

    function prefixKey(prefix, key) {
      return prefix + key.charAt(0).toUpperCase() + key.substring(1);
    }
    /**
     * Support style names that may come passed in prefixed by adding permutations
     * of vendor prefixes.
     */


    var prefixes = ['Webkit', 'ms', 'Moz', 'O']; // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
    // infinite loop, because it iterates over the newly added props too.

    Object.keys(isUnitlessNumber).forEach(function (prop) {
      prefixes.forEach(function (prefix) {
        isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
      });
    });
    /**
     * Convert a value into the proper css writable value. The style name `name`
     * should be logical (no hyphens), as specified
     * in `CSSProperty.isUnitlessNumber`.
     *
     * @param {string} name CSS property name such as `topMargin`.
     * @param {*} value CSS property value such as `10px`.
     * @return {string} Normalized style value with dimensions applied.
     */

    function dangerousStyleValue(name, value, isCustomProperty) {
      // Note that we've removed escapeTextForBrowser() calls here since the
      // whole string will be escaped when the attribute is injected into
      // the markup. If you provide unsafe user data here they can inject
      // arbitrary CSS which may be problematic (I couldn't repro this):
      // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
      // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
      // This is not an XSS hole but instead a potential CSS injection issue
      // which has lead to a greater discussion about how we're going to
      // trust URLs moving forward. See #2115901
      var isEmpty = value == null || typeof value === 'boolean' || value === '';

      if (isEmpty) {
        return '';
      }

      if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
        return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
      }

      return ('' + value).trim();
    }

    var uppercasePattern = /([A-Z])/g;
    var msPattern = /^ms-/;
    /**
     * Hyphenates a camelcased CSS property name, for example:
     *
     *   > hyphenateStyleName('backgroundColor')
     *   < "background-color"
     *   > hyphenateStyleName('MozTransition')
     *   < "-moz-transition"
     *   > hyphenateStyleName('msTransition')
     *   < "-ms-transition"
     *
     * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
     * is converted to `-ms-`.
     */

    function hyphenateStyleName(name) {
      return name.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern, '-ms-');
    }

    var warnValidStyle = function () {};

    {
      // 'msTransform' is correct, but the other prefixes should be capitalized
      var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
      var msPattern$1 = /^-ms-/;
      var hyphenPattern = /-(.)/g; // style values shouldn't contain a semicolon

      var badStyleValueWithSemicolonPattern = /;\s*$/;
      var warnedStyleNames = {};
      var warnedStyleValues = {};
      var warnedForNaNValue = false;
      var warnedForInfinityValue = false;

      var camelize = function (string) {
        return string.replace(hyphenPattern, function (_, character) {
          return character.toUpperCase();
        });
      };

      var warnHyphenatedStyleName = function (name) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
          return;
        }

        warnedStyleNames[name] = true;
        error('Unsupported style property %s. Did you mean %s?', name, // As Andi Smith suggests
        // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
        // is converted to lowercase `ms`.
        camelize(name.replace(msPattern$1, 'ms-')));
      };

      var warnBadVendoredStyleName = function (name) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
          return;
        }

        warnedStyleNames[name] = true;
        error('Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1));
      };

      var warnStyleValueWithSemicolon = function (name, value) {
        if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
          return;
        }

        warnedStyleValues[value] = true;
        error("Style property values shouldn't contain a semicolon. " + 'Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, ''));
      };

      var warnStyleValueIsNaN = function (name, value) {
        if (warnedForNaNValue) {
          return;
        }

        warnedForNaNValue = true;
        error('`NaN` is an invalid value for the `%s` css style property.', name);
      };

      var warnStyleValueIsInfinity = function (name, value) {
        if (warnedForInfinityValue) {
          return;
        }

        warnedForInfinityValue = true;
        error('`Infinity` is an invalid value for the `%s` css style property.', name);
      };

      warnValidStyle = function (name, value) {
        if (name.indexOf('-') > -1) {
          warnHyphenatedStyleName(name);
        } else if (badVendoredStyleNamePattern.test(name)) {
          warnBadVendoredStyleName(name);
        } else if (badStyleValueWithSemicolonPattern.test(value)) {
          warnStyleValueWithSemicolon(name, value);
        }

        if (typeof value === 'number') {
          if (isNaN(value)) {
            warnStyleValueIsNaN(name, value);
          } else if (!isFinite(value)) {
            warnStyleValueIsInfinity(name, value);
          }
        }
      };
    }
    var warnValidStyle$1 = warnValidStyle;
    /**
     * Operations for dealing with CSS properties.
     */

    /**
     * This creates a string that is expected to be equivalent to the style
     * attribute generated by server-side rendering. It by-passes warnings and
     * security checks so it's not safe to use this value for anything other than
     * comparison. It is only used in DEV for SSR validation.
     */

    function createDangerousStringForStyles(styles) {
      {
        var serialized = '';
        var delimiter = '';

        for (var styleName in styles) {
          if (!styles.hasOwnProperty(styleName)) {
            continue;
          }

          var styleValue = styles[styleName];

          if (styleValue != null) {
            var isCustomProperty = styleName.indexOf('--') === 0;
            serialized += delimiter + (isCustomProperty ? styleName : hyphenateStyleName(styleName)) + ':';
            serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);
            delimiter = ';';
          }
        }

        return serialized || null;
      }
    }
    /**
     * Sets the value for multiple styles on a node.  If a value is specified as
     * '' (empty string), the corresponding style property will be unset.
     *
     * @param {DOMElement} node
     * @param {object} styles
     */


    function setValueForStyles(node, styles) {
      var style = node.style;

      for (var styleName in styles) {
        if (!styles.hasOwnProperty(styleName)) {
          continue;
        }

        var isCustomProperty = styleName.indexOf('--') === 0;
        {
          if (!isCustomProperty) {
            warnValidStyle$1(styleName, styles[styleName]);
          }
        }
        var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);

        if (styleName === 'float') {
          styleName = 'cssFloat';
        }

        if (isCustomProperty) {
          style.setProperty(styleName, styleValue);
        } else {
          style[styleName] = styleValue;
        }
      }
    }

    function isValueEmpty(value) {
      return value == null || typeof value === 'boolean' || value === '';
    }
    /**
     * Given {color: 'red', overflow: 'hidden'} returns {
     *   color: 'color',
     *   overflowX: 'overflow',
     *   overflowY: 'overflow',
     * }. This can be read as "the overflowY property was set by the overflow
     * shorthand". That is, the values are the property that each was derived from.
     */


    function expandShorthandMap(styles) {
      var expanded = {};

      for (var key in styles) {
        var longhands = shorthandToLonghand[key] || [key];

        for (var i = 0; i < longhands.length; i++) {
          expanded[longhands[i]] = key;
        }
      }

      return expanded;
    }
    /**
     * When mixing shorthand and longhand property names, we warn during updates if
     * we expect an incorrect result to occur. In particular, we warn for:
     *
     * Updating a shorthand property (longhand gets overwritten):
     *   {font: 'foo', fontVariant: 'bar'} -> {font: 'baz', fontVariant: 'bar'}
     *   becomes .style.font = 'baz'
     * Removing a shorthand property (longhand gets lost too):
     *   {font: 'foo', fontVariant: 'bar'} -> {fontVariant: 'bar'}
     *   becomes .style.font = ''
     * Removing a longhand property (should revert to shorthand; doesn't):
     *   {font: 'foo', fontVariant: 'bar'} -> {font: 'foo'}
     *   becomes .style.fontVariant = ''
     */


    function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
      {
        if (!nextStyles) {
          return;
        }

        var expandedUpdates = expandShorthandMap(styleUpdates);
        var expandedStyles = expandShorthandMap(nextStyles);
        var warnedAbout = {};

        for (var key in expandedUpdates) {
          var originalKey = expandedUpdates[key];
          var correctOriginalKey = expandedStyles[key];

          if (correctOriginalKey && originalKey !== correctOriginalKey) {
            var warningKey = originalKey + ',' + correctOriginalKey;

            if (warnedAbout[warningKey]) {
              continue;
            }

            warnedAbout[warningKey] = true;
            error('%s a style property during rerender (%s) when a ' + 'conflicting property is set (%s) can lead to styling bugs. To ' + "avoid this, don't mix shorthand and non-shorthand properties " + 'for the same value; instead, replace the shorthand with ' + 'separate values.', isValueEmpty(styleUpdates[originalKey]) ? 'Removing' : 'Updating', originalKey, correctOriginalKey);
          }
        }
      }
    } // For HTML, certain tags should omit their close tag. We keep a list for
    // those special-case tags.


    var omittedCloseTags = {
      area: true,
      base: true,
      br: true,
      col: true,
      embed: true,
      hr: true,
      img: true,
      input: true,
      keygen: true,
      link: true,
      meta: true,
      param: true,
      source: true,
      track: true,
      wbr: true // NOTE: menuitem's close tag should be omitted, but that causes problems.

    }; // `omittedCloseTags` except that `menuitem` should still have its closing tag.

    var voidElementTags = _assign({
      menuitem: true
    }, omittedCloseTags);

    var HTML = '__html';

    function assertValidProps(tag, props) {
      if (!props) {
        return;
      } // Note the use of `==` which checks for null or undefined.


      if (voidElementTags[tag]) {
        if (!(props.children == null && props.dangerouslySetInnerHTML == null)) {
          {
            throw Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
          }
        }
      }

      if (props.dangerouslySetInnerHTML != null) {
        if (!(props.children == null)) {
          {
            throw Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
          }
        }

        if (!(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML)) {
          {
            throw Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
          }
        }
      }

      {
        if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) {
          error('A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.');
        }
      }

      if (!(props.style == null || typeof props.style === 'object')) {
        {
          throw Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
        }
      }
    }

    function isCustomComponent(tagName, props) {
      if (tagName.indexOf('-') === -1) {
        return typeof props.is === 'string';
      }

      switch (tagName) {
        // These are reserved SVG and MathML elements.
        // We don't mind this list too much because we expect it to never grow.
        // The alternative is to track the namespace in a few places which is convoluted.
        // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
        case 'annotation-xml':
        case 'color-profile':
        case 'font-face':
        case 'font-face-src':
        case 'font-face-uri':
        case 'font-face-format':
        case 'font-face-name':
        case 'missing-glyph':
          return false;

        default:
          return true;
      }
    } // When adding attributes to the HTML or SVG allowed attribute list, be sure to
    // also add them to this module to ensure casing and incorrect name
    // warnings.


    var possibleStandardNames = {
      // HTML
      accept: 'accept',
      acceptcharset: 'acceptCharset',
      'accept-charset': 'acceptCharset',
      accesskey: 'accessKey',
      action: 'action',
      allowfullscreen: 'allowFullScreen',
      alt: 'alt',
      as: 'as',
      async: 'async',
      autocapitalize: 'autoCapitalize',
      autocomplete: 'autoComplete',
      autocorrect: 'autoCorrect',
      autofocus: 'autoFocus',
      autoplay: 'autoPlay',
      autosave: 'autoSave',
      capture: 'capture',
      cellpadding: 'cellPadding',
      cellspacing: 'cellSpacing',
      challenge: 'challenge',
      charset: 'charSet',
      checked: 'checked',
      children: 'children',
      cite: 'cite',
      class: 'className',
      classid: 'classID',
      classname: 'className',
      cols: 'cols',
      colspan: 'colSpan',
      content: 'content',
      contenteditable: 'contentEditable',
      contextmenu: 'contextMenu',
      controls: 'controls',
      controlslist: 'controlsList',
      coords: 'coords',
      crossorigin: 'crossOrigin',
      dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
      data: 'data',
      datetime: 'dateTime',
      default: 'default',
      defaultchecked: 'defaultChecked',
      defaultvalue: 'defaultValue',
      defer: 'defer',
      dir: 'dir',
      disabled: 'disabled',
      disablepictureinpicture: 'disablePictureInPicture',
      disableremoteplayback: 'disableRemotePlayback',
      download: 'download',
      draggable: 'draggable',
      enctype: 'encType',
      enterkeyhint: 'enterKeyHint',
      for: 'htmlFor',
      form: 'form',
      formmethod: 'formMethod',
      formaction: 'formAction',
      formenctype: 'formEncType',
      formnovalidate: 'formNoValidate',
      formtarget: 'formTarget',
      frameborder: 'frameBorder',
      headers: 'headers',
      height: 'height',
      hidden: 'hidden',
      high: 'high',
      href: 'href',
      hreflang: 'hrefLang',
      htmlfor: 'htmlFor',
      httpequiv: 'httpEquiv',
      'http-equiv': 'httpEquiv',
      icon: 'icon',
      id: 'id',
      innerhtml: 'innerHTML',
      inputmode: 'inputMode',
      integrity: 'integrity',
      is: 'is',
      itemid: 'itemID',
      itemprop: 'itemProp',
      itemref: 'itemRef',
      itemscope: 'itemScope',
      itemtype: 'itemType',
      keyparams: 'keyParams',
      keytype: 'keyType',
      kind: 'kind',
      label: 'label',
      lang: 'lang',
      list: 'list',
      loop: 'loop',
      low: 'low',
      manifest: 'manifest',
      marginwidth: 'marginWidth',
      marginheight: 'marginHeight',
      max: 'max',
      maxlength: 'maxLength',
      media: 'media',
      mediagroup: 'mediaGroup',
      method: 'method',
      min: 'min',
      minlength: 'minLength',
      multiple: 'multiple',
      muted: 'muted',
      name: 'name',
      nomodule: 'noModule',
      nonce: 'nonce',
      novalidate: 'noValidate',
      open: 'open',
      optimum: 'optimum',
      pattern: 'pattern',
      placeholder: 'placeholder',
      playsinline: 'playsInline',
      poster: 'poster',
      preload: 'preload',
      profile: 'profile',
      radiogroup: 'radioGroup',
      readonly: 'readOnly',
      referrerpolicy: 'referrerPolicy',
      rel: 'rel',
      required: 'required',
      reversed: 'reversed',
      role: 'role',
      rows: 'rows',
      rowspan: 'rowSpan',
      sandbox: 'sandbox',
      scope: 'scope',
      scoped: 'scoped',
      scrolling: 'scrolling',
      seamless: 'seamless',
      selected: 'selected',
      shape: 'shape',
      size: 'size',
      sizes: 'sizes',
      span: 'span',
      spellcheck: 'spellCheck',
      src: 'src',
      srcdoc: 'srcDoc',
      srclang: 'srcLang',
      srcset: 'srcSet',
      start: 'start',
      step: 'step',
      style: 'style',
      summary: 'summary',
      tabindex: 'tabIndex',
      target: 'target',
      title: 'title',
      type: 'type',
      usemap: 'useMap',
      value: 'value',
      width: 'width',
      wmode: 'wmode',
      wrap: 'wrap',
      // SVG
      about: 'about',
      accentheight: 'accentHeight',
      'accent-height': 'accentHeight',
      accumulate: 'accumulate',
      additive: 'additive',
      alignmentbaseline: 'alignmentBaseline',
      'alignment-baseline': 'alignmentBaseline',
      allowreorder: 'allowReorder',
      alphabetic: 'alphabetic',
      amplitude: 'amplitude',
      arabicform: 'arabicForm',
      'arabic-form': 'arabicForm',
      ascent: 'ascent',
      attributename: 'attributeName',
      attributetype: 'attributeType',
      autoreverse: 'autoReverse',
      azimuth: 'azimuth',
      basefrequency: 'baseFrequency',
      baselineshift: 'baselineShift',
      'baseline-shift': 'baselineShift',
      baseprofile: 'baseProfile',
      bbox: 'bbox',
      begin: 'begin',
      bias: 'bias',
      by: 'by',
      calcmode: 'calcMode',
      capheight: 'capHeight',
      'cap-height': 'capHeight',
      clip: 'clip',
      clippath: 'clipPath',
      'clip-path': 'clipPath',
      clippathunits: 'clipPathUnits',
      cliprule: 'clipRule',
      'clip-rule': 'clipRule',
      color: 'color',
      colorinterpolation: 'colorInterpolation',
      'color-interpolation': 'colorInterpolation',
      colorinterpolationfilters: 'colorInterpolationFilters',
      'color-interpolation-filters': 'colorInterpolationFilters',
      colorprofile: 'colorProfile',
      'color-profile': 'colorProfile',
      colorrendering: 'colorRendering',
      'color-rendering': 'colorRendering',
      contentscripttype: 'contentScriptType',
      contentstyletype: 'contentStyleType',
      cursor: 'cursor',
      cx: 'cx',
      cy: 'cy',
      d: 'd',
      datatype: 'datatype',
      decelerate: 'decelerate',
      descent: 'descent',
      diffuseconstant: 'diffuseConstant',
      direction: 'direction',
      display: 'display',
      divisor: 'divisor',
      dominantbaseline: 'dominantBaseline',
      'dominant-baseline': 'dominantBaseline',
      dur: 'dur',
      dx: 'dx',
      dy: 'dy',
      edgemode: 'edgeMode',
      elevation: 'elevation',
      enablebackground: 'enableBackground',
      'enable-background': 'enableBackground',
      end: 'end',
      exponent: 'exponent',
      externalresourcesrequired: 'externalResourcesRequired',
      fill: 'fill',
      fillopacity: 'fillOpacity',
      'fill-opacity': 'fillOpacity',
      fillrule: 'fillRule',
      'fill-rule': 'fillRule',
      filter: 'filter',
      filterres: 'filterRes',
      filterunits: 'filterUnits',
      floodopacity: 'floodOpacity',
      'flood-opacity': 'floodOpacity',
      floodcolor: 'floodColor',
      'flood-color': 'floodColor',
      focusable: 'focusable',
      fontfamily: 'fontFamily',
      'font-family': 'fontFamily',
      fontsize: 'fontSize',
      'font-size': 'fontSize',
      fontsizeadjust: 'fontSizeAdjust',
      'font-size-adjust': 'fontSizeAdjust',
      fontstretch: 'fontStretch',
      'font-stretch': 'fontStretch',
      fontstyle: 'fontStyle',
      'font-style': 'fontStyle',
      fontvariant: 'fontVariant',
      'font-variant': 'fontVariant',
      fontweight: 'fontWeight',
      'font-weight': 'fontWeight',
      format: 'format',
      from: 'from',
      fx: 'fx',
      fy: 'fy',
      g1: 'g1',
      g2: 'g2',
      glyphname: 'glyphName',
      'glyph-name': 'glyphName',
      glyphorientationhorizontal: 'glyphOrientationHorizontal',
      'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
      glyphorientationvertical: 'glyphOrientationVertical',
      'glyph-orientation-vertical': 'glyphOrientationVertical',
      glyphref: 'glyphRef',
      gradienttransform: 'gradientTransform',
      gradientunits: 'gradientUnits',
      hanging: 'hanging',
      horizadvx: 'horizAdvX',
      'horiz-adv-x': 'horizAdvX',
      horizoriginx: 'horizOriginX',
      'horiz-origin-x': 'horizOriginX',
      ideographic: 'ideographic',
      imagerendering: 'imageRendering',
      'image-rendering': 'imageRendering',
      in2: 'in2',
      in: 'in',
      inlist: 'inlist',
      intercept: 'intercept',
      k1: 'k1',
      k2: 'k2',
      k3: 'k3',
      k4: 'k4',
      k: 'k',
      kernelmatrix: 'kernelMatrix',
      kernelunitlength: 'kernelUnitLength',
      kerning: 'kerning',
      keypoints: 'keyPoints',
      keysplines: 'keySplines',
      keytimes: 'keyTimes',
      lengthadjust: 'lengthAdjust',
      letterspacing: 'letterSpacing',
      'letter-spacing': 'letterSpacing',
      lightingcolor: 'lightingColor',
      'lighting-color': 'lightingColor',
      limitingconeangle: 'limitingConeAngle',
      local: 'local',
      markerend: 'markerEnd',
      'marker-end': 'markerEnd',
      markerheight: 'markerHeight',
      markermid: 'markerMid',
      'marker-mid': 'markerMid',
      markerstart: 'markerStart',
      'marker-start': 'markerStart',
      markerunits: 'markerUnits',
      markerwidth: 'markerWidth',
      mask: 'mask',
      maskcontentunits: 'maskContentUnits',
      maskunits: 'maskUnits',
      mathematical: 'mathematical',
      mode: 'mode',
      numoctaves: 'numOctaves',
      offset: 'offset',
      opacity: 'opacity',
      operator: 'operator',
      order: 'order',
      orient: 'orient',
      orientation: 'orientation',
      origin: 'origin',
      overflow: 'overflow',
      overlineposition: 'overlinePosition',
      'overline-position': 'overlinePosition',
      overlinethickness: 'overlineThickness',
      'overline-thickness': 'overlineThickness',
      paintorder: 'paintOrder',
      'paint-order': 'paintOrder',
      panose1: 'panose1',
      'panose-1': 'panose1',
      pathlength: 'pathLength',
      patterncontentunits: 'patternContentUnits',
      patterntransform: 'patternTransform',
      patternunits: 'patternUnits',
      pointerevents: 'pointerEvents',
      'pointer-events': 'pointerEvents',
      points: 'points',
      pointsatx: 'pointsAtX',
      pointsaty: 'pointsAtY',
      pointsatz: 'pointsAtZ',
      prefix: 'prefix',
      preservealpha: 'preserveAlpha',
      preserveaspectratio: 'preserveAspectRatio',
      primitiveunits: 'primitiveUnits',
      property: 'property',
      r: 'r',
      radius: 'radius',
      refx: 'refX',
      refy: 'refY',
      renderingintent: 'renderingIntent',
      'rendering-intent': 'renderingIntent',
      repeatcount: 'repeatCount',
      repeatdur: 'repeatDur',
      requiredextensions: 'requiredExtensions',
      requiredfeatures: 'requiredFeatures',
      resource: 'resource',
      restart: 'restart',
      result: 'result',
      results: 'results',
      rotate: 'rotate',
      rx: 'rx',
      ry: 'ry',
      scale: 'scale',
      security: 'security',
      seed: 'seed',
      shaperendering: 'shapeRendering',
      'shape-rendering': 'shapeRendering',
      slope: 'slope',
      spacing: 'spacing',
      specularconstant: 'specularConstant',
      specularexponent: 'specularExponent',
      speed: 'speed',
      spreadmethod: 'spreadMethod',
      startoffset: 'startOffset',
      stddeviation: 'stdDeviation',
      stemh: 'stemh',
      stemv: 'stemv',
      stitchtiles: 'stitchTiles',
      stopcolor: 'stopColor',
      'stop-color': 'stopColor',
      stopopacity: 'stopOpacity',
      'stop-opacity': 'stopOpacity',
      strikethroughposition: 'strikethroughPosition',
      'strikethrough-position': 'strikethroughPosition',
      strikethroughthickness: 'strikethroughThickness',
      'strikethrough-thickness': 'strikethroughThickness',
      string: 'string',
      stroke: 'stroke',
      strokedasharray: 'strokeDasharray',
      'stroke-dasharray': 'strokeDasharray',
      strokedashoffset: 'strokeDashoffset',
      'stroke-dashoffset': 'strokeDashoffset',
      strokelinecap: 'strokeLinecap',
      'stroke-linecap': 'strokeLinecap',
      strokelinejoin: 'strokeLinejoin',
      'stroke-linejoin': 'strokeLinejoin',
      strokemiterlimit: 'strokeMiterlimit',
      'stroke-miterlimit': 'strokeMiterlimit',
      strokewidth: 'strokeWidth',
      'stroke-width': 'strokeWidth',
      strokeopacity: 'strokeOpacity',
      'stroke-opacity': 'strokeOpacity',
      suppresscontenteditablewarning: 'suppressContentEditableWarning',
      suppresshydrationwarning: 'suppressHydrationWarning',
      surfacescale: 'surfaceScale',
      systemlanguage: 'systemLanguage',
      tablevalues: 'tableValues',
      targetx: 'targetX',
      targety: 'targetY',
      textanchor: 'textAnchor',
      'text-anchor': 'textAnchor',
      textdecoration: 'textDecoration',
      'text-decoration': 'textDecoration',
      textlength: 'textLength',
      textrendering: 'textRendering',
      'text-rendering': 'textRendering',
      to: 'to',
      transform: 'transform',
      typeof: 'typeof',
      u1: 'u1',
      u2: 'u2',
      underlineposition: 'underlinePosition',
      'underline-position': 'underlinePosition',
      underlinethickness: 'underlineThickness',
      'underline-thickness': 'underlineThickness',
      unicode: 'unicode',
      unicodebidi: 'unicodeBidi',
      'unicode-bidi': 'unicodeBidi',
      unicoderange: 'unicodeRange',
      'unicode-range': 'unicodeRange',
      unitsperem: 'unitsPerEm',
      'units-per-em': 'unitsPerEm',
      unselectable: 'unselectable',
      valphabetic: 'vAlphabetic',
      'v-alphabetic': 'vAlphabetic',
      values: 'values',
      vectoreffect: 'vectorEffect',
      'vector-effect': 'vectorEffect',
      version: 'version',
      vertadvy: 'vertAdvY',
      'vert-adv-y': 'vertAdvY',
      vertoriginx: 'vertOriginX',
      'vert-origin-x': 'vertOriginX',
      vertoriginy: 'vertOriginY',
      'vert-origin-y': 'vertOriginY',
      vhanging: 'vHanging',
      'v-hanging': 'vHanging',
      videographic: 'vIdeographic',
      'v-ideographic': 'vIdeographic',
      viewbox: 'viewBox',
      viewtarget: 'viewTarget',
      visibility: 'visibility',
      vmathematical: 'vMathematical',
      'v-mathematical': 'vMathematical',
      vocab: 'vocab',
      widths: 'widths',
      wordspacing: 'wordSpacing',
      'word-spacing': 'wordSpacing',
      writingmode: 'writingMode',
      'writing-mode': 'writingMode',
      x1: 'x1',
      x2: 'x2',
      x: 'x',
      xchannelselector: 'xChannelSelector',
      xheight: 'xHeight',
      'x-height': 'xHeight',
      xlinkactuate: 'xlinkActuate',
      'xlink:actuate': 'xlinkActuate',
      xlinkarcrole: 'xlinkArcrole',
      'xlink:arcrole': 'xlinkArcrole',
      xlinkhref: 'xlinkHref',
      'xlink:href': 'xlinkHref',
      xlinkrole: 'xlinkRole',
      'xlink:role': 'xlinkRole',
      xlinkshow: 'xlinkShow',
      'xlink:show': 'xlinkShow',
      xlinktitle: 'xlinkTitle',
      'xlink:title': 'xlinkTitle',
      xlinktype: 'xlinkType',
      'xlink:type': 'xlinkType',
      xmlbase: 'xmlBase',
      'xml:base': 'xmlBase',
      xmllang: 'xmlLang',
      'xml:lang': 'xmlLang',
      xmlns: 'xmlns',
      'xml:space': 'xmlSpace',
      xmlnsxlink: 'xmlnsXlink',
      'xmlns:xlink': 'xmlnsXlink',
      xmlspace: 'xmlSpace',
      y1: 'y1',
      y2: 'y2',
      y: 'y',
      ychannelselector: 'yChannelSelector',
      z: 'z',
      zoomandpan: 'zoomAndPan'
    };
    var ariaProperties = {
      'aria-current': 0,
      // state
      'aria-details': 0,
      'aria-disabled': 0,
      // state
      'aria-hidden': 0,
      // state
      'aria-invalid': 0,
      // state
      'aria-keyshortcuts': 0,
      'aria-label': 0,
      'aria-roledescription': 0,
      // Widget Attributes
      'aria-autocomplete': 0,
      'aria-checked': 0,
      'aria-expanded': 0,
      'aria-haspopup': 0,
      'aria-level': 0,
      'aria-modal': 0,
      'aria-multiline': 0,
      'aria-multiselectable': 0,
      'aria-orientation': 0,
      'aria-placeholder': 0,
      'aria-pressed': 0,
      'aria-readonly': 0,
      'aria-required': 0,
      'aria-selected': 0,
      'aria-sort': 0,
      'aria-valuemax': 0,
      'aria-valuemin': 0,
      'aria-valuenow': 0,
      'aria-valuetext': 0,
      // Live Region Attributes
      'aria-atomic': 0,
      'aria-busy': 0,
      'aria-live': 0,
      'aria-relevant': 0,
      // Drag-and-Drop Attributes
      'aria-dropeffect': 0,
      'aria-grabbed': 0,
      // Relationship Attributes
      'aria-activedescendant': 0,
      'aria-colcount': 0,
      'aria-colindex': 0,
      'aria-colspan': 0,
      'aria-controls': 0,
      'aria-describedby': 0,
      'aria-errormessage': 0,
      'aria-flowto': 0,
      'aria-labelledby': 0,
      'aria-owns': 0,
      'aria-posinset': 0,
      'aria-rowcount': 0,
      'aria-rowindex': 0,
      'aria-rowspan': 0,
      'aria-setsize': 0
    };
    var warnedProperties = {};
    var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
    var rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');
    var hasOwnProperty$1 = Object.prototype.hasOwnProperty;

    function validateProperty(tagName, name) {
      {
        if (hasOwnProperty$1.call(warnedProperties, name) && warnedProperties[name]) {
          return true;
        }

        if (rARIACamel.test(name)) {
          var ariaName = 'aria-' + name.slice(4).toLowerCase();
          var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null; // If this is an aria-* attribute, but is not listed in the known DOM
          // DOM properties, then it is an invalid aria-* attribute.

          if (correctName == null) {
            error('Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.', name);
            warnedProperties[name] = true;
            return true;
          } // aria-* attributes should be lowercase; suggest the lowercase version.


          if (name !== correctName) {
            error('Invalid ARIA attribute `%s`. Did you mean `%s`?', name, correctName);
            warnedProperties[name] = true;
            return true;
          }
        }

        if (rARIA.test(name)) {
          var lowerCasedName = name.toLowerCase();
          var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null; // If this is an aria-* attribute, but is not listed in the known DOM
          // DOM properties, then it is an invalid aria-* attribute.

          if (standardName == null) {
            warnedProperties[name] = true;
            return false;
          } // aria-* attributes should be lowercase; suggest the lowercase version.


          if (name !== standardName) {
            error('Unknown ARIA attribute `%s`. Did you mean `%s`?', name, standardName);
            warnedProperties[name] = true;
            return true;
          }
        }
      }
      return true;
    }

    function warnInvalidARIAProps(type, props) {
      {
        var invalidProps = [];

        for (var key in props) {
          var isValid = validateProperty(type, key);

          if (!isValid) {
            invalidProps.push(key);
          }
        }

        var unknownPropString = invalidProps.map(function (prop) {
          return '`' + prop + '`';
        }).join(', ');

        if (invalidProps.length === 1) {
          error('Invalid aria prop %s on <%s> tag. ' + 'For details, see https://reactjs.org/link/invalid-aria-props', unknownPropString, type);
        } else if (invalidProps.length > 1) {
          error('Invalid aria props %s on <%s> tag. ' + 'For details, see https://reactjs.org/link/invalid-aria-props', unknownPropString, type);
        }
      }
    }

    function validateProperties(type, props) {
      if (isCustomComponent(type, props)) {
        return;
      }

      warnInvalidARIAProps(type, props);
    }

    var didWarnValueNull = false;

    function validateProperties$1(type, props) {
      {
        if (type !== 'input' && type !== 'textarea' && type !== 'select') {
          return;
        }

        if (props != null && props.value === null && !didWarnValueNull) {
          didWarnValueNull = true;

          if (type === 'select' && props.multiple) {
            error('`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.', type);
          } else {
            error('`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.', type);
          }
        }
      }
    }

    var validateProperty$1 = function () {};

    {
      var warnedProperties$1 = {};
      var _hasOwnProperty = Object.prototype.hasOwnProperty;
      var EVENT_NAME_REGEX = /^on./;
      var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
      var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
      var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

      validateProperty$1 = function (tagName, name, value, eventRegistry) {
        if (_hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
          return true;
        }

        var lowerCasedName = name.toLowerCase();

        if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {
          error('React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');
          warnedProperties$1[name] = true;
          return true;
        } // We can't rely on the event system being injected on the server.


        if (eventRegistry != null) {
          var registrationNameDependencies = eventRegistry.registrationNameDependencies,
              possibleRegistrationNames = eventRegistry.possibleRegistrationNames;

          if (registrationNameDependencies.hasOwnProperty(name)) {
            return true;
          }

          var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;

          if (registrationName != null) {
            error('Invalid event handler property `%s`. Did you mean `%s`?', name, registrationName);
            warnedProperties$1[name] = true;
            return true;
          }

          if (EVENT_NAME_REGEX.test(name)) {
            error('Unknown event handler property `%s`. It will be ignored.', name);
            warnedProperties$1[name] = true;
            return true;
          }
        } else if (EVENT_NAME_REGEX.test(name)) {
          // If no event plugins have been injected, we are in a server environment.
          // So we can't tell if the event name is correct for sure, but we can filter
          // out known bad ones like `onclick`. We can't suggest a specific replacement though.
          if (INVALID_EVENT_NAME_REGEX.test(name)) {
            error('Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.', name);
          }

          warnedProperties$1[name] = true;
          return true;
        } // Let the ARIA attribute hook validate ARIA attributes


        if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
          return true;
        }

        if (lowerCasedName === 'innerhtml') {
          error('Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');
          warnedProperties$1[name] = true;
          return true;
        }

        if (lowerCasedName === 'aria') {
          error('The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');
          warnedProperties$1[name] = true;
          return true;
        }

        if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {
          error('Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.', typeof value);
          warnedProperties$1[name] = true;
          return true;
        }

        if (typeof value === 'number' && isNaN(value)) {
          error('Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.', name);
          warnedProperties$1[name] = true;
          return true;
        }

        var propertyInfo = getPropertyInfo(name);
        var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED; // Known attributes should match the casing specified in the property config.

        if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
          var standardName = possibleStandardNames[lowerCasedName];

          if (standardName !== name) {
            error('Invalid DOM property `%s`. Did you mean `%s`?', name, standardName);
            warnedProperties$1[name] = true;
            return true;
          }
        } else if (!isReserved && name !== lowerCasedName) {
          // Unknown attributes should have lowercase casing since that's how they
          // will be cased anyway with server rendering.
          error('React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.', name, lowerCasedName);
          warnedProperties$1[name] = true;
          return true;
        }

        if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
          if (value) {
            error('Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.', value, name, name, value, name);
          } else {
            error('Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
          }

          warnedProperties$1[name] = true;
          return true;
        } // Now that we've validated casing, do not validate
        // data types for reserved props


        if (isReserved) {
          return true;
        } // Warn when a known attribute is a bad type


        if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
          warnedProperties$1[name] = true;
          return false;
        } // Warn when passing the strings 'false' or 'true' into a boolean prop


        if ((value === 'false' || value === 'true') && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
          error('Received the string `%s` for the boolean attribute `%s`. ' + '%s ' + 'Did you mean %s={%s}?', value, name, value === 'false' ? 'The browser will interpret it as a truthy value.' : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
          warnedProperties$1[name] = true;
          return true;
        }

        return true;
      };
    }

    var warnUnknownProperties = function (type, props, eventRegistry) {
      {
        var unknownProps = [];

        for (var key in props) {
          var isValid = validateProperty$1(type, key, props[key], eventRegistry);

          if (!isValid) {
            unknownProps.push(key);
          }
        }

        var unknownPropString = unknownProps.map(function (prop) {
          return '`' + prop + '`';
        }).join(', ');

        if (unknownProps.length === 1) {
          error('Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://reactjs.org/link/attribute-behavior ', unknownPropString, type);
        } else if (unknownProps.length > 1) {
          error('Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://reactjs.org/link/attribute-behavior ', unknownPropString, type);
        }
      }
    };

    function validateProperties$2(type, props, eventRegistry) {
      if (isCustomComponent(type, props)) {
        return;
      }

      warnUnknownProperties(type, props, eventRegistry);
    }

    var IS_EVENT_HANDLE_NON_MANAGED_NODE = 1;
    var IS_NON_DELEGATED = 1 << 1;
    var IS_CAPTURE_PHASE = 1 << 2;
    var IS_REPLAYED = 1 << 4; // set to LEGACY_FB_SUPPORT. LEGACY_FB_SUPPORT only gets set when
    // we call willDeferLaterForLegacyFBSupport, thus not bailing out
    // will result in endless cycles like an infinite loop.
    // We also don't want to defer during event replaying.

    var SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS = IS_EVENT_HANDLE_NON_MANAGED_NODE | IS_NON_DELEGATED | IS_CAPTURE_PHASE;
    /**
     * Gets the target node from a native browser event by accounting for
     * inconsistencies in browser DOM APIs.
     *
     * @param {object} nativeEvent Native browser event.
     * @return {DOMEventTarget} Target node.
     */

    function getEventTarget(nativeEvent) {
      // Fallback to nativeEvent.srcElement for IE9
      // https://github.com/facebook/react/issues/12506
      var target = nativeEvent.target || nativeEvent.srcElement || window; // Normalize SVG <use> element events #4963

      if (target.correspondingUseElement) {
        target = target.correspondingUseElement;
      } // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
      // @see http://www.quirksmode.org/js/events_properties.html


      return target.nodeType === TEXT_NODE ? target.parentNode : target;
    }

    var restoreImpl = null;
    var restoreTarget = null;
    var restoreQueue = null;

    function restoreStateOfTarget(target) {
      // We perform this translation at the end of the event loop so that we
      // always receive the correct fiber here
      var internalInstance = getInstanceFromNode(target);

      if (!internalInstance) {
        // Unmounted
        return;
      }

      if (!(typeof restoreImpl === 'function')) {
        {
          throw Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
        }
      }

      var stateNode = internalInstance.stateNode; // Guard against Fiber being unmounted.

      if (stateNode) {
        var _props = getFiberCurrentPropsFromNode(stateNode);

        restoreImpl(internalInstance.stateNode, internalInstance.type, _props);
      }
    }

    function setRestoreImplementation(impl) {
      restoreImpl = impl;
    }

    function enqueueStateRestore(target) {
      if (restoreTarget) {
        if (restoreQueue) {
          restoreQueue.push(target);
        } else {
          restoreQueue = [target];
        }
      } else {
        restoreTarget = target;
      }
    }

    function needsStateRestore() {
      return restoreTarget !== null || restoreQueue !== null;
    }

    function restoreStateIfNeeded() {
      if (!restoreTarget) {
        return;
      }

      var target = restoreTarget;
      var queuedTargets = restoreQueue;
      restoreTarget = null;
      restoreQueue = null;
      restoreStateOfTarget(target);

      if (queuedTargets) {
        for (var i = 0; i < queuedTargets.length; i++) {
          restoreStateOfTarget(queuedTargets[i]);
        }
      }
    } // the renderer. Such as when we're dispatching events or if third party
    // libraries need to call batchedUpdates. Eventually, this API will go away when
    // everything is batched by default. We'll then have a similar API to opt-out of
    // scheduled work and instead do synchronous work.
    // Defaults


    var batchedUpdatesImpl = function (fn, bookkeeping) {
      return fn(bookkeeping);
    };

    var discreteUpdatesImpl = function (fn, a, b, c, d) {
      return fn(a, b, c, d);
    };

    var flushDiscreteUpdatesImpl = function () {};

    var batchedEventUpdatesImpl = batchedUpdatesImpl;
    var isInsideEventHandler = false;
    var isBatchingEventUpdates = false;

    function finishEventHandler() {
      // Here we wait until all updates have propagated, which is important
      // when using controlled components within layers:
      // https://github.com/facebook/react/issues/1698
      // Then we restore state of any controlled component.
      var controlledComponentsHavePendingUpdates = needsStateRestore();

      if (controlledComponentsHavePendingUpdates) {
        // If a controlled event was fired, we may need to restore the state of
        // the DOM node back to the controlled value. This is necessary when React
        // bails out of the update without touching the DOM.
        flushDiscreteUpdatesImpl();
        restoreStateIfNeeded();
      }
    }

    function batchedUpdates(fn, bookkeeping) {
      if (isInsideEventHandler) {
        // If we are currently inside another batch, we need to wait until it
        // fully completes before restoring state.
        return fn(bookkeeping);
      }

      isInsideEventHandler = true;

      try {
        return batchedUpdatesImpl(fn, bookkeeping);
      } finally {
        isInsideEventHandler = false;
        finishEventHandler();
      }
    }

    function batchedEventUpdates(fn, a, b) {
      if (isBatchingEventUpdates) {
        // If we are currently inside another batch, we need to wait until it
        // fully completes before restoring state.
        return fn(a, b);
      }

      isBatchingEventUpdates = true;

      try {
        return batchedEventUpdatesImpl(fn, a, b);
      } finally {
        isBatchingEventUpdates = false;
        finishEventHandler();
      }
    }

    function discreteUpdates(fn, a, b, c, d) {
      var prevIsInsideEventHandler = isInsideEventHandler;
      isInsideEventHandler = true;

      try {
        return discreteUpdatesImpl(fn, a, b, c, d);
      } finally {
        isInsideEventHandler = prevIsInsideEventHandler;

        if (!isInsideEventHandler) {
          finishEventHandler();
        }
      }
    }

    function flushDiscreteUpdatesIfNeeded(timeStamp) {
      {
        if (!isInsideEventHandler) {
          flushDiscreteUpdatesImpl();
        }
      }
    }

    function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl, _flushDiscreteUpdatesImpl, _batchedEventUpdatesImpl) {
      batchedUpdatesImpl = _batchedUpdatesImpl;
      discreteUpdatesImpl = _discreteUpdatesImpl;
      flushDiscreteUpdatesImpl = _flushDiscreteUpdatesImpl;
      batchedEventUpdatesImpl = _batchedEventUpdatesImpl;
    }

    function isInteractive(tag) {
      return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
    }

    function shouldPreventMouseEvent(name, type, props) {
      switch (name) {
        case 'onClick':
        case 'onClickCapture':
        case 'onDoubleClick':
        case 'onDoubleClickCapture':
        case 'onMouseDown':
        case 'onMouseDownCapture':
        case 'onMouseMove':
        case 'onMouseMoveCapture':
        case 'onMouseUp':
        case 'onMouseUpCapture':
        case 'onMouseEnter':
          return !!(props.disabled && isInteractive(type));

        default:
          return false;
      }
    }
    /**
     * @param {object} inst The instance, which is the source of events.
     * @param {string} registrationName Name of listener (e.g. `onClick`).
     * @return {?function} The stored callback.
     */


    function getListener(inst, registrationName) {
      var stateNode = inst.stateNode;

      if (stateNode === null) {
        // Work in progress (ex: onload events in incremental mode).
        return null;
      }

      var props = getFiberCurrentPropsFromNode(stateNode);

      if (props === null) {
        // Work in progress.
        return null;
      }

      var listener = props[registrationName];

      if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
        return null;
      }

      if (!(!listener || typeof listener === 'function')) {
        {
          throw Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type.");
        }
      }

      return listener;
    }

    var passiveBrowserEventsSupported = false; // Check if browser support events with passive listeners
    // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support

    if (canUseDOM) {
      try {
        var options = {}; // $FlowFixMe: Ignore Flow complaining about needing a value

        Object.defineProperty(options, 'passive', {
          get: function () {
            passiveBrowserEventsSupported = true;
          }
        });
        window.addEventListener('test', options, options);
        window.removeEventListener('test', options, options);
      } catch (e) {
        passiveBrowserEventsSupported = false;
      }
    }

    function invokeGuardedCallbackProd(name, func, context, a, b, c, d, e, f) {
      var funcArgs = Array.prototype.slice.call(arguments, 3);

      try {
        func.apply(context, funcArgs);
      } catch (error) {
        this.onError(error);
      }
    }

    var invokeGuardedCallbackImpl = invokeGuardedCallbackProd;
    {
      // In DEV mode, we swap out invokeGuardedCallback for a special version
      // that plays more nicely with the browser's DevTools. The idea is to preserve
      // "Pause on exceptions" behavior. Because React wraps all user-provided
      // functions in invokeGuardedCallback, and the production version of
      // invokeGuardedCallback uses a try-catch, all user exceptions are treated
      // like caught exceptions, and the DevTools won't pause unless the developer
      // takes the extra step of enabling pause on caught exceptions. This is
      // unintuitive, though, because even though React has caught the error, from
      // the developer's perspective, the error is uncaught.
      //
      // To preserve the expected "Pause on exceptions" behavior, we don't use a
      // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
      // DOM node, and call the user-provided callback from inside an event handler
      // for that fake event. If the callback throws, the error is "captured" using
      // a global event handler. But because the error happens in a different
      // event loop context, it does not interrupt the normal program flow.
      // Effectively, this gives us try-catch behavior without actually using
      // try-catch. Neat!
      // Check that the browser supports the APIs we need to implement our special
      // DEV version of invokeGuardedCallback
      if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
        var fakeNode = document.createElement('react');

        invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(name, func, context, a, b, c, d, e, f) {
          // If document doesn't exist we know for sure we will crash in this method
          // when we call document.createEvent(). However this can cause confusing
          // errors: https://github.com/facebookincubator/create-react-app/issues/3482
          // So we preemptively throw with a better message instead.
          if (!(typeof document !== 'undefined')) {
            {
              throw Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
            }
          }

          var evt = document.createEvent('Event');
          var didCall = false; // Keeps track of whether the user-provided callback threw an error. We
          // set this to true at the beginning, then set it to false right after
          // calling the function. If the function errors, `didError` will never be
          // set to false. This strategy works even if the browser is flaky and
          // fails to call our global error handler, because it doesn't rely on
          // the error event at all.

          var didError = true; // Keeps track of the value of window.event so that we can reset it
          // during the callback to let user code access window.event in the
          // browsers that support it.

          var windowEvent = window.event; // Keeps track of the descriptor of window.event to restore it after event
          // dispatching: https://github.com/facebook/react/issues/13688

          var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, 'event');

          function restoreAfterDispatch() {
            // We immediately remove the callback from event listeners so that
            // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
            // nested call would trigger the fake event handlers of any call higher
            // in the stack.
            fakeNode.removeEventListener(evtType, callCallback, false); // We check for window.hasOwnProperty('event') to prevent the
            // window.event assignment in both IE <= 10 as they throw an error
            // "Member not found" in strict mode, and in Firefox which does not
            // support window.event.

            if (typeof window.event !== 'undefined' && window.hasOwnProperty('event')) {
              window.event = windowEvent;
            }
          } // Create an event handler for our fake event. We will synchronously
          // dispatch our fake event using `dispatchEvent`. Inside the handler, we
          // call the user-provided callback.


          var funcArgs = Array.prototype.slice.call(arguments, 3);

          function callCallback() {
            didCall = true;
            restoreAfterDispatch();
            func.apply(context, funcArgs);
            didError = false;
          } // Create a global error event handler. We use this to capture the value
          // that was thrown. It's possible that this error handler will fire more
          // than once; for example, if non-React code also calls `dispatchEvent`
          // and a handler for that event throws. We should be resilient to most of
          // those cases. Even if our error event handler fires more than once, the
          // last error event is always used. If the callback actually does error,
          // we know that the last error event is the correct one, because it's not
          // possible for anything else to have happened in between our callback
          // erroring and the code that follows the `dispatchEvent` call below. If
          // the callback doesn't error, but the error event was fired, we know to
          // ignore it because `didError` will be false, as described above.


          var error; // Use this to track whether the error event is ever called.

          var didSetError = false;
          var isCrossOriginError = false;

          function handleWindowError(event) {
            error = event.error;
            didSetError = true;

            if (error === null && event.colno === 0 && event.lineno === 0) {
              isCrossOriginError = true;
            }

            if (event.defaultPrevented) {
              // Some other error handler has prevented default.
              // Browsers silence the error report if this happens.
              // We'll remember this to later decide whether to log it or not.
              if (error != null && typeof error === 'object') {
                try {
                  error._suppressLogging = true;
                } catch (inner) {// Ignore.
                }
              }
            }
          } // Create a fake event type.


          var evtType = "react-" + (name ? name : 'invokeguardedcallback'); // Attach our event handlers

          window.addEventListener('error', handleWindowError);
          fakeNode.addEventListener(evtType, callCallback, false); // Synchronously dispatch our fake event. If the user-provided function
          // errors, it will trigger our global error handler.

          evt.initEvent(evtType, false, false);
          fakeNode.dispatchEvent(evt);

          if (windowEventDescriptor) {
            Object.defineProperty(window, 'event', windowEventDescriptor);
          }

          if (didCall && didError) {
            if (!didSetError) {
              // The callback errored, but the error event never fired.
              error = new Error('An error was thrown inside one of your components, but React ' + "doesn't know what it was. This is likely due to browser " + 'flakiness. React does its best to preserve the "Pause on ' + 'exceptions" behavior of the DevTools, which requires some ' + "DEV-mode only tricks. It's possible that these don't work in " + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');
            } else if (isCrossOriginError) {
              error = new Error("A cross-origin error was thrown. React doesn't have access to " + 'the actual error object in development. ' + 'See https://reactjs.org/link/crossorigin-error for more information.');
            }

            this.onError(error);
          } // Remove our event listeners


          window.removeEventListener('error', handleWindowError);

          if (!didCall) {
            // Something went really wrong, and our event was not dispatched.
            // https://github.com/facebook/react/issues/16734
            // https://github.com/facebook/react/issues/16585
            // Fall back to the production implementation.
            restoreAfterDispatch();
            return invokeGuardedCallbackProd.apply(this, arguments);
          }
        };
      }
    }
    var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;
    var hasError = false;
    var caughtError = null; // Used by event system to capture/rethrow the first error.

    var hasRethrowError = false;
    var rethrowError = null;
    var reporter = {
      onError: function (error) {
        hasError = true;
        caughtError = error;
      }
    };
    /**
     * Call a function while guarding against errors that happens within it.
     * Returns an error if it throws, otherwise null.
     *
     * In production, this is implemented using a try-catch. The reason we don't
     * use a try-catch directly is so that we can swap out a different
     * implementation in DEV mode.
     *
     * @param {String} name of the guard to use for logging or debugging
     * @param {Function} func The function to invoke
     * @param {*} context The context to use when calling the function
     * @param {...*} args Arguments for function
     */

    function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
      hasError = false;
      caughtError = null;
      invokeGuardedCallbackImpl$1.apply(reporter, arguments);
    }
    /**
     * Same as invokeGuardedCallback, but instead of returning an error, it stores
     * it in a global so it can be rethrown by `rethrowCaughtError` later.
     * TODO: See if caughtError and rethrowError can be unified.
     *
     * @param {String} name of the guard to use for logging or debugging
     * @param {Function} func The function to invoke
     * @param {*} context The context to use when calling the function
     * @param {...*} args Arguments for function
     */


    function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
      invokeGuardedCallback.apply(this, arguments);

      if (hasError) {
        var error = clearCaughtError();

        if (!hasRethrowError) {
          hasRethrowError = true;
          rethrowError = error;
        }
      }
    }
    /**
     * During execution of guarded functions we will capture the first error which
     * we will rethrow to be handled by the top level error handler.
     */


    function rethrowCaughtError() {
      if (hasRethrowError) {
        var error = rethrowError;
        hasRethrowError = false;
        rethrowError = null;
        throw error;
      }
    }

    function hasCaughtError() {
      return hasError;
    }

    function clearCaughtError() {
      if (hasError) {
        var error = caughtError;
        hasError = false;
        caughtError = null;
        return error;
      } else {
        {
          {
            throw Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
          }
        }
      }
    }
    /**
     * `ReactInstanceMap` maintains a mapping from a public facing stateful
     * instance (key) and the internal representation (value). This allows public
     * methods to accept the user facing instance as an argument and map them back
     * to internal methods.
     *
     * Note that this module is currently shared and assumed to be stateless.
     * If this becomes an actual Map, that will break.
     */


    function get(key) {
      return key._reactInternals;
    }

    function has(key) {
      return key._reactInternals !== undefined;
    }

    function set(key, value) {
      key._reactInternals = value;
    } // Don't change these two values. They're used by React Dev Tools.


    var NoFlags =
    /*                      */
    0;
    var PerformedWork =
    /*                */
    1; // You can change the rest (and add more).

    var Placement =
    /*                    */
    2;
    var Update =
    /*                       */
    4;
    var PlacementAndUpdate =
    /*           */
    6;
    var Deletion =
    /*                     */
    8;
    var ContentReset =
    /*                 */
    16;
    var Callback =
    /*                     */
    32;
    var DidCapture =
    /*                   */
    64;
    var Ref =
    /*                          */
    128;
    var Snapshot =
    /*                     */
    256;
    var Passive =
    /*                      */
    512; // TODO (effects) Remove this bit once the new reconciler is synced to the old.

    var PassiveUnmountPendingDev =
    /*     */
    8192;
    var Hydrating =
    /*                    */
    1024;
    var HydratingAndUpdate =
    /*           */
    1028; // Passive & Update & Callback & Ref & Snapshot

    var LifecycleEffectMask =
    /*          */
    932; // Union of all host effects

    var HostEffectMask =
    /*               */
    2047; // These are not really side effects, but we still reuse this field.

    var Incomplete =
    /*                   */
    2048;
    var ShouldCapture =
    /*                */
    4096;
    var ForceUpdateForLegacySuspense =
    /* */
    16384; // Static tags describe aspects of a fiber that are not specific to a render,

    var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;

    function getNearestMountedFiber(fiber) {
      var node = fiber;
      var nearestMounted = fiber;

      if (!fiber.alternate) {
        // If there is no alternate, this might be a new tree that isn't inserted
        // yet. If it is, then it will have a pending insertion effect on it.
        var nextNode = node;

        do {
          node = nextNode;

          if ((node.flags & (Placement | Hydrating)) !== NoFlags) {
            // This is an insertion or in-progress hydration. The nearest possible
            // mounted fiber is the parent but we need to continue to figure out
            // if that one is still mounted.
            nearestMounted = node.return;
          }

          nextNode = node.return;
        } while (nextNode);
      } else {
        while (node.return) {
          node = node.return;
        }
      }

      if (node.tag === HostRoot) {
        // TODO: Check if this was a nested HostRoot when used with
        // renderContainerIntoSubtree.
        return nearestMounted;
      } // If we didn't hit the root, that means that we're in an disconnected tree
      // that has been unmounted.


      return null;
    }

    function getSuspenseInstanceFromFiber(fiber) {
      if (fiber.tag === SuspenseComponent) {
        var suspenseState = fiber.memoizedState;

        if (suspenseState === null) {
          var current = fiber.alternate;

          if (current !== null) {
            suspenseState = current.memoizedState;
          }
        }

        if (suspenseState !== null) {
          return suspenseState.dehydrated;
        }
      }

      return null;
    }

    function getContainerFromFiber(fiber) {
      return fiber.tag === HostRoot ? fiber.stateNode.containerInfo : null;
    }

    function isFiberMounted(fiber) {
      return getNearestMountedFiber(fiber) === fiber;
    }

    function isMounted(component) {
      {
        var owner = ReactCurrentOwner.current;

        if (owner !== null && owner.tag === ClassComponent) {
          var ownerFiber = owner;
          var instance = ownerFiber.stateNode;

          if (!instance._warnedAboutRefsInRender) {
            error('%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(ownerFiber.type) || 'A component');
          }

          instance._warnedAboutRefsInRender = true;
        }
      }
      var fiber = get(component);

      if (!fiber) {
        return false;
      }

      return getNearestMountedFiber(fiber) === fiber;
    }

    function assertIsMounted(fiber) {
      if (!(getNearestMountedFiber(fiber) === fiber)) {
        {
          throw Error("Unable to find node on an unmounted component.");
        }
      }
    }

    function findCurrentFiberUsingSlowPath(fiber) {
      var alternate = fiber.alternate;

      if (!alternate) {
        // If there is no alternate, then we only need to check if it is mounted.
        var nearestMounted = getNearestMountedFiber(fiber);

        if (!(nearestMounted !== null)) {
          {
            throw Error("Unable to find node on an unmounted component.");
          }
        }

        if (nearestMounted !== fiber) {
          return null;
        }

        return fiber;
      } // If we have two possible branches, we'll walk backwards up to the root
      // to see what path the root points to. On the way we may hit one of the
      // special cases and we'll deal with them.


      var a = fiber;
      var b = alternate;

      while (true) {
        var parentA = a.return;

        if (parentA === null) {
          // We're at the root.
          break;
        }

        var parentB = parentA.alternate;

        if (parentB === null) {
          // There is no alternate. This is an unusual case. Currently, it only
          // happens when a Suspense component is hidden. An extra fragment fiber
          // is inserted in between the Suspense fiber and its children. Skip
          // over this extra fragment fiber and proceed to the next parent.
          var nextParent = parentA.return;

          if (nextParent !== null) {
            a = b = nextParent;
            continue;
          } // If there's no parent, we're at the root.


          break;
        } // If both copies of the parent fiber point to the same child, we can
        // assume that the child is current. This happens when we bailout on low
        // priority: the bailed out fiber's child reuses the current child.


        if (parentA.child === parentB.child) {
          var child = parentA.child;

          while (child) {
            if (child === a) {
              // We've determined that A is the current branch.
              assertIsMounted(parentA);
              return fiber;
            }

            if (child === b) {
              // We've determined that B is the current branch.
              assertIsMounted(parentA);
              return alternate;
            }

            child = child.sibling;
          } // We should never have an alternate for any mounting node. So the only
          // way this could possibly happen is if this was unmounted, if at all.


          {
            {
              throw Error("Unable to find node on an unmounted component.");
            }
          }
        }

        if (a.return !== b.return) {
          // The return pointer of A and the return pointer of B point to different
          // fibers. We assume that return pointers never criss-cross, so A must
          // belong to the child set of A.return, and B must belong to the child
          // set of B.return.
          a = parentA;
          b = parentB;
        } else {
          // The return pointers point to the same fiber. We'll have to use the
          // default, slow path: scan the child sets of each parent alternate to see
          // which child belongs to which set.
          //
          // Search parent A's child set
          var didFindChild = false;
          var _child = parentA.child;

          while (_child) {
            if (_child === a) {
              didFindChild = true;
              a = parentA;
              b = parentB;
              break;
            }

            if (_child === b) {
              didFindChild = true;
              b = parentA;
              a = parentB;
              break;
            }

            _child = _child.sibling;
          }

          if (!didFindChild) {
            // Search parent B's child set
            _child = parentB.child;

            while (_child) {
              if (_child === a) {
                didFindChild = true;
                a = parentB;
                b = parentA;
                break;
              }

              if (_child === b) {
                didFindChild = true;
                b = parentB;
                a = parentA;
                break;
              }

              _child = _child.sibling;
            }

            if (!didFindChild) {
              {
                throw Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
              }
            }
          }
        }

        if (!(a.alternate === b)) {
          {
            throw Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
          }
        }
      } // If the root is not a host container, we're in a disconnected tree. I.e.
      // unmounted.


      if (!(a.tag === HostRoot)) {
        {
          throw Error("Unable to find node on an unmounted component.");
        }
      }

      if (a.stateNode.current === a) {
        // We've determined that A is the current branch.
        return fiber;
      } // Otherwise B has to be current branch.


      return alternate;
    }

    function findCurrentHostFiber(parent) {
      var currentParent = findCurrentFiberUsingSlowPath(parent);

      if (!currentParent) {
        return null;
      } // Next we'll drill down this component to find the first HostComponent/Text.


      var node = currentParent;

      while (true) {
        if (node.tag === HostComponent || node.tag === HostText) {
          return node;
        } else if (node.child) {
          node.child.return = node;
          node = node.child;
          continue;
        }

        if (node === currentParent) {
          return null;
        }

        while (!node.sibling) {
          if (!node.return || node.return === currentParent) {
            return null;
          }

          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      } // Flow needs the return null here, but ESLint complains about it.
      // eslint-disable-next-line no-unreachable


      return null;
    }

    function findCurrentHostFiberWithNoPortals(parent) {
      var currentParent = findCurrentFiberUsingSlowPath(parent);

      if (!currentParent) {
        return null;
      } // Next we'll drill down this component to find the first HostComponent/Text.


      var node = currentParent;

      while (true) {
        if (node.tag === HostComponent || node.tag === HostText || enableFundamentalAPI) {
          return node;
        } else if (node.child && node.tag !== HostPortal) {
          node.child.return = node;
          node = node.child;
          continue;
        }

        if (node === currentParent) {
          return null;
        }

        while (!node.sibling) {
          if (!node.return || node.return === currentParent) {
            return null;
          }

          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      } // Flow needs the return null here, but ESLint complains about it.
      // eslint-disable-next-line no-unreachable


      return null;
    }

    function doesFiberContain(parentFiber, childFiber) {
      var node = childFiber;
      var parentFiberAlternate = parentFiber.alternate;

      while (node !== null) {
        if (node === parentFiber || node === parentFiberAlternate) {
          return true;
        }

        node = node.return;
      }

      return false;
    }

    var attemptUserBlockingHydration;

    function setAttemptUserBlockingHydration(fn) {
      attemptUserBlockingHydration = fn;
    }

    var attemptContinuousHydration;

    function setAttemptContinuousHydration(fn) {
      attemptContinuousHydration = fn;
    }

    var attemptHydrationAtCurrentPriority;

    function setAttemptHydrationAtCurrentPriority(fn) {
      attemptHydrationAtCurrentPriority = fn;
    }

    var attemptHydrationAtPriority;

    function setAttemptHydrationAtPriority(fn) {
      attemptHydrationAtPriority = fn;
    } // TODO: Upgrade this definition once we're on a newer version of Flow that


    var hasScheduledReplayAttempt = false; // The queue of discrete events to be replayed.

    var queuedDiscreteEvents = []; // Indicates if any continuous event targets are non-null for early bailout.
    // if the last target was dehydrated.

    var queuedFocus = null;
    var queuedDrag = null;
    var queuedMouse = null; // For pointer events there can be one latest event per pointerId.

    var queuedPointers = new Map();
    var queuedPointerCaptures = new Map(); // We could consider replaying selectionchange and touchmoves too.

    var queuedExplicitHydrationTargets = [];

    function hasQueuedDiscreteEvents() {
      return queuedDiscreteEvents.length > 0;
    }

    var discreteReplayableEvents = ['mousedown', 'mouseup', 'touchcancel', 'touchend', 'touchstart', 'auxclick', 'dblclick', 'pointercancel', 'pointerdown', 'pointerup', 'dragend', 'dragstart', 'drop', 'compositionend', 'compositionstart', 'keydown', 'keypress', 'keyup', 'input', 'textInput', // Intentionally camelCase
    'copy', 'cut', 'paste', 'click', 'change', 'contextmenu', 'reset', 'submit'];

    function isReplayableDiscreteEvent(eventType) {
      return discreteReplayableEvents.indexOf(eventType) > -1;
    }

    function createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
      return {
        blockedOn: blockedOn,
        domEventName: domEventName,
        eventSystemFlags: eventSystemFlags | IS_REPLAYED,
        nativeEvent: nativeEvent,
        targetContainers: [targetContainer]
      };
    }

    function queueDiscreteEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
      var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
      queuedDiscreteEvents.push(queuedEvent);
    } // Resets the replaying for this type of continuous event to no event.


    function clearIfContinuousEvent(domEventName, nativeEvent) {
      switch (domEventName) {
        case 'focusin':
        case 'focusout':
          queuedFocus = null;
          break;

        case 'dragenter':
        case 'dragleave':
          queuedDrag = null;
          break;

        case 'mouseover':
        case 'mouseout':
          queuedMouse = null;
          break;

        case 'pointerover':
        case 'pointerout':
          {
            var pointerId = nativeEvent.pointerId;
            queuedPointers.delete(pointerId);
            break;
          }

        case 'gotpointercapture':
        case 'lostpointercapture':
          {
            var _pointerId = nativeEvent.pointerId;
            queuedPointerCaptures.delete(_pointerId);
            break;
          }
      }
    }

    function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
      if (existingQueuedEvent === null || existingQueuedEvent.nativeEvent !== nativeEvent) {
        var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);

        if (blockedOn !== null) {
          var _fiber2 = getInstanceFromNode(blockedOn);

          if (_fiber2 !== null) {
            // Attempt to increase the priority of this target.
            attemptContinuousHydration(_fiber2);
          }
        }

        return queuedEvent;
      } // If we have already queued this exact event, then it's because
      // the different event systems have different DOM event listeners.
      // We can accumulate the flags, and the targetContainers, and
      // store a single event to be replayed.


      existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
      var targetContainers = existingQueuedEvent.targetContainers;

      if (targetContainer !== null && targetContainers.indexOf(targetContainer) === -1) {
        targetContainers.push(targetContainer);
      }

      return existingQueuedEvent;
    }

    function queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
      // These set relatedTarget to null because the replayed event will be treated as if we
      // moved from outside the window (no target) onto the target once it hydrates.
      // Instead of mutating we could clone the event.
      switch (domEventName) {
        case 'focusin':
          {
            var focusEvent = nativeEvent;
            queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, domEventName, eventSystemFlags, targetContainer, focusEvent);
            return true;
          }

        case 'dragenter':
          {
            var dragEvent = nativeEvent;
            queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, domEventName, eventSystemFlags, targetContainer, dragEvent);
            return true;
          }

        case 'mouseover':
          {
            var mouseEvent = nativeEvent;
            queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, domEventName, eventSystemFlags, targetContainer, mouseEvent);
            return true;
          }

        case 'pointerover':
          {
            var pointerEvent = nativeEvent;
            var pointerId = pointerEvent.pointerId;
            queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, pointerEvent));
            return true;
          }

        case 'gotpointercapture':
          {
            var _pointerEvent = nativeEvent;
            var _pointerId2 = _pointerEvent.pointerId;
            queuedPointerCaptures.set(_pointerId2, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(_pointerId2) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, _pointerEvent));
            return true;
          }
      }

      return false;
    } // Check if this target is unblocked. Returns true if it's unblocked.


    function attemptExplicitHydrationTarget(queuedTarget) {
      // TODO: This function shares a lot of logic with attemptToDispatchEvent.
      // Try to unify them. It's a bit tricky since it would require two return
      // values.
      var targetInst = getClosestInstanceFromNode(queuedTarget.target);

      if (targetInst !== null) {
        var nearestMounted = getNearestMountedFiber(targetInst);

        if (nearestMounted !== null) {
          var tag = nearestMounted.tag;

          if (tag === SuspenseComponent) {
            var instance = getSuspenseInstanceFromFiber(nearestMounted);

            if (instance !== null) {
              // We're blocked on hydrating this boundary.
              // Increase its priority.
              queuedTarget.blockedOn = instance;
              attemptHydrationAtPriority(queuedTarget.lanePriority, function () {
                Scheduler.unstable_runWithPriority(queuedTarget.priority, function () {
                  attemptHydrationAtCurrentPriority(nearestMounted);
                });
              });
              return;
            }
          } else if (tag === HostRoot) {
            var root = nearestMounted.stateNode;

            if (root.hydrate) {
              queuedTarget.blockedOn = getContainerFromFiber(nearestMounted); // We don't currently have a way to increase the priority of
              // a root other than sync.

              return;
            }
          }
        }
      }

      queuedTarget.blockedOn = null;
    }

    function attemptReplayContinuousQueuedEvent(queuedEvent) {
      if (queuedEvent.blockedOn !== null) {
        return false;
      }

      var targetContainers = queuedEvent.targetContainers;

      while (targetContainers.length > 0) {
        var targetContainer = targetContainers[0];
        var nextBlockedOn = attemptToDispatchEvent(queuedEvent.domEventName, queuedEvent.eventSystemFlags, targetContainer, queuedEvent.nativeEvent);

        if (nextBlockedOn !== null) {
          // We're still blocked. Try again later.
          var _fiber3 = getInstanceFromNode(nextBlockedOn);

          if (_fiber3 !== null) {
            attemptContinuousHydration(_fiber3);
          }

          queuedEvent.blockedOn = nextBlockedOn;
          return false;
        } // This target container was successfully dispatched. Try the next.


        targetContainers.shift();
      }

      return true;
    }

    function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {
      if (attemptReplayContinuousQueuedEvent(queuedEvent)) {
        map.delete(key);
      }
    }

    function replayUnblockedEvents() {
      hasScheduledReplayAttempt = false; // First replay discrete events.

      while (queuedDiscreteEvents.length > 0) {
        var nextDiscreteEvent = queuedDiscreteEvents[0];

        if (nextDiscreteEvent.blockedOn !== null) {
          // We're still blocked.
          // Increase the priority of this boundary to unblock
          // the next discrete event.
          var _fiber4 = getInstanceFromNode(nextDiscreteEvent.blockedOn);

          if (_fiber4 !== null) {
            attemptUserBlockingHydration(_fiber4);
          }

          break;
        }

        var targetContainers = nextDiscreteEvent.targetContainers;

        while (targetContainers.length > 0) {
          var targetContainer = targetContainers[0];
          var nextBlockedOn = attemptToDispatchEvent(nextDiscreteEvent.domEventName, nextDiscreteEvent.eventSystemFlags, targetContainer, nextDiscreteEvent.nativeEvent);

          if (nextBlockedOn !== null) {
            // We're still blocked. Try again later.
            nextDiscreteEvent.blockedOn = nextBlockedOn;
            break;
          } // This target container was successfully dispatched. Try the next.


          targetContainers.shift();
        }

        if (nextDiscreteEvent.blockedOn === null) {
          // We've successfully replayed the first event. Let's try the next one.
          queuedDiscreteEvents.shift();
        }
      } // Next replay any continuous events.


      if (queuedFocus !== null && attemptReplayContinuousQueuedEvent(queuedFocus)) {
        queuedFocus = null;
      }

      if (queuedDrag !== null && attemptReplayContinuousQueuedEvent(queuedDrag)) {
        queuedDrag = null;
      }

      if (queuedMouse !== null && attemptReplayContinuousQueuedEvent(queuedMouse)) {
        queuedMouse = null;
      }

      queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);
      queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
    }

    function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
      if (queuedEvent.blockedOn === unblocked) {
        queuedEvent.blockedOn = null;

        if (!hasScheduledReplayAttempt) {
          hasScheduledReplayAttempt = true; // Schedule a callback to attempt replaying as many events as are
          // now unblocked. This first might not actually be unblocked yet.
          // We could check it early to avoid scheduling an unnecessary callback.

          Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, replayUnblockedEvents);
        }
      }
    }

    function retryIfBlockedOn(unblocked) {
      // Mark anything that was blocked on this as no longer blocked
      // and eligible for a replay.
      if (queuedDiscreteEvents.length > 0) {
        scheduleCallbackIfUnblocked(queuedDiscreteEvents[0], unblocked); // This is a exponential search for each boundary that commits. I think it's
        // worth it because we expect very few discrete events to queue up and once
        // we are actually fully unblocked it will be fast to replay them.

        for (var i = 1; i < queuedDiscreteEvents.length; i++) {
          var queuedEvent = queuedDiscreteEvents[i];

          if (queuedEvent.blockedOn === unblocked) {
            queuedEvent.blockedOn = null;
          }
        }
      }

      if (queuedFocus !== null) {
        scheduleCallbackIfUnblocked(queuedFocus, unblocked);
      }

      if (queuedDrag !== null) {
        scheduleCallbackIfUnblocked(queuedDrag, unblocked);
      }

      if (queuedMouse !== null) {
        scheduleCallbackIfUnblocked(queuedMouse, unblocked);
      }

      var unblock = function (queuedEvent) {
        return scheduleCallbackIfUnblocked(queuedEvent, unblocked);
      };

      queuedPointers.forEach(unblock);
      queuedPointerCaptures.forEach(unblock);

      for (var _i = 0; _i < queuedExplicitHydrationTargets.length; _i++) {
        var queuedTarget = queuedExplicitHydrationTargets[_i];

        if (queuedTarget.blockedOn === unblocked) {
          queuedTarget.blockedOn = null;
        }
      }

      while (queuedExplicitHydrationTargets.length > 0) {
        var nextExplicitTarget = queuedExplicitHydrationTargets[0];

        if (nextExplicitTarget.blockedOn !== null) {
          // We're still blocked.
          break;
        } else {
          attemptExplicitHydrationTarget(nextExplicitTarget);

          if (nextExplicitTarget.blockedOn === null) {
            // We're unblocked.
            queuedExplicitHydrationTargets.shift();
          }
        }
      }
    }

    var DiscreteEvent = 0;
    var UserBlockingEvent = 1;
    var ContinuousEvent = 2;
    /**
     * Generate a mapping of standard vendor prefixes using the defined style property and event name.
     *
     * @param {string} styleProp
     * @param {string} eventName
     * @returns {object}
     */

    function makePrefixMap(styleProp, eventName) {
      var prefixes = {};
      prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
      prefixes['Webkit' + styleProp] = 'webkit' + eventName;
      prefixes['Moz' + styleProp] = 'moz' + eventName;
      return prefixes;
    }
    /**
     * A list of event names to a configurable list of vendor prefixes.
     */


    var vendorPrefixes = {
      animationend: makePrefixMap('Animation', 'AnimationEnd'),
      animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
      animationstart: makePrefixMap('Animation', 'AnimationStart'),
      transitionend: makePrefixMap('Transition', 'TransitionEnd')
    };
    /**
     * Event names that have already been detected and prefixed (if applicable).
     */

    var prefixedEventNames = {};
    /**
     * Element to check for prefixes on.
     */

    var style = {};
    /**
     * Bootstrap if a DOM exists.
     */

    if (canUseDOM) {
      style = document.createElement('div').style; // On some platforms, in particular some releases of Android 4.x,
      // the un-prefixed "animation" and "transition" properties are defined on the
      // style object but the events that fire will still be prefixed, so we need
      // to check if the un-prefixed events are usable, and if not remove them from the map.

      if (!('AnimationEvent' in window)) {
        delete vendorPrefixes.animationend.animation;
        delete vendorPrefixes.animationiteration.animation;
        delete vendorPrefixes.animationstart.animation;
      } // Same as above


      if (!('TransitionEvent' in window)) {
        delete vendorPrefixes.transitionend.transition;
      }
    }
    /**
     * Attempts to determine the correct vendor prefixed event name.
     *
     * @param {string} eventName
     * @returns {string}
     */


    function getVendorPrefixedEventName(eventName) {
      if (prefixedEventNames[eventName]) {
        return prefixedEventNames[eventName];
      } else if (!vendorPrefixes[eventName]) {
        return eventName;
      }

      var prefixMap = vendorPrefixes[eventName];

      for (var styleProp in prefixMap) {
        if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
          return prefixedEventNames[eventName] = prefixMap[styleProp];
        }
      }

      return eventName;
    }

    var ANIMATION_END = getVendorPrefixedEventName('animationend');
    var ANIMATION_ITERATION = getVendorPrefixedEventName('animationiteration');
    var ANIMATION_START = getVendorPrefixedEventName('animationstart');
    var TRANSITION_END = getVendorPrefixedEventName('transitionend');
    var topLevelEventsToReactNames = new Map();
    var eventPriorities = new Map(); // We store most of the events in this module in pairs of two strings so we can re-use
    // the code required to apply the same logic for event prioritization and that of the
    // SimpleEventPlugin. This complicates things slightly, but the aim is to reduce code
    // duplication (for which there would be quite a bit). For the events that are not needed
    // for the SimpleEventPlugin (otherDiscreteEvents) we process them separately as an
    // array of top level events.
    // Lastly, we ignore prettier so we can keep the formatting sane.
    // prettier-ignore

    var discreteEventPairsForSimpleEventPlugin = ['cancel', 'cancel', 'click', 'click', 'close', 'close', 'contextmenu', 'contextMenu', 'copy', 'copy', 'cut', 'cut', 'auxclick', 'auxClick', 'dblclick', 'doubleClick', // Careful!
    'dragend', 'dragEnd', 'dragstart', 'dragStart', 'drop', 'drop', 'focusin', 'focus', // Careful!
    'focusout', 'blur', // Careful!
    'input', 'input', 'invalid', 'invalid', 'keydown', 'keyDown', 'keypress', 'keyPress', 'keyup', 'keyUp', 'mousedown', 'mouseDown', 'mouseup', 'mouseUp', 'paste', 'paste', 'pause', 'pause', 'play', 'play', 'pointercancel', 'pointerCancel', 'pointerdown', 'pointerDown', 'pointerup', 'pointerUp', 'ratechange', 'rateChange', 'reset', 'reset', 'seeked', 'seeked', 'submit', 'submit', 'touchcancel', 'touchCancel', 'touchend', 'touchEnd', 'touchstart', 'touchStart', 'volumechange', 'volumeChange'];
    var otherDiscreteEvents = ['change', 'selectionchange', 'textInput', 'compositionstart', 'compositionend', 'compositionupdate'];
    var userBlockingPairsForSimpleEventPlugin = ['drag', 'drag', 'dragenter', 'dragEnter', 'dragexit', 'dragExit', 'dragleave', 'dragLeave', 'dragover', 'dragOver', 'mousemove', 'mouseMove', 'mouseout', 'mouseOut', 'mouseover', 'mouseOver', 'pointermove', 'pointerMove', 'pointerout', 'pointerOut', 'pointerover', 'pointerOver', 'scroll', 'scroll', 'toggle', 'toggle', 'touchmove', 'touchMove', 'wheel', 'wheel']; // prettier-ignore

    var continuousPairsForSimpleEventPlugin = ['abort', 'abort', ANIMATION_END, 'animationEnd', ANIMATION_ITERATION, 'animationIteration', ANIMATION_START, 'animationStart', 'canplay', 'canPlay', 'canplaythrough', 'canPlayThrough', 'durationchange', 'durationChange', 'emptied', 'emptied', 'encrypted', 'encrypted', 'ended', 'ended', 'error', 'error', 'gotpointercapture', 'gotPointerCapture', 'load', 'load', 'loadeddata', 'loadedData', 'loadedmetadata', 'loadedMetadata', 'loadstart', 'loadStart', 'lostpointercapture', 'lostPointerCapture', 'playing', 'playing', 'progress', 'progress', 'seeking', 'seeking', 'stalled', 'stalled', 'suspend', 'suspend', 'timeupdate', 'timeUpdate', TRANSITION_END, 'transitionEnd', 'waiting', 'waiting'];
    /**
     * Turns
     * ['abort', ...]
     *
     * into
     *
     * topLevelEventsToReactNames = new Map([
     *   ['abort', 'onAbort'],
     * ]);
     *
     * and registers them.
     */

    function registerSimplePluginEventsAndSetTheirPriorities(eventTypes, priority) {
      // As the event types are in pairs of two, we need to iterate
      // through in twos. The events are in pairs of two to save code
      // and improve init perf of processing this array, as it will
      // result in far fewer object allocations and property accesses
      // if we only use three arrays to process all the categories of
      // instead of tuples.
      for (var i = 0; i < eventTypes.length; i += 2) {
        var topEvent = eventTypes[i];
        var event = eventTypes[i + 1];
        var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
        var reactName = 'on' + capitalizedEvent;
        eventPriorities.set(topEvent, priority);
        topLevelEventsToReactNames.set(topEvent, reactName);
        registerTwoPhaseEvent(reactName, [topEvent]);
      }
    }

    function setEventPriorities(eventTypes, priority) {
      for (var i = 0; i < eventTypes.length; i++) {
        eventPriorities.set(eventTypes[i], priority);
      }
    }

    function getEventPriorityForPluginSystem(domEventName) {
      var priority = eventPriorities.get(domEventName); // Default to a ContinuousEvent. Note: we might
      // want to warn if we can't detect the priority
      // for the event.

      return priority === undefined ? ContinuousEvent : priority;
    }

    function registerSimpleEvents() {
      registerSimplePluginEventsAndSetTheirPriorities(discreteEventPairsForSimpleEventPlugin, DiscreteEvent);
      registerSimplePluginEventsAndSetTheirPriorities(userBlockingPairsForSimpleEventPlugin, UserBlockingEvent);
      registerSimplePluginEventsAndSetTheirPriorities(continuousPairsForSimpleEventPlugin, ContinuousEvent);
      setEventPriorities(otherDiscreteEvents, DiscreteEvent);
    }

    var Scheduler_now = Scheduler.unstable_now;
    {
      // Provide explicit error message when production+profiling bundle of e.g.
      // react-dom is used with production (non-profiling) bundle of
      // scheduler/tracing
      if (!(tracing.__interactionsRef != null && tracing.__interactionsRef.current != null)) {
        {
          throw Error("It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at https://reactjs.org/link/profiling");
        }
      }
    } // ascending numbers so we can compare them like numbers. They start at 90 to
    // avoid clashing with Scheduler's priorities.

    var ImmediatePriority = 99;
    var UserBlockingPriority = 98;
    var NormalPriority = 97;
    var LowPriority = 96;
    var IdlePriority = 95; // NoPriority is the absence of priority. Also React-only.

    var NoPriority = 90;
    var initialTimeMs = Scheduler_now(); // If the initial timestamp is reasonably small, use Scheduler's `now` directly.

    var SyncLanePriority = 15;
    var SyncBatchedLanePriority = 14;
    var InputDiscreteHydrationLanePriority = 13;
    var InputDiscreteLanePriority = 12;
    var InputContinuousHydrationLanePriority = 11;
    var InputContinuousLanePriority = 10;
    var DefaultHydrationLanePriority = 9;
    var DefaultLanePriority = 8;
    var TransitionHydrationPriority = 7;
    var TransitionPriority = 6;
    var RetryLanePriority = 5;
    var SelectiveHydrationLanePriority = 4;
    var IdleHydrationLanePriority = 3;
    var IdleLanePriority = 2;
    var OffscreenLanePriority = 1;
    var NoLanePriority = 0;
    var TotalLanes = 31;
    var NoLanes =
    /*                        */
    0;
    var NoLane =
    /*                          */
    0;
    var SyncLane =
    /*                        */
    1;
    var SyncBatchedLane =
    /*                 */
    2;
    var InputDiscreteHydrationLane =
    /*      */
    4;
    var InputDiscreteLanes =
    /*                    */
    24;
    var InputContinuousHydrationLane =
    /*           */
    32;
    var InputContinuousLanes =
    /*                  */
    192;
    var DefaultHydrationLane =
    /*            */
    256;
    var DefaultLanes =
    /*                   */
    3584;
    var TransitionHydrationLane =
    /*                */
    4096;
    var TransitionLanes =
    /*                       */
    4186112;
    var RetryLanes =
    /*                            */
    62914560;
    var SomeRetryLane =
    /*                  */
    33554432;
    var SelectiveHydrationLane =
    /*          */
    67108864;
    var NonIdleLanes =
    /*                                 */
    134217727;
    var IdleHydrationLane =
    /*               */
    134217728;
    var IdleLanes =
    /*                             */
    805306368;
    var OffscreenLane =
    /*                   */
    1073741824;
    var NoTimestamp = -1;

    function setCurrentUpdateLanePriority(newLanePriority) {} // "Registers" used to "return" multiple values
    // Used by getHighestPriorityLanes and getNextLanes:


    var return_highestLanePriority = DefaultLanePriority;

    function getHighestPriorityLanes(lanes) {
      if ((SyncLane & lanes) !== NoLanes) {
        return_highestLanePriority = SyncLanePriority;
        return SyncLane;
      }

      if ((SyncBatchedLane & lanes) !== NoLanes) {
        return_highestLanePriority = SyncBatchedLanePriority;
        return SyncBatchedLane;
      }

      if ((InputDiscreteHydrationLane & lanes) !== NoLanes) {
        return_highestLanePriority = InputDiscreteHydrationLanePriority;
        return InputDiscreteHydrationLane;
      }

      var inputDiscreteLanes = InputDiscreteLanes & lanes;

      if (inputDiscreteLanes !== NoLanes) {
        return_highestLanePriority = InputDiscreteLanePriority;
        return inputDiscreteLanes;
      }

      if ((lanes & InputContinuousHydrationLane) !== NoLanes) {
        return_highestLanePriority = InputContinuousHydrationLanePriority;
        return InputContinuousHydrationLane;
      }

      var inputContinuousLanes = InputContinuousLanes & lanes;

      if (inputContinuousLanes !== NoLanes) {
        return_highestLanePriority = InputContinuousLanePriority;
        return inputContinuousLanes;
      }

      if ((lanes & DefaultHydrationLane) !== NoLanes) {
        return_highestLanePriority = DefaultHydrationLanePriority;
        return DefaultHydrationLane;
      }

      var defaultLanes = DefaultLanes & lanes;

      if (defaultLanes !== NoLanes) {
        return_highestLanePriority = DefaultLanePriority;
        return defaultLanes;
      }

      if ((lanes & TransitionHydrationLane) !== NoLanes) {
        return_highestLanePriority = TransitionHydrationPriority;
        return TransitionHydrationLane;
      }

      var transitionLanes = TransitionLanes & lanes;

      if (transitionLanes !== NoLanes) {
        return_highestLanePriority = TransitionPriority;
        return transitionLanes;
      }

      var retryLanes = RetryLanes & lanes;

      if (retryLanes !== NoLanes) {
        return_highestLanePriority = RetryLanePriority;
        return retryLanes;
      }

      if (lanes & SelectiveHydrationLane) {
        return_highestLanePriority = SelectiveHydrationLanePriority;
        return SelectiveHydrationLane;
      }

      if ((lanes & IdleHydrationLane) !== NoLanes) {
        return_highestLanePriority = IdleHydrationLanePriority;
        return IdleHydrationLane;
      }

      var idleLanes = IdleLanes & lanes;

      if (idleLanes !== NoLanes) {
        return_highestLanePriority = IdleLanePriority;
        return idleLanes;
      }

      if ((OffscreenLane & lanes) !== NoLanes) {
        return_highestLanePriority = OffscreenLanePriority;
        return OffscreenLane;
      }

      {
        error('Should have found matching lanes. This is a bug in React.');
      } // This shouldn't be reachable, but as a fallback, return the entire bitmask.

      return_highestLanePriority = DefaultLanePriority;
      return lanes;
    }

    function schedulerPriorityToLanePriority(schedulerPriorityLevel) {
      switch (schedulerPriorityLevel) {
        case ImmediatePriority:
          return SyncLanePriority;

        case UserBlockingPriority:
          return InputContinuousLanePriority;

        case NormalPriority:
        case LowPriority:
          // TODO: Handle LowSchedulerPriority, somehow. Maybe the same lane as hydration.
          return DefaultLanePriority;

        case IdlePriority:
          return IdleLanePriority;

        default:
          return NoLanePriority;
      }
    }

    function lanePriorityToSchedulerPriority(lanePriority) {
      switch (lanePriority) {
        case SyncLanePriority:
        case SyncBatchedLanePriority:
          return ImmediatePriority;

        case InputDiscreteHydrationLanePriority:
        case InputDiscreteLanePriority:
        case InputContinuousHydrationLanePriority:
        case InputContinuousLanePriority:
          return UserBlockingPriority;

        case DefaultHydrationLanePriority:
        case DefaultLanePriority:
        case TransitionHydrationPriority:
        case TransitionPriority:
        case SelectiveHydrationLanePriority:
        case RetryLanePriority:
          return NormalPriority;

        case IdleHydrationLanePriority:
        case IdleLanePriority:
        case OffscreenLanePriority:
          return IdlePriority;

        case NoLanePriority:
          return NoPriority;

        default:
          {
            {
              throw Error("Invalid update priority: " + lanePriority + ". This is a bug in React.");
            }
          }
      }
    }

    function getNextLanes(root, wipLanes) {
      // Early bailout if there's no pending work left.
      var pendingLanes = root.pendingLanes;

      if (pendingLanes === NoLanes) {
        return_highestLanePriority = NoLanePriority;
        return NoLanes;
      }

      var nextLanes = NoLanes;
      var nextLanePriority = NoLanePriority;
      var expiredLanes = root.expiredLanes;
      var suspendedLanes = root.suspendedLanes;
      var pingedLanes = root.pingedLanes; // Check if any work has expired.

      if (expiredLanes !== NoLanes) {
        nextLanes = expiredLanes;
        nextLanePriority = return_highestLanePriority = SyncLanePriority;
      } else {
        // Do not work on any idle work until all the non-idle work has finished,
        // even if the work is suspended.
        var nonIdlePendingLanes = pendingLanes & NonIdleLanes;

        if (nonIdlePendingLanes !== NoLanes) {
          var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;

          if (nonIdleUnblockedLanes !== NoLanes) {
            nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);
            nextLanePriority = return_highestLanePriority;
          } else {
            var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;

            if (nonIdlePingedLanes !== NoLanes) {
              nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);
              nextLanePriority = return_highestLanePriority;
            }
          }
        } else {
          // The only remaining work is Idle.
          var unblockedLanes = pendingLanes & ~suspendedLanes;

          if (unblockedLanes !== NoLanes) {
            nextLanes = getHighestPriorityLanes(unblockedLanes);
            nextLanePriority = return_highestLanePriority;
          } else {
            if (pingedLanes !== NoLanes) {
              nextLanes = getHighestPriorityLanes(pingedLanes);
              nextLanePriority = return_highestLanePriority;
            }
          }
        }
      }

      if (nextLanes === NoLanes) {
        // This should only be reachable if we're suspended
        // TODO: Consider warning in this path if a fallback timer is not scheduled.
        return NoLanes;
      } // If there are higher priority lanes, we'll include them even if they
      // are suspended.


      nextLanes = pendingLanes & getEqualOrHigherPriorityLanes(nextLanes); // If we're already in the middle of a render, switching lanes will interrupt
      // it and we'll lose our progress. We should only do this if the new lanes are
      // higher priority.

      if (wipLanes !== NoLanes && wipLanes !== nextLanes && // If we already suspended with a delay, then interrupting is fine. Don't
      // bother waiting until the root is complete.
      (wipLanes & suspendedLanes) === NoLanes) {
        getHighestPriorityLanes(wipLanes);
        var wipLanePriority = return_highestLanePriority;

        if (nextLanePriority <= wipLanePriority) {
          return wipLanes;
        } else {
          return_highestLanePriority = nextLanePriority;
        }
      } // Check for entangled lanes and add them to the batch.
      //
      // A lane is said to be entangled with another when it's not allowed to render
      // in a batch that does not also include the other lane. Typically we do this
      // when multiple updates have the same source, and we only want to respond to
      // the most recent event from that source.
      //
      // Note that we apply entanglements *after* checking for partial work above.
      // This means that if a lane is entangled during an interleaved event while
      // it's already rendering, we won't interrupt it. This is intentional, since
      // entanglement is usually "best effort": we'll try our best to render the
      // lanes in the same batch, but it's not worth throwing out partially
      // completed work in order to do it.
      //
      // For those exceptions where entanglement is semantically important, like
      // useMutableSource, we should ensure that there is no partial work at the
      // time we apply the entanglement.


      var entangledLanes = root.entangledLanes;

      if (entangledLanes !== NoLanes) {
        var entanglements = root.entanglements;
        var lanes = nextLanes & entangledLanes;

        while (lanes > 0) {
          var index = pickArbitraryLaneIndex(lanes);
          var lane = 1 << index;
          nextLanes |= entanglements[index];
          lanes &= ~lane;
        }
      }

      return nextLanes;
    }

    function getMostRecentEventTime(root, lanes) {
      var eventTimes = root.eventTimes;
      var mostRecentEventTime = NoTimestamp;

      while (lanes > 0) {
        var index = pickArbitraryLaneIndex(lanes);
        var lane = 1 << index;
        var eventTime = eventTimes[index];

        if (eventTime > mostRecentEventTime) {
          mostRecentEventTime = eventTime;
        }

        lanes &= ~lane;
      }

      return mostRecentEventTime;
    }

    function computeExpirationTime(lane, currentTime) {
      // TODO: Expiration heuristic is constant per lane, so could use a map.
      getHighestPriorityLanes(lane);
      var priority = return_highestLanePriority;

      if (priority >= InputContinuousLanePriority) {
        // User interactions should expire slightly more quickly.
        //
        // NOTE: This is set to the corresponding constant as in Scheduler.js. When
        // we made it larger, a product metric in www regressed, suggesting there's
        // a user interaction that's being starved by a series of synchronous
        // updates. If that theory is correct, the proper solution is to fix the
        // starvation. However, this scenario supports the idea that expiration
        // times are an important safeguard when starvation does happen.
        //
        // Also note that, in the case of user input specifically, this will soon no
        // longer be an issue because we plan to make user input synchronous by
        // default (until you enter `startTransition`, of course.)
        //
        // If weren't planning to make these updates synchronous soon anyway, I
        // would probably make this number a configurable parameter.
        return currentTime + 250;
      } else if (priority >= TransitionPriority) {
        return currentTime + 5000;
      } else {
        // Anything idle priority or lower should never expire.
        return NoTimestamp;
      }
    }

    function markStarvedLanesAsExpired(root, currentTime) {
      // TODO: This gets called every time we yield. We can optimize by storing
      // the earliest expiration time on the root. Then use that to quickly bail out
      // of this function.
      var pendingLanes = root.pendingLanes;
      var suspendedLanes = root.suspendedLanes;
      var pingedLanes = root.pingedLanes;
      var expirationTimes = root.expirationTimes; // Iterate through the pending lanes and check if we've reached their
      // expiration time. If so, we'll assume the update is being starved and mark
      // it as expired to force it to finish.

      var lanes = pendingLanes;

      while (lanes > 0) {
        var index = pickArbitraryLaneIndex(lanes);
        var lane = 1 << index;
        var expirationTime = expirationTimes[index];

        if (expirationTime === NoTimestamp) {
          // Found a pending lane with no expiration time. If it's not suspended, or
          // if it's pinged, assume it's CPU-bound. Compute a new expiration time
          // using the current time.
          if ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) {
            // Assumes timestamps are monotonically increasing.
            expirationTimes[index] = computeExpirationTime(lane, currentTime);
          }
        } else if (expirationTime <= currentTime) {
          // This lane expired
          root.expiredLanes |= lane;
        }

        lanes &= ~lane;
      }
    } // This returns the highest priority pending lanes regardless of whether they


    function getLanesToRetrySynchronouslyOnError(root) {
      var everythingButOffscreen = root.pendingLanes & ~OffscreenLane;

      if (everythingButOffscreen !== NoLanes) {
        return everythingButOffscreen;
      }

      if (everythingButOffscreen & OffscreenLane) {
        return OffscreenLane;
      }

      return NoLanes;
    }

    function returnNextLanesPriority() {
      return return_highestLanePriority;
    }

    function includesNonIdleWork(lanes) {
      return (lanes & NonIdleLanes) !== NoLanes;
    }

    function includesOnlyRetries(lanes) {
      return (lanes & RetryLanes) === lanes;
    }

    function includesOnlyTransitions(lanes) {
      return (lanes & TransitionLanes) === lanes;
    } // To ensure consistency across multiple updates in the same event, this should
    // be a pure function, so that it always returns the same lane for given inputs.


    function findUpdateLane(lanePriority, wipLanes) {
      switch (lanePriority) {
        case NoLanePriority:
          break;

        case SyncLanePriority:
          return SyncLane;

        case SyncBatchedLanePriority:
          return SyncBatchedLane;

        case InputDiscreteLanePriority:
          {
            var _lane = pickArbitraryLane(InputDiscreteLanes & ~wipLanes);

            if (_lane === NoLane) {
              // Shift to the next priority level
              return findUpdateLane(InputContinuousLanePriority, wipLanes);
            }

            return _lane;
          }

        case InputContinuousLanePriority:
          {
            var _lane2 = pickArbitraryLane(InputContinuousLanes & ~wipLanes);

            if (_lane2 === NoLane) {
              // Shift to the next priority level
              return findUpdateLane(DefaultLanePriority, wipLanes);
            }

            return _lane2;
          }

        case DefaultLanePriority:
          {
            var _lane3 = pickArbitraryLane(DefaultLanes & ~wipLanes);

            if (_lane3 === NoLane) {
              // If all the default lanes are already being worked on, look for a
              // lane in the transition range.
              _lane3 = pickArbitraryLane(TransitionLanes & ~wipLanes);

              if (_lane3 === NoLane) {
                // All the transition lanes are taken, too. This should be very
                // rare, but as a last resort, pick a default lane. This will have
                // the effect of interrupting the current work-in-progress render.
                _lane3 = pickArbitraryLane(DefaultLanes);
              }
            }

            return _lane3;
          }

        case TransitionPriority: // Should be handled by findTransitionLane instead

        case RetryLanePriority:
          // Should be handled by findRetryLane instead
          break;

        case IdleLanePriority:
          var lane = pickArbitraryLane(IdleLanes & ~wipLanes);

          if (lane === NoLane) {
            lane = pickArbitraryLane(IdleLanes);
          }

          return lane;
      }

      {
        {
          throw Error("Invalid update priority: " + lanePriority + ". This is a bug in React.");
        }
      }
    } // To ensure consistency across multiple updates in the same event, this should
    // be pure function, so that it always returns the same lane for given inputs.


    function findTransitionLane(wipLanes, pendingLanes) {
      // First look for lanes that are completely unclaimed, i.e. have no
      // pending work.
      var lane = pickArbitraryLane(TransitionLanes & ~pendingLanes);

      if (lane === NoLane) {
        // If all lanes have pending work, look for a lane that isn't currently
        // being worked on.
        lane = pickArbitraryLane(TransitionLanes & ~wipLanes);

        if (lane === NoLane) {
          // If everything is being worked on, pick any lane. This has the
          // effect of interrupting the current work-in-progress.
          lane = pickArbitraryLane(TransitionLanes);
        }
      }

      return lane;
    } // To ensure consistency across multiple updates in the same event, this should
    // be pure function, so that it always returns the same lane for given inputs.


    function findRetryLane(wipLanes) {
      // This is a fork of `findUpdateLane` designed specifically for Suspense
      // "retries" — a special update that attempts to flip a Suspense boundary
      // from its placeholder state to its primary/resolved state.
      var lane = pickArbitraryLane(RetryLanes & ~wipLanes);

      if (lane === NoLane) {
        lane = pickArbitraryLane(RetryLanes);
      }

      return lane;
    }

    function getHighestPriorityLane(lanes) {
      return lanes & -lanes;
    }

    function getLowestPriorityLane(lanes) {
      // This finds the most significant non-zero bit.
      var index = 31 - clz32(lanes);
      return index < 0 ? NoLanes : 1 << index;
    }

    function getEqualOrHigherPriorityLanes(lanes) {
      return (getLowestPriorityLane(lanes) << 1) - 1;
    }

    function pickArbitraryLane(lanes) {
      // This wrapper function gets inlined. Only exists so to communicate that it
      // doesn't matter which bit is selected; you can pick any bit without
      // affecting the algorithms where its used. Here I'm using
      // getHighestPriorityLane because it requires the fewest operations.
      return getHighestPriorityLane(lanes);
    }

    function pickArbitraryLaneIndex(lanes) {
      return 31 - clz32(lanes);
    }

    function laneToIndex(lane) {
      return pickArbitraryLaneIndex(lane);
    }

    function includesSomeLane(a, b) {
      return (a & b) !== NoLanes;
    }

    function isSubsetOfLanes(set, subset) {
      return (set & subset) === subset;
    }

    function mergeLanes(a, b) {
      return a | b;
    }

    function removeLanes(set, subset) {
      return set & ~subset;
    } // Seems redundant, but it changes the type from a single lane (used for
    // updates) to a group of lanes (used for flushing work).


    function laneToLanes(lane) {
      return lane;
    }

    function higherPriorityLane(a, b) {
      // This works because the bit ranges decrease in priority as you go left.
      return a !== NoLane && a < b ? a : b;
    }

    function createLaneMap(initial) {
      // Intentionally pushing one by one.
      // https://v8.dev/blog/elements-kinds#avoid-creating-holes
      var laneMap = [];

      for (var i = 0; i < TotalLanes; i++) {
        laneMap.push(initial);
      }

      return laneMap;
    }

    function markRootUpdated(root, updateLane, eventTime) {
      root.pendingLanes |= updateLane; // TODO: Theoretically, any update to any lane can unblock any other lane. But
      // it's not practical to try every single possible combination. We need a
      // heuristic to decide which lanes to attempt to render, and in which batches.
      // For now, we use the same heuristic as in the old ExpirationTimes model:
      // retry any lane at equal or lower priority, but don't try updates at higher
      // priority without also including the lower priority updates. This works well
      // when considering updates across different priority levels, but isn't
      // sufficient for updates within the same priority, since we want to treat
      // those updates as parallel.
      // Unsuspend any update at equal or lower priority.

      var higherPriorityLanes = updateLane - 1; // Turns 0b1000 into 0b0111

      root.suspendedLanes &= higherPriorityLanes;
      root.pingedLanes &= higherPriorityLanes;
      var eventTimes = root.eventTimes;
      var index = laneToIndex(updateLane); // We can always overwrite an existing timestamp because we prefer the most
      // recent event, and we assume time is monotonically increasing.

      eventTimes[index] = eventTime;
    }

    function markRootSuspended(root, suspendedLanes) {
      root.suspendedLanes |= suspendedLanes;
      root.pingedLanes &= ~suspendedLanes; // The suspended lanes are no longer CPU-bound. Clear their expiration times.

      var expirationTimes = root.expirationTimes;
      var lanes = suspendedLanes;

      while (lanes > 0) {
        var index = pickArbitraryLaneIndex(lanes);
        var lane = 1 << index;
        expirationTimes[index] = NoTimestamp;
        lanes &= ~lane;
      }
    }

    function markRootPinged(root, pingedLanes, eventTime) {
      root.pingedLanes |= root.suspendedLanes & pingedLanes;
    }

    function markDiscreteUpdatesExpired(root) {
      root.expiredLanes |= InputDiscreteLanes & root.pendingLanes;
    }

    function hasDiscreteLanes(lanes) {
      return (lanes & InputDiscreteLanes) !== NoLanes;
    }

    function markRootMutableRead(root, updateLane) {
      root.mutableReadLanes |= updateLane & root.pendingLanes;
    }

    function markRootFinished(root, remainingLanes) {
      var noLongerPendingLanes = root.pendingLanes & ~remainingLanes;
      root.pendingLanes = remainingLanes; // Let's try everything again

      root.suspendedLanes = 0;
      root.pingedLanes = 0;
      root.expiredLanes &= remainingLanes;
      root.mutableReadLanes &= remainingLanes;
      root.entangledLanes &= remainingLanes;
      var entanglements = root.entanglements;
      var eventTimes = root.eventTimes;
      var expirationTimes = root.expirationTimes; // Clear the lanes that no longer have pending work

      var lanes = noLongerPendingLanes;

      while (lanes > 0) {
        var index = pickArbitraryLaneIndex(lanes);
        var lane = 1 << index;
        entanglements[index] = NoLanes;
        eventTimes[index] = NoTimestamp;
        expirationTimes[index] = NoTimestamp;
        lanes &= ~lane;
      }
    }

    function markRootEntangled(root, entangledLanes) {
      root.entangledLanes |= entangledLanes;
      var entanglements = root.entanglements;
      var lanes = entangledLanes;

      while (lanes > 0) {
        var index = pickArbitraryLaneIndex(lanes);
        var lane = 1 << index;
        entanglements[index] |= entangledLanes;
        lanes &= ~lane;
      }
    }

    var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback; // Count leading zeros. Only used on lanes, so assume input is an integer.
    // Based on:
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32

    var log = Math.log;
    var LN2 = Math.LN2;

    function clz32Fallback(lanes) {
      if (lanes === 0) {
        return 32;
      }

      return 31 - (log(lanes) / LN2 | 0) | 0;
    } // Intentionally not named imports because Rollup would use dynamic dispatch for


    var UserBlockingPriority$1 = Scheduler.unstable_UserBlockingPriority,
        runWithPriority = Scheduler.unstable_runWithPriority; // TODO: can we stop exporting these?

    var _enabled = true; // This is exported in FB builds for use by legacy FB layer infra.
    // We'd like to remove this but it's not clear if this is safe.

    function setEnabled(enabled) {
      _enabled = !!enabled;
    }

    function isEnabled() {
      return _enabled;
    }

    function createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags) {
      var eventPriority = getEventPriorityForPluginSystem(domEventName);
      var listenerWrapper;

      switch (eventPriority) {
        case DiscreteEvent:
          listenerWrapper = dispatchDiscreteEvent;
          break;

        case UserBlockingEvent:
          listenerWrapper = dispatchUserBlockingUpdate;
          break;

        case ContinuousEvent:
        default:
          listenerWrapper = dispatchEvent;
          break;
      }

      return listenerWrapper.bind(null, domEventName, eventSystemFlags, targetContainer);
    }

    function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {
      {
        flushDiscreteUpdatesIfNeeded(nativeEvent.timeStamp);
      }
      discreteUpdates(dispatchEvent, domEventName, eventSystemFlags, container, nativeEvent);
    }

    function dispatchUserBlockingUpdate(domEventName, eventSystemFlags, container, nativeEvent) {
      {
        runWithPriority(UserBlockingPriority$1, dispatchEvent.bind(null, domEventName, eventSystemFlags, container, nativeEvent));
      }
    }

    function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
      if (!_enabled) {
        return;
      }

      var allowReplay = true;
      {
        // TODO: replaying capture phase events is currently broken
        // because we used to do it during top-level native bubble handlers
        // but now we use different bubble and capture handlers.
        // In eager mode, we attach capture listeners early, so we need
        // to filter them out until we fix the logic to handle them correctly.
        // This could've been outside the flag but I put it inside to reduce risk.
        allowReplay = (eventSystemFlags & IS_CAPTURE_PHASE) === 0;
      }

      if (allowReplay && hasQueuedDiscreteEvents() && isReplayableDiscreteEvent(domEventName)) {
        // If we already have a queue of discrete events, and this is another discrete
        // event, then we can't dispatch it regardless of its target, since they
        // need to dispatch in order.
        queueDiscreteEvent(null, // Flags that we're not actually blocked on anything as far as we know.
        domEventName, eventSystemFlags, targetContainer, nativeEvent);
        return;
      }

      var blockedOn = attemptToDispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);

      if (blockedOn === null) {
        // We successfully dispatched this event.
        if (allowReplay) {
          clearIfContinuousEvent(domEventName, nativeEvent);
        }

        return;
      }

      if (allowReplay) {
        if (isReplayableDiscreteEvent(domEventName)) {
          // This this to be replayed later once the target is available.
          queueDiscreteEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
          return;
        }

        if (queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)) {
          return;
        } // We need to clear only if we didn't queue because
        // queueing is accummulative.


        clearIfContinuousEvent(domEventName, nativeEvent);
      } // This is not replayable so we'll invoke it but without a target,
      // in case the event system needs to trace it.


      dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, null, targetContainer);
    } // Attempt dispatching an event. Returns a SuspenseInstance or Container if it's blocked.


    function attemptToDispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
      // TODO: Warn if _enabled is false.
      var nativeEventTarget = getEventTarget(nativeEvent);
      var targetInst = getClosestInstanceFromNode(nativeEventTarget);

      if (targetInst !== null) {
        var nearestMounted = getNearestMountedFiber(targetInst);

        if (nearestMounted === null) {
          // This tree has been unmounted already. Dispatch without a target.
          targetInst = null;
        } else {
          var tag = nearestMounted.tag;

          if (tag === SuspenseComponent) {
            var instance = getSuspenseInstanceFromFiber(nearestMounted);

            if (instance !== null) {
              // Queue the event to be replayed later. Abort dispatching since we
              // don't want this event dispatched twice through the event system.
              // TODO: If this is the first discrete event in the queue. Schedule an increased
              // priority for this boundary.
              return instance;
            } // This shouldn't happen, something went wrong but to avoid blocking
            // the whole system, dispatch the event without a target.
            // TODO: Warn.


            targetInst = null;
          } else if (tag === HostRoot) {
            var root = nearestMounted.stateNode;

            if (root.hydrate) {
              // If this happens during a replay something went wrong and it might block
              // the whole system.
              return getContainerFromFiber(nearestMounted);
            }

            targetInst = null;
          } else if (nearestMounted !== targetInst) {
            // If we get an event (ex: img onload) before committing that
            // component's mount, ignore it for now (that is, treat it as if it was an
            // event on a non-React tree). We might also consider queueing events and
            // dispatching them after the mount.
            targetInst = null;
          }
        }
      }

      dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer); // We're not blocked on anything.

      return null;
    }

    function addEventBubbleListener(target, eventType, listener) {
      target.addEventListener(eventType, listener, false);
      return listener;
    }

    function addEventCaptureListener(target, eventType, listener) {
      target.addEventListener(eventType, listener, true);
      return listener;
    }

    function addEventCaptureListenerWithPassiveFlag(target, eventType, listener, passive) {
      target.addEventListener(eventType, listener, {
        capture: true,
        passive: passive
      });
      return listener;
    }

    function addEventBubbleListenerWithPassiveFlag(target, eventType, listener, passive) {
      target.addEventListener(eventType, listener, {
        passive: passive
      });
      return listener;
    }
    /**
     * These variables store information about text content of a target node,
     * allowing comparison of content before and after a given event.
     *
     * Identify the node where selection currently begins, then observe
     * both its text content and its current position in the DOM. Since the
     * browser may natively replace the target node during composition, we can
     * use its position to find its replacement.
     *
     *
     */


    var root = null;
    var startText = null;
    var fallbackText = null;

    function initialize(nativeEventTarget) {
      root = nativeEventTarget;
      startText = getText();
      return true;
    }

    function reset() {
      root = null;
      startText = null;
      fallbackText = null;
    }

    function getData() {
      if (fallbackText) {
        return fallbackText;
      }

      var start;
      var startValue = startText;
      var startLength = startValue.length;
      var end;
      var endValue = getText();
      var endLength = endValue.length;

      for (start = 0; start < startLength; start++) {
        if (startValue[start] !== endValue[start]) {
          break;
        }
      }

      var minEnd = startLength - start;

      for (end = 1; end <= minEnd; end++) {
        if (startValue[startLength - end] !== endValue[endLength - end]) {
          break;
        }
      }

      var sliceTail = end > 1 ? 1 - end : undefined;
      fallbackText = endValue.slice(start, sliceTail);
      return fallbackText;
    }

    function getText() {
      if ('value' in root) {
        return root.value;
      }

      return root.textContent;
    }
    /**
     * `charCode` represents the actual "character code" and is safe to use with
     * `String.fromCharCode`. As such, only keys that correspond to printable
     * characters produce a valid `charCode`, the only exception to this is Enter.
     * The Tab-key is considered non-printable and does not have a `charCode`,
     * presumably because it does not produce a tab-character in browsers.
     *
     * @param {object} nativeEvent Native browser event.
     * @return {number} Normalized `charCode` property.
     */


    function getEventCharCode(nativeEvent) {
      var charCode;
      var keyCode = nativeEvent.keyCode;

      if ('charCode' in nativeEvent) {
        charCode = nativeEvent.charCode; // FF does not set `charCode` for the Enter-key, check against `keyCode`.

        if (charCode === 0 && keyCode === 13) {
          charCode = 13;
        }
      } else {
        // IE8 does not implement `charCode`, but `keyCode` has the correct value.
        charCode = keyCode;
      } // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)
      // report Enter as charCode 10 when ctrl is pressed.


      if (charCode === 10) {
        charCode = 13;
      } // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
      // Must not discard the (non-)printable Enter-key.


      if (charCode >= 32 || charCode === 13) {
        return charCode;
      }

      return 0;
    }

    function functionThatReturnsTrue() {
      return true;
    }

    function functionThatReturnsFalse() {
      return false;
    } // This is intentionally a factory so that we have different returned constructors.
    // If we had a single constructor, it would be megamorphic and engines would deopt.


    function createSyntheticEvent(Interface) {
      /**
       * Synthetic events are dispatched by event plugins, typically in response to a
       * top-level event delegation handler.
       *
       * These systems should generally use pooling to reduce the frequency of garbage
       * collection. The system should check `isPersistent` to determine whether the
       * event should be released into the pool after being dispatched. Users that
       * need a persisted event should invoke `persist`.
       *
       * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
       * normalizing browser quirks. Subclasses do not necessarily have to implement a
       * DOM interface; custom application-specific events can also subclass this.
       */
      function SyntheticBaseEvent(reactName, reactEventType, targetInst, nativeEvent, nativeEventTarget) {
        this._reactName = reactName;
        this._targetInst = targetInst;
        this.type = reactEventType;
        this.nativeEvent = nativeEvent;
        this.target = nativeEventTarget;
        this.currentTarget = null;

        for (var _propName in Interface) {
          if (!Interface.hasOwnProperty(_propName)) {
            continue;
          }

          var normalize = Interface[_propName];

          if (normalize) {
            this[_propName] = normalize(nativeEvent);
          } else {
            this[_propName] = nativeEvent[_propName];
          }
        }

        var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;

        if (defaultPrevented) {
          this.isDefaultPrevented = functionThatReturnsTrue;
        } else {
          this.isDefaultPrevented = functionThatReturnsFalse;
        }

        this.isPropagationStopped = functionThatReturnsFalse;
        return this;
      }

      _assign(SyntheticBaseEvent.prototype, {
        preventDefault: function () {
          this.defaultPrevented = true;
          var event = this.nativeEvent;

          if (!event) {
            return;
          }

          if (event.preventDefault) {
            event.preventDefault(); // $FlowFixMe - flow is not aware of `unknown` in IE
          } else if (typeof event.returnValue !== 'unknown') {
            event.returnValue = false;
          }

          this.isDefaultPrevented = functionThatReturnsTrue;
        },
        stopPropagation: function () {
          var event = this.nativeEvent;

          if (!event) {
            return;
          }

          if (event.stopPropagation) {
            event.stopPropagation(); // $FlowFixMe - flow is not aware of `unknown` in IE
          } else if (typeof event.cancelBubble !== 'unknown') {
            // The ChangeEventPlugin registers a "propertychange" event for
            // IE. This event does not support bubbling or cancelling, and
            // any references to cancelBubble throw "Member not found".  A
            // typeof check of "unknown" circumvents this issue (and is also
            // IE specific).
            event.cancelBubble = true;
          }

          this.isPropagationStopped = functionThatReturnsTrue;
        },

        /**
         * We release all dispatched `SyntheticEvent`s after each event loop, adding
         * them back into the pool. This allows a way to hold onto a reference that
         * won't be added back into the pool.
         */
        persist: function () {// Modern event system doesn't use pooling.
        },

        /**
         * Checks if this event should be released back into the pool.
         *
         * @return {boolean} True if this should not be released, false otherwise.
         */
        isPersistent: functionThatReturnsTrue
      });

      return SyntheticBaseEvent;
    }
    /**
     * @interface Event
     * @see http://www.w3.org/TR/DOM-Level-3-Events/
     */


    var EventInterface = {
      eventPhase: 0,
      bubbles: 0,
      cancelable: 0,
      timeStamp: function (event) {
        return event.timeStamp || Date.now();
      },
      defaultPrevented: 0,
      isTrusted: 0
    };
    var SyntheticEvent = createSyntheticEvent(EventInterface);

    var UIEventInterface = _assign({}, EventInterface, {
      view: 0,
      detail: 0
    });

    var SyntheticUIEvent = createSyntheticEvent(UIEventInterface);
    var lastMovementX;
    var lastMovementY;
    var lastMouseEvent;

    function updateMouseMovementPolyfillState(event) {
      if (event !== lastMouseEvent) {
        if (lastMouseEvent && event.type === 'mousemove') {
          lastMovementX = event.screenX - lastMouseEvent.screenX;
          lastMovementY = event.screenY - lastMouseEvent.screenY;
        } else {
          lastMovementX = 0;
          lastMovementY = 0;
        }

        lastMouseEvent = event;
      }
    }
    /**
     * @interface MouseEvent
     * @see http://www.w3.org/TR/DOM-Level-3-Events/
     */


    var MouseEventInterface = _assign({}, UIEventInterface, {
      screenX: 0,
      screenY: 0,
      clientX: 0,
      clientY: 0,
      pageX: 0,
      pageY: 0,
      ctrlKey: 0,
      shiftKey: 0,
      altKey: 0,
      metaKey: 0,
      getModifierState: getEventModifierState,
      button: 0,
      buttons: 0,
      relatedTarget: function (event) {
        if (event.relatedTarget === undefined) return event.fromElement === event.srcElement ? event.toElement : event.fromElement;
        return event.relatedTarget;
      },
      movementX: function (event) {
        if ('movementX' in event) {
          return event.movementX;
        }

        updateMouseMovementPolyfillState(event);
        return lastMovementX;
      },
      movementY: function (event) {
        if ('movementY' in event) {
          return event.movementY;
        } // Don't need to call updateMouseMovementPolyfillState() here
        // because it's guaranteed to have already run when movementX
        // was copied.


        return lastMovementY;
      }
    });

    var SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface);
    /**
     * @interface DragEvent
     * @see http://www.w3.org/TR/DOM-Level-3-Events/
     */

    var DragEventInterface = _assign({}, MouseEventInterface, {
      dataTransfer: 0
    });

    var SyntheticDragEvent = createSyntheticEvent(DragEventInterface);
    /**
     * @interface FocusEvent
     * @see http://www.w3.org/TR/DOM-Level-3-Events/
     */

    var FocusEventInterface = _assign({}, UIEventInterface, {
      relatedTarget: 0
    });

    var SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface);
    /**
     * @interface Event
     * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
     * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
     */

    var AnimationEventInterface = _assign({}, EventInterface, {
      animationName: 0,
      elapsedTime: 0,
      pseudoElement: 0
    });

    var SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface);
    /**
     * @interface Event
     * @see http://www.w3.org/TR/clipboard-apis/
     */

    var ClipboardEventInterface = _assign({}, EventInterface, {
      clipboardData: function (event) {
        return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
      }
    });

    var SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface);
    /**
     * @interface Event
     * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
     */

    var CompositionEventInterface = _assign({}, EventInterface, {
      data: 0
    });

    var SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface);
    /**
     * @interface Event
     * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
     *      /#events-inputevents
     */
    // Happens to share the same list for now.

    var SyntheticInputEvent = SyntheticCompositionEvent;
    /**
     * Normalization of deprecated HTML5 `key` values
     * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
     */

    var normalizeKey = {
      Esc: 'Escape',
      Spacebar: ' ',
      Left: 'ArrowLeft',
      Up: 'ArrowUp',
      Right: 'ArrowRight',
      Down: 'ArrowDown',
      Del: 'Delete',
      Win: 'OS',
      Menu: 'ContextMenu',
      Apps: 'ContextMenu',
      Scroll: 'ScrollLock',
      MozPrintableKey: 'Unidentified'
    };
    /**
     * Translation from legacy `keyCode` to HTML5 `key`
     * Only special keys supported, all others depend on keyboard layout or browser
     * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
     */

    var translateToKey = {
      '8': 'Backspace',
      '9': 'Tab',
      '12': 'Clear',
      '13': 'Enter',
      '16': 'Shift',
      '17': 'Control',
      '18': 'Alt',
      '19': 'Pause',
      '20': 'CapsLock',
      '27': 'Escape',
      '32': ' ',
      '33': 'PageUp',
      '34': 'PageDown',
      '35': 'End',
      '36': 'Home',
      '37': 'ArrowLeft',
      '38': 'ArrowUp',
      '39': 'ArrowRight',
      '40': 'ArrowDown',
      '45': 'Insert',
      '46': 'Delete',
      '112': 'F1',
      '113': 'F2',
      '114': 'F3',
      '115': 'F4',
      '116': 'F5',
      '117': 'F6',
      '118': 'F7',
      '119': 'F8',
      '120': 'F9',
      '121': 'F10',
      '122': 'F11',
      '123': 'F12',
      '144': 'NumLock',
      '145': 'ScrollLock',
      '224': 'Meta'
    };
    /**
     * @param {object} nativeEvent Native browser event.
     * @return {string} Normalized `key` property.
     */

    function getEventKey(nativeEvent) {
      if (nativeEvent.key) {
        // Normalize inconsistent values reported by browsers due to
        // implementations of a working draft specification.
        // FireFox implements `key` but returns `MozPrintableKey` for all
        // printable characters (normalized to `Unidentified`), ignore it.
        var key = normalizeKey[nativeEvent.key] || nativeEvent.key;

        if (key !== 'Unidentified') {
          return key;
        }
      } // Browser does not implement `key`, polyfill as much of it as we can.


      if (nativeEvent.type === 'keypress') {
        var charCode = getEventCharCode(nativeEvent); // The enter-key is technically both printable and non-printable and can
        // thus be captured by `keypress`, no other non-printable key should.

        return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
      }

      if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
        // While user keyboard layout determines the actual meaning of each
        // `keyCode` value, almost all function keys have a universal value.
        return translateToKey[nativeEvent.keyCode] || 'Unidentified';
      }

      return '';
    }
    /**
     * Translation from modifier key to the associated property in the event.
     * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
     */


    var modifierKeyToProp = {
      Alt: 'altKey',
      Control: 'ctrlKey',
      Meta: 'metaKey',
      Shift: 'shiftKey'
    }; // Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support
    // getModifierState. If getModifierState is not supported, we map it to a set of
    // modifier keys exposed by the event. In this case, Lock-keys are not supported.

    function modifierStateGetter(keyArg) {
      var syntheticEvent = this;
      var nativeEvent = syntheticEvent.nativeEvent;

      if (nativeEvent.getModifierState) {
        return nativeEvent.getModifierState(keyArg);
      }

      var keyProp = modifierKeyToProp[keyArg];
      return keyProp ? !!nativeEvent[keyProp] : false;
    }

    function getEventModifierState(nativeEvent) {
      return modifierStateGetter;
    }
    /**
     * @interface KeyboardEvent
     * @see http://www.w3.org/TR/DOM-Level-3-Events/
     */


    var KeyboardEventInterface = _assign({}, UIEventInterface, {
      key: getEventKey,
      code: 0,
      location: 0,
      ctrlKey: 0,
      shiftKey: 0,
      altKey: 0,
      metaKey: 0,
      repeat: 0,
      locale: 0,
      getModifierState: getEventModifierState,
      // Legacy Interface
      charCode: function (event) {
        // `charCode` is the result of a KeyPress event and represents the value of
        // the actual printable character.
        // KeyPress is deprecated, but its replacement is not yet final and not
        // implemented in any major browser. Only KeyPress has charCode.
        if (event.type === 'keypress') {
          return getEventCharCode(event);
        }

        return 0;
      },
      keyCode: function (event) {
        // `keyCode` is the result of a KeyDown/Up event and represents the value of
        // physical keyboard key.
        // The actual meaning of the value depends on the users' keyboard layout
        // which cannot be detected. Assuming that it is a US keyboard layout
        // provides a surprisingly accurate mapping for US and European users.
        // Due to this, it is left to the user to implement at this time.
        if (event.type === 'keydown' || event.type === 'keyup') {
          return event.keyCode;
        }

        return 0;
      },
      which: function (event) {
        // `which` is an alias for either `keyCode` or `charCode` depending on the
        // type of the event.
        if (event.type === 'keypress') {
          return getEventCharCode(event);
        }

        if (event.type === 'keydown' || event.type === 'keyup') {
          return event.keyCode;
        }

        return 0;
      }
    });

    var SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface);
    /**
     * @interface PointerEvent
     * @see http://www.w3.org/TR/pointerevents/
     */

    var PointerEventInterface = _assign({}, MouseEventInterface, {
      pointerId: 0,
      width: 0,
      height: 0,
      pressure: 0,
      tangentialPressure: 0,
      tiltX: 0,
      tiltY: 0,
      twist: 0,
      pointerType: 0,
      isPrimary: 0
    });

    var SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface);
    /**
     * @interface TouchEvent
     * @see http://www.w3.org/TR/touch-events/
     */

    var TouchEventInterface = _assign({}, UIEventInterface, {
      touches: 0,
      targetTouches: 0,
      changedTouches: 0,
      altKey: 0,
      metaKey: 0,
      ctrlKey: 0,
      shiftKey: 0,
      getModifierState: getEventModifierState
    });

    var SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface);
    /**
     * @interface Event
     * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
     * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
     */

    var TransitionEventInterface = _assign({}, EventInterface, {
      propertyName: 0,
      elapsedTime: 0,
      pseudoElement: 0
    });

    var SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface);
    /**
     * @interface WheelEvent
     * @see http://www.w3.org/TR/DOM-Level-3-Events/
     */

    var WheelEventInterface = _assign({}, MouseEventInterface, {
      deltaX: function (event) {
        return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
        'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
      },
      deltaY: function (event) {
        return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
        'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
        'wheelDelta' in event ? -event.wheelDelta : 0;
      },
      deltaZ: 0,
      // Browsers without "deltaMode" is reporting in raw wheel delta where one
      // notch on the scroll is always +/- 120, roughly equivalent to pixels.
      // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
      // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
      deltaMode: 0
    });

    var SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface);
    var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space

    var START_KEYCODE = 229;
    var canUseCompositionEvent = canUseDOM && 'CompositionEvent' in window;
    var documentMode = null;

    if (canUseDOM && 'documentMode' in document) {
      documentMode = document.documentMode;
    } // Webkit offers a very useful `textInput` event that can be used to
    // directly represent `beforeInput`. The IE `textinput` event is not as
    // useful, so we don't use it.


    var canUseTextInputEvent = canUseDOM && 'TextEvent' in window && !documentMode; // In IE9+, we have access to composition events, but the data supplied
    // by the native compositionend event may be incorrect. Japanese ideographic
    // spaces, for instance (\u3000) are not recorded correctly.

    var useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
    var SPACEBAR_CODE = 32;
    var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

    function registerEvents() {
      registerTwoPhaseEvent('onBeforeInput', ['compositionend', 'keypress', 'textInput', 'paste']);
      registerTwoPhaseEvent('onCompositionEnd', ['compositionend', 'focusout', 'keydown', 'keypress', 'keyup', 'mousedown']);
      registerTwoPhaseEvent('onCompositionStart', ['compositionstart', 'focusout', 'keydown', 'keypress', 'keyup', 'mousedown']);
      registerTwoPhaseEvent('onCompositionUpdate', ['compositionupdate', 'focusout', 'keydown', 'keypress', 'keyup', 'mousedown']);
    } // Track whether we've ever handled a keypress on the space key.


    var hasSpaceKeypress = false;
    /**
     * Return whether a native keypress event is assumed to be a command.
     * This is required because Firefox fires `keypress` events for key commands
     * (cut, copy, select-all, etc.) even though no character is inserted.
     */

    function isKeypressCommand(nativeEvent) {
      return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && // ctrlKey && altKey is equivalent to AltGr, and is not a command.
      !(nativeEvent.ctrlKey && nativeEvent.altKey);
    }
    /**
     * Translate native top level events into event types.
     */


    function getCompositionEventType(domEventName) {
      switch (domEventName) {
        case 'compositionstart':
          return 'onCompositionStart';

        case 'compositionend':
          return 'onCompositionEnd';

        case 'compositionupdate':
          return 'onCompositionUpdate';
      }
    }
    /**
     * Does our fallback best-guess model think this event signifies that
     * composition has begun?
     */


    function isFallbackCompositionStart(domEventName, nativeEvent) {
      return domEventName === 'keydown' && nativeEvent.keyCode === START_KEYCODE;
    }
    /**
     * Does our fallback mode think that this event is the end of composition?
     */


    function isFallbackCompositionEnd(domEventName, nativeEvent) {
      switch (domEventName) {
        case 'keyup':
          // Command keys insert or clear IME input.
          return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;

        case 'keydown':
          // Expect IME keyCode on each keydown. If we get any other
          // code we must have exited earlier.
          return nativeEvent.keyCode !== START_KEYCODE;

        case 'keypress':
        case 'mousedown':
        case 'focusout':
          // Events are not possible without cancelling IME.
          return true;

        default:
          return false;
      }
    }
    /**
     * Google Input Tools provides composition data via a CustomEvent,
     * with the `data` property populated in the `detail` object. If this
     * is available on the event object, use it. If not, this is a plain
     * composition event and we have nothing special to extract.
     *
     * @param {object} nativeEvent
     * @return {?string}
     */


    function getDataFromCustomEvent(nativeEvent) {
      var detail = nativeEvent.detail;

      if (typeof detail === 'object' && 'data' in detail) {
        return detail.data;
      }

      return null;
    }
    /**
     * Check if a composition event was triggered by Korean IME.
     * Our fallback mode does not work well with IE's Korean IME,
     * so just use native composition events when Korean IME is used.
     * Although CompositionEvent.locale property is deprecated,
     * it is available in IE, where our fallback mode is enabled.
     *
     * @param {object} nativeEvent
     * @return {boolean}
     */


    function isUsingKoreanIME(nativeEvent) {
      return nativeEvent.locale === 'ko';
    } // Track the current IME composition status, if any.


    var isComposing = false;
    /**
     * @return {?object} A SyntheticCompositionEvent.
     */

    function extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
      var eventType;
      var fallbackData;

      if (canUseCompositionEvent) {
        eventType = getCompositionEventType(domEventName);
      } else if (!isComposing) {
        if (isFallbackCompositionStart(domEventName, nativeEvent)) {
          eventType = 'onCompositionStart';
        }
      } else if (isFallbackCompositionEnd(domEventName, nativeEvent)) {
        eventType = 'onCompositionEnd';
      }

      if (!eventType) {
        return null;
      }

      if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
        // The current composition is stored statically and must not be
        // overwritten while composition continues.
        if (!isComposing && eventType === 'onCompositionStart') {
          isComposing = initialize(nativeEventTarget);
        } else if (eventType === 'onCompositionEnd') {
          if (isComposing) {
            fallbackData = getData();
          }
        }
      }

      var listeners = accumulateTwoPhaseListeners(targetInst, eventType);

      if (listeners.length > 0) {
        var event = new SyntheticCompositionEvent(eventType, domEventName, null, nativeEvent, nativeEventTarget);
        dispatchQueue.push({
          event: event,
          listeners: listeners
        });

        if (fallbackData) {
          // Inject data generated from fallback path into the synthetic event.
          // This matches the property of native CompositionEventInterface.
          event.data = fallbackData;
        } else {
          var customData = getDataFromCustomEvent(nativeEvent);

          if (customData !== null) {
            event.data = customData;
          }
        }
      }
    }

    function getNativeBeforeInputChars(domEventName, nativeEvent) {
      switch (domEventName) {
        case 'compositionend':
          return getDataFromCustomEvent(nativeEvent);

        case 'keypress':
          /**
           * If native `textInput` events are available, our goal is to make
           * use of them. However, there is a special case: the spacebar key.
           * In Webkit, preventing default on a spacebar `textInput` event
           * cancels character insertion, but it *also* causes the browser
           * to fall back to its default spacebar behavior of scrolling the
           * page.
           *
           * Tracking at:
           * https://code.google.com/p/chromium/issues/detail?id=355103
           *
           * To avoid this issue, use the keypress event as if no `textInput`
           * event is available.
           */
          var which = nativeEvent.which;

          if (which !== SPACEBAR_CODE) {
            return null;
          }

          hasSpaceKeypress = true;
          return SPACEBAR_CHAR;

        case 'textInput':
          // Record the characters to be added to the DOM.
          var chars = nativeEvent.data; // If it's a spacebar character, assume that we have already handled
          // it at the keypress level and bail immediately. Android Chrome
          // doesn't give us keycodes, so we need to ignore it.

          if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
            return null;
          }

          return chars;

        default:
          // For other native event types, do nothing.
          return null;
      }
    }
    /**
     * For browsers that do not provide the `textInput` event, extract the
     * appropriate string to use for SyntheticInputEvent.
     */


    function getFallbackBeforeInputChars(domEventName, nativeEvent) {
      // If we are currently composing (IME) and using a fallback to do so,
      // try to extract the composed characters from the fallback object.
      // If composition event is available, we extract a string only at
      // compositionevent, otherwise extract it at fallback events.
      if (isComposing) {
        if (domEventName === 'compositionend' || !canUseCompositionEvent && isFallbackCompositionEnd(domEventName, nativeEvent)) {
          var chars = getData();
          reset();
          isComposing = false;
          return chars;
        }

        return null;
      }

      switch (domEventName) {
        case 'paste':
          // If a paste event occurs after a keypress, throw out the input
          // chars. Paste events should not lead to BeforeInput events.
          return null;

        case 'keypress':
          /**
           * As of v27, Firefox may fire keypress events even when no character
           * will be inserted. A few possibilities:
           *
           * - `which` is `0`. Arrow keys, Esc key, etc.
           *
           * - `which` is the pressed key code, but no char is available.
           *   Ex: 'AltGr + d` in Polish. There is no modified character for
           *   this key combination and no character is inserted into the
           *   document, but FF fires the keypress for char code `100` anyway.
           *   No `input` event will occur.
           *
           * - `which` is the pressed key code, but a command combination is
           *   being used. Ex: `Cmd+C`. No character is inserted, and no
           *   `input` event will occur.
           */
          if (!isKeypressCommand(nativeEvent)) {
            // IE fires the `keypress` event when a user types an emoji via
            // Touch keyboard of Windows.  In such a case, the `char` property
            // holds an emoji character like `\uD83D\uDE0A`.  Because its length
            // is 2, the property `which` does not represent an emoji correctly.
            // In such a case, we directly return the `char` property instead of
            // using `which`.
            if (nativeEvent.char && nativeEvent.char.length > 1) {
              return nativeEvent.char;
            } else if (nativeEvent.which) {
              return String.fromCharCode(nativeEvent.which);
            }
          }

          return null;

        case 'compositionend':
          return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;

        default:
          return null;
      }
    }
    /**
     * Extract a SyntheticInputEvent for `beforeInput`, based on either native
     * `textInput` or fallback behavior.
     *
     * @return {?object} A SyntheticInputEvent.
     */


    function extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
      var chars;

      if (canUseTextInputEvent) {
        chars = getNativeBeforeInputChars(domEventName, nativeEvent);
      } else {
        chars = getFallbackBeforeInputChars(domEventName, nativeEvent);
      } // If no characters are being inserted, no BeforeInput event should
      // be fired.


      if (!chars) {
        return null;
      }

      var listeners = accumulateTwoPhaseListeners(targetInst, 'onBeforeInput');

      if (listeners.length > 0) {
        var event = new SyntheticInputEvent('onBeforeInput', 'beforeinput', null, nativeEvent, nativeEventTarget);
        dispatchQueue.push({
          event: event,
          listeners: listeners
        });
        event.data = chars;
      }
    }
    /**
     * Create an `onBeforeInput` event to match
     * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
     *
     * This event plugin is based on the native `textInput` event
     * available in Chrome, Safari, Opera, and IE. This event fires after
     * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
     *
     * `beforeInput` is spec'd but not implemented in any browsers, and
     * the `input` event does not provide any useful information about what has
     * actually been added, contrary to the spec. Thus, `textInput` is the best
     * available event to identify the characters that have actually been inserted
     * into the target node.
     *
     * This plugin is also responsible for emitting `composition` events, thus
     * allowing us to share composition fallback code for both `beforeInput` and
     * `composition` event types.
     */


    function extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
      extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
      extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
    }
    /**
     * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
     */


    var supportedInputTypes = {
      color: true,
      date: true,
      datetime: true,
      'datetime-local': true,
      email: true,
      month: true,
      number: true,
      password: true,
      range: true,
      search: true,
      tel: true,
      text: true,
      time: true,
      url: true,
      week: true
    };

    function isTextInputElement(elem) {
      var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

      if (nodeName === 'input') {
        return !!supportedInputTypes[elem.type];
      }

      if (nodeName === 'textarea') {
        return true;
      }

      return false;
    }
    /**
     * Checks if an event is supported in the current execution environment.
     *
     * NOTE: This will not work correctly for non-generic events such as `change`,
     * `reset`, `load`, `error`, and `select`.
     *
     * Borrows from Modernizr.
     *
     * @param {string} eventNameSuffix Event name, e.g. "click".
     * @return {boolean} True if the event is supported.
     * @internal
     * @license Modernizr 3.0.0pre (Custom Build) | MIT
     */


    function isEventSupported(eventNameSuffix) {
      if (!canUseDOM) {
        return false;
      }

      var eventName = 'on' + eventNameSuffix;
      var isSupported = (eventName in document);

      if (!isSupported) {
        var element = document.createElement('div');
        element.setAttribute(eventName, 'return;');
        isSupported = typeof element[eventName] === 'function';
      }

      return isSupported;
    }

    function registerEvents$1() {
      registerTwoPhaseEvent('onChange', ['change', 'click', 'focusin', 'focusout', 'input', 'keydown', 'keyup', 'selectionchange']);
    }

    function createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, target) {
      // Flag this event loop as needing state restore.
      enqueueStateRestore(target);
      var listeners = accumulateTwoPhaseListeners(inst, 'onChange');

      if (listeners.length > 0) {
        var event = new SyntheticEvent('onChange', 'change', null, nativeEvent, target);
        dispatchQueue.push({
          event: event,
          listeners: listeners
        });
      }
    }
    /**
     * For IE shims
     */


    var activeElement = null;
    var activeElementInst = null;
    /**
     * SECTION: handle `change` event
     */

    function shouldUseChangeEvent(elem) {
      var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
      return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
    }

    function manualDispatchChangeEvent(nativeEvent) {
      var dispatchQueue = [];
      createAndAccumulateChangeEvent(dispatchQueue, activeElementInst, nativeEvent, getEventTarget(nativeEvent)); // If change and propertychange bubbled, we'd just bind to it like all the
      // other events and have it go through ReactBrowserEventEmitter. Since it
      // doesn't, we manually listen for the events and so we have to enqueue and
      // process the abstract event manually.
      //
      // Batching is necessary here in order to ensure that all event handlers run
      // before the next rerender (including event handlers attached to ancestor
      // elements instead of directly on the input). Without this, controlled
      // components don't work properly in conjunction with event bubbling because
      // the component is rerendered and the value reverted before all the event
      // handlers can run. See https://github.com/facebook/react/issues/708.

      batchedUpdates(runEventInBatch, dispatchQueue);
    }

    function runEventInBatch(dispatchQueue) {
      processDispatchQueue(dispatchQueue, 0);
    }

    function getInstIfValueChanged(targetInst) {
      var targetNode = getNodeFromInstance(targetInst);

      if (updateValueIfChanged(targetNode)) {
        return targetInst;
      }
    }

    function getTargetInstForChangeEvent(domEventName, targetInst) {
      if (domEventName === 'change') {
        return targetInst;
      }
    }
    /**
     * SECTION: handle `input` event
     */


    var isInputEventSupported = false;

    if (canUseDOM) {
      // IE9 claims to support the input event but fails to trigger it when
      // deleting text, so we ignore its input events.
      isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
    }
    /**
     * (For IE <=9) Starts tracking propertychange events on the passed-in element
     * and override the value property so that we can distinguish user events from
     * value changes in JS.
     */


    function startWatchingForValueChange(target, targetInst) {
      activeElement = target;
      activeElementInst = targetInst;
      activeElement.attachEvent('onpropertychange', handlePropertyChange);
    }
    /**
     * (For IE <=9) Removes the event listeners from the currently-tracked element,
     * if any exists.
     */


    function stopWatchingForValueChange() {
      if (!activeElement) {
        return;
      }

      activeElement.detachEvent('onpropertychange', handlePropertyChange);
      activeElement = null;
      activeElementInst = null;
    }
    /**
     * (For IE <=9) Handles a propertychange event, sending a `change` event if
     * the value of the active element has changed.
     */


    function handlePropertyChange(nativeEvent) {
      if (nativeEvent.propertyName !== 'value') {
        return;
      }

      if (getInstIfValueChanged(activeElementInst)) {
        manualDispatchChangeEvent(nativeEvent);
      }
    }

    function handleEventsForInputEventPolyfill(domEventName, target, targetInst) {
      if (domEventName === 'focusin') {
        // In IE9, propertychange fires for most input events but is buggy and
        // doesn't fire when text is deleted, but conveniently, selectionchange
        // appears to fire in all of the remaining cases so we catch those and
        // forward the event if the value has changed
        // In either case, we don't want to call the event handler if the value
        // is changed from JS so we redefine a setter for `.value` that updates
        // our activeElementValue variable, allowing us to ignore those changes
        //
        // stopWatching() should be a noop here but we call it just in case we
        // missed a blur event somehow.
        stopWatchingForValueChange();
        startWatchingForValueChange(target, targetInst);
      } else if (domEventName === 'focusout') {
        stopWatchingForValueChange();
      }
    } // For IE8 and IE9.


    function getTargetInstForInputEventPolyfill(domEventName, targetInst) {
      if (domEventName === 'selectionchange' || domEventName === 'keyup' || domEventName === 'keydown') {
        // On the selectionchange event, the target is just document which isn't
        // helpful for us so just check activeElement instead.
        //
        // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
        // propertychange on the first input event after setting `value` from a
        // script and fires only keydown, keypress, keyup. Catching keyup usually
        // gets it and catching keydown lets us fire an event for the first
        // keystroke if user does a key repeat (it'll be a little delayed: right
        // before the second keystroke). Other input methods (e.g., paste) seem to
        // fire selectionchange normally.
        return getInstIfValueChanged(activeElementInst);
      }
    }
    /**
     * SECTION: handle `click` event
     */


    function shouldUseClickEvent(elem) {
      // Use the `click` event to detect changes to checkbox and radio inputs.
      // This approach works across all browsers, whereas `change` does not fire
      // until `blur` in IE8.
      var nodeName = elem.nodeName;
      return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
    }

    function getTargetInstForClickEvent(domEventName, targetInst) {
      if (domEventName === 'click') {
        return getInstIfValueChanged(targetInst);
      }
    }

    function getTargetInstForInputOrChangeEvent(domEventName, targetInst) {
      if (domEventName === 'input' || domEventName === 'change') {
        return getInstIfValueChanged(targetInst);
      }
    }

    function handleControlledInputBlur(node) {
      var state = node._wrapperState;

      if (!state || !state.controlled || node.type !== 'number') {
        return;
      }

      {
        // If controlled, assign the value attribute to the current value on blur
        setDefaultValue(node, 'number', node.value);
      }
    }
    /**
     * This plugin creates an `onChange` event that normalizes change events
     * across form elements. This event fires at a time when it's possible to
     * change the element's value without seeing a flicker.
     *
     * Supported elements are:
     * - input (see `isTextInputElement`)
     * - textarea
     * - select
     */


    function extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
      var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
      var getTargetInstFunc, handleEventFunc;

      if (shouldUseChangeEvent(targetNode)) {
        getTargetInstFunc = getTargetInstForChangeEvent;
      } else if (isTextInputElement(targetNode)) {
        if (isInputEventSupported) {
          getTargetInstFunc = getTargetInstForInputOrChangeEvent;
        } else {
          getTargetInstFunc = getTargetInstForInputEventPolyfill;
          handleEventFunc = handleEventsForInputEventPolyfill;
        }
      } else if (shouldUseClickEvent(targetNode)) {
        getTargetInstFunc = getTargetInstForClickEvent;
      }

      if (getTargetInstFunc) {
        var inst = getTargetInstFunc(domEventName, targetInst);

        if (inst) {
          createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, nativeEventTarget);
          return;
        }
      }

      if (handleEventFunc) {
        handleEventFunc(domEventName, targetNode, targetInst);
      } // When blurring, set the value attribute for number inputs


      if (domEventName === 'focusout') {
        handleControlledInputBlur(targetNode);
      }
    }

    function registerEvents$2() {
      registerDirectEvent('onMouseEnter', ['mouseout', 'mouseover']);
      registerDirectEvent('onMouseLeave', ['mouseout', 'mouseover']);
      registerDirectEvent('onPointerEnter', ['pointerout', 'pointerover']);
      registerDirectEvent('onPointerLeave', ['pointerout', 'pointerover']);
    }
    /**
     * For almost every interaction we care about, there will be both a top-level
     * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
     * we do not extract duplicate events. However, moving the mouse into the
     * browser from outside will not fire a `mouseout` event. In this case, we use
     * the `mouseover` top-level event.
     */


    function extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
      var isOverEvent = domEventName === 'mouseover' || domEventName === 'pointerover';
      var isOutEvent = domEventName === 'mouseout' || domEventName === 'pointerout';

      if (isOverEvent && (eventSystemFlags & IS_REPLAYED) === 0) {
        // If this is an over event with a target, we might have already dispatched
        // the event in the out event of the other target. If this is replayed,
        // then it's because we couldn't dispatch against this target previously
        // so we have to do it now instead.
        var related = nativeEvent.relatedTarget || nativeEvent.fromElement;

        if (related) {
          // If the related node is managed by React, we can assume that we have
          // already dispatched the corresponding events during its mouseout.
          if (getClosestInstanceFromNode(related) || isContainerMarkedAsRoot(related)) {
            return;
          }
        }
      }

      if (!isOutEvent && !isOverEvent) {
        // Must not be a mouse or pointer in or out - ignoring.
        return;
      }

      var win; // TODO: why is this nullable in the types but we read from it?

      if (nativeEventTarget.window === nativeEventTarget) {
        // `nativeEventTarget` is probably a window object.
        win = nativeEventTarget;
      } else {
        // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
        var doc = nativeEventTarget.ownerDocument;

        if (doc) {
          win = doc.defaultView || doc.parentWindow;
        } else {
          win = window;
        }
      }

      var from;
      var to;

      if (isOutEvent) {
        var _related = nativeEvent.relatedTarget || nativeEvent.toElement;

        from = targetInst;
        to = _related ? getClosestInstanceFromNode(_related) : null;

        if (to !== null) {
          var nearestMounted = getNearestMountedFiber(to);

          if (to !== nearestMounted || to.tag !== HostComponent && to.tag !== HostText) {
            to = null;
          }
        }
      } else {
        // Moving to a node from outside the window.
        from = null;
        to = targetInst;
      }

      if (from === to) {
        // Nothing pertains to our managed components.
        return;
      }

      var SyntheticEventCtor = SyntheticMouseEvent;
      var leaveEventType = 'onMouseLeave';
      var enterEventType = 'onMouseEnter';
      var eventTypePrefix = 'mouse';

      if (domEventName === 'pointerout' || domEventName === 'pointerover') {
        SyntheticEventCtor = SyntheticPointerEvent;
        leaveEventType = 'onPointerLeave';
        enterEventType = 'onPointerEnter';
        eventTypePrefix = 'pointer';
      }

      var fromNode = from == null ? win : getNodeFromInstance(from);
      var toNode = to == null ? win : getNodeFromInstance(to);
      var leave = new SyntheticEventCtor(leaveEventType, eventTypePrefix + 'leave', from, nativeEvent, nativeEventTarget);
      leave.target = fromNode;
      leave.relatedTarget = toNode;
      var enter = null; // We should only process this nativeEvent if we are processing
      // the first ancestor. Next time, we will ignore the event.

      var nativeTargetInst = getClosestInstanceFromNode(nativeEventTarget);

      if (nativeTargetInst === targetInst) {
        var enterEvent = new SyntheticEventCtor(enterEventType, eventTypePrefix + 'enter', to, nativeEvent, nativeEventTarget);
        enterEvent.target = toNode;
        enterEvent.relatedTarget = fromNode;
        enter = enterEvent;
      }

      accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leave, enter, from, to);
    }
    /**
     * inlined Object.is polyfill to avoid requiring consumers ship their own
     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
     */


    function is(x, y) {
      return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare
      ;
    }

    var objectIs = typeof Object.is === 'function' ? Object.is : is;
    var hasOwnProperty$2 = Object.prototype.hasOwnProperty;
    /**
     * Performs equality by iterating through keys on an object and returning false
     * when any key has values which are not strictly equal between the arguments.
     * Returns true when the values of all keys are strictly equal.
     */

    function shallowEqual(objA, objB) {
      if (objectIs(objA, objB)) {
        return true;
      }

      if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
        return false;
      }

      var keysA = Object.keys(objA);
      var keysB = Object.keys(objB);

      if (keysA.length !== keysB.length) {
        return false;
      } // Test for A's keys different from B.


      for (var i = 0; i < keysA.length; i++) {
        if (!hasOwnProperty$2.call(objB, keysA[i]) || !objectIs(objA[keysA[i]], objB[keysA[i]])) {
          return false;
        }
      }

      return true;
    }
    /**
     * Given any node return the first leaf node without children.
     *
     * @param {DOMElement|DOMTextNode} node
     * @return {DOMElement|DOMTextNode}
     */


    function getLeafNode(node) {
      while (node && node.firstChild) {
        node = node.firstChild;
      }

      return node;
    }
    /**
     * Get the next sibling within a container. This will walk up the
     * DOM if a node's siblings have been exhausted.
     *
     * @param {DOMElement|DOMTextNode} node
     * @return {?DOMElement|DOMTextNode}
     */


    function getSiblingNode(node) {
      while (node) {
        if (node.nextSibling) {
          return node.nextSibling;
        }

        node = node.parentNode;
      }
    }
    /**
     * Get object describing the nodes which contain characters at offset.
     *
     * @param {DOMElement|DOMTextNode} root
     * @param {number} offset
     * @return {?object}
     */


    function getNodeForCharacterOffset(root, offset) {
      var node = getLeafNode(root);
      var nodeStart = 0;
      var nodeEnd = 0;

      while (node) {
        if (node.nodeType === TEXT_NODE) {
          nodeEnd = nodeStart + node.textContent.length;

          if (nodeStart <= offset && nodeEnd >= offset) {
            return {
              node: node,
              offset: offset - nodeStart
            };
          }

          nodeStart = nodeEnd;
        }

        node = getLeafNode(getSiblingNode(node));
      }
    }
    /**
     * @param {DOMElement} outerNode
     * @return {?object}
     */


    function getOffsets(outerNode) {
      var ownerDocument = outerNode.ownerDocument;
      var win = ownerDocument && ownerDocument.defaultView || window;
      var selection = win.getSelection && win.getSelection();

      if (!selection || selection.rangeCount === 0) {
        return null;
      }

      var anchorNode = selection.anchorNode,
          anchorOffset = selection.anchorOffset,
          focusNode = selection.focusNode,
          focusOffset = selection.focusOffset; // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
      // up/down buttons on an <input type="number">. Anonymous divs do not seem to
      // expose properties, triggering a "Permission denied error" if any of its
      // properties are accessed. The only seemingly possible way to avoid erroring
      // is to access a property that typically works for non-anonymous divs and
      // catch any error that may otherwise arise. See
      // https://bugzilla.mozilla.org/show_bug.cgi?id=208427

      try {
        /* eslint-disable no-unused-expressions */
        anchorNode.nodeType;
        focusNode.nodeType;
        /* eslint-enable no-unused-expressions */
      } catch (e) {
        return null;
      }

      return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
    }
    /**
     * Returns {start, end} where `start` is the character/codepoint index of
     * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
     * `end` is the index of (focusNode, focusOffset).
     *
     * Returns null if you pass in garbage input but we should probably just crash.
     *
     * Exported only for testing.
     */


    function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
      var length = 0;
      var start = -1;
      var end = -1;
      var indexWithinAnchor = 0;
      var indexWithinFocus = 0;
      var node = outerNode;
      var parentNode = null;

      outer: while (true) {
        var next = null;

        while (true) {
          if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {
            start = length + anchorOffset;
          }

          if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {
            end = length + focusOffset;
          }

          if (node.nodeType === TEXT_NODE) {
            length += node.nodeValue.length;
          }

          if ((next = node.firstChild) === null) {
            break;
          } // Moving from `node` to its first child `next`.


          parentNode = node;
          node = next;
        }

        while (true) {
          if (node === outerNode) {
            // If `outerNode` has children, this is always the second time visiting
            // it. If it has no children, this is still the first loop, and the only
            // valid selection is anchorNode and focusNode both equal to this node
            // and both offsets 0, in which case we will have handled above.
            break outer;
          }

          if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {
            start = length;
          }

          if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {
            end = length;
          }

          if ((next = node.nextSibling) !== null) {
            break;
          }

          node = parentNode;
          parentNode = node.parentNode;
        } // Moving from `node` to its next sibling `next`.


        node = next;
      }

      if (start === -1 || end === -1) {
        // This should never happen. (Would happen if the anchor/focus nodes aren't
        // actually inside the passed-in node.)
        return null;
      }

      return {
        start: start,
        end: end
      };
    }
    /**
     * In modern non-IE browsers, we can support both forward and backward
     * selections.
     *
     * Note: IE10+ supports the Selection object, but it does not support
     * the `extend` method, which means that even in modern IE, it's not possible
     * to programmatically create a backward selection. Thus, for all IE
     * versions, we use the old IE API to create our selections.
     *
     * @param {DOMElement|DOMTextNode} node
     * @param {object} offsets
     */


    function setOffsets(node, offsets) {
      var doc = node.ownerDocument || document;
      var win = doc && doc.defaultView || window; // Edge fails with "Object expected" in some scenarios.
      // (For instance: TinyMCE editor used in a list component that supports pasting to add more,
      // fails when pasting 100+ items)

      if (!win.getSelection) {
        return;
      }

      var selection = win.getSelection();
      var length = node.textContent.length;
      var start = Math.min(offsets.start, length);
      var end = offsets.end === undefined ? start : Math.min(offsets.end, length); // IE 11 uses modern selection, but doesn't support the extend method.
      // Flip backward selections, so we can set with a single range.

      if (!selection.extend && start > end) {
        var temp = end;
        end = start;
        start = temp;
      }

      var startMarker = getNodeForCharacterOffset(node, start);
      var endMarker = getNodeForCharacterOffset(node, end);

      if (startMarker && endMarker) {
        if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {
          return;
        }

        var range = doc.createRange();
        range.setStart(startMarker.node, startMarker.offset);
        selection.removeAllRanges();

        if (start > end) {
          selection.addRange(range);
          selection.extend(endMarker.node, endMarker.offset);
        } else {
          range.setEnd(endMarker.node, endMarker.offset);
          selection.addRange(range);
        }
      }
    }

    function isTextNode(node) {
      return node && node.nodeType === TEXT_NODE;
    }

    function containsNode(outerNode, innerNode) {
      if (!outerNode || !innerNode) {
        return false;
      } else if (outerNode === innerNode) {
        return true;
      } else if (isTextNode(outerNode)) {
        return false;
      } else if (isTextNode(innerNode)) {
        return containsNode(outerNode, innerNode.parentNode);
      } else if ('contains' in outerNode) {
        return outerNode.contains(innerNode);
      } else if (outerNode.compareDocumentPosition) {
        return !!(outerNode.compareDocumentPosition(innerNode) & 16);
      } else {
        return false;
      }
    }

    function isInDocument(node) {
      return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);
    }

    function isSameOriginFrame(iframe) {
      try {
        // Accessing the contentDocument of a HTMLIframeElement can cause the browser
        // to throw, e.g. if it has a cross-origin src attribute.
        // Safari will show an error in the console when the access results in "Blocked a frame with origin". e.g:
        // iframe.contentDocument.defaultView;
        // A safety way is to access one of the cross origin properties: Window or Location
        // Which might result in "SecurityError" DOM Exception and it is compatible to Safari.
        // https://html.spec.whatwg.org/multipage/browsers.html#integration-with-idl
        return typeof iframe.contentWindow.location.href === 'string';
      } catch (err) {
        return false;
      }
    }

    function getActiveElementDeep() {
      var win = window;
      var element = getActiveElement();

      while (element instanceof win.HTMLIFrameElement) {
        if (isSameOriginFrame(element)) {
          win = element.contentWindow;
        } else {
          return element;
        }

        element = getActiveElement(win.document);
      }

      return element;
    }
    /**
     * @ReactInputSelection: React input selection module. Based on Selection.js,
     * but modified to be suitable for react and has a couple of bug fixes (doesn't
     * assume buttons have range selections allowed).
     * Input selection module for React.
     */

    /**
     * @hasSelectionCapabilities: we get the element types that support selection
     * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`
     * and `selectionEnd` rows.
     */


    function hasSelectionCapabilities(elem) {
      var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
      return nodeName && (nodeName === 'input' && (elem.type === 'text' || elem.type === 'search' || elem.type === 'tel' || elem.type === 'url' || elem.type === 'password') || nodeName === 'textarea' || elem.contentEditable === 'true');
    }

    function getSelectionInformation() {
      var focusedElem = getActiveElementDeep();
      return {
        focusedElem: focusedElem,
        selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection(focusedElem) : null
      };
    }
    /**
     * @restoreSelection: If any selection information was potentially lost,
     * restore it. This is useful when performing operations that could remove dom
     * nodes and place them back in, resulting in focus being lost.
     */


    function restoreSelection(priorSelectionInformation) {
      var curFocusedElem = getActiveElementDeep();
      var priorFocusedElem = priorSelectionInformation.focusedElem;
      var priorSelectionRange = priorSelectionInformation.selectionRange;

      if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
        if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) {
          setSelection(priorFocusedElem, priorSelectionRange);
        } // Focusing a node can change the scroll position, which is undesirable


        var ancestors = [];
        var ancestor = priorFocusedElem;

        while (ancestor = ancestor.parentNode) {
          if (ancestor.nodeType === ELEMENT_NODE) {
            ancestors.push({
              element: ancestor,
              left: ancestor.scrollLeft,
              top: ancestor.scrollTop
            });
          }
        }

        if (typeof priorFocusedElem.focus === 'function') {
          priorFocusedElem.focus();
        }

        for (var i = 0; i < ancestors.length; i++) {
          var info = ancestors[i];
          info.element.scrollLeft = info.left;
          info.element.scrollTop = info.top;
        }
      }
    }
    /**
     * @getSelection: Gets the selection bounds of a focused textarea, input or
     * contentEditable node.
     * -@input: Look up selection bounds of this input
     * -@return {start: selectionStart, end: selectionEnd}
     */


    function getSelection(input) {
      var selection;

      if ('selectionStart' in input) {
        // Modern browser with input or textarea.
        selection = {
          start: input.selectionStart,
          end: input.selectionEnd
        };
      } else {
        // Content editable or old IE textarea.
        selection = getOffsets(input);
      }

      return selection || {
        start: 0,
        end: 0
      };
    }
    /**
     * @setSelection: Sets the selection bounds of a textarea or input and focuses
     * the input.
     * -@input     Set selection bounds of this input or textarea
     * -@offsets   Object of same form that is returned from get*
     */


    function setSelection(input, offsets) {
      var start = offsets.start;
      var end = offsets.end;

      if (end === undefined) {
        end = start;
      }

      if ('selectionStart' in input) {
        input.selectionStart = start;
        input.selectionEnd = Math.min(end, input.value.length);
      } else {
        setOffsets(input, offsets);
      }
    }

    var skipSelectionChangeEvent = canUseDOM && 'documentMode' in document && document.documentMode <= 11;

    function registerEvents$3() {
      registerTwoPhaseEvent('onSelect', ['focusout', 'contextmenu', 'dragend', 'focusin', 'keydown', 'keyup', 'mousedown', 'mouseup', 'selectionchange']);
    }

    var activeElement$1 = null;
    var activeElementInst$1 = null;
    var lastSelection = null;
    var mouseDown = false;
    /**
     * Get an object which is a unique representation of the current selection.
     *
     * The return value will not be consistent across nodes or browsers, but
     * two identical selections on the same node will return identical objects.
     */

    function getSelection$1(node) {
      if ('selectionStart' in node && hasSelectionCapabilities(node)) {
        return {
          start: node.selectionStart,
          end: node.selectionEnd
        };
      } else {
        var win = node.ownerDocument && node.ownerDocument.defaultView || window;
        var selection = win.getSelection();
        return {
          anchorNode: selection.anchorNode,
          anchorOffset: selection.anchorOffset,
          focusNode: selection.focusNode,
          focusOffset: selection.focusOffset
        };
      }
    }
    /**
     * Get document associated with the event target.
     */


    function getEventTargetDocument(eventTarget) {
      return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
    }
    /**
     * Poll selection to see whether it's changed.
     *
     * @param {object} nativeEvent
     * @param {object} nativeEventTarget
     * @return {?SyntheticEvent}
     */


    function constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {
      // Ensure we have the right element, and that the user is not dragging a
      // selection (this matches native `select` event behavior). In HTML5, select
      // fires only on input and textarea thus if there's no focused element we
      // won't dispatch.
      var doc = getEventTargetDocument(nativeEventTarget);

      if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) {
        return;
      } // Only fire when selection has actually changed.


      var currentSelection = getSelection$1(activeElement$1);

      if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
        lastSelection = currentSelection;
        var listeners = accumulateTwoPhaseListeners(activeElementInst$1, 'onSelect');

        if (listeners.length > 0) {
          var event = new SyntheticEvent('onSelect', 'select', null, nativeEvent, nativeEventTarget);
          dispatchQueue.push({
            event: event,
            listeners: listeners
          });
          event.target = activeElement$1;
        }
      }
    }
    /**
     * This plugin creates an `onSelect` event that normalizes select events
     * across form elements.
     *
     * Supported elements are:
     * - input (see `isTextInputElement`)
     * - textarea
     * - contentEditable
     *
     * This differs from native browser implementations in the following ways:
     * - Fires on contentEditable fields as well as inputs.
     * - Fires for collapsed selection.
     * - Fires after user input.
     */


    function extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
      var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;

      switch (domEventName) {
        // Track the input node that has focus.
        case 'focusin':
          if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
            activeElement$1 = targetNode;
            activeElementInst$1 = targetInst;
            lastSelection = null;
          }

          break;

        case 'focusout':
          activeElement$1 = null;
          activeElementInst$1 = null;
          lastSelection = null;
          break;
        // Don't fire the event while the user is dragging. This matches the
        // semantics of the native select event.

        case 'mousedown':
          mouseDown = true;
          break;

        case 'contextmenu':
        case 'mouseup':
        case 'dragend':
          mouseDown = false;
          constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
          break;
        // Chrome and IE fire non-standard event when selection is changed (and
        // sometimes when it hasn't). IE's event fires out of order with respect
        // to key and input events on deletion, so we discard it.
        //
        // Firefox doesn't support selectionchange, so check selection status
        // after each key entry. The selection changes after keydown and before
        // keyup, but we check on keydown as well in the case of holding down a
        // key, when multiple keydown events are fired but only one keyup is.
        // This is also our approach for IE handling, for the reason above.

        case 'selectionchange':
          if (skipSelectionChangeEvent) {
            break;
          }

        // falls through

        case 'keydown':
        case 'keyup':
          constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
      }
    }

    function extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
      var reactName = topLevelEventsToReactNames.get(domEventName);

      if (reactName === undefined) {
        return;
      }

      var SyntheticEventCtor = SyntheticEvent;
      var reactEventType = domEventName;

      switch (domEventName) {
        case 'keypress':
          // Firefox creates a keypress event for function keys too. This removes
          // the unwanted keypress events. Enter is however both printable and
          // non-printable. One would expect Tab to be as well (but it isn't).
          if (getEventCharCode(nativeEvent) === 0) {
            return;
          }

        /* falls through */

        case 'keydown':
        case 'keyup':
          SyntheticEventCtor = SyntheticKeyboardEvent;
          break;

        case 'focusin':
          reactEventType = 'focus';
          SyntheticEventCtor = SyntheticFocusEvent;
          break;

        case 'focusout':
          reactEventType = 'blur';
          SyntheticEventCtor = SyntheticFocusEvent;
          break;

        case 'beforeblur':
        case 'afterblur':
          SyntheticEventCtor = SyntheticFocusEvent;
          break;

        case 'click':
          // Firefox creates a click event on right mouse clicks. This removes the
          // unwanted click events.
          if (nativeEvent.button === 2) {
            return;
          }

        /* falls through */

        case 'auxclick':
        case 'dblclick':
        case 'mousedown':
        case 'mousemove':
        case 'mouseup': // TODO: Disabled elements should not respond to mouse events

        /* falls through */

        case 'mouseout':
        case 'mouseover':
        case 'contextmenu':
          SyntheticEventCtor = SyntheticMouseEvent;
          break;

        case 'drag':
        case 'dragend':
        case 'dragenter':
        case 'dragexit':
        case 'dragleave':
        case 'dragover':
        case 'dragstart':
        case 'drop':
          SyntheticEventCtor = SyntheticDragEvent;
          break;

        case 'touchcancel':
        case 'touchend':
        case 'touchmove':
        case 'touchstart':
          SyntheticEventCtor = SyntheticTouchEvent;
          break;

        case ANIMATION_END:
        case ANIMATION_ITERATION:
        case ANIMATION_START:
          SyntheticEventCtor = SyntheticAnimationEvent;
          break;

        case TRANSITION_END:
          SyntheticEventCtor = SyntheticTransitionEvent;
          break;

        case 'scroll':
          SyntheticEventCtor = SyntheticUIEvent;
          break;

        case 'wheel':
          SyntheticEventCtor = SyntheticWheelEvent;
          break;

        case 'copy':
        case 'cut':
        case 'paste':
          SyntheticEventCtor = SyntheticClipboardEvent;
          break;

        case 'gotpointercapture':
        case 'lostpointercapture':
        case 'pointercancel':
        case 'pointerdown':
        case 'pointermove':
        case 'pointerout':
        case 'pointerover':
        case 'pointerup':
          SyntheticEventCtor = SyntheticPointerEvent;
          break;
      }

      var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
      {
        // Some events don't bubble in the browser.
        // In the past, React has always bubbled them, but this can be surprising.
        // We're going to try aligning closer to the browser behavior by not bubbling
        // them in React either. We'll start by not bubbling onScroll, and then expand.
        var accumulateTargetOnly = !inCapturePhase && // TODO: ideally, we'd eventually add all events from
        // nonDelegatedEvents list in DOMPluginEventSystem.
        // Then we can remove this special list.
        // This is a breaking change that can wait until React 18.
        domEventName === 'scroll';

        var _listeners = accumulateSinglePhaseListeners(targetInst, reactName, nativeEvent.type, inCapturePhase, accumulateTargetOnly);

        if (_listeners.length > 0) {
          // Intentionally create event lazily.
          var _event = new SyntheticEventCtor(reactName, reactEventType, null, nativeEvent, nativeEventTarget);

          dispatchQueue.push({
            event: _event,
            listeners: _listeners
          });
        }
      }
    } // TODO: remove top-level side effect.


    registerSimpleEvents();
    registerEvents$2();
    registerEvents$1();
    registerEvents$3();
    registerEvents();

    function extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
      // TODO: we should remove the concept of a "SimpleEventPlugin".
      // This is the basic functionality of the event system. All
      // the other plugins are essentially polyfills. So the plugin
      // should probably be inlined somewhere and have its logic
      // be core the to event system. This would potentially allow
      // us to ship builds of React without the polyfilled plugins below.
      extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
      var shouldProcessPolyfillPlugins = (eventSystemFlags & SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS) === 0; // We don't process these events unless we are in the
      // event's native "bubble" phase, which means that we're
      // not in the capture phase. That's because we emulate
      // the capture phase here still. This is a trade-off,
      // because in an ideal world we would not emulate and use
      // the phases properly, like we do with the SimpleEvent
      // plugin. However, the plugins below either expect
      // emulation (EnterLeave) or use state localized to that
      // plugin (BeforeInput, Change, Select). The state in
      // these modules complicates things, as you'll essentially
      // get the case where the capture phase event might change
      // state, only for the following bubble event to come in
      // later and not trigger anything as the state now
      // invalidates the heuristics of the event plugin. We
      // could alter all these plugins to work in such ways, but
      // that might cause other unknown side-effects that we
      // can't forsee right now.

      if (shouldProcessPolyfillPlugins) {
        extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
        extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
        extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
        extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
      }
    } // List of events that need to be individually attached to media elements.


    var mediaEventTypes = ['abort', 'canplay', 'canplaythrough', 'durationchange', 'emptied', 'encrypted', 'ended', 'error', 'loadeddata', 'loadedmetadata', 'loadstart', 'pause', 'play', 'playing', 'progress', 'ratechange', 'seeked', 'seeking', 'stalled', 'suspend', 'timeupdate', 'volumechange', 'waiting']; // We should not delegate these events to the container, but rather
    // set them on the actual target element itself. This is primarily
    // because these events do not consistently bubble in the DOM.

    var nonDelegatedEvents = new Set(['cancel', 'close', 'invalid', 'load', 'scroll', 'toggle'].concat(mediaEventTypes));

    function executeDispatch(event, listener, currentTarget) {
      var type = event.type || 'unknown-event';
      event.currentTarget = currentTarget;
      invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
      event.currentTarget = null;
    }

    function processDispatchQueueItemsInOrder(event, dispatchListeners, inCapturePhase) {
      var previousInstance;

      if (inCapturePhase) {
        for (var i = dispatchListeners.length - 1; i >= 0; i--) {
          var _dispatchListeners$i = dispatchListeners[i],
              instance = _dispatchListeners$i.instance,
              currentTarget = _dispatchListeners$i.currentTarget,
              listener = _dispatchListeners$i.listener;

          if (instance !== previousInstance && event.isPropagationStopped()) {
            return;
          }

          executeDispatch(event, listener, currentTarget);
          previousInstance = instance;
        }
      } else {
        for (var _i = 0; _i < dispatchListeners.length; _i++) {
          var _dispatchListeners$_i = dispatchListeners[_i],
              _instance = _dispatchListeners$_i.instance,
              _currentTarget = _dispatchListeners$_i.currentTarget,
              _listener = _dispatchListeners$_i.listener;

          if (_instance !== previousInstance && event.isPropagationStopped()) {
            return;
          }

          executeDispatch(event, _listener, _currentTarget);
          previousInstance = _instance;
        }
      }
    }

    function processDispatchQueue(dispatchQueue, eventSystemFlags) {
      var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;

      for (var i = 0; i < dispatchQueue.length; i++) {
        var _dispatchQueue$i = dispatchQueue[i],
            event = _dispatchQueue$i.event,
            listeners = _dispatchQueue$i.listeners;
        processDispatchQueueItemsInOrder(event, listeners, inCapturePhase); //  event system doesn't use pooling.
      } // This would be a good time to rethrow if any of the event handlers threw.


      rethrowCaughtError();
    }

    function dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
      var nativeEventTarget = getEventTarget(nativeEvent);
      var dispatchQueue = [];
      extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
      processDispatchQueue(dispatchQueue, eventSystemFlags);
    }

    function listenToNonDelegatedEvent(domEventName, targetElement) {
      var isCapturePhaseListener = false;
      var listenerSet = getEventListenerSet(targetElement);
      var listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener);

      if (!listenerSet.has(listenerSetKey)) {
        addTrappedEventListener(targetElement, domEventName, IS_NON_DELEGATED, isCapturePhaseListener);
        listenerSet.add(listenerSetKey);
      }
    }

    var listeningMarker = '_reactListening' + Math.random().toString(36).slice(2);

    function listenToAllSupportedEvents(rootContainerElement) {
      {
        if (rootContainerElement[listeningMarker]) {
          // Performance optimization: don't iterate through events
          // for the same portal container or root node more than once.
          // TODO: once we remove the flag, we may be able to also
          // remove some of the bookkeeping maps used for laziness.
          return;
        }

        rootContainerElement[listeningMarker] = true;
        allNativeEvents.forEach(function (domEventName) {
          if (!nonDelegatedEvents.has(domEventName)) {
            listenToNativeEvent(domEventName, false, rootContainerElement, null);
          }

          listenToNativeEvent(domEventName, true, rootContainerElement, null);
        });
      }
    }

    function listenToNativeEvent(domEventName, isCapturePhaseListener, rootContainerElement, targetElement) {
      var eventSystemFlags = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;
      var target = rootContainerElement; // selectionchange needs to be attached to the document
      // otherwise it won't capture incoming events that are only
      // triggered on the document directly.

      if (domEventName === 'selectionchange' && rootContainerElement.nodeType !== DOCUMENT_NODE) {
        target = rootContainerElement.ownerDocument;
      } // If the event can be delegated (or is capture phase), we can
      // register it to the root container. Otherwise, we should
      // register the event to the target element and mark it as
      // a non-delegated event.


      if (targetElement !== null && !isCapturePhaseListener && nonDelegatedEvents.has(domEventName)) {
        // For all non-delegated events, apart from scroll, we attach
        // their event listeners to the respective elements that their
        // events fire on. That means we can skip this step, as event
        // listener has already been added previously. However, we
        // special case the scroll event because the reality is that any
        // element can scroll.
        // TODO: ideally, we'd eventually apply the same logic to all
        // events from the nonDelegatedEvents list. Then we can remove
        // this special case and use the same logic for all events.
        if (domEventName !== 'scroll') {
          return;
        }

        eventSystemFlags |= IS_NON_DELEGATED;
        target = targetElement;
      }

      var listenerSet = getEventListenerSet(target);
      var listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener); // If the listener entry is empty or we should upgrade, then
      // we need to trap an event listener onto the target.

      if (!listenerSet.has(listenerSetKey)) {
        if (isCapturePhaseListener) {
          eventSystemFlags |= IS_CAPTURE_PHASE;
        }

        addTrappedEventListener(target, domEventName, eventSystemFlags, isCapturePhaseListener);
        listenerSet.add(listenerSetKey);
      }
    }

    function addTrappedEventListener(targetContainer, domEventName, eventSystemFlags, isCapturePhaseListener, isDeferredListenerForLegacyFBSupport) {
      var listener = createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags); // If passive option is not supported, then the event will be
      // active and not passive.

      var isPassiveListener = undefined;

      if (passiveBrowserEventsSupported) {
        // Browsers introduced an intervention, making these events
        // passive by default on document. React doesn't bind them
        // to document anymore, but changing this now would undo
        // the performance wins from the change. So we emulate
        // the existing behavior manually on the roots now.
        // https://github.com/facebook/react/issues/19651
        if (domEventName === 'touchstart' || domEventName === 'touchmove' || domEventName === 'wheel') {
          isPassiveListener = true;
        }
      }

      targetContainer = targetContainer;
      var unsubscribeListener; // When legacyFBSupport is enabled, it's for when we

      if (isCapturePhaseListener) {
        if (isPassiveListener !== undefined) {
          unsubscribeListener = addEventCaptureListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
        } else {
          unsubscribeListener = addEventCaptureListener(targetContainer, domEventName, listener);
        }
      } else {
        if (isPassiveListener !== undefined) {
          unsubscribeListener = addEventBubbleListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
        } else {
          unsubscribeListener = addEventBubbleListener(targetContainer, domEventName, listener);
        }
      }
    }

    function isMatchingRootContainer(grandContainer, targetContainer) {
      return grandContainer === targetContainer || grandContainer.nodeType === COMMENT_NODE && grandContainer.parentNode === targetContainer;
    }

    function dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
      var ancestorInst = targetInst;

      if ((eventSystemFlags & IS_EVENT_HANDLE_NON_MANAGED_NODE) === 0 && (eventSystemFlags & IS_NON_DELEGATED) === 0) {
        var targetContainerNode = targetContainer; // If we are using the legacy FB support flag, we

        if (targetInst !== null) {
          // The below logic attempts to work out if we need to change
          // the target fiber to a different ancestor. We had similar logic
          // in the legacy event system, except the big difference between
          // systems is that the modern event system now has an event listener
          // attached to each React Root and React Portal Root. Together,
          // the DOM nodes representing these roots are the "rootContainer".
          // To figure out which ancestor instance we should use, we traverse
          // up the fiber tree from the target instance and attempt to find
          // root boundaries that match that of our current "rootContainer".
          // If we find that "rootContainer", we find the parent fiber
          // sub-tree for that root and make that our ancestor instance.
          var node = targetInst;

          mainLoop: while (true) {
            if (node === null) {
              return;
            }

            var nodeTag = node.tag;

            if (nodeTag === HostRoot || nodeTag === HostPortal) {
              var container = node.stateNode.containerInfo;

              if (isMatchingRootContainer(container, targetContainerNode)) {
                break;
              }

              if (nodeTag === HostPortal) {
                // The target is a portal, but it's not the rootContainer we're looking for.
                // Normally portals handle their own events all the way down to the root.
                // So we should be able to stop now. However, we don't know if this portal
                // was part of *our* root.
                var grandNode = node.return;

                while (grandNode !== null) {
                  var grandTag = grandNode.tag;

                  if (grandTag === HostRoot || grandTag === HostPortal) {
                    var grandContainer = grandNode.stateNode.containerInfo;

                    if (isMatchingRootContainer(grandContainer, targetContainerNode)) {
                      // This is the rootContainer we're looking for and we found it as
                      // a parent of the Portal. That means we can ignore it because the
                      // Portal will bubble through to us.
                      return;
                    }
                  }

                  grandNode = grandNode.return;
                }
              } // Now we need to find it's corresponding host fiber in the other
              // tree. To do this we can use getClosestInstanceFromNode, but we
              // need to validate that the fiber is a host instance, otherwise
              // we need to traverse up through the DOM till we find the correct
              // node that is from the other tree.


              while (container !== null) {
                var parentNode = getClosestInstanceFromNode(container);

                if (parentNode === null) {
                  return;
                }

                var parentTag = parentNode.tag;

                if (parentTag === HostComponent || parentTag === HostText) {
                  node = ancestorInst = parentNode;
                  continue mainLoop;
                }

                container = container.parentNode;
              }
            }

            node = node.return;
          }
        }
      }

      batchedEventUpdates(function () {
        return dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, ancestorInst);
      });
    }

    function createDispatchListener(instance, listener, currentTarget) {
      return {
        instance: instance,
        listener: listener,
        currentTarget: currentTarget
      };
    }

    function accumulateSinglePhaseListeners(targetFiber, reactName, nativeEventType, inCapturePhase, accumulateTargetOnly) {
      var captureName = reactName !== null ? reactName + 'Capture' : null;
      var reactEventName = inCapturePhase ? captureName : reactName;
      var listeners = [];
      var instance = targetFiber;
      var lastHostComponent = null; // Accumulate all instances and listeners via the target -> root path.

      while (instance !== null) {
        var _instance2 = instance,
            stateNode = _instance2.stateNode,
            tag = _instance2.tag; // Handle listeners that are on HostComponents (i.e. <div>)

        if (tag === HostComponent && stateNode !== null) {
          lastHostComponent = stateNode; // createEventHandle listeners

          if (reactEventName !== null) {
            var listener = getListener(instance, reactEventName);

            if (listener != null) {
              listeners.push(createDispatchListener(instance, listener, lastHostComponent));
            }
          }
        } // If we are only accumulating events for the target, then we don't
        // continue to propagate through the React fiber tree to find other
        // listeners.


        if (accumulateTargetOnly) {
          break;
        }

        instance = instance.return;
      }

      return listeners;
    } // We should only use this function for:
    // - BeforeInputEventPlugin
    // - ChangeEventPlugin
    // - SelectEventPlugin
    // This is because we only process these plugins
    // in the bubble phase, so we need to accumulate two
    // phase event listeners (via emulation).


    function accumulateTwoPhaseListeners(targetFiber, reactName) {
      var captureName = reactName + 'Capture';
      var listeners = [];
      var instance = targetFiber; // Accumulate all instances and listeners via the target -> root path.

      while (instance !== null) {
        var _instance3 = instance,
            stateNode = _instance3.stateNode,
            tag = _instance3.tag; // Handle listeners that are on HostComponents (i.e. <div>)

        if (tag === HostComponent && stateNode !== null) {
          var currentTarget = stateNode;
          var captureListener = getListener(instance, captureName);

          if (captureListener != null) {
            listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
          }

          var bubbleListener = getListener(instance, reactName);

          if (bubbleListener != null) {
            listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
          }
        }

        instance = instance.return;
      }

      return listeners;
    }

    function getParent(inst) {
      if (inst === null) {
        return null;
      }

      do {
        inst = inst.return; // TODO: If this is a HostRoot we might want to bail out.
        // That is depending on if we want nested subtrees (layers) to bubble
        // events to their parent. We could also go through parentNode on the
        // host node but that wouldn't work for React Native and doesn't let us
        // do the portal feature.
      } while (inst && inst.tag !== HostComponent);

      if (inst) {
        return inst;
      }

      return null;
    }
    /**
     * Return the lowest common ancestor of A and B, or null if they are in
     * different trees.
     */


    function getLowestCommonAncestor(instA, instB) {
      var nodeA = instA;
      var nodeB = instB;
      var depthA = 0;

      for (var tempA = nodeA; tempA; tempA = getParent(tempA)) {
        depthA++;
      }

      var depthB = 0;

      for (var tempB = nodeB; tempB; tempB = getParent(tempB)) {
        depthB++;
      } // If A is deeper, crawl up.


      while (depthA - depthB > 0) {
        nodeA = getParent(nodeA);
        depthA--;
      } // If B is deeper, crawl up.


      while (depthB - depthA > 0) {
        nodeB = getParent(nodeB);
        depthB--;
      } // Walk in lockstep until we find a match.


      var depth = depthA;

      while (depth--) {
        if (nodeA === nodeB || nodeB !== null && nodeA === nodeB.alternate) {
          return nodeA;
        }

        nodeA = getParent(nodeA);
        nodeB = getParent(nodeB);
      }

      return null;
    }

    function accumulateEnterLeaveListenersForEvent(dispatchQueue, event, target, common, inCapturePhase) {
      var registrationName = event._reactName;
      var listeners = [];
      var instance = target;

      while (instance !== null) {
        if (instance === common) {
          break;
        }

        var _instance4 = instance,
            alternate = _instance4.alternate,
            stateNode = _instance4.stateNode,
            tag = _instance4.tag;

        if (alternate !== null && alternate === common) {
          break;
        }

        if (tag === HostComponent && stateNode !== null) {
          var currentTarget = stateNode;

          if (inCapturePhase) {
            var captureListener = getListener(instance, registrationName);

            if (captureListener != null) {
              listeners.unshift(createDispatchListener(instance, captureListener, currentTarget));
            }
          } else if (!inCapturePhase) {
            var bubbleListener = getListener(instance, registrationName);

            if (bubbleListener != null) {
              listeners.push(createDispatchListener(instance, bubbleListener, currentTarget));
            }
          }
        }

        instance = instance.return;
      }

      if (listeners.length !== 0) {
        dispatchQueue.push({
          event: event,
          listeners: listeners
        });
      }
    } // We should only use this function for:
    // - EnterLeaveEventPlugin
    // This is because we only process this plugin
    // in the bubble phase, so we need to accumulate two
    // phase event listeners.


    function accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leaveEvent, enterEvent, from, to) {
      var common = from && to ? getLowestCommonAncestor(from, to) : null;

      if (from !== null) {
        accumulateEnterLeaveListenersForEvent(dispatchQueue, leaveEvent, from, common, false);
      }

      if (to !== null && enterEvent !== null) {
        accumulateEnterLeaveListenersForEvent(dispatchQueue, enterEvent, to, common, true);
      }
    }

    function getListenerSetKey(domEventName, capture) {
      return domEventName + "__" + (capture ? 'capture' : 'bubble');
    }

    var didWarnInvalidHydration = false;
    var DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';
    var SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';
    var SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';
    var AUTOFOCUS = 'autoFocus';
    var CHILDREN = 'children';
    var STYLE = 'style';
    var HTML$1 = '__html';
    var HTML_NAMESPACE$1 = Namespaces.html;
    var warnedUnknownTags;
    var suppressHydrationWarning;
    var validatePropertiesInDevelopment;
    var warnForTextDifference;
    var warnForPropDifference;
    var warnForExtraAttributes;
    var warnForInvalidEventListener;
    var canDiffStyleForHydrationWarning;
    var normalizeMarkupForTextOrAttribute;
    var normalizeHTML;
    {
      warnedUnknownTags = {
        // There are working polyfills for <dialog>. Let people use it.
        dialog: true,
        // Electron ships a custom <webview> tag to display external web content in
        // an isolated frame and process.
        // This tag is not present in non Electron environments such as JSDom which
        // is often used for testing purposes.
        // @see https://electronjs.org/docs/api/webview-tag
        webview: true
      };

      validatePropertiesInDevelopment = function (type, props) {
        validateProperties(type, props);
        validateProperties$1(type, props);
        validateProperties$2(type, props, {
          registrationNameDependencies: registrationNameDependencies,
          possibleRegistrationNames: possibleRegistrationNames
        });
      }; // IE 11 parses & normalizes the style attribute as opposed to other
      // browsers. It adds spaces and sorts the properties in some
      // non-alphabetical order. Handling that would require sorting CSS
      // properties in the client & server versions or applying
      // `expectedStyle` to a temporary DOM node to read its `style` attribute
      // normalized. Since it only affects IE, we're skipping style warnings
      // in that browser completely in favor of doing all that work.
      // See https://github.com/facebook/react/issues/11807


      canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode; // HTML parsing normalizes CR and CRLF to LF.
      // It also can turn \u0000 into \uFFFD inside attributes.
      // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
      // If we have a mismatch, it might be caused by that.
      // We will still patch up in this case but not fire the warning.

      var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
      var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;

      normalizeMarkupForTextOrAttribute = function (markup) {
        var markupString = typeof markup === 'string' ? markup : '' + markup;
        return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');
      };

      warnForTextDifference = function (serverText, clientText) {
        if (didWarnInvalidHydration) {
          return;
        }

        var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
        var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);

        if (normalizedServerText === normalizedClientText) {
          return;
        }

        didWarnInvalidHydration = true;
        error('Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
      };

      warnForPropDifference = function (propName, serverValue, clientValue) {
        if (didWarnInvalidHydration) {
          return;
        }

        var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
        var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);

        if (normalizedServerValue === normalizedClientValue) {
          return;
        }

        didWarnInvalidHydration = true;
        error('Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
      };

      warnForExtraAttributes = function (attributeNames) {
        if (didWarnInvalidHydration) {
          return;
        }

        didWarnInvalidHydration = true;
        var names = [];
        attributeNames.forEach(function (name) {
          names.push(name);
        });
        error('Extra attributes from the server: %s', names);
      };

      warnForInvalidEventListener = function (registrationName, listener) {
        if (listener === false) {
          error('Expected `%s` listener to be a function, instead got `false`.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', registrationName, registrationName, registrationName);
        } else {
          error('Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener);
        }
      }; // Parse the HTML and read it back to normalize the HTML string so that it
      // can be used for comparison.


      normalizeHTML = function (parent, html) {
        // We could have created a separate document here to avoid
        // re-initializing custom elements if they exist. But this breaks
        // how <noscript> is being handled. So we use the same document.
        // See the discussion in https://github.com/facebook/react/pull/11157.
        var testElement = parent.namespaceURI === HTML_NAMESPACE$1 ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
        testElement.innerHTML = html;
        return testElement.innerHTML;
      };
    }

    function getOwnerDocumentFromRootContainer(rootContainerElement) {
      return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
    }

    function noop() {}

    function trapClickOnNonInteractiveElement(node) {
      // Mobile Safari does not fire properly bubble click events on
      // non-interactive elements, which means delegated click listeners do not
      // fire. The workaround for this bug involves attaching an empty click
      // listener on the target node.
      // https://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
      // Just set it using the onclick property so that we don't have to manage any
      // bookkeeping for it. Not sure if we need to clear it when the listener is
      // removed.
      // TODO: Only do this for the relevant Safaris maybe?
      node.onclick = noop;
    }

    function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
      for (var propKey in nextProps) {
        if (!nextProps.hasOwnProperty(propKey)) {
          continue;
        }

        var nextProp = nextProps[propKey];

        if (propKey === STYLE) {
          {
            if (nextProp) {
              // Freeze the next style object so that we can assume it won't be
              // mutated. We have already warned for this in the past.
              Object.freeze(nextProp);
            }
          } // Relies on `updateStylesByID` not mutating `styleUpdates`.

          setValueForStyles(domElement, nextProp);
        } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
          var nextHtml = nextProp ? nextProp[HTML$1] : undefined;

          if (nextHtml != null) {
            setInnerHTML(domElement, nextHtml);
          }
        } else if (propKey === CHILDREN) {
          if (typeof nextProp === 'string') {
            // Avoid setting initial textContent when the text is empty. In IE11 setting
            // textContent on a <textarea> will cause the placeholder to not
            // show within the <textarea> until it has been focused and blurred again.
            // https://github.com/facebook/react/issues/6731#issuecomment-254874553
            var canSetTextContent = tag !== 'textarea' || nextProp !== '';

            if (canSetTextContent) {
              setTextContent(domElement, nextProp);
            }
          } else if (typeof nextProp === 'number') {
            setTextContent(domElement, '' + nextProp);
          }
        } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ;else if (propKey === AUTOFOCUS) ;else if (registrationNameDependencies.hasOwnProperty(propKey)) {
          if (nextProp != null) {
            if (typeof nextProp !== 'function') {
              warnForInvalidEventListener(propKey, nextProp);
            }

            if (propKey === 'onScroll') {
              listenToNonDelegatedEvent('scroll', domElement);
            }
          }
        } else if (nextProp != null) {
          setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
        }
      }
    }

    function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
      // TODO: Handle wasCustomComponentTag
      for (var i = 0; i < updatePayload.length; i += 2) {
        var propKey = updatePayload[i];
        var propValue = updatePayload[i + 1];

        if (propKey === STYLE) {
          setValueForStyles(domElement, propValue);
        } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
          setInnerHTML(domElement, propValue);
        } else if (propKey === CHILDREN) {
          setTextContent(domElement, propValue);
        } else {
          setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
        }
      }
    }

    function createElement(type, props, rootContainerElement, parentNamespace) {
      var isCustomComponentTag; // We create tags in the namespace of their parent container, except HTML
      // tags get no namespace.

      var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
      var domElement;
      var namespaceURI = parentNamespace;

      if (namespaceURI === HTML_NAMESPACE$1) {
        namespaceURI = getIntrinsicNamespace(type);
      }

      if (namespaceURI === HTML_NAMESPACE$1) {
        {
          isCustomComponentTag = isCustomComponent(type, props); // Should this check be gated by parent namespace? Not sure we want to
          // allow <SVG> or <mATH>.

          if (!isCustomComponentTag && type !== type.toLowerCase()) {
            error('<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', type);
          }
        }

        if (type === 'script') {
          // Create the script via .innerHTML so its "parser-inserted" flag is
          // set to true and it does not execute
          var div = ownerDocument.createElement('div');
          div.innerHTML = '<script><' + '/script>'; // eslint-disable-line
          // This is guaranteed to yield a script element.

          var firstChild = div.firstChild;
          domElement = div.removeChild(firstChild);
        } else if (typeof props.is === 'string') {
          // $FlowIssue `createElement` should be updated for Web Components
          domElement = ownerDocument.createElement(type, {
            is: props.is
          });
        } else {
          // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
          // See discussion in https://github.com/facebook/react/pull/6896
          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
          domElement = ownerDocument.createElement(type); // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`
          // attributes on `select`s needs to be added before `option`s are inserted.
          // This prevents:
          // - a bug where the `select` does not scroll to the correct option because singular
          //  `select` elements automatically pick the first item #13222
          // - a bug where the `select` set the first item as selected despite the `size` attribute #14239
          // See https://github.com/facebook/react/issues/13222
          // and https://github.com/facebook/react/issues/14239

          if (type === 'select') {
            var node = domElement;

            if (props.multiple) {
              node.multiple = true;
            } else if (props.size) {
              // Setting a size greater than 1 causes a select to behave like `multiple=true`, where
              // it is possible that no option is selected.
              //
              // This is only necessary when a select in "single selection mode".
              node.size = props.size;
            }
          }
        }
      } else {
        domElement = ownerDocument.createElementNS(namespaceURI, type);
      }

      {
        if (namespaceURI === HTML_NAMESPACE$1) {
          if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)) {
            warnedUnknownTags[type] = true;
            error('The tag <%s> is unrecognized in this browser. ' + 'If you meant to render a React component, start its name with ' + 'an uppercase letter.', type);
          }
        }
      }
      return domElement;
    }

    function createTextNode(text, rootContainerElement) {
      return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
    }

    function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
      var isCustomComponentTag = isCustomComponent(tag, rawProps);
      {
        validatePropertiesInDevelopment(tag, rawProps);
      } // TODO: Make sure that we check isMounted before firing any of these events.

      var props;

      switch (tag) {
        case 'dialog':
          listenToNonDelegatedEvent('cancel', domElement);
          listenToNonDelegatedEvent('close', domElement);
          props = rawProps;
          break;

        case 'iframe':
        case 'object':
        case 'embed':
          // We listen to this event in case to ensure emulated bubble
          // listeners still fire for the load event.
          listenToNonDelegatedEvent('load', domElement);
          props = rawProps;
          break;

        case 'video':
        case 'audio':
          // We listen to these events in case to ensure emulated bubble
          // listeners still fire for all the media events.
          for (var i = 0; i < mediaEventTypes.length; i++) {
            listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
          }

          props = rawProps;
          break;

        case 'source':
          // We listen to this event in case to ensure emulated bubble
          // listeners still fire for the error event.
          listenToNonDelegatedEvent('error', domElement);
          props = rawProps;
          break;

        case 'img':
        case 'image':
        case 'link':
          // We listen to these events in case to ensure emulated bubble
          // listeners still fire for error and load events.
          listenToNonDelegatedEvent('error', domElement);
          listenToNonDelegatedEvent('load', domElement);
          props = rawProps;
          break;

        case 'details':
          // We listen to this event in case to ensure emulated bubble
          // listeners still fire for the toggle event.
          listenToNonDelegatedEvent('toggle', domElement);
          props = rawProps;
          break;

        case 'input':
          initWrapperState(domElement, rawProps);
          props = getHostProps(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
          // listeners still fire for the invalid event.

          listenToNonDelegatedEvent('invalid', domElement);
          break;

        case 'option':
          validateProps(domElement, rawProps);
          props = getHostProps$1(domElement, rawProps);
          break;

        case 'select':
          initWrapperState$1(domElement, rawProps);
          props = getHostProps$2(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
          // listeners still fire for the invalid event.

          listenToNonDelegatedEvent('invalid', domElement);
          break;

        case 'textarea':
          initWrapperState$2(domElement, rawProps);
          props = getHostProps$3(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
          // listeners still fire for the invalid event.

          listenToNonDelegatedEvent('invalid', domElement);
          break;

        default:
          props = rawProps;
      }

      assertValidProps(tag, props);
      setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);

      switch (tag) {
        case 'input':
          // TODO: Make sure we check if this is still unmounted or do any clean
          // up necessary since we never stop tracking anymore.
          track(domElement);
          postMountWrapper(domElement, rawProps, false);
          break;

        case 'textarea':
          // TODO: Make sure we check if this is still unmounted or do any clean
          // up necessary since we never stop tracking anymore.
          track(domElement);
          postMountWrapper$3(domElement);
          break;

        case 'option':
          postMountWrapper$1(domElement, rawProps);
          break;

        case 'select':
          postMountWrapper$2(domElement, rawProps);
          break;

        default:
          if (typeof props.onClick === 'function') {
            // TODO: This cast may not be sound for SVG, MathML or custom elements.
            trapClickOnNonInteractiveElement(domElement);
          }

          break;
      }
    } // Calculate the diff between the two objects.


    function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
      {
        validatePropertiesInDevelopment(tag, nextRawProps);
      }
      var updatePayload = null;
      var lastProps;
      var nextProps;

      switch (tag) {
        case 'input':
          lastProps = getHostProps(domElement, lastRawProps);
          nextProps = getHostProps(domElement, nextRawProps);
          updatePayload = [];
          break;

        case 'option':
          lastProps = getHostProps$1(domElement, lastRawProps);
          nextProps = getHostProps$1(domElement, nextRawProps);
          updatePayload = [];
          break;

        case 'select':
          lastProps = getHostProps$2(domElement, lastRawProps);
          nextProps = getHostProps$2(domElement, nextRawProps);
          updatePayload = [];
          break;

        case 'textarea':
          lastProps = getHostProps$3(domElement, lastRawProps);
          nextProps = getHostProps$3(domElement, nextRawProps);
          updatePayload = [];
          break;

        default:
          lastProps = lastRawProps;
          nextProps = nextRawProps;

          if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {
            // TODO: This cast may not be sound for SVG, MathML or custom elements.
            trapClickOnNonInteractiveElement(domElement);
          }

          break;
      }

      assertValidProps(tag, nextProps);
      var propKey;
      var styleName;
      var styleUpdates = null;

      for (propKey in lastProps) {
        if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
          continue;
        }

        if (propKey === STYLE) {
          var lastStyle = lastProps[propKey];

          for (styleName in lastStyle) {
            if (lastStyle.hasOwnProperty(styleName)) {
              if (!styleUpdates) {
                styleUpdates = {};
              }

              styleUpdates[styleName] = '';
            }
          }
        } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) ;else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ;else if (propKey === AUTOFOCUS) ;else if (registrationNameDependencies.hasOwnProperty(propKey)) {
          // This is a special case. If any listener updates we need to ensure
          // that the "current" fiber pointer gets updated so we need a commit
          // to update this element.
          if (!updatePayload) {
            updatePayload = [];
          }
        } else {
          // For all other deleted properties we add it to the queue. We use
          // the allowed property list in the commit phase instead.
          (updatePayload = updatePayload || []).push(propKey, null);
        }
      }

      for (propKey in nextProps) {
        var nextProp = nextProps[propKey];
        var lastProp = lastProps != null ? lastProps[propKey] : undefined;

        if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
          continue;
        }

        if (propKey === STYLE) {
          {
            if (nextProp) {
              // Freeze the next style object so that we can assume it won't be
              // mutated. We have already warned for this in the past.
              Object.freeze(nextProp);
            }
          }

          if (lastProp) {
            // Unset styles on `lastProp` but not on `nextProp`.
            for (styleName in lastProp) {
              if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
                if (!styleUpdates) {
                  styleUpdates = {};
                }

                styleUpdates[styleName] = '';
              }
            } // Update styles that changed since `lastProp`.


            for (styleName in nextProp) {
              if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
                if (!styleUpdates) {
                  styleUpdates = {};
                }

                styleUpdates[styleName] = nextProp[styleName];
              }
            }
          } else {
            // Relies on `updateStylesByID` not mutating `styleUpdates`.
            if (!styleUpdates) {
              if (!updatePayload) {
                updatePayload = [];
              }

              updatePayload.push(propKey, styleUpdates);
            }

            styleUpdates = nextProp;
          }
        } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
          var nextHtml = nextProp ? nextProp[HTML$1] : undefined;
          var lastHtml = lastProp ? lastProp[HTML$1] : undefined;

          if (nextHtml != null) {
            if (lastHtml !== nextHtml) {
              (updatePayload = updatePayload || []).push(propKey, nextHtml);
            }
          }
        } else if (propKey === CHILDREN) {
          if (typeof nextProp === 'string' || typeof nextProp === 'number') {
            (updatePayload = updatePayload || []).push(propKey, '' + nextProp);
          }
        } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING) ;else if (registrationNameDependencies.hasOwnProperty(propKey)) {
          if (nextProp != null) {
            // We eagerly listen to this even though we haven't committed yet.
            if (typeof nextProp !== 'function') {
              warnForInvalidEventListener(propKey, nextProp);
            }

            if (propKey === 'onScroll') {
              listenToNonDelegatedEvent('scroll', domElement);
            }
          }

          if (!updatePayload && lastProp !== nextProp) {
            // This is a special case. If any listener updates we need to ensure
            // that the "current" props pointer gets updated so we need a commit
            // to update this element.
            updatePayload = [];
          }
        } else if (typeof nextProp === 'object' && nextProp !== null && nextProp.$$typeof === REACT_OPAQUE_ID_TYPE) {
          // If we encounter useOpaqueReference's opaque object, this means we are hydrating.
          // In this case, call the opaque object's toString function which generates a new client
          // ID so client and server IDs match and throws to rerender.
          nextProp.toString();
        } else {
          // For any other property we always add it to the queue and then we
          // filter it out using the allowed property list during the commit.
          (updatePayload = updatePayload || []).push(propKey, nextProp);
        }
      }

      if (styleUpdates) {
        {
          validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);
        }
        (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
      }

      return updatePayload;
    } // Apply the diff.


    function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
      // Update checked *before* name.
      // In the middle of an update, it is possible to have multiple checked.
      // When a checked radio tries to change name, browser makes another radio's checked false.
      if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) {
        updateChecked(domElement, nextRawProps);
      }

      var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
      var isCustomComponentTag = isCustomComponent(tag, nextRawProps); // Apply the diff.

      updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag); // TODO: Ensure that an update gets scheduled if any of the special props
      // changed.

      switch (tag) {
        case 'input':
          // Update the wrapper around inputs *after* updating props. This has to
          // happen after `updateDOMProperties`. Otherwise HTML5 input validations
          // raise warnings and prevent the new value from being assigned.
          updateWrapper(domElement, nextRawProps);
          break;

        case 'textarea':
          updateWrapper$1(domElement, nextRawProps);
          break;

        case 'select':
          // <select> value update needs to occur after <option> children
          // reconciliation
          postUpdateWrapper(domElement, nextRawProps);
          break;
      }
    }

    function getPossibleStandardName(propName) {
      {
        var lowerCasedName = propName.toLowerCase();

        if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {
          return null;
        }

        return possibleStandardNames[lowerCasedName] || null;
      }
    }

    function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement) {
      var isCustomComponentTag;
      var extraAttributeNames;
      {
        suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING] === true;
        isCustomComponentTag = isCustomComponent(tag, rawProps);
        validatePropertiesInDevelopment(tag, rawProps);
      } // TODO: Make sure that we check isMounted before firing any of these events.

      switch (tag) {
        case 'dialog':
          listenToNonDelegatedEvent('cancel', domElement);
          listenToNonDelegatedEvent('close', domElement);
          break;

        case 'iframe':
        case 'object':
        case 'embed':
          // We listen to this event in case to ensure emulated bubble
          // listeners still fire for the load event.
          listenToNonDelegatedEvent('load', domElement);
          break;

        case 'video':
        case 'audio':
          // We listen to these events in case to ensure emulated bubble
          // listeners still fire for all the media events.
          for (var i = 0; i < mediaEventTypes.length; i++) {
            listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
          }

          break;

        case 'source':
          // We listen to this event in case to ensure emulated bubble
          // listeners still fire for the error event.
          listenToNonDelegatedEvent('error', domElement);
          break;

        case 'img':
        case 'image':
        case 'link':
          // We listen to these events in case to ensure emulated bubble
          // listeners still fire for error and load events.
          listenToNonDelegatedEvent('error', domElement);
          listenToNonDelegatedEvent('load', domElement);
          break;

        case 'details':
          // We listen to this event in case to ensure emulated bubble
          // listeners still fire for the toggle event.
          listenToNonDelegatedEvent('toggle', domElement);
          break;

        case 'input':
          initWrapperState(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
          // listeners still fire for the invalid event.

          listenToNonDelegatedEvent('invalid', domElement);
          break;

        case 'option':
          validateProps(domElement, rawProps);
          break;

        case 'select':
          initWrapperState$1(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
          // listeners still fire for the invalid event.

          listenToNonDelegatedEvent('invalid', domElement);
          break;

        case 'textarea':
          initWrapperState$2(domElement, rawProps); // We listen to this event in case to ensure emulated bubble
          // listeners still fire for the invalid event.

          listenToNonDelegatedEvent('invalid', domElement);
          break;
      }

      assertValidProps(tag, rawProps);
      {
        extraAttributeNames = new Set();
        var attributes = domElement.attributes;

        for (var _i = 0; _i < attributes.length; _i++) {
          var name = attributes[_i].name.toLowerCase();

          switch (name) {
            // Built-in SSR attribute is allowed
            case 'data-reactroot':
              break;
            // Controlled attributes are not validated
            // TODO: Only ignore them on controlled tags.

            case 'value':
              break;

            case 'checked':
              break;

            case 'selected':
              break;

            default:
              // Intentionally use the original name.
              // See discussion in https://github.com/facebook/react/pull/10676.
              extraAttributeNames.add(attributes[_i].name);
          }
        }
      }
      var updatePayload = null;

      for (var propKey in rawProps) {
        if (!rawProps.hasOwnProperty(propKey)) {
          continue;
        }

        var nextProp = rawProps[propKey];

        if (propKey === CHILDREN) {
          // For text content children we compare against textContent. This
          // might match additional HTML that is hidden when we read it using
          // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
          // satisfies our requirement. Our requirement is not to produce perfect
          // HTML and attributes. Ideally we should preserve structure but it's
          // ok not to if the visible content is still enough to indicate what
          // even listeners these nodes might be wired up to.
          // TODO: Warn if there is more than a single textNode as a child.
          // TODO: Should we use domElement.firstChild.nodeValue to compare?
          if (typeof nextProp === 'string') {
            if (domElement.textContent !== nextProp) {
              if (!suppressHydrationWarning) {
                warnForTextDifference(domElement.textContent, nextProp);
              }

              updatePayload = [CHILDREN, nextProp];
            }
          } else if (typeof nextProp === 'number') {
            if (domElement.textContent !== '' + nextProp) {
              if (!suppressHydrationWarning) {
                warnForTextDifference(domElement.textContent, nextProp);
              }

              updatePayload = [CHILDREN, '' + nextProp];
            }
          }
        } else if (registrationNameDependencies.hasOwnProperty(propKey)) {
          if (nextProp != null) {
            if (typeof nextProp !== 'function') {
              warnForInvalidEventListener(propKey, nextProp);
            }

            if (propKey === 'onScroll') {
              listenToNonDelegatedEvent('scroll', domElement);
            }
          }
        } else if ( // Convince Flow we've calculated it (it's DEV-only in this method.)
        typeof isCustomComponentTag === 'boolean') {
          // Validate that the properties correspond to their expected values.
          var serverValue = void 0;
          var propertyInfo = getPropertyInfo(propKey);
          if (suppressHydrationWarning) ;else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING || // Controlled attributes are not validated
          // TODO: Only ignore them on controlled tags.
          propKey === 'value' || propKey === 'checked' || propKey === 'selected') ;else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
            var serverHTML = domElement.innerHTML;
            var nextHtml = nextProp ? nextProp[HTML$1] : undefined;

            if (nextHtml != null) {
              var expectedHTML = normalizeHTML(domElement, nextHtml);

              if (expectedHTML !== serverHTML) {
                warnForPropDifference(propKey, serverHTML, expectedHTML);
              }
            }
          } else if (propKey === STYLE) {
            // $FlowFixMe - Should be inferred as not undefined.
            extraAttributeNames.delete(propKey);

            if (canDiffStyleForHydrationWarning) {
              var expectedStyle = createDangerousStringForStyles(nextProp);
              serverValue = domElement.getAttribute('style');

              if (expectedStyle !== serverValue) {
                warnForPropDifference(propKey, serverValue, expectedStyle);
              }
            }
          } else if (isCustomComponentTag) {
            // $FlowFixMe - Should be inferred as not undefined.
            extraAttributeNames.delete(propKey.toLowerCase());
            serverValue = getValueForAttribute(domElement, propKey, nextProp);

            if (nextProp !== serverValue) {
              warnForPropDifference(propKey, serverValue, nextProp);
            }
          } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
            var isMismatchDueToBadCasing = false;

            if (propertyInfo !== null) {
              // $FlowFixMe - Should be inferred as not undefined.
              extraAttributeNames.delete(propertyInfo.attributeName);
              serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
            } else {
              var ownNamespace = parentNamespace;

              if (ownNamespace === HTML_NAMESPACE$1) {
                ownNamespace = getIntrinsicNamespace(tag);
              }

              if (ownNamespace === HTML_NAMESPACE$1) {
                // $FlowFixMe - Should be inferred as not undefined.
                extraAttributeNames.delete(propKey.toLowerCase());
              } else {
                var standardName = getPossibleStandardName(propKey);

                if (standardName !== null && standardName !== propKey) {
                  // If an SVG prop is supplied with bad casing, it will
                  // be successfully parsed from HTML, but will produce a mismatch
                  // (and would be incorrectly rendered on the client).
                  // However, we already warn about bad casing elsewhere.
                  // So we'll skip the misleading extra mismatch warning in this case.
                  isMismatchDueToBadCasing = true; // $FlowFixMe - Should be inferred as not undefined.

                  extraAttributeNames.delete(standardName);
                } // $FlowFixMe - Should be inferred as not undefined.


                extraAttributeNames.delete(propKey);
              }

              serverValue = getValueForAttribute(domElement, propKey, nextProp);
            }

            if (nextProp !== serverValue && !isMismatchDueToBadCasing) {
              warnForPropDifference(propKey, serverValue, nextProp);
            }
          }
        }
      }

      {
        // $FlowFixMe - Should be inferred as not undefined.
        if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {
          // $FlowFixMe - Should be inferred as not undefined.
          warnForExtraAttributes(extraAttributeNames);
        }
      }

      switch (tag) {
        case 'input':
          // TODO: Make sure we check if this is still unmounted or do any clean
          // up necessary since we never stop tracking anymore.
          track(domElement);
          postMountWrapper(domElement, rawProps, true);
          break;

        case 'textarea':
          // TODO: Make sure we check if this is still unmounted or do any clean
          // up necessary since we never stop tracking anymore.
          track(domElement);
          postMountWrapper$3(domElement);
          break;

        case 'select':
        case 'option':
          // For input and textarea we current always set the value property at
          // post mount to force it to diverge from attributes. However, for
          // option and select we don't quite do the same thing and select
          // is not resilient to the DOM state changing so we don't do that here.
          // TODO: Consider not doing this for input and textarea.
          break;

        default:
          if (typeof rawProps.onClick === 'function') {
            // TODO: This cast may not be sound for SVG, MathML or custom elements.
            trapClickOnNonInteractiveElement(domElement);
          }

          break;
      }

      return updatePayload;
    }

    function diffHydratedText(textNode, text) {
      var isDifferent = textNode.nodeValue !== text;
      return isDifferent;
    }

    function warnForUnmatchedText(textNode, text) {
      {
        warnForTextDifference(textNode.nodeValue, text);
      }
    }

    function warnForDeletedHydratableElement(parentNode, child) {
      {
        if (didWarnInvalidHydration) {
          return;
        }

        didWarnInvalidHydration = true;
        error('Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
      }
    }

    function warnForDeletedHydratableText(parentNode, child) {
      {
        if (didWarnInvalidHydration) {
          return;
        }

        didWarnInvalidHydration = true;
        error('Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
      }
    }

    function warnForInsertedHydratedElement(parentNode, tag, props) {
      {
        if (didWarnInvalidHydration) {
          return;
        }

        didWarnInvalidHydration = true;
        error('Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());
      }
    }

    function warnForInsertedHydratedText(parentNode, text) {
      {
        if (text === '') {
          // We expect to insert empty text nodes since they're not represented in
          // the HTML.
          // TODO: Remove this special case if we can just avoid inserting empty
          // text nodes.
          return;
        }

        if (didWarnInvalidHydration) {
          return;
        }

        didWarnInvalidHydration = true;
        error('Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
      }
    }

    function restoreControlledState$3(domElement, tag, props) {
      switch (tag) {
        case 'input':
          restoreControlledState(domElement, props);
          return;

        case 'textarea':
          restoreControlledState$2(domElement, props);
          return;

        case 'select':
          restoreControlledState$1(domElement, props);
          return;
      }
    }

    var validateDOMNesting = function () {};

    var updatedAncestorInfo = function () {};

    {
      // This validation code was written based on the HTML5 parsing spec:
      // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
      //
      // Note: this does not catch all invalid nesting, nor does it try to (as it's
      // not clear what practical benefit doing so provides); instead, we warn only
      // for cases where the parser will give a parse tree differing from what React
      // intended. For example, <b><div></div></b> is invalid but we don't warn
      // because it still parses correctly; we do warn for other cases like nested
      // <p> tags where the beginning of the second element implicitly closes the
      // first, causing a confusing mess.
      // https://html.spec.whatwg.org/multipage/syntax.html#special
      var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp']; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope

      var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template', // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
      // TODO: Distinguish by namespace here -- for <title>, including it here
      // errs on the side of fewer warnings
      'foreignObject', 'desc', 'title']; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope

      var buttonScopeTags = inScopeTags.concat(['button']); // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags

      var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
      var emptyAncestorInfo = {
        current: null,
        formTag: null,
        aTagInScope: null,
        buttonTagInScope: null,
        nobrTagInScope: null,
        pTagInButtonScope: null,
        listItemTagAutoclosing: null,
        dlItemTagAutoclosing: null
      };

      updatedAncestorInfo = function (oldInfo, tag) {
        var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);

        var info = {
          tag: tag
        };

        if (inScopeTags.indexOf(tag) !== -1) {
          ancestorInfo.aTagInScope = null;
          ancestorInfo.buttonTagInScope = null;
          ancestorInfo.nobrTagInScope = null;
        }

        if (buttonScopeTags.indexOf(tag) !== -1) {
          ancestorInfo.pTagInButtonScope = null;
        } // See rules for 'li', 'dd', 'dt' start tags in
        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody


        if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
          ancestorInfo.listItemTagAutoclosing = null;
          ancestorInfo.dlItemTagAutoclosing = null;
        }

        ancestorInfo.current = info;

        if (tag === 'form') {
          ancestorInfo.formTag = info;
        }

        if (tag === 'a') {
          ancestorInfo.aTagInScope = info;
        }

        if (tag === 'button') {
          ancestorInfo.buttonTagInScope = info;
        }

        if (tag === 'nobr') {
          ancestorInfo.nobrTagInScope = info;
        }

        if (tag === 'p') {
          ancestorInfo.pTagInButtonScope = info;
        }

        if (tag === 'li') {
          ancestorInfo.listItemTagAutoclosing = info;
        }

        if (tag === 'dd' || tag === 'dt') {
          ancestorInfo.dlItemTagAutoclosing = info;
        }

        return ancestorInfo;
      };
      /**
       * Returns whether
       */


      var isTagValidWithParent = function (tag, parentTag) {
        // First, let's check if we're in an unusual parsing mode...
        switch (parentTag) {
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
          case 'select':
            return tag === 'option' || tag === 'optgroup' || tag === '#text';

          case 'optgroup':
            return tag === 'option' || tag === '#text';
          // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
          // but

          case 'option':
            return tag === '#text';
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
          // No special behavior since these rules fall back to "in body" mode for
          // all except special table nodes which cause bad parsing behavior anyway.
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr

          case 'tr':
            return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody

          case 'tbody':
          case 'thead':
          case 'tfoot':
            return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup

          case 'colgroup':
            return tag === 'col' || tag === 'template';
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable

          case 'table':
            return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead

          case 'head':
            return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
          // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element

          case 'html':
            return tag === 'head' || tag === 'body' || tag === 'frameset';

          case 'frameset':
            return tag === 'frame';

          case '#document':
            return tag === 'html';
        } // Probably in the "in body" parsing mode, so we outlaw only tag combos
        // where the parsing rules cause implicit opens or closes to be added.
        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody


        switch (tag) {
          case 'h1':
          case 'h2':
          case 'h3':
          case 'h4':
          case 'h5':
          case 'h6':
            return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

          case 'rp':
          case 'rt':
            return impliedEndTags.indexOf(parentTag) === -1;

          case 'body':
          case 'caption':
          case 'col':
          case 'colgroup':
          case 'frameset':
          case 'frame':
          case 'head':
          case 'html':
          case 'tbody':
          case 'td':
          case 'tfoot':
          case 'th':
          case 'thead':
          case 'tr':
            // These tags are only valid with a few parents that have special child
            // parsing rules -- if we're down here, then none of those matched and
            // so we allow it only if we don't know what the parent is, as all other
            // cases are invalid.
            return parentTag == null;
        }

        return true;
      };
      /**
       * Returns whether
       */


      var findInvalidAncestorForTag = function (tag, ancestorInfo) {
        switch (tag) {
          case 'address':
          case 'article':
          case 'aside':
          case 'blockquote':
          case 'center':
          case 'details':
          case 'dialog':
          case 'dir':
          case 'div':
          case 'dl':
          case 'fieldset':
          case 'figcaption':
          case 'figure':
          case 'footer':
          case 'header':
          case 'hgroup':
          case 'main':
          case 'menu':
          case 'nav':
          case 'ol':
          case 'p':
          case 'section':
          case 'summary':
          case 'ul':
          case 'pre':
          case 'listing':
          case 'table':
          case 'hr':
          case 'xmp':
          case 'h1':
          case 'h2':
          case 'h3':
          case 'h4':
          case 'h5':
          case 'h6':
            return ancestorInfo.pTagInButtonScope;

          case 'form':
            return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

          case 'li':
            return ancestorInfo.listItemTagAutoclosing;

          case 'dd':
          case 'dt':
            return ancestorInfo.dlItemTagAutoclosing;

          case 'button':
            return ancestorInfo.buttonTagInScope;

          case 'a':
            // Spec says something about storing a list of markers, but it sounds
            // equivalent to this check.
            return ancestorInfo.aTagInScope;

          case 'nobr':
            return ancestorInfo.nobrTagInScope;
        }

        return null;
      };

      var didWarn$1 = {};

      validateDOMNesting = function (childTag, childText, ancestorInfo) {
        ancestorInfo = ancestorInfo || emptyAncestorInfo;
        var parentInfo = ancestorInfo.current;
        var parentTag = parentInfo && parentInfo.tag;

        if (childText != null) {
          if (childTag != null) {
            error('validateDOMNesting: when childText is passed, childTag should be null');
          }

          childTag = '#text';
        }

        var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
        var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
        var invalidParentOrAncestor = invalidParent || invalidAncestor;

        if (!invalidParentOrAncestor) {
          return;
        }

        var ancestorTag = invalidParentOrAncestor.tag;
        var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag;

        if (didWarn$1[warnKey]) {
          return;
        }

        didWarn$1[warnKey] = true;
        var tagDisplayName = childTag;
        var whitespaceInfo = '';

        if (childTag === '#text') {
          if (/\S/.test(childText)) {
            tagDisplayName = 'Text nodes';
          } else {
            tagDisplayName = 'Whitespace text nodes';
            whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
          }
        } else {
          tagDisplayName = '<' + childTag + '>';
        }

        if (invalidParent) {
          var info = '';

          if (ancestorTag === 'table' && childTag === 'tr') {
            info += ' Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by ' + 'the browser.';
          }

          error('validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info);
        } else {
          error('validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>.', tagDisplayName, ancestorTag);
        }
      };
    }
    var SUPPRESS_HYDRATION_WARNING$1;
    {
      SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';
    }
    var SUSPENSE_START_DATA = '$';
    var SUSPENSE_END_DATA = '/$';
    var SUSPENSE_PENDING_START_DATA = '$?';
    var SUSPENSE_FALLBACK_START_DATA = '$!';
    var STYLE$1 = 'style';
    var eventsEnabled = null;
    var selectionInformation = null;

    function shouldAutoFocusHostComponent(type, props) {
      switch (type) {
        case 'button':
        case 'input':
        case 'select':
        case 'textarea':
          return !!props.autoFocus;
      }

      return false;
    }

    function getRootHostContext(rootContainerInstance) {
      var type;
      var namespace;
      var nodeType = rootContainerInstance.nodeType;

      switch (nodeType) {
        case DOCUMENT_NODE:
        case DOCUMENT_FRAGMENT_NODE:
          {
            type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';
            var root = rootContainerInstance.documentElement;
            namespace = root ? root.namespaceURI : getChildNamespace(null, '');
            break;
          }

        default:
          {
            var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
            var ownNamespace = container.namespaceURI || null;
            type = container.tagName;
            namespace = getChildNamespace(ownNamespace, type);
            break;
          }
      }

      {
        var validatedTag = type.toLowerCase();
        var ancestorInfo = updatedAncestorInfo(null, validatedTag);
        return {
          namespace: namespace,
          ancestorInfo: ancestorInfo
        };
      }
    }

    function getChildHostContext(parentHostContext, type, rootContainerInstance) {
      {
        var parentHostContextDev = parentHostContext;
        var namespace = getChildNamespace(parentHostContextDev.namespace, type);
        var ancestorInfo = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);
        return {
          namespace: namespace,
          ancestorInfo: ancestorInfo
        };
      }
    }

    function getPublicInstance(instance) {
      return instance;
    }

    function prepareForCommit(containerInfo) {
      eventsEnabled = isEnabled();
      selectionInformation = getSelectionInformation();
      var activeInstance = null;
      setEnabled(false);
      return activeInstance;
    }

    function resetAfterCommit(containerInfo) {
      restoreSelection(selectionInformation);
      setEnabled(eventsEnabled);
      eventsEnabled = null;
      selectionInformation = null;
    }

    function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
      var parentNamespace;
      {
        // TODO: take namespace into account when validating.
        var hostContextDev = hostContext;
        validateDOMNesting(type, null, hostContextDev.ancestorInfo);

        if (typeof props.children === 'string' || typeof props.children === 'number') {
          var string = '' + props.children;
          var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
          validateDOMNesting(null, string, ownAncestorInfo);
        }

        parentNamespace = hostContextDev.namespace;
      }
      var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
      precacheFiberNode(internalInstanceHandle, domElement);
      updateFiberProps(domElement, props);
      return domElement;
    }

    function appendInitialChild(parentInstance, child) {
      parentInstance.appendChild(child);
    }

    function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
      setInitialProperties(domElement, type, props, rootContainerInstance);
      return shouldAutoFocusHostComponent(type, props);
    }

    function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
      {
        var hostContextDev = hostContext;

        if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {
          var string = '' + newProps.children;
          var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
          validateDOMNesting(null, string, ownAncestorInfo);
        }
      }
      return diffProperties(domElement, type, oldProps, newProps);
    }

    function shouldSetTextContent(type, props) {
      return type === 'textarea' || type === 'option' || type === 'noscript' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;
    }

    function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
      {
        var hostContextDev = hostContext;
        validateDOMNesting(null, text, hostContextDev.ancestorInfo);
      }
      var textNode = createTextNode(text, rootContainerInstance);
      precacheFiberNode(internalInstanceHandle, textNode);
      return textNode;
    } // if a component just imports ReactDOM (e.g. for findDOMNode).
    // Some environments might not have setTimeout or clearTimeout.


    var scheduleTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;
    var cancelTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined;
    var noTimeout = -1; // -------------------

    function commitMount(domElement, type, newProps, internalInstanceHandle) {
      // Despite the naming that might imply otherwise, this method only
      // fires if there is an `Update` effect scheduled during mounting.
      // This happens if `finalizeInitialChildren` returns `true` (which it
      // does to implement the `autoFocus` attribute on the client). But
      // there are also other cases when this might happen (such as patching
      // up text content during hydration mismatch). So we'll check this again.
      if (shouldAutoFocusHostComponent(type, newProps)) {
        domElement.focus();
      }
    }

    function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
      // Update the props handle so that we know which props are the ones with
      // with current event handlers.
      updateFiberProps(domElement, newProps); // Apply the diff to the DOM node.

      updateProperties(domElement, updatePayload, type, oldProps, newProps);
    }

    function resetTextContent(domElement) {
      setTextContent(domElement, '');
    }

    function commitTextUpdate(textInstance, oldText, newText) {
      textInstance.nodeValue = newText;
    }

    function appendChild(parentInstance, child) {
      parentInstance.appendChild(child);
    }

    function appendChildToContainer(container, child) {
      var parentNode;

      if (container.nodeType === COMMENT_NODE) {
        parentNode = container.parentNode;
        parentNode.insertBefore(child, container);
      } else {
        parentNode = container;
        parentNode.appendChild(child);
      } // This container might be used for a portal.
      // If something inside a portal is clicked, that click should bubble
      // through the React tree. However, on Mobile Safari the click would
      // never bubble through the *DOM* tree unless an ancestor with onclick
      // event exists. So we wouldn't see it and dispatch it.
      // This is why we ensure that non React root containers have inline onclick
      // defined.
      // https://github.com/facebook/react/issues/11918


      var reactRootContainer = container._reactRootContainer;

      if ((reactRootContainer === null || reactRootContainer === undefined) && parentNode.onclick === null) {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(parentNode);
      }
    }

    function insertBefore(parentInstance, child, beforeChild) {
      parentInstance.insertBefore(child, beforeChild);
    }

    function insertInContainerBefore(container, child, beforeChild) {
      if (container.nodeType === COMMENT_NODE) {
        container.parentNode.insertBefore(child, beforeChild);
      } else {
        container.insertBefore(child, beforeChild);
      }
    }

    function removeChild(parentInstance, child) {
      parentInstance.removeChild(child);
    }

    function removeChildFromContainer(container, child) {
      if (container.nodeType === COMMENT_NODE) {
        container.parentNode.removeChild(child);
      } else {
        container.removeChild(child);
      }
    }

    function hideInstance(instance) {
      // TODO: Does this work for all element types? What about MathML? Should we
      // pass host context to this method?
      instance = instance;
      var style = instance.style;

      if (typeof style.setProperty === 'function') {
        style.setProperty('display', 'none', 'important');
      } else {
        style.display = 'none';
      }
    }

    function hideTextInstance(textInstance) {
      textInstance.nodeValue = '';
    }

    function unhideInstance(instance, props) {
      instance = instance;
      var styleProp = props[STYLE$1];
      var display = styleProp !== undefined && styleProp !== null && styleProp.hasOwnProperty('display') ? styleProp.display : null;
      instance.style.display = dangerousStyleValue('display', display);
    }

    function unhideTextInstance(textInstance, text) {
      textInstance.nodeValue = text;
    }

    function clearContainer(container) {
      if (container.nodeType === ELEMENT_NODE) {
        container.textContent = '';
      } else if (container.nodeType === DOCUMENT_NODE) {
        var body = container.body;

        if (body != null) {
          body.textContent = '';
        }
      }
    } // -------------------


    function canHydrateInstance(instance, type, props) {
      if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {
        return null;
      } // This has now been refined to an element node.


      return instance;
    }

    function canHydrateTextInstance(instance, text) {
      if (text === '' || instance.nodeType !== TEXT_NODE) {
        // Empty strings are not parsed by HTML so there won't be a correct match here.
        return null;
      } // This has now been refined to a text node.


      return instance;
    }

    function isSuspenseInstancePending(instance) {
      return instance.data === SUSPENSE_PENDING_START_DATA;
    }

    function isSuspenseInstanceFallback(instance) {
      return instance.data === SUSPENSE_FALLBACK_START_DATA;
    }

    function getNextHydratable(node) {
      // Skip non-hydratable nodes.
      for (; node != null; node = node.nextSibling) {
        var nodeType = node.nodeType;

        if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE) {
          break;
        }
      }

      return node;
    }

    function getNextHydratableSibling(instance) {
      return getNextHydratable(instance.nextSibling);
    }

    function getFirstHydratableChild(parentInstance) {
      return getNextHydratable(parentInstance.firstChild);
    }

    function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
      precacheFiberNode(internalInstanceHandle, instance); // TODO: Possibly defer this until the commit phase where all the events
      // get attached.

      updateFiberProps(instance, props);
      var parentNamespace;
      {
        var hostContextDev = hostContext;
        parentNamespace = hostContextDev.namespace;
      }
      return diffHydratedProperties(instance, type, props, parentNamespace);
    }

    function hydrateTextInstance(textInstance, text, internalInstanceHandle) {
      precacheFiberNode(internalInstanceHandle, textInstance);
      return diffHydratedText(textInstance, text);
    }

    function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
      var node = suspenseInstance.nextSibling; // Skip past all nodes within this suspense boundary.
      // There might be nested nodes so we need to keep track of how
      // deep we are and only break out when we're back on top.

      var depth = 0;

      while (node) {
        if (node.nodeType === COMMENT_NODE) {
          var data = node.data;

          if (data === SUSPENSE_END_DATA) {
            if (depth === 0) {
              return getNextHydratableSibling(node);
            } else {
              depth--;
            }
          } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
            depth++;
          }
        }

        node = node.nextSibling;
      } // TODO: Warn, we didn't find the end comment boundary.


      return null;
    } // Returns the SuspenseInstance if this node is a direct child of a
    // SuspenseInstance. I.e. if its previous sibling is a Comment with
    // SUSPENSE_x_START_DATA. Otherwise, null.


    function getParentSuspenseInstance(targetInstance) {
      var node = targetInstance.previousSibling; // Skip past all nodes within this suspense boundary.
      // There might be nested nodes so we need to keep track of how
      // deep we are and only break out when we're back on top.

      var depth = 0;

      while (node) {
        if (node.nodeType === COMMENT_NODE) {
          var data = node.data;

          if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
            if (depth === 0) {
              return node;
            } else {
              depth--;
            }
          } else if (data === SUSPENSE_END_DATA) {
            depth++;
          }
        }

        node = node.previousSibling;
      }

      return null;
    }

    function commitHydratedContainer(container) {
      // Retry if any event replaying was blocked on this.
      retryIfBlockedOn(container);
    }

    function commitHydratedSuspenseInstance(suspenseInstance) {
      // Retry if any event replaying was blocked on this.
      retryIfBlockedOn(suspenseInstance);
    }

    function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text) {
      {
        warnForUnmatchedText(textInstance, text);
      }
    }

    function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text) {
      if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
        warnForUnmatchedText(textInstance, text);
      }
    }

    function didNotHydrateContainerInstance(parentContainer, instance) {
      {
        if (instance.nodeType === ELEMENT_NODE) {
          warnForDeletedHydratableElement(parentContainer, instance);
        } else if (instance.nodeType === COMMENT_NODE) ;else {
          warnForDeletedHydratableText(parentContainer, instance);
        }
      }
    }

    function didNotHydrateInstance(parentType, parentProps, parentInstance, instance) {
      if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
        if (instance.nodeType === ELEMENT_NODE) {
          warnForDeletedHydratableElement(parentInstance, instance);
        } else if (instance.nodeType === COMMENT_NODE) ;else {
          warnForDeletedHydratableText(parentInstance, instance);
        }
      }
    }

    function didNotFindHydratableContainerInstance(parentContainer, type, props) {
      {
        warnForInsertedHydratedElement(parentContainer, type);
      }
    }

    function didNotFindHydratableContainerTextInstance(parentContainer, text) {
      {
        warnForInsertedHydratedText(parentContainer, text);
      }
    }

    function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props) {
      if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
        warnForInsertedHydratedElement(parentInstance, type);
      }
    }

    function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text) {
      if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
        warnForInsertedHydratedText(parentInstance, text);
      }
    }

    function didNotFindHydratableSuspenseInstance(parentType, parentProps, parentInstance) {
      if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) ;
    }

    var clientId = 0;

    function makeClientIdInDEV(warnOnAccessInDEV) {
      var id = 'r:' + (clientId++).toString(36);
      return {
        toString: function () {
          warnOnAccessInDEV();
          return id;
        },
        valueOf: function () {
          warnOnAccessInDEV();
          return id;
        }
      };
    }

    function isOpaqueHydratingObject(value) {
      return value !== null && typeof value === 'object' && value.$$typeof === REACT_OPAQUE_ID_TYPE;
    }

    function makeOpaqueHydratingObject(attemptToReadValue) {
      return {
        $$typeof: REACT_OPAQUE_ID_TYPE,
        toString: attemptToReadValue,
        valueOf: attemptToReadValue
      };
    }

    function preparePortalMount(portalInstance) {
      {
        listenToAllSupportedEvents(portalInstance);
      }
    }

    var randomKey = Math.random().toString(36).slice(2);
    var internalInstanceKey = '__reactFiber$' + randomKey;
    var internalPropsKey = '__reactProps$' + randomKey;
    var internalContainerInstanceKey = '__reactContainer$' + randomKey;
    var internalEventHandlersKey = '__reactEvents$' + randomKey;

    function precacheFiberNode(hostInst, node) {
      node[internalInstanceKey] = hostInst;
    }

    function markContainerAsRoot(hostRoot, node) {
      node[internalContainerInstanceKey] = hostRoot;
    }

    function unmarkContainerAsRoot(node) {
      node[internalContainerInstanceKey] = null;
    }

    function isContainerMarkedAsRoot(node) {
      return !!node[internalContainerInstanceKey];
    } // Given a DOM node, return the closest HostComponent or HostText fiber ancestor.
    // If the target node is part of a hydrated or not yet rendered subtree, then
    // this may also return a SuspenseComponent or HostRoot to indicate that.
    // Conceptually the HostRoot fiber is a child of the Container node. So if you
    // pass the Container node as the targetNode, you will not actually get the
    // HostRoot back. To get to the HostRoot, you need to pass a child of it.
    // The same thing applies to Suspense boundaries.


    function getClosestInstanceFromNode(targetNode) {
      var targetInst = targetNode[internalInstanceKey];

      if (targetInst) {
        // Don't return HostRoot or SuspenseComponent here.
        return targetInst;
      } // If the direct event target isn't a React owned DOM node, we need to look
      // to see if one of its parents is a React owned DOM node.


      var parentNode = targetNode.parentNode;

      while (parentNode) {
        // We'll check if this is a container root that could include
        // React nodes in the future. We need to check this first because
        // if we're a child of a dehydrated container, we need to first
        // find that inner container before moving on to finding the parent
        // instance. Note that we don't check this field on  the targetNode
        // itself because the fibers are conceptually between the container
        // node and the first child. It isn't surrounding the container node.
        // If it's not a container, we check if it's an instance.
        targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey];

        if (targetInst) {
          // Since this wasn't the direct target of the event, we might have
          // stepped past dehydrated DOM nodes to get here. However they could
          // also have been non-React nodes. We need to answer which one.
          // If we the instance doesn't have any children, then there can't be
          // a nested suspense boundary within it. So we can use this as a fast
          // bailout. Most of the time, when people add non-React children to
          // the tree, it is using a ref to a child-less DOM node.
          // Normally we'd only need to check one of the fibers because if it
          // has ever gone from having children to deleting them or vice versa
          // it would have deleted the dehydrated boundary nested inside already.
          // However, since the HostRoot starts out with an alternate it might
          // have one on the alternate so we need to check in case this was a
          // root.
          var alternate = targetInst.alternate;

          if (targetInst.child !== null || alternate !== null && alternate.child !== null) {
            // Next we need to figure out if the node that skipped past is
            // nested within a dehydrated boundary and if so, which one.
            var suspenseInstance = getParentSuspenseInstance(targetNode);

            while (suspenseInstance !== null) {
              // We found a suspense instance. That means that we haven't
              // hydrated it yet. Even though we leave the comments in the
              // DOM after hydrating, and there are boundaries in the DOM
              // that could already be hydrated, we wouldn't have found them
              // through this pass since if the target is hydrated it would
              // have had an internalInstanceKey on it.
              // Let's get the fiber associated with the SuspenseComponent
              // as the deepest instance.
              var targetSuspenseInst = suspenseInstance[internalInstanceKey];

              if (targetSuspenseInst) {
                return targetSuspenseInst;
              } // If we don't find a Fiber on the comment, it might be because
              // we haven't gotten to hydrate it yet. There might still be a
              // parent boundary that hasn't above this one so we need to find
              // the outer most that is known.


              suspenseInstance = getParentSuspenseInstance(suspenseInstance); // If we don't find one, then that should mean that the parent
              // host component also hasn't hydrated yet. We can return it
              // below since it will bail out on the isMounted check later.
            }
          }

          return targetInst;
        }

        targetNode = parentNode;
        parentNode = targetNode.parentNode;
      }

      return null;
    }
    /**
     * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
     * instance, or null if the node was not rendered by this React.
     */


    function getInstanceFromNode(node) {
      var inst = node[internalInstanceKey] || node[internalContainerInstanceKey];

      if (inst) {
        if (inst.tag === HostComponent || inst.tag === HostText || inst.tag === SuspenseComponent || inst.tag === HostRoot) {
          return inst;
        } else {
          return null;
        }
      }

      return null;
    }
    /**
     * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
     * DOM node.
     */


    function getNodeFromInstance(inst) {
      if (inst.tag === HostComponent || inst.tag === HostText) {
        // In Fiber this, is just the state node right now. We assume it will be
        // a host component or host text.
        return inst.stateNode;
      } // Without this first invariant, passing a non-DOM-component triggers the next
      // invariant for a missing parent, which is super confusing.


      {
        {
          throw Error("getNodeFromInstance: Invalid argument.");
        }
      }
    }

    function getFiberCurrentPropsFromNode(node) {
      return node[internalPropsKey] || null;
    }

    function updateFiberProps(node, props) {
      node[internalPropsKey] = props;
    }

    function getEventListenerSet(node) {
      var elementListenerSet = node[internalEventHandlersKey];

      if (elementListenerSet === undefined) {
        elementListenerSet = node[internalEventHandlersKey] = new Set();
      }

      return elementListenerSet;
    }

    var loggedTypeFailures = {};
    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;

    function setCurrentlyValidatingElement(element) {
      {
        if (element) {
          var owner = element._owner;
          var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
          ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else {
          ReactDebugCurrentFrame$1.setExtraStackFrame(null);
        }
      }
    }

    function checkPropTypes(typeSpecs, values, location, componentName, element) {
      {
        // $FlowFixMe This is okay but Flow doesn't know it.
        var has = Function.call.bind(Object.prototype.hasOwnProperty);

        for (var typeSpecName in typeSpecs) {
          if (has(typeSpecs, typeSpecName)) {
            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
            // fail the render phase where it didn't fail before. So we log it.
            // After these have been cleaned up, we'll let them throw.

            try {
              // This is intentionally an invariant that gets caught. It's the same
              // behavior as without this statement except with a better message.
              if (typeof typeSpecs[typeSpecName] !== 'function') {
                var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
                err.name = 'Invariant Violation';
                throw err;
              }

              error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
            } catch (ex) {
              error$1 = ex;
            }

            if (error$1 && !(error$1 instanceof Error)) {
              setCurrentlyValidatingElement(element);
              error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);
              setCurrentlyValidatingElement(null);
            }

            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
              // Only monitor this failure once because there tends to be a lot of the
              // same error.
              loggedTypeFailures[error$1.message] = true;
              setCurrentlyValidatingElement(element);
              error('Failed %s type: %s', location, error$1.message);
              setCurrentlyValidatingElement(null);
            }
          }
        }
      }
    }

    var valueStack = [];
    var fiberStack;
    {
      fiberStack = [];
    }
    var index = -1;

    function createCursor(defaultValue) {
      return {
        current: defaultValue
      };
    }

    function pop(cursor, fiber) {
      if (index < 0) {
        {
          error('Unexpected pop.');
        }
        return;
      }

      {
        if (fiber !== fiberStack[index]) {
          error('Unexpected Fiber popped.');
        }
      }
      cursor.current = valueStack[index];
      valueStack[index] = null;
      {
        fiberStack[index] = null;
      }
      index--;
    }

    function push(cursor, value, fiber) {
      index++;
      valueStack[index] = cursor.current;
      {
        fiberStack[index] = fiber;
      }
      cursor.current = value;
    }

    var warnedAboutMissingGetChildContext;
    {
      warnedAboutMissingGetChildContext = {};
    }
    var emptyContextObject = {};
    {
      Object.freeze(emptyContextObject);
    } // A cursor to the current merged context object on the stack.

    var contextStackCursor = createCursor(emptyContextObject); // A cursor to a boolean indicating whether the context has changed.

    var didPerformWorkStackCursor = createCursor(false); // Keep track of the previous context object that was on the stack.
    // We use this to get access to the parent context after we have already
    // pushed the next context provider, and now need to merge their contexts.

    var previousContext = emptyContextObject;

    function getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {
      {
        if (didPushOwnContextIfProvider && isContextProvider(Component)) {
          // If the fiber is a context provider itself, when we read its context
          // we may have already pushed its own child context on the stack. A context
          // provider should not "see" its own child context. Therefore we read the
          // previous (parent) context instead for a context provider.
          return previousContext;
        }

        return contextStackCursor.current;
      }
    }

    function cacheContext(workInProgress, unmaskedContext, maskedContext) {
      {
        var instance = workInProgress.stateNode;
        instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
        instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
      }
    }

    function getMaskedContext(workInProgress, unmaskedContext) {
      {
        var type = workInProgress.type;
        var contextTypes = type.contextTypes;

        if (!contextTypes) {
          return emptyContextObject;
        } // Avoid recreating masked context unless unmasked context has changed.
        // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
        // This may trigger infinite loops if componentWillReceiveProps calls setState.


        var instance = workInProgress.stateNode;

        if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
          return instance.__reactInternalMemoizedMaskedChildContext;
        }

        var context = {};

        for (var key in contextTypes) {
          context[key] = unmaskedContext[key];
        }

        {
          var name = getComponentName(type) || 'Unknown';
          checkPropTypes(contextTypes, context, 'context', name);
        } // Cache unmasked context so we can avoid recreating masked context unless necessary.
        // Context is created before the class component is instantiated so check for instance.

        if (instance) {
          cacheContext(workInProgress, unmaskedContext, context);
        }

        return context;
      }
    }

    function hasContextChanged() {
      {
        return didPerformWorkStackCursor.current;
      }
    }

    function isContextProvider(type) {
      {
        var childContextTypes = type.childContextTypes;
        return childContextTypes !== null && childContextTypes !== undefined;
      }
    }

    function popContext(fiber) {
      {
        pop(didPerformWorkStackCursor, fiber);
        pop(contextStackCursor, fiber);
      }
    }

    function popTopLevelContextObject(fiber) {
      {
        pop(didPerformWorkStackCursor, fiber);
        pop(contextStackCursor, fiber);
      }
    }

    function pushTopLevelContextObject(fiber, context, didChange) {
      {
        if (!(contextStackCursor.current === emptyContextObject)) {
          {
            throw Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
          }
        }

        push(contextStackCursor, context, fiber);
        push(didPerformWorkStackCursor, didChange, fiber);
      }
    }

    function processChildContext(fiber, type, parentContext) {
      {
        var instance = fiber.stateNode;
        var childContextTypes = type.childContextTypes; // TODO (bvaughn) Replace this behavior with an invariant() in the future.
        // It has only been added in Fiber to match the (unintentional) behavior in Stack.

        if (typeof instance.getChildContext !== 'function') {
          {
            var componentName = getComponentName(type) || 'Unknown';

            if (!warnedAboutMissingGetChildContext[componentName]) {
              warnedAboutMissingGetChildContext[componentName] = true;
              error('%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);
            }
          }
          return parentContext;
        }

        var childContext = instance.getChildContext();

        for (var contextKey in childContext) {
          if (!(contextKey in childContextTypes)) {
            {
              throw Error((getComponentName(type) || 'Unknown') + ".getChildContext(): key \"" + contextKey + "\" is not defined in childContextTypes.");
            }
          }
        }

        {
          var name = getComponentName(type) || 'Unknown';
          checkPropTypes(childContextTypes, childContext, 'child context', name);
        }
        return _assign({}, parentContext, childContext);
      }
    }

    function pushContextProvider(workInProgress) {
      {
        var instance = workInProgress.stateNode; // We push the context as early as possible to ensure stack integrity.
        // If the instance does not exist yet, we will push null at first,
        // and replace it on the stack later when invalidating the context.

        var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject; // Remember the parent context so we can merge with it later.
        // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.

        previousContext = contextStackCursor.current;
        push(contextStackCursor, memoizedMergedChildContext, workInProgress);
        push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
        return true;
      }
    }

    function invalidateContextProvider(workInProgress, type, didChange) {
      {
        var instance = workInProgress.stateNode;

        if (!instance) {
          {
            throw Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
          }
        }

        if (didChange) {
          // Merge parent and own context.
          // Skip this if we're not updating due to sCU.
          // This avoids unnecessarily recomputing memoized values.
          var mergedContext = processChildContext(workInProgress, type, previousContext);
          instance.__reactInternalMemoizedMergedChildContext = mergedContext; // Replace the old (or empty) context with the new one.
          // It is important to unwind the context in the reverse order.

          pop(didPerformWorkStackCursor, workInProgress);
          pop(contextStackCursor, workInProgress); // Now push the new context and mark that it has changed.

          push(contextStackCursor, mergedContext, workInProgress);
          push(didPerformWorkStackCursor, didChange, workInProgress);
        } else {
          pop(didPerformWorkStackCursor, workInProgress);
          push(didPerformWorkStackCursor, didChange, workInProgress);
        }
      }
    }

    function findCurrentUnmaskedContext(fiber) {
      {
        // Currently this is only used with renderSubtreeIntoContainer; not sure if it
        // makes sense elsewhere
        if (!(isFiberMounted(fiber) && fiber.tag === ClassComponent)) {
          {
            throw Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
          }
        }

        var node = fiber;

        do {
          switch (node.tag) {
            case HostRoot:
              return node.stateNode.context;

            case ClassComponent:
              {
                var Component = node.type;

                if (isContextProvider(Component)) {
                  return node.stateNode.__reactInternalMemoizedMergedChildContext;
                }

                break;
              }
          }

          node = node.return;
        } while (node !== null);

        {
          {
            throw Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
          }
        }
      }
    }

    var LegacyRoot = 0;
    var BlockingRoot = 1;
    var ConcurrentRoot = 2;
    var rendererID = null;
    var injectedHook = null;
    var hasLoggedError = false;
    var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';

    function injectInternals(internals) {
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
        // No DevTools
        return false;
      }

      var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;

      if (hook.isDisabled) {
        // This isn't a real property on the hook, but it can be set to opt out
        // of DevTools integration and associated warnings and logs.
        // https://github.com/facebook/react/issues/3877
        return true;
      }

      if (!hook.supportsFiber) {
        {
          error('The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://reactjs.org/link/react-devtools');
        } // DevTools exists, even though it doesn't support Fiber.

        return true;
      }

      try {
        rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.

        injectedHook = hook;
      } catch (err) {
        // Catch all errors because it is unsafe to throw during initialization.
        {
          error('React instrumentation encountered an error: %s.', err);
        }
      } // DevTools exists


      return true;
    }

    function onScheduleRoot(root, children) {
      {
        if (injectedHook && typeof injectedHook.onScheduleFiberRoot === 'function') {
          try {
            injectedHook.onScheduleFiberRoot(rendererID, root, children);
          } catch (err) {
            if (!hasLoggedError) {
              hasLoggedError = true;
              error('React instrumentation encountered an error: %s', err);
            }
          }
        }
      }
    }

    function onCommitRoot(root, priorityLevel) {
      if (injectedHook && typeof injectedHook.onCommitFiberRoot === 'function') {
        try {
          var didError = (root.current.flags & DidCapture) === DidCapture;

          if (enableProfilerTimer) {
            injectedHook.onCommitFiberRoot(rendererID, root, priorityLevel, didError);
          } else {
            injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);
          }
        } catch (err) {
          {
            if (!hasLoggedError) {
              hasLoggedError = true;
              error('React instrumentation encountered an error: %s', err);
            }
          }
        }
      }
    }

    function onCommitUnmount(fiber) {
      if (injectedHook && typeof injectedHook.onCommitFiberUnmount === 'function') {
        try {
          injectedHook.onCommitFiberUnmount(rendererID, fiber);
        } catch (err) {
          {
            if (!hasLoggedError) {
              hasLoggedError = true;
              error('React instrumentation encountered an error: %s', err);
            }
          }
        }
      }
    }

    var Scheduler_runWithPriority = Scheduler.unstable_runWithPriority,
        Scheduler_scheduleCallback = Scheduler.unstable_scheduleCallback,
        Scheduler_cancelCallback = Scheduler.unstable_cancelCallback,
        Scheduler_shouldYield = Scheduler.unstable_shouldYield,
        Scheduler_requestPaint = Scheduler.unstable_requestPaint,
        Scheduler_now$1 = Scheduler.unstable_now,
        Scheduler_getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel,
        Scheduler_ImmediatePriority = Scheduler.unstable_ImmediatePriority,
        Scheduler_UserBlockingPriority = Scheduler.unstable_UserBlockingPriority,
        Scheduler_NormalPriority = Scheduler.unstable_NormalPriority,
        Scheduler_LowPriority = Scheduler.unstable_LowPriority,
        Scheduler_IdlePriority = Scheduler.unstable_IdlePriority;
    {
      // Provide explicit error message when production+profiling bundle of e.g.
      // react-dom is used with production (non-profiling) bundle of
      // scheduler/tracing
      if (!(tracing.__interactionsRef != null && tracing.__interactionsRef.current != null)) {
        {
          throw Error("It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at https://reactjs.org/link/profiling");
        }
      }
    }
    var fakeCallbackNode = {}; // Except for NoPriority, these correspond to Scheduler priorities. We use
    // ascending numbers so we can compare them like numbers. They start at 90 to
    // avoid clashing with Scheduler's priorities.

    var ImmediatePriority$1 = 99;
    var UserBlockingPriority$2 = 98;
    var NormalPriority$1 = 97;
    var LowPriority$1 = 96;
    var IdlePriority$1 = 95; // NoPriority is the absence of priority. Also React-only.

    var NoPriority$1 = 90;
    var shouldYield = Scheduler_shouldYield;
    var requestPaint = // Fall back gracefully if we're running an older version of Scheduler.
    Scheduler_requestPaint !== undefined ? Scheduler_requestPaint : function () {};
    var syncQueue = null;
    var immediateQueueCallbackNode = null;
    var isFlushingSyncQueue = false;
    var initialTimeMs$1 = Scheduler_now$1(); // If the initial timestamp is reasonably small, use Scheduler's `now` directly.
    // This will be the case for modern browsers that support `performance.now`. In
    // older browsers, Scheduler falls back to `Date.now`, which returns a Unix
    // timestamp. In that case, subtract the module initialization time to simulate
    // the behavior of performance.now and keep our times small enough to fit
    // within 32 bits.
    // TODO: Consider lifting this into Scheduler.

    var now = initialTimeMs$1 < 10000 ? Scheduler_now$1 : function () {
      return Scheduler_now$1() - initialTimeMs$1;
    };

    function getCurrentPriorityLevel() {
      switch (Scheduler_getCurrentPriorityLevel()) {
        case Scheduler_ImmediatePriority:
          return ImmediatePriority$1;

        case Scheduler_UserBlockingPriority:
          return UserBlockingPriority$2;

        case Scheduler_NormalPriority:
          return NormalPriority$1;

        case Scheduler_LowPriority:
          return LowPriority$1;

        case Scheduler_IdlePriority:
          return IdlePriority$1;

        default:
          {
            {
              throw Error("Unknown priority level.");
            }
          }
      }
    }

    function reactPriorityToSchedulerPriority(reactPriorityLevel) {
      switch (reactPriorityLevel) {
        case ImmediatePriority$1:
          return Scheduler_ImmediatePriority;

        case UserBlockingPriority$2:
          return Scheduler_UserBlockingPriority;

        case NormalPriority$1:
          return Scheduler_NormalPriority;

        case LowPriority$1:
          return Scheduler_LowPriority;

        case IdlePriority$1:
          return Scheduler_IdlePriority;

        default:
          {
            {
              throw Error("Unknown priority level.");
            }
          }
      }
    }

    function runWithPriority$1(reactPriorityLevel, fn) {
      var priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
      return Scheduler_runWithPriority(priorityLevel, fn);
    }

    function scheduleCallback(reactPriorityLevel, callback, options) {
      var priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
      return Scheduler_scheduleCallback(priorityLevel, callback, options);
    }

    function scheduleSyncCallback(callback) {
      // Push this callback into an internal queue. We'll flush these either in
      // the next tick, or earlier if something calls `flushSyncCallbackQueue`.
      if (syncQueue === null) {
        syncQueue = [callback]; // Flush the queue in the next tick, at the earliest.

        immediateQueueCallbackNode = Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueueImpl);
      } else {
        // Push onto existing queue. Don't need to schedule a callback because
        // we already scheduled one when we created the queue.
        syncQueue.push(callback);
      }

      return fakeCallbackNode;
    }

    function cancelCallback(callbackNode) {
      if (callbackNode !== fakeCallbackNode) {
        Scheduler_cancelCallback(callbackNode);
      }
    }

    function flushSyncCallbackQueue() {
      if (immediateQueueCallbackNode !== null) {
        var node = immediateQueueCallbackNode;
        immediateQueueCallbackNode = null;
        Scheduler_cancelCallback(node);
      }

      flushSyncCallbackQueueImpl();
    }

    function flushSyncCallbackQueueImpl() {
      if (!isFlushingSyncQueue && syncQueue !== null) {
        // Prevent re-entrancy.
        isFlushingSyncQueue = true;
        var i = 0;
        {
          try {
            var _isSync2 = true;
            var _queue = syncQueue;
            runWithPriority$1(ImmediatePriority$1, function () {
              for (; i < _queue.length; i++) {
                var callback = _queue[i];

                do {
                  callback = callback(_isSync2);
                } while (callback !== null);
              }
            });
            syncQueue = null;
          } catch (error) {
            // If something throws, leave the remaining callbacks on the queue.
            if (syncQueue !== null) {
              syncQueue = syncQueue.slice(i + 1);
            } // Resume flushing in the next tick


            Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueue);
            throw error;
          } finally {
            isFlushingSyncQueue = false;
          }
        }
      }
    } // TODO: this is special because it gets imported during build.


    var ReactVersion = '17.0.2';
    var NoMode = 0;
    var StrictMode = 1; // TODO: Remove BlockingMode and ConcurrentMode by reading from the root
    // tag instead

    var BlockingMode = 2;
    var ConcurrentMode = 4;
    var ProfileMode = 8;
    var DebugTracingMode = 16;
    var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;
    var NoTransition = 0;

    function requestCurrentTransition() {
      return ReactCurrentBatchConfig.transition;
    }

    var ReactStrictModeWarnings = {
      recordUnsafeLifecycleWarnings: function (fiber, instance) {},
      flushPendingUnsafeLifecycleWarnings: function () {},
      recordLegacyContextWarning: function (fiber, instance) {},
      flushLegacyContextWarning: function () {},
      discardPendingWarnings: function () {}
    };
    {
      var findStrictRoot = function (fiber) {
        var maybeStrictRoot = null;
        var node = fiber;

        while (node !== null) {
          if (node.mode & StrictMode) {
            maybeStrictRoot = node;
          }

          node = node.return;
        }

        return maybeStrictRoot;
      };

      var setToSortedString = function (set) {
        var array = [];
        set.forEach(function (value) {
          array.push(value);
        });
        return array.sort().join(', ');
      };

      var pendingComponentWillMountWarnings = [];
      var pendingUNSAFE_ComponentWillMountWarnings = [];
      var pendingComponentWillReceivePropsWarnings = [];
      var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
      var pendingComponentWillUpdateWarnings = [];
      var pendingUNSAFE_ComponentWillUpdateWarnings = []; // Tracks components we have already warned about.

      var didWarnAboutUnsafeLifecycles = new Set();

      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (fiber, instance) {
        // Dedup strategy: Warn once per component.
        if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {
          return;
        }

        if (typeof instance.componentWillMount === 'function' && // Don't warn about react-lifecycles-compat polyfilled components.
        instance.componentWillMount.__suppressDeprecationWarning !== true) {
          pendingComponentWillMountWarnings.push(fiber);
        }

        if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillMount === 'function') {
          pendingUNSAFE_ComponentWillMountWarnings.push(fiber);
        }

        if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
          pendingComponentWillReceivePropsWarnings.push(fiber);
        }

        if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
          pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);
        }

        if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
          pendingComponentWillUpdateWarnings.push(fiber);
        }

        if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillUpdate === 'function') {
          pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);
        }
      };

      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {
        // We do an initial pass to gather component names
        var componentWillMountUniqueNames = new Set();

        if (pendingComponentWillMountWarnings.length > 0) {
          pendingComponentWillMountWarnings.forEach(function (fiber) {
            componentWillMountUniqueNames.add(getComponentName(fiber.type) || 'Component');
            didWarnAboutUnsafeLifecycles.add(fiber.type);
          });
          pendingComponentWillMountWarnings = [];
        }

        var UNSAFE_componentWillMountUniqueNames = new Set();

        if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {
          pendingUNSAFE_ComponentWillMountWarnings.forEach(function (fiber) {
            UNSAFE_componentWillMountUniqueNames.add(getComponentName(fiber.type) || 'Component');
            didWarnAboutUnsafeLifecycles.add(fiber.type);
          });
          pendingUNSAFE_ComponentWillMountWarnings = [];
        }

        var componentWillReceivePropsUniqueNames = new Set();

        if (pendingComponentWillReceivePropsWarnings.length > 0) {
          pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {
            componentWillReceivePropsUniqueNames.add(getComponentName(fiber.type) || 'Component');
            didWarnAboutUnsafeLifecycles.add(fiber.type);
          });
          pendingComponentWillReceivePropsWarnings = [];
        }

        var UNSAFE_componentWillReceivePropsUniqueNames = new Set();

        if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {
          pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function (fiber) {
            UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentName(fiber.type) || 'Component');
            didWarnAboutUnsafeLifecycles.add(fiber.type);
          });
          pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
        }

        var componentWillUpdateUniqueNames = new Set();

        if (pendingComponentWillUpdateWarnings.length > 0) {
          pendingComponentWillUpdateWarnings.forEach(function (fiber) {
            componentWillUpdateUniqueNames.add(getComponentName(fiber.type) || 'Component');
            didWarnAboutUnsafeLifecycles.add(fiber.type);
          });
          pendingComponentWillUpdateWarnings = [];
        }

        var UNSAFE_componentWillUpdateUniqueNames = new Set();

        if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {
          pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function (fiber) {
            UNSAFE_componentWillUpdateUniqueNames.add(getComponentName(fiber.type) || 'Component');
            didWarnAboutUnsafeLifecycles.add(fiber.type);
          });
          pendingUNSAFE_ComponentWillUpdateWarnings = [];
        } // Finally, we flush all the warnings
        // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'


        if (UNSAFE_componentWillMountUniqueNames.size > 0) {
          var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);
          error('Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move code with side effects to componentDidMount, and set initial state in the constructor.\n' + '\nPlease update the following components: %s', sortedNames);
        }

        if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {
          var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);

          error('Using UNSAFE_componentWillReceiveProps in strict mode is not recommended ' + 'and may indicate bugs in your code. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + "* If you're updating state whenever props change, " + 'refactor your code to use memoization techniques or move it to ' + 'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n' + '\nPlease update the following components: %s', _sortedNames);
        }

        if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {
          var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);

          error('Using UNSAFE_componentWillUpdate in strict mode is not recommended ' + 'and may indicate bugs in your code. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + '\nPlease update the following components: %s', _sortedNames2);
        }

        if (componentWillMountUniqueNames.size > 0) {
          var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);

          warn('componentWillMount has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move code with side effects to componentDidMount, and set initial state in the constructor.\n' + '* Rename componentWillMount to UNSAFE_componentWillMount to suppress ' + 'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n' + '\nPlease update the following components: %s', _sortedNames3);
        }

        if (componentWillReceivePropsUniqueNames.size > 0) {
          var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);

          warn('componentWillReceiveProps has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + "* If you're updating state whenever props change, refactor your " + 'code to use memoization techniques or move it to ' + 'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n' + '* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress ' + 'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n' + '\nPlease update the following components: %s', _sortedNames4);
        }

        if (componentWillUpdateUniqueNames.size > 0) {
          var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);

          warn('componentWillUpdate has been renamed, and is not recommended for use. ' + 'See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + '* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress ' + 'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n' + '\nPlease update the following components: %s', _sortedNames5);
        }
      };

      var pendingLegacyContextWarning = new Map(); // Tracks components we have already warned about.

      var didWarnAboutLegacyContext = new Set();

      ReactStrictModeWarnings.recordLegacyContextWarning = function (fiber, instance) {
        var strictRoot = findStrictRoot(fiber);

        if (strictRoot === null) {
          error('Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');
          return;
        } // Dedup strategy: Warn once per component.


        if (didWarnAboutLegacyContext.has(fiber.type)) {
          return;
        }

        var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);

        if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {
          if (warningsForRoot === undefined) {
            warningsForRoot = [];
            pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
          }

          warningsForRoot.push(fiber);
        }
      };

      ReactStrictModeWarnings.flushLegacyContextWarning = function () {
        pendingLegacyContextWarning.forEach(function (fiberArray, strictRoot) {
          if (fiberArray.length === 0) {
            return;
          }

          var firstFiber = fiberArray[0];
          var uniqueNames = new Set();
          fiberArray.forEach(function (fiber) {
            uniqueNames.add(getComponentName(fiber.type) || 'Component');
            didWarnAboutLegacyContext.add(fiber.type);
          });
          var sortedNames = setToSortedString(uniqueNames);

          try {
            setCurrentFiber(firstFiber);
            error('Legacy context API has been detected within a strict-mode tree.' + '\n\nThe old API will be supported in all 16.x releases, but applications ' + 'using it should migrate to the new version.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here: https://reactjs.org/link/legacy-context', sortedNames);
          } finally {
            resetCurrentFiber();
          }
        });
      };

      ReactStrictModeWarnings.discardPendingWarnings = function () {
        pendingComponentWillMountWarnings = [];
        pendingUNSAFE_ComponentWillMountWarnings = [];
        pendingComponentWillReceivePropsWarnings = [];
        pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
        pendingComponentWillUpdateWarnings = [];
        pendingUNSAFE_ComponentWillUpdateWarnings = [];
        pendingLegacyContextWarning = new Map();
      };
    }

    function resolveDefaultProps(Component, baseProps) {
      if (Component && Component.defaultProps) {
        // Resolve default props. Taken from ReactElement
        var props = _assign({}, baseProps);

        var defaultProps = Component.defaultProps;

        for (var propName in defaultProps) {
          if (props[propName] === undefined) {
            props[propName] = defaultProps[propName];
          }
        }

        return props;
      }

      return baseProps;
    } // Max 31 bit integer. The max integer size in V8 for 32-bit systems.
    // Math.pow(2, 30) - 1
    // 0b111111111111111111111111111111


    var MAX_SIGNED_31_BIT_INT = 1073741823;
    var valueCursor = createCursor(null);
    var rendererSigil;
    {
      // Use this to detect multiple renderers using the same context
      rendererSigil = {};
    }
    var currentlyRenderingFiber = null;
    var lastContextDependency = null;
    var lastContextWithAllBitsObserved = null;
    var isDisallowedContextReadInDEV = false;

    function resetContextDependencies() {
      // This is called right before React yields execution, to ensure `readContext`
      // cannot be called outside the render phase.
      currentlyRenderingFiber = null;
      lastContextDependency = null;
      lastContextWithAllBitsObserved = null;
      {
        isDisallowedContextReadInDEV = false;
      }
    }

    function enterDisallowedContextReadInDEV() {
      {
        isDisallowedContextReadInDEV = true;
      }
    }

    function exitDisallowedContextReadInDEV() {
      {
        isDisallowedContextReadInDEV = false;
      }
    }

    function pushProvider(providerFiber, nextValue) {
      var context = providerFiber.type._context;
      {
        push(valueCursor, context._currentValue, providerFiber);
        context._currentValue = nextValue;
        {
          if (context._currentRenderer !== undefined && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) {
            error('Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.');
          }

          context._currentRenderer = rendererSigil;
        }
      }
    }

    function popProvider(providerFiber) {
      var currentValue = valueCursor.current;
      pop(valueCursor, providerFiber);
      var context = providerFiber.type._context;
      {
        context._currentValue = currentValue;
      }
    }

    function calculateChangedBits(context, newValue, oldValue) {
      if (objectIs(oldValue, newValue)) {
        // No change
        return 0;
      } else {
        var changedBits = typeof context._calculateChangedBits === 'function' ? context._calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;
        {
          if ((changedBits & MAX_SIGNED_31_BIT_INT) !== changedBits) {
            error('calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits);
          }
        }
        return changedBits | 0;
      }
    }

    function scheduleWorkOnParentPath(parent, renderLanes) {
      // Update the child lanes of all the ancestors, including the alternates.
      var node = parent;

      while (node !== null) {
        var alternate = node.alternate;

        if (!isSubsetOfLanes(node.childLanes, renderLanes)) {
          node.childLanes = mergeLanes(node.childLanes, renderLanes);

          if (alternate !== null) {
            alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);
          }
        } else if (alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes)) {
          alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);
        } else {
          // Neither alternate was updated, which means the rest of the
          // ancestor path already has sufficient priority.
          break;
        }

        node = node.return;
      }
    }

    function propagateContextChange(workInProgress, context, changedBits, renderLanes) {
      var fiber = workInProgress.child;

      if (fiber !== null) {
        // Set the return pointer of the child to the work-in-progress fiber.
        fiber.return = workInProgress;
      }

      while (fiber !== null) {
        var nextFiber = void 0; // Visit this fiber.

        var list = fiber.dependencies;

        if (list !== null) {
          nextFiber = fiber.child;
          var dependency = list.firstContext;

          while (dependency !== null) {
            // Check if the context matches.
            if (dependency.context === context && (dependency.observedBits & changedBits) !== 0) {
              // Match! Schedule an update on this fiber.
              if (fiber.tag === ClassComponent) {
                // Schedule a force update on the work-in-progress.
                var update = createUpdate(NoTimestamp, pickArbitraryLane(renderLanes));
                update.tag = ForceUpdate; // TODO: Because we don't have a work-in-progress, this will add the
                // update to the current fiber, too, which means it will persist even if
                // this render is thrown away. Since it's a race condition, not sure it's
                // worth fixing.

                enqueueUpdate(fiber, update);
              }

              fiber.lanes = mergeLanes(fiber.lanes, renderLanes);
              var alternate = fiber.alternate;

              if (alternate !== null) {
                alternate.lanes = mergeLanes(alternate.lanes, renderLanes);
              }

              scheduleWorkOnParentPath(fiber.return, renderLanes); // Mark the updated lanes on the list, too.

              list.lanes = mergeLanes(list.lanes, renderLanes); // Since we already found a match, we can stop traversing the
              // dependency list.

              break;
            }

            dependency = dependency.next;
          }
        } else if (fiber.tag === ContextProvider) {
          // Don't scan deeper if this is a matching provider
          nextFiber = fiber.type === workInProgress.type ? null : fiber.child;
        } else {
          // Traverse down.
          nextFiber = fiber.child;
        }

        if (nextFiber !== null) {
          // Set the return pointer of the child to the work-in-progress fiber.
          nextFiber.return = fiber;
        } else {
          // No child. Traverse to next sibling.
          nextFiber = fiber;

          while (nextFiber !== null) {
            if (nextFiber === workInProgress) {
              // We're back to the root of this subtree. Exit.
              nextFiber = null;
              break;
            }

            var sibling = nextFiber.sibling;

            if (sibling !== null) {
              // Set the return pointer of the sibling to the work-in-progress fiber.
              sibling.return = nextFiber.return;
              nextFiber = sibling;
              break;
            } // No more siblings. Traverse up.


            nextFiber = nextFiber.return;
          }
        }

        fiber = nextFiber;
      }
    }

    function prepareToReadContext(workInProgress, renderLanes) {
      currentlyRenderingFiber = workInProgress;
      lastContextDependency = null;
      lastContextWithAllBitsObserved = null;
      var dependencies = workInProgress.dependencies;

      if (dependencies !== null) {
        var firstContext = dependencies.firstContext;

        if (firstContext !== null) {
          if (includesSomeLane(dependencies.lanes, renderLanes)) {
            // Context list has a pending update. Mark that this fiber performed work.
            markWorkInProgressReceivedUpdate();
          } // Reset the work-in-progress list


          dependencies.firstContext = null;
        }
      }
    }

    function readContext(context, observedBits) {
      {
        // This warning would fire if you read context inside a Hook like useMemo.
        // Unlike the class check below, it's not enforced in production for perf.
        if (isDisallowedContextReadInDEV) {
          error('Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');
        }
      }
      if (lastContextWithAllBitsObserved === context) ;else if (observedBits === false || observedBits === 0) ;else {
        var resolvedObservedBits; // Avoid deopting on observable arguments or heterogeneous types.

        if (typeof observedBits !== 'number' || observedBits === MAX_SIGNED_31_BIT_INT) {
          // Observe all updates.
          lastContextWithAllBitsObserved = context;
          resolvedObservedBits = MAX_SIGNED_31_BIT_INT;
        } else {
          resolvedObservedBits = observedBits;
        }

        var contextItem = {
          context: context,
          observedBits: resolvedObservedBits,
          next: null
        };

        if (lastContextDependency === null) {
          if (!(currentlyRenderingFiber !== null)) {
            {
              throw Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
            }
          } // This is the first dependency for this component. Create a new list.


          lastContextDependency = contextItem;
          currentlyRenderingFiber.dependencies = {
            lanes: NoLanes,
            firstContext: contextItem,
            responders: null
          };
        } else {
          // Append a new context item.
          lastContextDependency = lastContextDependency.next = contextItem;
        }
      }
      return context._currentValue;
    }

    var UpdateState = 0;
    var ReplaceState = 1;
    var ForceUpdate = 2;
    var CaptureUpdate = 3; // Global state that is reset at the beginning of calling `processUpdateQueue`.
    // It should only be read right after calling `processUpdateQueue`, via
    // `checkHasForceUpdateAfterProcessing`.

    var hasForceUpdate = false;
    var didWarnUpdateInsideUpdate;
    var currentlyProcessingQueue;
    {
      didWarnUpdateInsideUpdate = false;
      currentlyProcessingQueue = null;
    }

    function initializeUpdateQueue(fiber) {
      var queue = {
        baseState: fiber.memoizedState,
        firstBaseUpdate: null,
        lastBaseUpdate: null,
        shared: {
          pending: null
        },
        effects: null
      };
      fiber.updateQueue = queue;
    }

    function cloneUpdateQueue(current, workInProgress) {
      // Clone the update queue from current. Unless it's already a clone.
      var queue = workInProgress.updateQueue;
      var currentQueue = current.updateQueue;

      if (queue === currentQueue) {
        var clone = {
          baseState: currentQueue.baseState,
          firstBaseUpdate: currentQueue.firstBaseUpdate,
          lastBaseUpdate: currentQueue.lastBaseUpdate,
          shared: currentQueue.shared,
          effects: currentQueue.effects
        };
        workInProgress.updateQueue = clone;
      }
    }

    function createUpdate(eventTime, lane) {
      var update = {
        eventTime: eventTime,
        lane: lane,
        tag: UpdateState,
        payload: null,
        callback: null,
        next: null
      };
      return update;
    }

    function enqueueUpdate(fiber, update) {
      var updateQueue = fiber.updateQueue;

      if (updateQueue === null) {
        // Only occurs if the fiber has been unmounted.
        return;
      }

      var sharedQueue = updateQueue.shared;
      var pending = sharedQueue.pending;

      if (pending === null) {
        // This is the first update. Create a circular list.
        update.next = update;
      } else {
        update.next = pending.next;
        pending.next = update;
      }

      sharedQueue.pending = update;
      {
        if (currentlyProcessingQueue === sharedQueue && !didWarnUpdateInsideUpdate) {
          error('An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');
          didWarnUpdateInsideUpdate = true;
        }
      }
    }

    function enqueueCapturedUpdate(workInProgress, capturedUpdate) {
      // Captured updates are updates that are thrown by a child during the render
      // phase. They should be discarded if the render is aborted. Therefore,
      // we should only put them on the work-in-progress queue, not the current one.
      var queue = workInProgress.updateQueue; // Check if the work-in-progress queue is a clone.

      var current = workInProgress.alternate;

      if (current !== null) {
        var currentQueue = current.updateQueue;

        if (queue === currentQueue) {
          // The work-in-progress queue is the same as current. This happens when
          // we bail out on a parent fiber that then captures an error thrown by
          // a child. Since we want to append the update only to the work-in
          // -progress queue, we need to clone the updates. We usually clone during
          // processUpdateQueue, but that didn't happen in this case because we
          // skipped over the parent when we bailed out.
          var newFirst = null;
          var newLast = null;
          var firstBaseUpdate = queue.firstBaseUpdate;

          if (firstBaseUpdate !== null) {
            // Loop through the updates and clone them.
            var update = firstBaseUpdate;

            do {
              var clone = {
                eventTime: update.eventTime,
                lane: update.lane,
                tag: update.tag,
                payload: update.payload,
                callback: update.callback,
                next: null
              };

              if (newLast === null) {
                newFirst = newLast = clone;
              } else {
                newLast.next = clone;
                newLast = clone;
              }

              update = update.next;
            } while (update !== null); // Append the captured update the end of the cloned list.


            if (newLast === null) {
              newFirst = newLast = capturedUpdate;
            } else {
              newLast.next = capturedUpdate;
              newLast = capturedUpdate;
            }
          } else {
            // There are no base updates.
            newFirst = newLast = capturedUpdate;
          }

          queue = {
            baseState: currentQueue.baseState,
            firstBaseUpdate: newFirst,
            lastBaseUpdate: newLast,
            shared: currentQueue.shared,
            effects: currentQueue.effects
          };
          workInProgress.updateQueue = queue;
          return;
        }
      } // Append the update to the end of the list.


      var lastBaseUpdate = queue.lastBaseUpdate;

      if (lastBaseUpdate === null) {
        queue.firstBaseUpdate = capturedUpdate;
      } else {
        lastBaseUpdate.next = capturedUpdate;
      }

      queue.lastBaseUpdate = capturedUpdate;
    }

    function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
      switch (update.tag) {
        case ReplaceState:
          {
            var payload = update.payload;

            if (typeof payload === 'function') {
              // Updater function
              {
                enterDisallowedContextReadInDEV();
              }
              var nextState = payload.call(instance, prevState, nextProps);
              {
                if (workInProgress.mode & StrictMode) {
                  disableLogs();

                  try {
                    payload.call(instance, prevState, nextProps);
                  } finally {
                    reenableLogs();
                  }
                }

                exitDisallowedContextReadInDEV();
              }
              return nextState;
            } // State object


            return payload;
          }

        case CaptureUpdate:
          {
            workInProgress.flags = workInProgress.flags & ~ShouldCapture | DidCapture;
          }
        // Intentional fallthrough

        case UpdateState:
          {
            var _payload = update.payload;
            var partialState;

            if (typeof _payload === 'function') {
              // Updater function
              {
                enterDisallowedContextReadInDEV();
              }
              partialState = _payload.call(instance, prevState, nextProps);
              {
                if (workInProgress.mode & StrictMode) {
                  disableLogs();

                  try {
                    _payload.call(instance, prevState, nextProps);
                  } finally {
                    reenableLogs();
                  }
                }

                exitDisallowedContextReadInDEV();
              }
            } else {
              // Partial state object
              partialState = _payload;
            }

            if (partialState === null || partialState === undefined) {
              // Null and undefined are treated as no-ops.
              return prevState;
            } // Merge the partial state and the previous state.


            return _assign({}, prevState, partialState);
          }

        case ForceUpdate:
          {
            hasForceUpdate = true;
            return prevState;
          }
      }

      return prevState;
    }

    function processUpdateQueue(workInProgress, props, instance, renderLanes) {
      // This is always non-null on a ClassComponent or HostRoot
      var queue = workInProgress.updateQueue;
      hasForceUpdate = false;
      {
        currentlyProcessingQueue = queue.shared;
      }
      var firstBaseUpdate = queue.firstBaseUpdate;
      var lastBaseUpdate = queue.lastBaseUpdate; // Check if there are pending updates. If so, transfer them to the base queue.

      var pendingQueue = queue.shared.pending;

      if (pendingQueue !== null) {
        queue.shared.pending = null; // The pending queue is circular. Disconnect the pointer between first
        // and last so that it's non-circular.

        var lastPendingUpdate = pendingQueue;
        var firstPendingUpdate = lastPendingUpdate.next;
        lastPendingUpdate.next = null; // Append pending updates to base queue

        if (lastBaseUpdate === null) {
          firstBaseUpdate = firstPendingUpdate;
        } else {
          lastBaseUpdate.next = firstPendingUpdate;
        }

        lastBaseUpdate = lastPendingUpdate; // If there's a current queue, and it's different from the base queue, then
        // we need to transfer the updates to that queue, too. Because the base
        // queue is a singly-linked list with no cycles, we can append to both
        // lists and take advantage of structural sharing.
        // TODO: Pass `current` as argument

        var current = workInProgress.alternate;

        if (current !== null) {
          // This is always non-null on a ClassComponent or HostRoot
          var currentQueue = current.updateQueue;
          var currentLastBaseUpdate = currentQueue.lastBaseUpdate;

          if (currentLastBaseUpdate !== lastBaseUpdate) {
            if (currentLastBaseUpdate === null) {
              currentQueue.firstBaseUpdate = firstPendingUpdate;
            } else {
              currentLastBaseUpdate.next = firstPendingUpdate;
            }

            currentQueue.lastBaseUpdate = lastPendingUpdate;
          }
        }
      } // These values may change as we process the queue.


      if (firstBaseUpdate !== null) {
        // Iterate through the list of updates to compute the result.
        var newState = queue.baseState; // TODO: Don't need to accumulate this. Instead, we can remove renderLanes
        // from the original lanes.

        var newLanes = NoLanes;
        var newBaseState = null;
        var newFirstBaseUpdate = null;
        var newLastBaseUpdate = null;
        var update = firstBaseUpdate;

        do {
          var updateLane = update.lane;
          var updateEventTime = update.eventTime;

          if (!isSubsetOfLanes(renderLanes, updateLane)) {
            // Priority is insufficient. Skip this update. If this is the first
            // skipped update, the previous update/state is the new base
            // update/state.
            var clone = {
              eventTime: updateEventTime,
              lane: updateLane,
              tag: update.tag,
              payload: update.payload,
              callback: update.callback,
              next: null
            };

            if (newLastBaseUpdate === null) {
              newFirstBaseUpdate = newLastBaseUpdate = clone;
              newBaseState = newState;
            } else {
              newLastBaseUpdate = newLastBaseUpdate.next = clone;
            } // Update the remaining priority in the queue.


            newLanes = mergeLanes(newLanes, updateLane);
          } else {
            // This update does have sufficient priority.
            if (newLastBaseUpdate !== null) {
              var _clone = {
                eventTime: updateEventTime,
                // This update is going to be committed so we never want uncommit
                // it. Using NoLane works because 0 is a subset of all bitmasks, so
                // this will never be skipped by the check above.
                lane: NoLane,
                tag: update.tag,
                payload: update.payload,
                callback: update.callback,
                next: null
              };
              newLastBaseUpdate = newLastBaseUpdate.next = _clone;
            } // Process this update.


            newState = getStateFromUpdate(workInProgress, queue, update, newState, props, instance);
            var callback = update.callback;

            if (callback !== null) {
              workInProgress.flags |= Callback;
              var effects = queue.effects;

              if (effects === null) {
                queue.effects = [update];
              } else {
                effects.push(update);
              }
            }
          }

          update = update.next;

          if (update === null) {
            pendingQueue = queue.shared.pending;

            if (pendingQueue === null) {
              break;
            } else {
              // An update was scheduled from inside a reducer. Add the new
              // pending updates to the end of the list and keep processing.
              var _lastPendingUpdate = pendingQueue; // Intentionally unsound. Pending updates form a circular list, but we
              // unravel them when transferring them to the base queue.

              var _firstPendingUpdate = _lastPendingUpdate.next;
              _lastPendingUpdate.next = null;
              update = _firstPendingUpdate;
              queue.lastBaseUpdate = _lastPendingUpdate;
              queue.shared.pending = null;
            }
          }
        } while (true);

        if (newLastBaseUpdate === null) {
          newBaseState = newState;
        }

        queue.baseState = newBaseState;
        queue.firstBaseUpdate = newFirstBaseUpdate;
        queue.lastBaseUpdate = newLastBaseUpdate; // Set the remaining expiration time to be whatever is remaining in the queue.
        // This should be fine because the only two other things that contribute to
        // expiration time are props and context. We're already in the middle of the
        // begin phase by the time we start processing the queue, so we've already
        // dealt with the props. Context in components that specify
        // shouldComponentUpdate is tricky; but we'll have to account for
        // that regardless.

        markSkippedUpdateLanes(newLanes);
        workInProgress.lanes = newLanes;
        workInProgress.memoizedState = newState;
      }

      {
        currentlyProcessingQueue = null;
      }
    }

    function callCallback(callback, context) {
      if (!(typeof callback === 'function')) {
        {
          throw Error("Invalid argument passed as callback. Expected a function. Instead received: " + callback);
        }
      }

      callback.call(context);
    }

    function resetHasForceUpdateBeforeProcessing() {
      hasForceUpdate = false;
    }

    function checkHasForceUpdateAfterProcessing() {
      return hasForceUpdate;
    }

    function commitUpdateQueue(finishedWork, finishedQueue, instance) {
      // Commit the effects
      var effects = finishedQueue.effects;
      finishedQueue.effects = null;

      if (effects !== null) {
        for (var i = 0; i < effects.length; i++) {
          var effect = effects[i];
          var callback = effect.callback;

          if (callback !== null) {
            effect.callback = null;
            callCallback(callback, instance);
          }
        }
      }
    }

    var fakeInternalInstance = {};
    var isArray = Array.isArray; // React.Component uses a shared frozen object by default.
    // We'll use it to determine whether we need to initialize legacy refs.

    var emptyRefsObject = new React.Component().refs;
    var didWarnAboutStateAssignmentForComponent;
    var didWarnAboutUninitializedState;
    var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
    var didWarnAboutLegacyLifecyclesAndDerivedState;
    var didWarnAboutUndefinedDerivedState;
    var warnOnUndefinedDerivedState;
    var warnOnInvalidCallback;
    var didWarnAboutDirectlyAssigningPropsToState;
    var didWarnAboutContextTypeAndContextTypes;
    var didWarnAboutInvalidateContextType;
    {
      didWarnAboutStateAssignmentForComponent = new Set();
      didWarnAboutUninitializedState = new Set();
      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
      didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
      didWarnAboutDirectlyAssigningPropsToState = new Set();
      didWarnAboutUndefinedDerivedState = new Set();
      didWarnAboutContextTypeAndContextTypes = new Set();
      didWarnAboutInvalidateContextType = new Set();
      var didWarnOnInvalidCallback = new Set();

      warnOnInvalidCallback = function (callback, callerName) {
        if (callback === null || typeof callback === 'function') {
          return;
        }

        var key = callerName + '_' + callback;

        if (!didWarnOnInvalidCallback.has(key)) {
          didWarnOnInvalidCallback.add(key);
          error('%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);
        }
      };

      warnOnUndefinedDerivedState = function (type, partialState) {
        if (partialState === undefined) {
          var componentName = getComponentName(type) || 'Component';

          if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
            didWarnAboutUndefinedDerivedState.add(componentName);
            error('%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', componentName);
          }
        }
      }; // This is so gross but it's at least non-critical and can be removed if
      // it causes problems. This is meant to give a nicer error message for
      // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
      // ...)) which otherwise throws a "_processChildContext is not a function"
      // exception.


      Object.defineProperty(fakeInternalInstance, '_processChildContext', {
        enumerable: false,
        value: function () {
          {
            {
              throw Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
            }
          }
        }
      });
      Object.freeze(fakeInternalInstance);
    }

    function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
      var prevState = workInProgress.memoizedState;
      {
        if (workInProgress.mode & StrictMode) {
          disableLogs();

          try {
            // Invoke the function an extra time to help detect side-effects.
            getDerivedStateFromProps(nextProps, prevState);
          } finally {
            reenableLogs();
          }
        }
      }
      var partialState = getDerivedStateFromProps(nextProps, prevState);
      {
        warnOnUndefinedDerivedState(ctor, partialState);
      } // Merge the partial state and the previous state.

      var memoizedState = partialState === null || partialState === undefined ? prevState : _assign({}, prevState, partialState);
      workInProgress.memoizedState = memoizedState; // Once the update queue is empty, persist the derived state onto the
      // base state.

      if (workInProgress.lanes === NoLanes) {
        // Queue is always non-null for classes
        var updateQueue = workInProgress.updateQueue;
        updateQueue.baseState = memoizedState;
      }
    }

    var classComponentUpdater = {
      isMounted: isMounted,
      enqueueSetState: function (inst, payload, callback) {
        var fiber = get(inst);
        var eventTime = requestEventTime();
        var lane = requestUpdateLane(fiber);
        var update = createUpdate(eventTime, lane);
        update.payload = payload;

        if (callback !== undefined && callback !== null) {
          {
            warnOnInvalidCallback(callback, 'setState');
          }
          update.callback = callback;
        }

        enqueueUpdate(fiber, update);
        scheduleUpdateOnFiber(fiber, lane, eventTime);
      },
      enqueueReplaceState: function (inst, payload, callback) {
        var fiber = get(inst);
        var eventTime = requestEventTime();
        var lane = requestUpdateLane(fiber);
        var update = createUpdate(eventTime, lane);
        update.tag = ReplaceState;
        update.payload = payload;

        if (callback !== undefined && callback !== null) {
          {
            warnOnInvalidCallback(callback, 'replaceState');
          }
          update.callback = callback;
        }

        enqueueUpdate(fiber, update);
        scheduleUpdateOnFiber(fiber, lane, eventTime);
      },
      enqueueForceUpdate: function (inst, callback) {
        var fiber = get(inst);
        var eventTime = requestEventTime();
        var lane = requestUpdateLane(fiber);
        var update = createUpdate(eventTime, lane);
        update.tag = ForceUpdate;

        if (callback !== undefined && callback !== null) {
          {
            warnOnInvalidCallback(callback, 'forceUpdate');
          }
          update.callback = callback;
        }

        enqueueUpdate(fiber, update);
        scheduleUpdateOnFiber(fiber, lane, eventTime);
      }
    };

    function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
      var instance = workInProgress.stateNode;

      if (typeof instance.shouldComponentUpdate === 'function') {
        {
          if (workInProgress.mode & StrictMode) {
            disableLogs();

            try {
              // Invoke the function an extra time to help detect side-effects.
              instance.shouldComponentUpdate(newProps, newState, nextContext);
            } finally {
              reenableLogs();
            }
          }
        }
        var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
        {
          if (shouldUpdate === undefined) {
            error('%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentName(ctor) || 'Component');
          }
        }
        return shouldUpdate;
      }

      if (ctor.prototype && ctor.prototype.isPureReactComponent) {
        return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
      }

      return true;
    }

    function checkClassInstance(workInProgress, ctor, newProps) {
      var instance = workInProgress.stateNode;
      {
        var name = getComponentName(ctor) || 'Component';
        var renderPresent = instance.render;

        if (!renderPresent) {
          if (ctor.prototype && typeof ctor.prototype.render === 'function') {
            error('%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);
          } else {
            error('%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);
          }
        }

        if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) {
          error('getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name);
        }

        if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) {
          error('getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name);
        }

        if (instance.propTypes) {
          error('propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name);
        }

        if (instance.contextType) {
          error('contextType was defined as an instance property on %s. Use a static ' + 'property to define contextType instead.', name);
        }

        {
          if (instance.contextTypes) {
            error('contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name);
          }

          if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
            didWarnAboutContextTypeAndContextTypes.add(ctor);
            error('%s declares both contextTypes and contextType static properties. ' + 'The legacy contextTypes property will be ignored.', name);
          }
        }

        if (typeof instance.componentShouldUpdate === 'function') {
          error('%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name);
        }

        if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {
          error('%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentName(ctor) || 'A pure component');
        }

        if (typeof instance.componentDidUnmount === 'function') {
          error('%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name);
        }

        if (typeof instance.componentDidReceiveProps === 'function') {
          error('%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name);
        }

        if (typeof instance.componentWillRecieveProps === 'function') {
          error('%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name);
        }

        if (typeof instance.UNSAFE_componentWillRecieveProps === 'function') {
          error('%s has a method called ' + 'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?', name);
        }

        var hasMutatedProps = instance.props !== newProps;

        if (instance.props !== undefined && hasMutatedProps) {
          error('%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", name, name);
        }

        if (instance.defaultProps) {
          error('Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name);
        }

        if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
          didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
          error('%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' + 'This component defines getSnapshotBeforeUpdate() only.', getComponentName(ctor));
        }

        if (typeof instance.getDerivedStateFromProps === 'function') {
          error('%s: getDerivedStateFromProps() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name);
        }

        if (typeof instance.getDerivedStateFromError === 'function') {
          error('%s: getDerivedStateFromError() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name);
        }

        if (typeof ctor.getSnapshotBeforeUpdate === 'function') {
          error('%s: getSnapshotBeforeUpdate() is defined as a static method ' + 'and will be ignored. Instead, declare it as an instance method.', name);
        }

        var _state = instance.state;

        if (_state && (typeof _state !== 'object' || isArray(_state))) {
          error('%s.state: must be set to an object or null', name);
        }

        if (typeof instance.getChildContext === 'function' && typeof ctor.childContextTypes !== 'object') {
          error('%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', name);
        }
      }
    }

    function adoptClassInstance(workInProgress, instance) {
      instance.updater = classComponentUpdater;
      workInProgress.stateNode = instance; // The instance needs access to the fiber so that it can schedule updates

      set(instance, workInProgress);
      {
        instance._reactInternalInstance = fakeInternalInstance;
      }
    }

    function constructClassInstance(workInProgress, ctor, props) {
      var isLegacyContextConsumer = false;
      var unmaskedContext = emptyContextObject;
      var context = emptyContextObject;
      var contextType = ctor.contextType;
      {
        if ('contextType' in ctor) {
          var isValid = // Allow null for conditional declaration
          contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined; // Not a <Context.Consumer>

          if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
            didWarnAboutInvalidateContextType.add(ctor);
            var addendum = '';

            if (contextType === undefined) {
              addendum = ' However, it is set to undefined. ' + 'This can be caused by a typo or by mixing up named and default imports. ' + 'This can also happen due to a circular dependency, so ' + 'try moving the createContext() call to a separate file.';
            } else if (typeof contextType !== 'object') {
              addendum = ' However, it is set to a ' + typeof contextType + '.';
            } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
              addendum = ' Did you accidentally pass the Context.Provider instead?';
            } else if (contextType._context !== undefined) {
              // <Context.Consumer>
              addendum = ' Did you accidentally pass the Context.Consumer instead?';
            } else {
              addendum = ' However, it is set to an object with keys {' + Object.keys(contextType).join(', ') + '}.';
            }

            error('%s defines an invalid contextType. ' + 'contextType should point to the Context object returned by React.createContext().%s', getComponentName(ctor) || 'Component', addendum);
          }
        }
      }

      if (typeof contextType === 'object' && contextType !== null) {
        context = readContext(contextType);
      } else {
        unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
        var contextTypes = ctor.contextTypes;
        isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;
        context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;
      } // Instantiate twice to help detect side-effects.


      {
        if (workInProgress.mode & StrictMode) {
          disableLogs();

          try {
            new ctor(props, context); // eslint-disable-line no-new
          } finally {
            reenableLogs();
          }
        }
      }
      var instance = new ctor(props, context);
      var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;
      adoptClassInstance(workInProgress, instance);
      {
        if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {
          var componentName = getComponentName(ctor) || 'Component';

          if (!didWarnAboutUninitializedState.has(componentName)) {
            didWarnAboutUninitializedState.add(componentName);
            error('`%s` uses `getDerivedStateFromProps` but its initial state is ' + '%s. This is not recommended. Instead, define the initial state by ' + 'assigning an object to `this.state` in the constructor of `%s`. ' + 'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.', componentName, instance.state === null ? 'null' : 'undefined', componentName);
          }
        } // If new component APIs are defined, "unsafe" lifecycles won't be called.
        // Warn about these lifecycles if they are present.
        // Don't warn about react-lifecycles-compat polyfilled methods though.


        if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {
          var foundWillMountName = null;
          var foundWillReceivePropsName = null;
          var foundWillUpdateName = null;

          if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {
            foundWillMountName = 'componentWillMount';
          } else if (typeof instance.UNSAFE_componentWillMount === 'function') {
            foundWillMountName = 'UNSAFE_componentWillMount';
          }

          if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
            foundWillReceivePropsName = 'componentWillReceiveProps';
          } else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
            foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
          }

          if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
            foundWillUpdateName = 'componentWillUpdate';
          } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
            foundWillUpdateName = 'UNSAFE_componentWillUpdate';
          }

          if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
            var _componentName = getComponentName(ctor) || 'Component';

            var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';

            if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
              didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
              error('Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' + '%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\n' + 'The above lifecycles should be removed. Learn more about this warning here:\n' + 'https://reactjs.org/link/unsafe-component-lifecycles', _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : '', foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : '', foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : '');
            }
          }
        }
      } // Cache unmasked context so we can avoid recreating masked context unless necessary.
      // ReactFiberContext usually updates this cache but can't for newly-created instances.

      if (isLegacyContextConsumer) {
        cacheContext(workInProgress, unmaskedContext, context);
      }

      return instance;
    }

    function callComponentWillMount(workInProgress, instance) {
      var oldState = instance.state;

      if (typeof instance.componentWillMount === 'function') {
        instance.componentWillMount();
      }

      if (typeof instance.UNSAFE_componentWillMount === 'function') {
        instance.UNSAFE_componentWillMount();
      }

      if (oldState !== instance.state) {
        {
          error('%s.componentWillMount(): Assigning directly to this.state is ' + "deprecated (except inside a component's " + 'constructor). Use setState instead.', getComponentName(workInProgress.type) || 'Component');
        }
        classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
      }
    }

    function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
      var oldState = instance.state;

      if (typeof instance.componentWillReceiveProps === 'function') {
        instance.componentWillReceiveProps(newProps, nextContext);
      }

      if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
        instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
      }

      if (instance.state !== oldState) {
        {
          var componentName = getComponentName(workInProgress.type) || 'Component';

          if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
            didWarnAboutStateAssignmentForComponent.add(componentName);
            error('%s.componentWillReceiveProps(): Assigning directly to ' + "this.state is deprecated (except inside a component's " + 'constructor). Use setState instead.', componentName);
          }
        }
        classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
      }
    } // Invokes the mount life-cycles on a previously never rendered instance.


    function mountClassInstance(workInProgress, ctor, newProps, renderLanes) {
      {
        checkClassInstance(workInProgress, ctor, newProps);
      }
      var instance = workInProgress.stateNode;
      instance.props = newProps;
      instance.state = workInProgress.memoizedState;
      instance.refs = emptyRefsObject;
      initializeUpdateQueue(workInProgress);
      var contextType = ctor.contextType;

      if (typeof contextType === 'object' && contextType !== null) {
        instance.context = readContext(contextType);
      } else {
        var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
        instance.context = getMaskedContext(workInProgress, unmaskedContext);
      }

      {
        if (instance.state === newProps) {
          var componentName = getComponentName(ctor) || 'Component';

          if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
            didWarnAboutDirectlyAssigningPropsToState.add(componentName);
            error('%s: It is not recommended to assign props directly to state ' + "because updates to props won't be reflected in state. " + 'In most cases, it is better to use props directly.', componentName);
          }
        }

        if (workInProgress.mode & StrictMode) {
          ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);
        }

        {
          ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);
        }
      }
      processUpdateQueue(workInProgress, newProps, instance, renderLanes);
      instance.state = workInProgress.memoizedState;
      var getDerivedStateFromProps = ctor.getDerivedStateFromProps;

      if (typeof getDerivedStateFromProps === 'function') {
        applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
        instance.state = workInProgress.memoizedState;
      } // In order to support react-lifecycles-compat polyfilled components,
      // Unsafe lifecycles should not be invoked for components using the new APIs.


      if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
        callComponentWillMount(workInProgress, instance); // If we had additional state updates during this life-cycle, let's
        // process them now.

        processUpdateQueue(workInProgress, newProps, instance, renderLanes);
        instance.state = workInProgress.memoizedState;
      }

      if (typeof instance.componentDidMount === 'function') {
        workInProgress.flags |= Update;
      }
    }

    function resumeMountClassInstance(workInProgress, ctor, newProps, renderLanes) {
      var instance = workInProgress.stateNode;
      var oldProps = workInProgress.memoizedProps;
      instance.props = oldProps;
      var oldContext = instance.context;
      var contextType = ctor.contextType;
      var nextContext = emptyContextObject;

      if (typeof contextType === 'object' && contextType !== null) {
        nextContext = readContext(contextType);
      } else {
        var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
        nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);
      }

      var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
      var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what
      // ever the previously attempted to render - not the "current". However,
      // during componentDidUpdate we pass the "current" props.
      // In order to support react-lifecycles-compat polyfilled components,
      // Unsafe lifecycles should not be invoked for components using the new APIs.

      if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
        if (oldProps !== newProps || oldContext !== nextContext) {
          callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
        }
      }

      resetHasForceUpdateBeforeProcessing();
      var oldState = workInProgress.memoizedState;
      var newState = instance.state = oldState;
      processUpdateQueue(workInProgress, newProps, instance, renderLanes);
      newState = workInProgress.memoizedState;

      if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
        // If an update was already in progress, we should schedule an Update
        // effect even though we're bailing out, so that cWU/cDU are called.
        if (typeof instance.componentDidMount === 'function') {
          workInProgress.flags |= Update;
        }

        return false;
      }

      if (typeof getDerivedStateFromProps === 'function') {
        applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
        newState = workInProgress.memoizedState;
      }

      var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);

      if (shouldUpdate) {
        // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
          if (typeof instance.componentWillMount === 'function') {
            instance.componentWillMount();
          }

          if (typeof instance.UNSAFE_componentWillMount === 'function') {
            instance.UNSAFE_componentWillMount();
          }
        }

        if (typeof instance.componentDidMount === 'function') {
          workInProgress.flags |= Update;
        }
      } else {
        // If an update was already in progress, we should schedule an Update
        // effect even though we're bailing out, so that cWU/cDU are called.
        if (typeof instance.componentDidMount === 'function') {
          workInProgress.flags |= Update;
        } // If shouldComponentUpdate returned false, we should still update the
        // memoized state to indicate that this work can be reused.


        workInProgress.memoizedProps = newProps;
        workInProgress.memoizedState = newState;
      } // Update the existing instance's state, props, and context pointers even
      // if shouldComponentUpdate returns false.


      instance.props = newProps;
      instance.state = newState;
      instance.context = nextContext;
      return shouldUpdate;
    } // Invokes the update life-cycles and returns false if it shouldn't rerender.


    function updateClassInstance(current, workInProgress, ctor, newProps, renderLanes) {
      var instance = workInProgress.stateNode;
      cloneUpdateQueue(current, workInProgress);
      var unresolvedOldProps = workInProgress.memoizedProps;
      var oldProps = workInProgress.type === workInProgress.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress.type, unresolvedOldProps);
      instance.props = oldProps;
      var unresolvedNewProps = workInProgress.pendingProps;
      var oldContext = instance.context;
      var contextType = ctor.contextType;
      var nextContext = emptyContextObject;

      if (typeof contextType === 'object' && contextType !== null) {
        nextContext = readContext(contextType);
      } else {
        var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
        nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);
      }

      var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
      var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what
      // ever the previously attempted to render - not the "current". However,
      // during componentDidUpdate we pass the "current" props.
      // In order to support react-lifecycles-compat polyfilled components,
      // Unsafe lifecycles should not be invoked for components using the new APIs.

      if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
        if (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) {
          callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
        }
      }

      resetHasForceUpdateBeforeProcessing();
      var oldState = workInProgress.memoizedState;
      var newState = instance.state = oldState;
      processUpdateQueue(workInProgress, newProps, instance, renderLanes);
      newState = workInProgress.memoizedState;

      if (unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
        // If an update was already in progress, we should schedule an Update
        // effect even though we're bailing out, so that cWU/cDU are called.
        if (typeof instance.componentDidUpdate === 'function') {
          if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {
            workInProgress.flags |= Update;
          }
        }

        if (typeof instance.getSnapshotBeforeUpdate === 'function') {
          if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {
            workInProgress.flags |= Snapshot;
          }
        }

        return false;
      }

      if (typeof getDerivedStateFromProps === 'function') {
        applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
        newState = workInProgress.memoizedState;
      }

      var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);

      if (shouldUpdate) {
        // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {
          if (typeof instance.componentWillUpdate === 'function') {
            instance.componentWillUpdate(newProps, newState, nextContext);
          }

          if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
            instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
          }
        }

        if (typeof instance.componentDidUpdate === 'function') {
          workInProgress.flags |= Update;
        }

        if (typeof instance.getSnapshotBeforeUpdate === 'function') {
          workInProgress.flags |= Snapshot;
        }
      } else {
        // If an update was already in progress, we should schedule an Update
        // effect even though we're bailing out, so that cWU/cDU are called.
        if (typeof instance.componentDidUpdate === 'function') {
          if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {
            workInProgress.flags |= Update;
          }
        }

        if (typeof instance.getSnapshotBeforeUpdate === 'function') {
          if (unresolvedOldProps !== current.memoizedProps || oldState !== current.memoizedState) {
            workInProgress.flags |= Snapshot;
          }
        } // If shouldComponentUpdate returned false, we should still update the
        // memoized props/state to indicate that this work can be reused.


        workInProgress.memoizedProps = newProps;
        workInProgress.memoizedState = newState;
      } // Update the existing instance's state, props, and context pointers even
      // if shouldComponentUpdate returns false.


      instance.props = newProps;
      instance.state = newState;
      instance.context = nextContext;
      return shouldUpdate;
    }

    var didWarnAboutMaps;
    var didWarnAboutGenerators;
    var didWarnAboutStringRefs;
    var ownerHasKeyUseWarning;
    var ownerHasFunctionTypeWarning;

    var warnForMissingKey = function (child, returnFiber) {};

    {
      didWarnAboutMaps = false;
      didWarnAboutGenerators = false;
      didWarnAboutStringRefs = {};
      /**
       * Warn if there's no key explicitly set on dynamic arrays of children or
       * object keys are not valid. This allows us to keep track of children between
       * updates.
       */

      ownerHasKeyUseWarning = {};
      ownerHasFunctionTypeWarning = {};

      warnForMissingKey = function (child, returnFiber) {
        if (child === null || typeof child !== 'object') {
          return;
        }

        if (!child._store || child._store.validated || child.key != null) {
          return;
        }

        if (!(typeof child._store === 'object')) {
          {
            throw Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
          }
        }

        child._store.validated = true;
        var componentName = getComponentName(returnFiber.type) || 'Component';

        if (ownerHasKeyUseWarning[componentName]) {
          return;
        }

        ownerHasKeyUseWarning[componentName] = true;
        error('Each child in a list should have a unique ' + '"key" prop. See https://reactjs.org/link/warning-keys for ' + 'more information.');
      };
    }
    var isArray$1 = Array.isArray;

    function coerceRef(returnFiber, current, element) {
      var mixedRef = element.ref;

      if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {
        {
          // TODO: Clean this up once we turn on the string ref warning for
          // everyone, because the strict mode case will no longer be relevant
          if ((returnFiber.mode & StrictMode || warnAboutStringRefs) && // We warn in ReactElement.js if owner and self are equal for string refs
          // because these cannot be automatically converted to an arrow function
          // using a codemod. Therefore, we don't have to warn about string refs again.
          !(element._owner && element._self && element._owner.stateNode !== element._self)) {
            var componentName = getComponentName(returnFiber.type) || 'Component';

            if (!didWarnAboutStringRefs[componentName]) {
              {
                error('A string ref, "%s", has been found within a strict mode tree. ' + 'String refs are a source of potential bugs and should be avoided. ' + 'We recommend using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', mixedRef);
              }
              didWarnAboutStringRefs[componentName] = true;
            }
          }
        }

        if (element._owner) {
          var owner = element._owner;
          var inst;

          if (owner) {
            var ownerFiber = owner;

            if (!(ownerFiber.tag === ClassComponent)) {
              {
                throw Error("Function components cannot have string refs. We recommend using useRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref");
              }
            }

            inst = ownerFiber.stateNode;
          }

          if (!inst) {
            {
              throw Error("Missing owner for string ref " + mixedRef + ". This error is likely caused by a bug in React. Please file an issue.");
            }
          }

          var stringRef = '' + mixedRef; // Check if previous string ref matches new string ref

          if (current !== null && current.ref !== null && typeof current.ref === 'function' && current.ref._stringRef === stringRef) {
            return current.ref;
          }

          var ref = function (value) {
            var refs = inst.refs;

            if (refs === emptyRefsObject) {
              // This is a lazy pooled frozen object, so we need to initialize.
              refs = inst.refs = {};
            }

            if (value === null) {
              delete refs[stringRef];
            } else {
              refs[stringRef] = value;
            }
          };

          ref._stringRef = stringRef;
          return ref;
        } else {
          if (!(typeof mixedRef === 'string')) {
            {
              throw Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
            }
          }

          if (!element._owner) {
            {
              throw Error("Element ref was specified as a string (" + mixedRef + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://reactjs.org/link/refs-must-have-owner for more information.");
            }
          }
        }
      }

      return mixedRef;
    }

    function throwOnInvalidObjectType(returnFiber, newChild) {
      if (returnFiber.type !== 'textarea') {
        {
          {
            throw Error("Objects are not valid as a React child (found: " + (Object.prototype.toString.call(newChild) === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : newChild) + "). If you meant to render a collection of children, use an array instead.");
          }
        }
      }
    }

    function warnOnFunctionType(returnFiber) {
      {
        var componentName = getComponentName(returnFiber.type) || 'Component';

        if (ownerHasFunctionTypeWarning[componentName]) {
          return;
        }

        ownerHasFunctionTypeWarning[componentName] = true;
        error('Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.');
      }
    } // We avoid inlining this to avoid potential deopts from using try/catch.
    // to be able to optimize each path individually by branching early. This needs
    // a compiler or we can do it manually. Helpers that don't need this branching
    // live outside of this function.


    function ChildReconciler(shouldTrackSideEffects) {
      function deleteChild(returnFiber, childToDelete) {
        if (!shouldTrackSideEffects) {
          // Noop.
          return;
        } // Deletions are added in reversed order so we add it to the front.
        // At this point, the return fiber's effect list is empty except for
        // deletions, so we can just append the deletion to the list. The remaining
        // effects aren't added until the complete phase. Once we implement
        // resuming, this may not be true.


        var last = returnFiber.lastEffect;

        if (last !== null) {
          last.nextEffect = childToDelete;
          returnFiber.lastEffect = childToDelete;
        } else {
          returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
        }

        childToDelete.nextEffect = null;
        childToDelete.flags = Deletion;
      }

      function deleteRemainingChildren(returnFiber, currentFirstChild) {
        if (!shouldTrackSideEffects) {
          // Noop.
          return null;
        } // TODO: For the shouldClone case, this could be micro-optimized a bit by
        // assuming that after the first child we've already added everything.


        var childToDelete = currentFirstChild;

        while (childToDelete !== null) {
          deleteChild(returnFiber, childToDelete);
          childToDelete = childToDelete.sibling;
        }

        return null;
      }

      function mapRemainingChildren(returnFiber, currentFirstChild) {
        // Add the remaining children to a temporary map so that we can find them by
        // keys quickly. Implicit (null) keys get added to this set with their index
        // instead.
        var existingChildren = new Map();
        var existingChild = currentFirstChild;

        while (existingChild !== null) {
          if (existingChild.key !== null) {
            existingChildren.set(existingChild.key, existingChild);
          } else {
            existingChildren.set(existingChild.index, existingChild);
          }

          existingChild = existingChild.sibling;
        }

        return existingChildren;
      }

      function useFiber(fiber, pendingProps) {
        // We currently set sibling to null and index to 0 here because it is easy
        // to forget to do before returning it. E.g. for the single child case.
        var clone = createWorkInProgress(fiber, pendingProps);
        clone.index = 0;
        clone.sibling = null;
        return clone;
      }

      function placeChild(newFiber, lastPlacedIndex, newIndex) {
        newFiber.index = newIndex;

        if (!shouldTrackSideEffects) {
          // Noop.
          return lastPlacedIndex;
        }

        var current = newFiber.alternate;

        if (current !== null) {
          var oldIndex = current.index;

          if (oldIndex < lastPlacedIndex) {
            // This is a move.
            newFiber.flags = Placement;
            return lastPlacedIndex;
          } else {
            // This item can stay in place.
            return oldIndex;
          }
        } else {
          // This is an insertion.
          newFiber.flags = Placement;
          return lastPlacedIndex;
        }
      }

      function placeSingleChild(newFiber) {
        // This is simpler for the single child case. We only need to do a
        // placement for inserting new children.
        if (shouldTrackSideEffects && newFiber.alternate === null) {
          newFiber.flags = Placement;
        }

        return newFiber;
      }

      function updateTextNode(returnFiber, current, textContent, lanes) {
        if (current === null || current.tag !== HostText) {
          // Insert
          var created = createFiberFromText(textContent, returnFiber.mode, lanes);
          created.return = returnFiber;
          return created;
        } else {
          // Update
          var existing = useFiber(current, textContent);
          existing.return = returnFiber;
          return existing;
        }
      }

      function updateElement(returnFiber, current, element, lanes) {
        if (current !== null) {
          if (current.elementType === element.type || // Keep this check inline so it only runs on the false path:
          isCompatibleFamilyForHotReloading(current, element)) {
            // Move based on index
            var existing = useFiber(current, element.props);
            existing.ref = coerceRef(returnFiber, current, element);
            existing.return = returnFiber;
            {
              existing._debugSource = element._source;
              existing._debugOwner = element._owner;
            }
            return existing;
          }
        } // Insert


        var created = createFiberFromElement(element, returnFiber.mode, lanes);
        created.ref = coerceRef(returnFiber, current, element);
        created.return = returnFiber;
        return created;
      }

      function updatePortal(returnFiber, current, portal, lanes) {
        if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {
          // Insert
          var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
          created.return = returnFiber;
          return created;
        } else {
          // Update
          var existing = useFiber(current, portal.children || []);
          existing.return = returnFiber;
          return existing;
        }
      }

      function updateFragment(returnFiber, current, fragment, lanes, key) {
        if (current === null || current.tag !== Fragment) {
          // Insert
          var created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);
          created.return = returnFiber;
          return created;
        } else {
          // Update
          var existing = useFiber(current, fragment);
          existing.return = returnFiber;
          return existing;
        }
      }

      function createChild(returnFiber, newChild, lanes) {
        if (typeof newChild === 'string' || typeof newChild === 'number') {
          // Text nodes don't have keys. If the previous node is implicitly keyed
          // we can continue to replace it without aborting even if it is not a text
          // node.
          var created = createFiberFromText('' + newChild, returnFiber.mode, lanes);
          created.return = returnFiber;
          return created;
        }

        if (typeof newChild === 'object' && newChild !== null) {
          switch (newChild.$$typeof) {
            case REACT_ELEMENT_TYPE:
              {
                var _created = createFiberFromElement(newChild, returnFiber.mode, lanes);

                _created.ref = coerceRef(returnFiber, null, newChild);
                _created.return = returnFiber;
                return _created;
              }

            case REACT_PORTAL_TYPE:
              {
                var _created2 = createFiberFromPortal(newChild, returnFiber.mode, lanes);

                _created2.return = returnFiber;
                return _created2;
              }
          }

          if (isArray$1(newChild) || getIteratorFn(newChild)) {
            var _created3 = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);

            _created3.return = returnFiber;
            return _created3;
          }

          throwOnInvalidObjectType(returnFiber, newChild);
        }

        {
          if (typeof newChild === 'function') {
            warnOnFunctionType(returnFiber);
          }
        }
        return null;
      }

      function updateSlot(returnFiber, oldFiber, newChild, lanes) {
        // Update the fiber if the keys match, otherwise return null.
        var key = oldFiber !== null ? oldFiber.key : null;

        if (typeof newChild === 'string' || typeof newChild === 'number') {
          // Text nodes don't have keys. If the previous node is implicitly keyed
          // we can continue to replace it without aborting even if it is not a text
          // node.
          if (key !== null) {
            return null;
          }

          return updateTextNode(returnFiber, oldFiber, '' + newChild, lanes);
        }

        if (typeof newChild === 'object' && newChild !== null) {
          switch (newChild.$$typeof) {
            case REACT_ELEMENT_TYPE:
              {
                if (newChild.key === key) {
                  if (newChild.type === REACT_FRAGMENT_TYPE) {
                    return updateFragment(returnFiber, oldFiber, newChild.props.children, lanes, key);
                  }

                  return updateElement(returnFiber, oldFiber, newChild, lanes);
                } else {
                  return null;
                }
              }

            case REACT_PORTAL_TYPE:
              {
                if (newChild.key === key) {
                  return updatePortal(returnFiber, oldFiber, newChild, lanes);
                } else {
                  return null;
                }
              }
          }

          if (isArray$1(newChild) || getIteratorFn(newChild)) {
            if (key !== null) {
              return null;
            }

            return updateFragment(returnFiber, oldFiber, newChild, lanes, null);
          }

          throwOnInvalidObjectType(returnFiber, newChild);
        }

        {
          if (typeof newChild === 'function') {
            warnOnFunctionType(returnFiber);
          }
        }
        return null;
      }

      function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {
        if (typeof newChild === 'string' || typeof newChild === 'number') {
          // Text nodes don't have keys, so we neither have to check the old nor
          // new node for the key. If both are text nodes, they match.
          var matchedFiber = existingChildren.get(newIdx) || null;
          return updateTextNode(returnFiber, matchedFiber, '' + newChild, lanes);
        }

        if (typeof newChild === 'object' && newChild !== null) {
          switch (newChild.$$typeof) {
            case REACT_ELEMENT_TYPE:
              {
                var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;

                if (newChild.type === REACT_FRAGMENT_TYPE) {
                  return updateFragment(returnFiber, _matchedFiber, newChild.props.children, lanes, newChild.key);
                }

                return updateElement(returnFiber, _matchedFiber, newChild, lanes);
              }

            case REACT_PORTAL_TYPE:
              {
                var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;

                return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);
              }
          }

          if (isArray$1(newChild) || getIteratorFn(newChild)) {
            var _matchedFiber3 = existingChildren.get(newIdx) || null;

            return updateFragment(returnFiber, _matchedFiber3, newChild, lanes, null);
          }

          throwOnInvalidObjectType(returnFiber, newChild);
        }

        {
          if (typeof newChild === 'function') {
            warnOnFunctionType(returnFiber);
          }
        }
        return null;
      }
      /**
       * Warns if there is a duplicate or missing key
       */


      function warnOnInvalidKey(child, knownKeys, returnFiber) {
        {
          if (typeof child !== 'object' || child === null) {
            return knownKeys;
          }

          switch (child.$$typeof) {
            case REACT_ELEMENT_TYPE:
            case REACT_PORTAL_TYPE:
              warnForMissingKey(child, returnFiber);
              var key = child.key;

              if (typeof key !== 'string') {
                break;
              }

              if (knownKeys === null) {
                knownKeys = new Set();
                knownKeys.add(key);
                break;
              }

              if (!knownKeys.has(key)) {
                knownKeys.add(key);
                break;
              }

              error('Encountered two children with the same key, `%s`. ' + 'Keys should be unique so that components maintain their identity ' + 'across updates. Non-unique keys may cause children to be ' + 'duplicated and/or omitted — the behavior is unsupported and ' + 'could change in a future version.', key);
              break;
          }
        }
        return knownKeys;
      }

      function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {
        // This algorithm can't optimize by searching from both ends since we
        // don't have backpointers on fibers. I'm trying to see how far we can get
        // with that model. If it ends up not being worth the tradeoffs, we can
        // add it later.
        // Even with a two ended optimization, we'd want to optimize for the case
        // where there are few changes and brute force the comparison instead of
        // going for the Map. It'd like to explore hitting that path first in
        // forward-only mode and only go for the Map once we notice that we need
        // lots of look ahead. This doesn't handle reversal as well as two ended
        // search but that's unusual. Besides, for the two ended optimization to
        // work on Iterables, we'd need to copy the whole set.
        // In this first iteration, we'll just live with hitting the bad case
        // (adding everything to a Map) in for every insert/move.
        // If you change this code, also update reconcileChildrenIterator() which
        // uses the same algorithm.
        {
          // First, validate keys.
          var knownKeys = null;

          for (var i = 0; i < newChildren.length; i++) {
            var child = newChildren[i];
            knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
          }
        }
        var resultingFirstChild = null;
        var previousNewFiber = null;
        var oldFiber = currentFirstChild;
        var lastPlacedIndex = 0;
        var newIdx = 0;
        var nextOldFiber = null;

        for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
          if (oldFiber.index > newIdx) {
            nextOldFiber = oldFiber;
            oldFiber = null;
          } else {
            nextOldFiber = oldFiber.sibling;
          }

          var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);

          if (newFiber === null) {
            // TODO: This breaks on empty slots like null children. That's
            // unfortunate because it triggers the slow path all the time. We need
            // a better way to communicate whether this was a miss or null,
            // boolean, undefined, etc.
            if (oldFiber === null) {
              oldFiber = nextOldFiber;
            }

            break;
          }

          if (shouldTrackSideEffects) {
            if (oldFiber && newFiber.alternate === null) {
              // We matched the slot, but we didn't reuse the existing fiber, so we
              // need to delete the existing child.
              deleteChild(returnFiber, oldFiber);
            }
          }

          lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);

          if (previousNewFiber === null) {
            // TODO: Move out of the loop. This only happens for the first run.
            resultingFirstChild = newFiber;
          } else {
            // TODO: Defer siblings if we're not at the right index for this slot.
            // I.e. if we had null values before, then we want to defer this
            // for each null value. However, we also don't want to call updateSlot
            // with the previous one.
            previousNewFiber.sibling = newFiber;
          }

          previousNewFiber = newFiber;
          oldFiber = nextOldFiber;
        }

        if (newIdx === newChildren.length) {
          // We've reached the end of the new children. We can delete the rest.
          deleteRemainingChildren(returnFiber, oldFiber);
          return resultingFirstChild;
        }

        if (oldFiber === null) {
          // If we don't have any more existing children we can choose a fast path
          // since the rest will all be insertions.
          for (; newIdx < newChildren.length; newIdx++) {
            var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);

            if (_newFiber === null) {
              continue;
            }

            lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);

            if (previousNewFiber === null) {
              // TODO: Move out of the loop. This only happens for the first run.
              resultingFirstChild = _newFiber;
            } else {
              previousNewFiber.sibling = _newFiber;
            }

            previousNewFiber = _newFiber;
          }

          return resultingFirstChild;
        } // Add all children to a key map for quick lookups.


        var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.

        for (; newIdx < newChildren.length; newIdx++) {
          var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);

          if (_newFiber2 !== null) {
            if (shouldTrackSideEffects) {
              if (_newFiber2.alternate !== null) {
                // The new fiber is a work in progress, but if there exists a
                // current, that means that we reused the fiber. We need to delete
                // it from the child list so that we don't add it to the deletion
                // list.
                existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
              }
            }

            lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);

            if (previousNewFiber === null) {
              resultingFirstChild = _newFiber2;
            } else {
              previousNewFiber.sibling = _newFiber2;
            }

            previousNewFiber = _newFiber2;
          }
        }

        if (shouldTrackSideEffects) {
          // Any existing children that weren't consumed above were deleted. We need
          // to add them to the deletion list.
          existingChildren.forEach(function (child) {
            return deleteChild(returnFiber, child);
          });
        }

        return resultingFirstChild;
      }

      function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {
        // This is the same implementation as reconcileChildrenArray(),
        // but using the iterator instead.
        var iteratorFn = getIteratorFn(newChildrenIterable);

        if (!(typeof iteratorFn === 'function')) {
          {
            throw Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
          }
        }

        {
          // We don't support rendering Generators because it's a mutation.
          // See https://github.com/facebook/react/issues/12995
          if (typeof Symbol === 'function' && // $FlowFixMe Flow doesn't know about toStringTag
          newChildrenIterable[Symbol.toStringTag] === 'Generator') {
            if (!didWarnAboutGenerators) {
              error('Using Generators as children is unsupported and will likely yield ' + 'unexpected results because enumerating a generator mutates it. ' + 'You may convert it to an array with `Array.from()` or the ' + '`[...spread]` operator before rendering. Keep in mind ' + 'you might need to polyfill these features for older browsers.');
            }

            didWarnAboutGenerators = true;
          } // Warn about using Maps as children


          if (newChildrenIterable.entries === iteratorFn) {
            if (!didWarnAboutMaps) {
              error('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');
            }

            didWarnAboutMaps = true;
          } // First, validate keys.
          // We'll get a different iterator later for the main pass.


          var _newChildren = iteratorFn.call(newChildrenIterable);

          if (_newChildren) {
            var knownKeys = null;

            var _step = _newChildren.next();

            for (; !_step.done; _step = _newChildren.next()) {
              var child = _step.value;
              knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
            }
          }
        }
        var newChildren = iteratorFn.call(newChildrenIterable);

        if (!(newChildren != null)) {
          {
            throw Error("An iterable object provided no iterator.");
          }
        }

        var resultingFirstChild = null;
        var previousNewFiber = null;
        var oldFiber = currentFirstChild;
        var lastPlacedIndex = 0;
        var newIdx = 0;
        var nextOldFiber = null;
        var step = newChildren.next();

        for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
          if (oldFiber.index > newIdx) {
            nextOldFiber = oldFiber;
            oldFiber = null;
          } else {
            nextOldFiber = oldFiber.sibling;
          }

          var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);

          if (newFiber === null) {
            // TODO: This breaks on empty slots like null children. That's
            // unfortunate because it triggers the slow path all the time. We need
            // a better way to communicate whether this was a miss or null,
            // boolean, undefined, etc.
            if (oldFiber === null) {
              oldFiber = nextOldFiber;
            }

            break;
          }

          if (shouldTrackSideEffects) {
            if (oldFiber && newFiber.alternate === null) {
              // We matched the slot, but we didn't reuse the existing fiber, so we
              // need to delete the existing child.
              deleteChild(returnFiber, oldFiber);
            }
          }

          lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);

          if (previousNewFiber === null) {
            // TODO: Move out of the loop. This only happens for the first run.
            resultingFirstChild = newFiber;
          } else {
            // TODO: Defer siblings if we're not at the right index for this slot.
            // I.e. if we had null values before, then we want to defer this
            // for each null value. However, we also don't want to call updateSlot
            // with the previous one.
            previousNewFiber.sibling = newFiber;
          }

          previousNewFiber = newFiber;
          oldFiber = nextOldFiber;
        }

        if (step.done) {
          // We've reached the end of the new children. We can delete the rest.
          deleteRemainingChildren(returnFiber, oldFiber);
          return resultingFirstChild;
        }

        if (oldFiber === null) {
          // If we don't have any more existing children we can choose a fast path
          // since the rest will all be insertions.
          for (; !step.done; newIdx++, step = newChildren.next()) {
            var _newFiber3 = createChild(returnFiber, step.value, lanes);

            if (_newFiber3 === null) {
              continue;
            }

            lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);

            if (previousNewFiber === null) {
              // TODO: Move out of the loop. This only happens for the first run.
              resultingFirstChild = _newFiber3;
            } else {
              previousNewFiber.sibling = _newFiber3;
            }

            previousNewFiber = _newFiber3;
          }

          return resultingFirstChild;
        } // Add all children to a key map for quick lookups.


        var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.

        for (; !step.done; newIdx++, step = newChildren.next()) {
          var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);

          if (_newFiber4 !== null) {
            if (shouldTrackSideEffects) {
              if (_newFiber4.alternate !== null) {
                // The new fiber is a work in progress, but if there exists a
                // current, that means that we reused the fiber. We need to delete
                // it from the child list so that we don't add it to the deletion
                // list.
                existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
              }
            }

            lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);

            if (previousNewFiber === null) {
              resultingFirstChild = _newFiber4;
            } else {
              previousNewFiber.sibling = _newFiber4;
            }

            previousNewFiber = _newFiber4;
          }
        }

        if (shouldTrackSideEffects) {
          // Any existing children that weren't consumed above were deleted. We need
          // to add them to the deletion list.
          existingChildren.forEach(function (child) {
            return deleteChild(returnFiber, child);
          });
        }

        return resultingFirstChild;
      }

      function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {
        // There's no need to check for keys on text nodes since we don't have a
        // way to define them.
        if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
          // We already have an existing node so let's just update it and delete
          // the rest.
          deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
          var existing = useFiber(currentFirstChild, textContent);
          existing.return = returnFiber;
          return existing;
        } // The existing first child is not a text node so we need to create one
        // and delete the existing ones.


        deleteRemainingChildren(returnFiber, currentFirstChild);
        var created = createFiberFromText(textContent, returnFiber.mode, lanes);
        created.return = returnFiber;
        return created;
      }

      function reconcileSingleElement(returnFiber, currentFirstChild, element, lanes) {
        var key = element.key;
        var child = currentFirstChild;

        while (child !== null) {
          // TODO: If key === null and child.key === null, then this only applies to
          // the first item in the list.
          if (child.key === key) {
            switch (child.tag) {
              case Fragment:
                {
                  if (element.type === REACT_FRAGMENT_TYPE) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var existing = useFiber(child, element.props.children);
                    existing.return = returnFiber;
                    {
                      existing._debugSource = element._source;
                      existing._debugOwner = element._owner;
                    }
                    return existing;
                  }

                  break;
                }

              case Block: // We intentionally fallthrough here if enableBlocksAPI is not on.
              // eslint-disable-next-lined no-fallthrough

              default:
                {
                  if (child.elementType === element.type || // Keep this check inline so it only runs on the false path:
                  isCompatibleFamilyForHotReloading(child, element)) {
                    deleteRemainingChildren(returnFiber, child.sibling);

                    var _existing3 = useFiber(child, element.props);

                    _existing3.ref = coerceRef(returnFiber, child, element);
                    _existing3.return = returnFiber;
                    {
                      _existing3._debugSource = element._source;
                      _existing3._debugOwner = element._owner;
                    }
                    return _existing3;
                  }

                  break;
                }
            } // Didn't match.


            deleteRemainingChildren(returnFiber, child);
            break;
          } else {
            deleteChild(returnFiber, child);
          }

          child = child.sibling;
        }

        if (element.type === REACT_FRAGMENT_TYPE) {
          var created = createFiberFromFragment(element.props.children, returnFiber.mode, lanes, element.key);
          created.return = returnFiber;
          return created;
        } else {
          var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);

          _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
          _created4.return = returnFiber;
          return _created4;
        }
      }

      function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {
        var key = portal.key;
        var child = currentFirstChild;

        while (child !== null) {
          // TODO: If key === null and child.key === null, then this only applies to
          // the first item in the list.
          if (child.key === key) {
            if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
              deleteRemainingChildren(returnFiber, child.sibling);
              var existing = useFiber(child, portal.children || []);
              existing.return = returnFiber;
              return existing;
            } else {
              deleteRemainingChildren(returnFiber, child);
              break;
            }
          } else {
            deleteChild(returnFiber, child);
          }

          child = child.sibling;
        }

        var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
        created.return = returnFiber;
        return created;
      } // This API will tag the children with the side-effect of the reconciliation
      // itself. They will be added to the side-effect list as we pass through the
      // children and the parent.


      function reconcileChildFibers(returnFiber, currentFirstChild, newChild, lanes) {
        // This function is not recursive.
        // If the top level item is an array, we treat it as a set of children,
        // not as a fragment. Nested arrays on the other hand will be treated as
        // fragment nodes. Recursion happens at the normal flow.
        // Handle top level unkeyed fragments as if they were arrays.
        // This leads to an ambiguity between <>{[...]}</> and <>...</>.
        // We treat the ambiguous cases above the same.
        var isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;

        if (isUnkeyedTopLevelFragment) {
          newChild = newChild.props.children;
        } // Handle object types


        var isObject = typeof newChild === 'object' && newChild !== null;

        if (isObject) {
          switch (newChild.$$typeof) {
            case REACT_ELEMENT_TYPE:
              return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));

            case REACT_PORTAL_TYPE:
              return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));
          }
        }

        if (typeof newChild === 'string' || typeof newChild === 'number') {
          return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, lanes));
        }

        if (isArray$1(newChild)) {
          return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);
        }

        if (getIteratorFn(newChild)) {
          return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);
        }

        if (isObject) {
          throwOnInvalidObjectType(returnFiber, newChild);
        }

        {
          if (typeof newChild === 'function') {
            warnOnFunctionType(returnFiber);
          }
        }

        if (typeof newChild === 'undefined' && !isUnkeyedTopLevelFragment) {
          // If the new child is undefined, and the return fiber is a composite
          // component, throw an error. If Fiber return types are disabled,
          // we already threw above.
          switch (returnFiber.tag) {
            case ClassComponent:
              {
                {
                  var instance = returnFiber.stateNode;

                  if (instance.render._isMockFunction) {
                    // We allow auto-mocks to proceed as if they're returning null.
                    break;
                  }
                }
              }
            // Intentionally fall through to the next case, which handles both
            // functions and classes
            // eslint-disable-next-lined no-fallthrough

            case Block:
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
              {
                {
                  {
                    throw Error((getComponentName(returnFiber.type) || 'Component') + "(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.");
                  }
                }
              }
          }
        } // Remaining cases are all treated as empty.


        return deleteRemainingChildren(returnFiber, currentFirstChild);
      }

      return reconcileChildFibers;
    }

    var reconcileChildFibers = ChildReconciler(true);
    var mountChildFibers = ChildReconciler(false);

    function cloneChildFibers(current, workInProgress) {
      if (!(current === null || workInProgress.child === current.child)) {
        {
          throw Error("Resuming work not yet implemented.");
        }
      }

      if (workInProgress.child === null) {
        return;
      }

      var currentChild = workInProgress.child;
      var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);
      workInProgress.child = newChild;
      newChild.return = workInProgress;

      while (currentChild.sibling !== null) {
        currentChild = currentChild.sibling;
        newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps);
        newChild.return = workInProgress;
      }

      newChild.sibling = null;
    } // Reset a workInProgress child set to prepare it for a second pass.


    function resetChildFibers(workInProgress, lanes) {
      var child = workInProgress.child;

      while (child !== null) {
        resetWorkInProgress(child, lanes);
        child = child.sibling;
      }
    }

    var NO_CONTEXT = {};
    var contextStackCursor$1 = createCursor(NO_CONTEXT);
    var contextFiberStackCursor = createCursor(NO_CONTEXT);
    var rootInstanceStackCursor = createCursor(NO_CONTEXT);

    function requiredContext(c) {
      if (!(c !== NO_CONTEXT)) {
        {
          throw Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
        }
      }

      return c;
    }

    function getRootHostContainer() {
      var rootInstance = requiredContext(rootInstanceStackCursor.current);
      return rootInstance;
    }

    function pushHostContainer(fiber, nextRootInstance) {
      // Push current root instance onto the stack;
      // This allows us to reset root when portals are popped.
      push(rootInstanceStackCursor, nextRootInstance, fiber); // Track the context and the Fiber that provided it.
      // This enables us to pop only Fibers that provide unique contexts.

      push(contextFiberStackCursor, fiber, fiber); // Finally, we need to push the host context to the stack.
      // However, we can't just call getRootHostContext() and push it because
      // we'd have a different number of entries on the stack depending on
      // whether getRootHostContext() throws somewhere in renderer code or not.
      // So we push an empty value first. This lets us safely unwind on errors.

      push(contextStackCursor$1, NO_CONTEXT, fiber);
      var nextRootContext = getRootHostContext(nextRootInstance); // Now that we know this function doesn't throw, replace it.

      pop(contextStackCursor$1, fiber);
      push(contextStackCursor$1, nextRootContext, fiber);
    }

    function popHostContainer(fiber) {
      pop(contextStackCursor$1, fiber);
      pop(contextFiberStackCursor, fiber);
      pop(rootInstanceStackCursor, fiber);
    }

    function getHostContext() {
      var context = requiredContext(contextStackCursor$1.current);
      return context;
    }

    function pushHostContext(fiber) {
      var rootInstance = requiredContext(rootInstanceStackCursor.current);
      var context = requiredContext(contextStackCursor$1.current);
      var nextContext = getChildHostContext(context, fiber.type); // Don't push this Fiber's context unless it's unique.

      if (context === nextContext) {
        return;
      } // Track the context and the Fiber that provided it.
      // This enables us to pop only Fibers that provide unique contexts.


      push(contextFiberStackCursor, fiber, fiber);
      push(contextStackCursor$1, nextContext, fiber);
    }

    function popHostContext(fiber) {
      // Do not pop unless this Fiber provided the current context.
      // pushHostContext() only pushes Fibers that provide unique contexts.
      if (contextFiberStackCursor.current !== fiber) {
        return;
      }

      pop(contextStackCursor$1, fiber);
      pop(contextFiberStackCursor, fiber);
    }

    var DefaultSuspenseContext = 0; // The Suspense Context is split into two parts. The lower bits is
    // inherited deeply down the subtree. The upper bits only affect
    // this immediate suspense boundary and gets reset each new
    // boundary or suspense list.

    var SubtreeSuspenseContextMask = 1; // Subtree Flags:
    // InvisibleParentSuspenseContext indicates that one of our parent Suspense
    // boundaries is not currently showing visible main content.
    // Either because it is already showing a fallback or is not mounted at all.
    // We can use this to determine if it is desirable to trigger a fallback at
    // the parent. If not, then we might need to trigger undesirable boundaries
    // and/or suspend the commit to avoid hiding the parent content.

    var InvisibleParentSuspenseContext = 1; // Shallow Flags:
    // ForceSuspenseFallback can be used by SuspenseList to force newly added
    // items into their fallback state during one of the render passes.

    var ForceSuspenseFallback = 2;
    var suspenseStackCursor = createCursor(DefaultSuspenseContext);

    function hasSuspenseContext(parentContext, flag) {
      return (parentContext & flag) !== 0;
    }

    function setDefaultShallowSuspenseContext(parentContext) {
      return parentContext & SubtreeSuspenseContextMask;
    }

    function setShallowSuspenseContext(parentContext, shallowContext) {
      return parentContext & SubtreeSuspenseContextMask | shallowContext;
    }

    function addSubtreeSuspenseContext(parentContext, subtreeContext) {
      return parentContext | subtreeContext;
    }

    function pushSuspenseContext(fiber, newContext) {
      push(suspenseStackCursor, newContext, fiber);
    }

    function popSuspenseContext(fiber) {
      pop(suspenseStackCursor, fiber);
    }

    function shouldCaptureSuspense(workInProgress, hasInvisibleParent) {
      // If it was the primary children that just suspended, capture and render the
      // fallback. Otherwise, don't capture and bubble to the next boundary.
      var nextState = workInProgress.memoizedState;

      if (nextState !== null) {
        if (nextState.dehydrated !== null) {
          // A dehydrated boundary always captures.
          return true;
        }

        return false;
      }

      var props = workInProgress.memoizedProps; // In order to capture, the Suspense component must have a fallback prop.

      if (props.fallback === undefined) {
        return false;
      } // Regular boundaries always capture.


      if (props.unstable_avoidThisFallback !== true) {
        return true;
      } // If it's a boundary we should avoid, then we prefer to bubble up to the
      // parent boundary if it is currently invisible.


      if (hasInvisibleParent) {
        return false;
      } // If the parent is not able to handle it, we must handle it.


      return true;
    }

    function findFirstSuspended(row) {
      var node = row;

      while (node !== null) {
        if (node.tag === SuspenseComponent) {
          var state = node.memoizedState;

          if (state !== null) {
            var dehydrated = state.dehydrated;

            if (dehydrated === null || isSuspenseInstancePending(dehydrated) || isSuspenseInstanceFallback(dehydrated)) {
              return node;
            }
          }
        } else if (node.tag === SuspenseListComponent && // revealOrder undefined can't be trusted because it don't
        // keep track of whether it suspended or not.
        node.memoizedProps.revealOrder !== undefined) {
          var didSuspend = (node.flags & DidCapture) !== NoFlags;

          if (didSuspend) {
            return node;
          }
        } else if (node.child !== null) {
          node.child.return = node;
          node = node.child;
          continue;
        }

        if (node === row) {
          return null;
        }

        while (node.sibling === null) {
          if (node.return === null || node.return === row) {
            return null;
          }

          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }

      return null;
    }

    var NoFlags$1 =
    /*  */
    0; // Represents whether effect should fire.

    var HasEffect =
    /* */
    1; // Represents the phase in which the effect (not the clean-up) fires.

    var Layout =
    /*    */
    2;
    var Passive$1 =
    /*   */
    4; // This may have been an insertion or a hydration.

    var hydrationParentFiber = null;
    var nextHydratableInstance = null;
    var isHydrating = false;

    function enterHydrationState(fiber) {
      var parentInstance = fiber.stateNode.containerInfo;
      nextHydratableInstance = getFirstHydratableChild(parentInstance);
      hydrationParentFiber = fiber;
      isHydrating = true;
      return true;
    }

    function deleteHydratableInstance(returnFiber, instance) {
      {
        switch (returnFiber.tag) {
          case HostRoot:
            didNotHydrateContainerInstance(returnFiber.stateNode.containerInfo, instance);
            break;

          case HostComponent:
            didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance);
            break;
        }
      }
      var childToDelete = createFiberFromHostInstanceForDeletion();
      childToDelete.stateNode = instance;
      childToDelete.return = returnFiber;
      childToDelete.flags = Deletion; // This might seem like it belongs on progressedFirstDeletion. However,
      // these children are not part of the reconciliation list of children.
      // Even if we abort and rereconcile the children, that will try to hydrate
      // again and the nodes are still in the host tree so these will be
      // recreated.

      if (returnFiber.lastEffect !== null) {
        returnFiber.lastEffect.nextEffect = childToDelete;
        returnFiber.lastEffect = childToDelete;
      } else {
        returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
      }
    }

    function insertNonHydratedInstance(returnFiber, fiber) {
      fiber.flags = fiber.flags & ~Hydrating | Placement;
      {
        switch (returnFiber.tag) {
          case HostRoot:
            {
              var parentContainer = returnFiber.stateNode.containerInfo;

              switch (fiber.tag) {
                case HostComponent:
                  var type = fiber.type;
                  var props = fiber.pendingProps;
                  didNotFindHydratableContainerInstance(parentContainer, type);
                  break;

                case HostText:
                  var text = fiber.pendingProps;
                  didNotFindHydratableContainerTextInstance(parentContainer, text);
                  break;
              }

              break;
            }

          case HostComponent:
            {
              var parentType = returnFiber.type;
              var parentProps = returnFiber.memoizedProps;
              var parentInstance = returnFiber.stateNode;

              switch (fiber.tag) {
                case HostComponent:
                  var _type = fiber.type;
                  var _props = fiber.pendingProps;
                  didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type);
                  break;

                case HostText:
                  var _text = fiber.pendingProps;
                  didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text);
                  break;

                case SuspenseComponent:
                  didNotFindHydratableSuspenseInstance(parentType, parentProps);
                  break;
              }

              break;
            }

          default:
            return;
        }
      }
    }

    function tryHydrate(fiber, nextInstance) {
      switch (fiber.tag) {
        case HostComponent:
          {
            var type = fiber.type;
            var props = fiber.pendingProps;
            var instance = canHydrateInstance(nextInstance, type);

            if (instance !== null) {
              fiber.stateNode = instance;
              return true;
            }

            return false;
          }

        case HostText:
          {
            var text = fiber.pendingProps;
            var textInstance = canHydrateTextInstance(nextInstance, text);

            if (textInstance !== null) {
              fiber.stateNode = textInstance;
              return true;
            }

            return false;
          }

        case SuspenseComponent:
          {
            return false;
          }

        default:
          return false;
      }
    }

    function tryToClaimNextHydratableInstance(fiber) {
      if (!isHydrating) {
        return;
      }

      var nextInstance = nextHydratableInstance;

      if (!nextInstance) {
        // Nothing to hydrate. Make it an insertion.
        insertNonHydratedInstance(hydrationParentFiber, fiber);
        isHydrating = false;
        hydrationParentFiber = fiber;
        return;
      }

      var firstAttemptedInstance = nextInstance;

      if (!tryHydrate(fiber, nextInstance)) {
        // If we can't hydrate this instance let's try the next one.
        // We use this as a heuristic. It's based on intuition and not data so it
        // might be flawed or unnecessary.
        nextInstance = getNextHydratableSibling(firstAttemptedInstance);

        if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
          // Nothing to hydrate. Make it an insertion.
          insertNonHydratedInstance(hydrationParentFiber, fiber);
          isHydrating = false;
          hydrationParentFiber = fiber;
          return;
        } // We matched the next one, we'll now assume that the first one was
        // superfluous and we'll delete it. Since we can't eagerly delete it
        // we'll have to schedule a deletion. To do that, this node needs a dummy
        // fiber associated with it.


        deleteHydratableInstance(hydrationParentFiber, firstAttemptedInstance);
      }

      hydrationParentFiber = fiber;
      nextHydratableInstance = getFirstHydratableChild(nextInstance);
    }

    function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
      var instance = fiber.stateNode;
      var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber); // TODO: Type this specific to this type of component.

      fiber.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
      // is a new ref we mark this as an update.

      if (updatePayload !== null) {
        return true;
      }

      return false;
    }

    function prepareToHydrateHostTextInstance(fiber) {
      var textInstance = fiber.stateNode;
      var textContent = fiber.memoizedProps;
      var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
      {
        if (shouldUpdate) {
          // We assume that prepareToHydrateHostTextInstance is called in a context where the
          // hydration parent is the parent host component of this host text.
          var returnFiber = hydrationParentFiber;

          if (returnFiber !== null) {
            switch (returnFiber.tag) {
              case HostRoot:
                {
                  var parentContainer = returnFiber.stateNode.containerInfo;
                  didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent);
                  break;
                }

              case HostComponent:
                {
                  var parentType = returnFiber.type;
                  var parentProps = returnFiber.memoizedProps;
                  var parentInstance = returnFiber.stateNode;
                  didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent);
                  break;
                }
            }
          }
        }
      }
      return shouldUpdate;
    }

    function skipPastDehydratedSuspenseInstance(fiber) {
      var suspenseState = fiber.memoizedState;
      var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;

      if (!suspenseInstance) {
        {
          throw Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
        }
      }

      return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
    }

    function popToNextHostParent(fiber) {
      var parent = fiber.return;

      while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== SuspenseComponent) {
        parent = parent.return;
      }

      hydrationParentFiber = parent;
    }

    function popHydrationState(fiber) {
      if (fiber !== hydrationParentFiber) {
        // We're deeper than the current hydration context, inside an inserted
        // tree.
        return false;
      }

      if (!isHydrating) {
        // If we're not currently hydrating but we're in a hydration context, then
        // we were an insertion and now need to pop up reenter hydration of our
        // siblings.
        popToNextHostParent(fiber);
        isHydrating = true;
        return false;
      }

      var type = fiber.type; // If we have any remaining hydratable nodes, we need to delete them now.
      // We only do this deeper than head and body since they tend to have random
      // other nodes in them. We also ignore components with pure text content in
      // side of them.
      // TODO: Better heuristic.

      if (fiber.tag !== HostComponent || type !== 'head' && type !== 'body' && !shouldSetTextContent(type, fiber.memoizedProps)) {
        var nextInstance = nextHydratableInstance;

        while (nextInstance) {
          deleteHydratableInstance(fiber, nextInstance);
          nextInstance = getNextHydratableSibling(nextInstance);
        }
      }

      popToNextHostParent(fiber);

      if (fiber.tag === SuspenseComponent) {
        nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);
      } else {
        nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
      }

      return true;
    }

    function resetHydrationState() {
      hydrationParentFiber = null;
      nextHydratableInstance = null;
      isHydrating = false;
    }

    function getIsHydrating() {
      return isHydrating;
    } // and should be reset before starting a new render.
    // This tracks which mutable sources need to be reset after a render.


    var workInProgressSources = [];
    var rendererSigil$1;
    {
      // Used to detect multiple renderers using the same mutable source.
      rendererSigil$1 = {};
    }

    function markSourceAsDirty(mutableSource) {
      workInProgressSources.push(mutableSource);
    }

    function resetWorkInProgressVersions() {
      for (var i = 0; i < workInProgressSources.length; i++) {
        var mutableSource = workInProgressSources[i];
        {
          mutableSource._workInProgressVersionPrimary = null;
        }
      }

      workInProgressSources.length = 0;
    }

    function getWorkInProgressVersion(mutableSource) {
      {
        return mutableSource._workInProgressVersionPrimary;
      }
    }

    function setWorkInProgressVersion(mutableSource, version) {
      {
        mutableSource._workInProgressVersionPrimary = version;
      }
      workInProgressSources.push(mutableSource);
    }

    function warnAboutMultipleRenderersDEV(mutableSource) {
      {
        {
          if (mutableSource._currentPrimaryRenderer == null) {
            mutableSource._currentPrimaryRenderer = rendererSigil$1;
          } else if (mutableSource._currentPrimaryRenderer !== rendererSigil$1) {
            error('Detected multiple renderers concurrently rendering the ' + 'same mutable source. This is currently unsupported.');
          }
        }
      }
    } // Eager reads the version of a mutable source and stores it on the root.


    var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher,
        ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;
    var didWarnAboutMismatchedHooksForComponent;
    var didWarnAboutUseOpaqueIdentifier;
    {
      didWarnAboutUseOpaqueIdentifier = {};
      didWarnAboutMismatchedHooksForComponent = new Set();
    } // These are set right before calling the component.

    var renderLanes = NoLanes; // The work-in-progress fiber. I've named it differently to distinguish it from
    // the work-in-progress hook.

    var currentlyRenderingFiber$1 = null; // Hooks are stored as a linked list on the fiber's memoizedState field. The
    // current hook list is the list that belongs to the current fiber. The
    // work-in-progress hook list is a new list that will be added to the
    // work-in-progress fiber.

    var currentHook = null;
    var workInProgressHook = null; // Whether an update was scheduled at any point during the render phase. This
    // does not get reset if we do another render pass; only when we're completely
    // finished evaluating this component. This is an optimization so we know
    // whether we need to clear render phase updates after a throw.

    var didScheduleRenderPhaseUpdate = false; // Where an update was scheduled only during the current render pass. This
    // gets reset after each attempt.
    // TODO: Maybe there's some way to consolidate this with
    // `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.

    var didScheduleRenderPhaseUpdateDuringThisPass = false;
    var RE_RENDER_LIMIT = 25; // In DEV, this is the name of the currently executing primitive hook

    var currentHookNameInDev = null; // In DEV, this list ensures that hooks are called in the same order between renders.
    // The list stores the order of hooks used during the initial render (mount).
    // Subsequent renders (updates) reference this list.

    var hookTypesDev = null;
    var hookTypesUpdateIndexDev = -1; // In DEV, this tracks whether currently rendering component needs to ignore
    // the dependencies for Hooks that need them (e.g. useEffect or useMemo).
    // When true, such Hooks will always be "remounted". Only used during hot reload.

    var ignorePreviousDependencies = false;

    function mountHookTypesDev() {
      {
        var hookName = currentHookNameInDev;

        if (hookTypesDev === null) {
          hookTypesDev = [hookName];
        } else {
          hookTypesDev.push(hookName);
        }
      }
    }

    function updateHookTypesDev() {
      {
        var hookName = currentHookNameInDev;

        if (hookTypesDev !== null) {
          hookTypesUpdateIndexDev++;

          if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {
            warnOnHookMismatchInDev(hookName);
          }
        }
      }
    }

    function checkDepsAreArrayDev(deps) {
      {
        if (deps !== undefined && deps !== null && !Array.isArray(deps)) {
          // Verify deps, but only on mount to avoid extra checks.
          // It's unlikely their type would change as usually you define them inline.
          error('%s received a final argument that is not an array (instead, received `%s`). When ' + 'specified, the final argument must be an array.', currentHookNameInDev, typeof deps);
        }
      }
    }

    function warnOnHookMismatchInDev(currentHookName) {
      {
        var componentName = getComponentName(currentlyRenderingFiber$1.type);

        if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {
          didWarnAboutMismatchedHooksForComponent.add(componentName);

          if (hookTypesDev !== null) {
            var table = '';
            var secondColumnStart = 30;

            for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {
              var oldHookName = hookTypesDev[i];
              var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;
              var row = i + 1 + ". " + oldHookName; // Extra space so second column lines up
              // lol @ IE not supporting String#repeat

              while (row.length < secondColumnStart) {
                row += ' ';
              }

              row += newHookName + '\n';
              table += row;
            }

            error('React has detected a change in the order of Hooks called by %s. ' + 'This will lead to bugs and errors if not fixed. ' + 'For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\n\n' + '   Previous render            Next render\n' + '   ------------------------------------------------------\n' + '%s' + '   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n', componentName, table);
          }
        }
      }
    }

    function throwInvalidHookError() {
      {
        {
          throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
        }
      }
    }

    function areHookInputsEqual(nextDeps, prevDeps) {
      {
        if (ignorePreviousDependencies) {
          // Only true when this component is being hot reloaded.
          return false;
        }
      }

      if (prevDeps === null) {
        {
          error('%s received a final argument during this render, but not during ' + 'the previous render. Even though the final argument is optional, ' + 'its type cannot change between renders.', currentHookNameInDev);
        }
        return false;
      }

      {
        // Don't bother comparing lengths in prod because these arrays should be
        // passed inline.
        if (nextDeps.length !== prevDeps.length) {
          error('The final argument passed to %s changed size between renders. The ' + 'order and size of this array must remain constant.\n\n' + 'Previous: %s\n' + 'Incoming: %s', currentHookNameInDev, "[" + prevDeps.join(', ') + "]", "[" + nextDeps.join(', ') + "]");
        }
      }

      for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
        if (objectIs(nextDeps[i], prevDeps[i])) {
          continue;
        }

        return false;
      }

      return true;
    }

    function renderWithHooks(current, workInProgress, Component, props, secondArg, nextRenderLanes) {
      renderLanes = nextRenderLanes;
      currentlyRenderingFiber$1 = workInProgress;
      {
        hookTypesDev = current !== null ? current._debugHookTypes : null;
        hookTypesUpdateIndexDev = -1; // Used for hot reloading:

        ignorePreviousDependencies = current !== null && current.type !== workInProgress.type;
      }
      workInProgress.memoizedState = null;
      workInProgress.updateQueue = null;
      workInProgress.lanes = NoLanes; // The following should have already been reset
      // currentHook = null;
      // workInProgressHook = null;
      // didScheduleRenderPhaseUpdate = false;
      // TODO Warn if no hooks are used at all during mount, then some are used during update.
      // Currently we will identify the update render as a mount because memoizedState === null.
      // This is tricky because it's valid for certain types of components (e.g. React.lazy)
      // Using memoizedState to differentiate between mount/update only works if at least one stateful hook is used.
      // Non-stateful hooks (e.g. context) don't get added to memoizedState,
      // so memoizedState would be null during updates and mounts.

      {
        if (current !== null && current.memoizedState !== null) {
          ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
        } else if (hookTypesDev !== null) {
          // This dispatcher handles an edge case where a component is updating,
          // but no stateful hooks have been used.
          // We want to match the production code behavior (which will use HooksDispatcherOnMount),
          // but with the extra DEV validation to ensure hooks ordering hasn't changed.
          // This dispatcher does that.
          ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;
        } else {
          ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;
        }
      }
      var children = Component(props, secondArg); // Check if there was a render phase update

      if (didScheduleRenderPhaseUpdateDuringThisPass) {
        // Keep rendering in a loop for as long as render phase updates continue to
        // be scheduled. Use a counter to prevent infinite loops.
        var numberOfReRenders = 0;

        do {
          didScheduleRenderPhaseUpdateDuringThisPass = false;

          if (!(numberOfReRenders < RE_RENDER_LIMIT)) {
            {
              throw Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
            }
          }

          numberOfReRenders += 1;
          {
            // Even when hot reloading, allow dependencies to stabilize
            // after first render to prevent infinite render phase updates.
            ignorePreviousDependencies = false;
          } // Start over from the beginning of the list

          currentHook = null;
          workInProgressHook = null;
          workInProgress.updateQueue = null;
          {
            // Also validate hook order for cascading updates.
            hookTypesUpdateIndexDev = -1;
          }
          ReactCurrentDispatcher$1.current = HooksDispatcherOnRerenderInDEV;
          children = Component(props, secondArg);
        } while (didScheduleRenderPhaseUpdateDuringThisPass);
      } // We can assume the previous dispatcher is always this one, since we set it
      // at the beginning of the render phase and there's no re-entrancy.


      ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
      {
        workInProgress._debugHookTypes = hookTypesDev;
      } // This check uses currentHook so that it works the same in DEV and prod bundles.
      // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.

      var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;
      renderLanes = NoLanes;
      currentlyRenderingFiber$1 = null;
      currentHook = null;
      workInProgressHook = null;
      {
        currentHookNameInDev = null;
        hookTypesDev = null;
        hookTypesUpdateIndexDev = -1;
      }
      didScheduleRenderPhaseUpdate = false;

      if (!!didRenderTooFewHooks) {
        {
          throw Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
        }
      }

      return children;
    }

    function bailoutHooks(current, workInProgress, lanes) {
      workInProgress.updateQueue = current.updateQueue;
      workInProgress.flags &= ~(Passive | Update);
      current.lanes = removeLanes(current.lanes, lanes);
    }

    function resetHooksAfterThrow() {
      // We can assume the previous dispatcher is always this one, since we set it
      // at the beginning of the render phase and there's no re-entrancy.
      ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;

      if (didScheduleRenderPhaseUpdate) {
        // There were render phase updates. These are only valid for this render
        // phase, which we are now aborting. Remove the updates from the queues so
        // they do not persist to the next render. Do not remove updates from hooks
        // that weren't processed.
        //
        // Only reset the updates from the queue if it has a clone. If it does
        // not have a clone, that means it wasn't processed, and the updates were
        // scheduled before we entered the render phase.
        var hook = currentlyRenderingFiber$1.memoizedState;

        while (hook !== null) {
          var queue = hook.queue;

          if (queue !== null) {
            queue.pending = null;
          }

          hook = hook.next;
        }

        didScheduleRenderPhaseUpdate = false;
      }

      renderLanes = NoLanes;
      currentlyRenderingFiber$1 = null;
      currentHook = null;
      workInProgressHook = null;
      {
        hookTypesDev = null;
        hookTypesUpdateIndexDev = -1;
        currentHookNameInDev = null;
        isUpdatingOpaqueValueInRenderPhase = false;
      }
      didScheduleRenderPhaseUpdateDuringThisPass = false;
    }

    function mountWorkInProgressHook() {
      var hook = {
        memoizedState: null,
        baseState: null,
        baseQueue: null,
        queue: null,
        next: null
      };

      if (workInProgressHook === null) {
        // This is the first hook in the list
        currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;
      } else {
        // Append to the end of the list
        workInProgressHook = workInProgressHook.next = hook;
      }

      return workInProgressHook;
    }

    function updateWorkInProgressHook() {
      // This function is used both for updates and for re-renders triggered by a
      // render phase update. It assumes there is either a current hook we can
      // clone, or a work-in-progress hook from a previous render pass that we can
      // use as a base. When we reach the end of the base list, we must switch to
      // the dispatcher used for mounts.
      var nextCurrentHook;

      if (currentHook === null) {
        var current = currentlyRenderingFiber$1.alternate;

        if (current !== null) {
          nextCurrentHook = current.memoizedState;
        } else {
          nextCurrentHook = null;
        }
      } else {
        nextCurrentHook = currentHook.next;
      }

      var nextWorkInProgressHook;

      if (workInProgressHook === null) {
        nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;
      } else {
        nextWorkInProgressHook = workInProgressHook.next;
      }

      if (nextWorkInProgressHook !== null) {
        // There's already a work-in-progress. Reuse it.
        workInProgressHook = nextWorkInProgressHook;
        nextWorkInProgressHook = workInProgressHook.next;
        currentHook = nextCurrentHook;
      } else {
        // Clone from the current hook.
        if (!(nextCurrentHook !== null)) {
          {
            throw Error("Rendered more hooks than during the previous render.");
          }
        }

        currentHook = nextCurrentHook;
        var newHook = {
          memoizedState: currentHook.memoizedState,
          baseState: currentHook.baseState,
          baseQueue: currentHook.baseQueue,
          queue: currentHook.queue,
          next: null
        };

        if (workInProgressHook === null) {
          // This is the first hook in the list.
          currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;
        } else {
          // Append to the end of the list.
          workInProgressHook = workInProgressHook.next = newHook;
        }
      }

      return workInProgressHook;
    }

    function createFunctionComponentUpdateQueue() {
      return {
        lastEffect: null
      };
    }

    function basicStateReducer(state, action) {
      // $FlowFixMe: Flow doesn't like mixed types
      return typeof action === 'function' ? action(state) : action;
    }

    function mountReducer(reducer, initialArg, init) {
      var hook = mountWorkInProgressHook();
      var initialState;

      if (init !== undefined) {
        initialState = init(initialArg);
      } else {
        initialState = initialArg;
      }

      hook.memoizedState = hook.baseState = initialState;
      var queue = hook.queue = {
        pending: null,
        dispatch: null,
        lastRenderedReducer: reducer,
        lastRenderedState: initialState
      };
      var dispatch = queue.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, queue);
      return [hook.memoizedState, dispatch];
    }

    function updateReducer(reducer, initialArg, init) {
      var hook = updateWorkInProgressHook();
      var queue = hook.queue;

      if (!(queue !== null)) {
        {
          throw Error("Should have a queue. This is likely a bug in React. Please file an issue.");
        }
      }

      queue.lastRenderedReducer = reducer;
      var current = currentHook; // The last rebase update that is NOT part of the base state.

      var baseQueue = current.baseQueue; // The last pending update that hasn't been processed yet.

      var pendingQueue = queue.pending;

      if (pendingQueue !== null) {
        // We have new updates that haven't been processed yet.
        // We'll add them to the base queue.
        if (baseQueue !== null) {
          // Merge the pending queue and the base queue.
          var baseFirst = baseQueue.next;
          var pendingFirst = pendingQueue.next;
          baseQueue.next = pendingFirst;
          pendingQueue.next = baseFirst;
        }

        {
          if (current.baseQueue !== baseQueue) {
            // Internal invariant that should never happen, but feasibly could in
            // the future if we implement resuming, or some form of that.
            error('Internal error: Expected work-in-progress queue to be a clone. ' + 'This is a bug in React.');
          }
        }
        current.baseQueue = baseQueue = pendingQueue;
        queue.pending = null;
      }

      if (baseQueue !== null) {
        // We have a queue to process.
        var first = baseQueue.next;
        var newState = current.baseState;
        var newBaseState = null;
        var newBaseQueueFirst = null;
        var newBaseQueueLast = null;
        var update = first;

        do {
          var updateLane = update.lane;

          if (!isSubsetOfLanes(renderLanes, updateLane)) {
            // Priority is insufficient. Skip this update. If this is the first
            // skipped update, the previous update/state is the new base
            // update/state.
            var clone = {
              lane: updateLane,
              action: update.action,
              eagerReducer: update.eagerReducer,
              eagerState: update.eagerState,
              next: null
            };

            if (newBaseQueueLast === null) {
              newBaseQueueFirst = newBaseQueueLast = clone;
              newBaseState = newState;
            } else {
              newBaseQueueLast = newBaseQueueLast.next = clone;
            } // Update the remaining priority in the queue.
            // TODO: Don't need to accumulate this. Instead, we can remove
            // renderLanes from the original lanes.


            currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane);
            markSkippedUpdateLanes(updateLane);
          } else {
            // This update does have sufficient priority.
            if (newBaseQueueLast !== null) {
              var _clone = {
                // This update is going to be committed so we never want uncommit
                // it. Using NoLane works because 0 is a subset of all bitmasks, so
                // this will never be skipped by the check above.
                lane: NoLane,
                action: update.action,
                eagerReducer: update.eagerReducer,
                eagerState: update.eagerState,
                next: null
              };
              newBaseQueueLast = newBaseQueueLast.next = _clone;
            } // Process this update.


            if (update.eagerReducer === reducer) {
              // If this update was processed eagerly, and its reducer matches the
              // current reducer, we can use the eagerly computed state.
              newState = update.eagerState;
            } else {
              var action = update.action;
              newState = reducer(newState, action);
            }
          }

          update = update.next;
        } while (update !== null && update !== first);

        if (newBaseQueueLast === null) {
          newBaseState = newState;
        } else {
          newBaseQueueLast.next = newBaseQueueFirst;
        } // Mark that the fiber performed work, but only if the new state is
        // different from the current state.


        if (!objectIs(newState, hook.memoizedState)) {
          markWorkInProgressReceivedUpdate();
        }

        hook.memoizedState = newState;
        hook.baseState = newBaseState;
        hook.baseQueue = newBaseQueueLast;
        queue.lastRenderedState = newState;
      }

      var dispatch = queue.dispatch;
      return [hook.memoizedState, dispatch];
    }

    function rerenderReducer(reducer, initialArg, init) {
      var hook = updateWorkInProgressHook();
      var queue = hook.queue;

      if (!(queue !== null)) {
        {
          throw Error("Should have a queue. This is likely a bug in React. Please file an issue.");
        }
      }

      queue.lastRenderedReducer = reducer; // This is a re-render. Apply the new render phase updates to the previous
      // work-in-progress hook.

      var dispatch = queue.dispatch;
      var lastRenderPhaseUpdate = queue.pending;
      var newState = hook.memoizedState;

      if (lastRenderPhaseUpdate !== null) {
        // The queue doesn't persist past this render pass.
        queue.pending = null;
        var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;
        var update = firstRenderPhaseUpdate;

        do {
          // Process this render phase update. We don't have to check the
          // priority because it will always be the same as the current
          // render's.
          var action = update.action;
          newState = reducer(newState, action);
          update = update.next;
        } while (update !== firstRenderPhaseUpdate); // Mark that the fiber performed work, but only if the new state is
        // different from the current state.


        if (!objectIs(newState, hook.memoizedState)) {
          markWorkInProgressReceivedUpdate();
        }

        hook.memoizedState = newState; // Don't persist the state accumulated from the render phase updates to
        // the base state unless the queue is empty.
        // TODO: Not sure if this is the desired semantics, but it's what we
        // do for gDSFP. I can't remember why.

        if (hook.baseQueue === null) {
          hook.baseState = newState;
        }

        queue.lastRenderedState = newState;
      }

      return [newState, dispatch];
    }

    function readFromUnsubcribedMutableSource(root, source, getSnapshot) {
      {
        warnAboutMultipleRenderersDEV(source);
      }
      var getVersion = source._getVersion;
      var version = getVersion(source._source); // Is it safe for this component to read from this source during the current render?

      var isSafeToReadFromSource = false; // Check the version first.
      // If this render has already been started with a specific version,
      // we can use it alone to determine if we can safely read from the source.

      var currentRenderVersion = getWorkInProgressVersion(source);

      if (currentRenderVersion !== null) {
        // It's safe to read if the store hasn't been mutated since the last time
        // we read something.
        isSafeToReadFromSource = currentRenderVersion === version;
      } else {
        // If there's no version, then this is the first time we've read from the
        // source during the current render pass, so we need to do a bit more work.
        // What we need to determine is if there are any hooks that already
        // subscribed to the source, and if so, whether there are any pending
        // mutations that haven't been synchronized yet.
        //
        // If there are no pending mutations, then `root.mutableReadLanes` will be
        // empty, and we know we can safely read.
        //
        // If there *are* pending mutations, we may still be able to safely read
        // if the currently rendering lanes are inclusive of the pending mutation
        // lanes, since that guarantees that the value we're about to read from
        // the source is consistent with the values that we read during the most
        // recent mutation.
        isSafeToReadFromSource = isSubsetOfLanes(renderLanes, root.mutableReadLanes);

        if (isSafeToReadFromSource) {
          // If it's safe to read from this source during the current render,
          // store the version in case other components read from it.
          // A changed version number will let those components know to throw and restart the render.
          setWorkInProgressVersion(source, version);
        }
      }

      if (isSafeToReadFromSource) {
        var snapshot = getSnapshot(source._source);
        {
          if (typeof snapshot === 'function') {
            error('Mutable source should not return a function as the snapshot value. ' + 'Functions may close over mutable values and cause tearing.');
          }
        }
        return snapshot;
      } else {
        // This handles the special case of a mutable source being shared between renderers.
        // In that case, if the source is mutated between the first and second renderer,
        // The second renderer don't know that it needs to reset the WIP version during unwind,
        // (because the hook only marks sources as dirty if it's written to their WIP version).
        // That would cause this tear check to throw again and eventually be visible to the user.
        // We can avoid this infinite loop by explicitly marking the source as dirty.
        //
        // This can lead to tearing in the first renderer when it resumes,
        // but there's nothing we can do about that (short of throwing here and refusing to continue the render).
        markSourceAsDirty(source);
        {
          {
            throw Error("Cannot read from mutable source during the current render without tearing. This is a bug in React. Please file an issue.");
          }
        }
      }
    }

    function useMutableSource(hook, source, getSnapshot, subscribe) {
      var root = getWorkInProgressRoot();

      if (!(root !== null)) {
        {
          throw Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
        }
      }

      var getVersion = source._getVersion;
      var version = getVersion(source._source);
      var dispatcher = ReactCurrentDispatcher$1.current; // eslint-disable-next-line prefer-const

      var _dispatcher$useState = dispatcher.useState(function () {
        return readFromUnsubcribedMutableSource(root, source, getSnapshot);
      }),
          currentSnapshot = _dispatcher$useState[0],
          setSnapshot = _dispatcher$useState[1];

      var snapshot = currentSnapshot; // Grab a handle to the state hook as well.
      // We use it to clear the pending update queue if we have a new source.

      var stateHook = workInProgressHook;
      var memoizedState = hook.memoizedState;
      var refs = memoizedState.refs;
      var prevGetSnapshot = refs.getSnapshot;
      var prevSource = memoizedState.source;
      var prevSubscribe = memoizedState.subscribe;
      var fiber = currentlyRenderingFiber$1;
      hook.memoizedState = {
        refs: refs,
        source: source,
        subscribe: subscribe
      }; // Sync the values needed by our subscription handler after each commit.

      dispatcher.useEffect(function () {
        refs.getSnapshot = getSnapshot; // Normally the dispatch function for a state hook never changes,
        // but this hook recreates the queue in certain cases  to avoid updates from stale sources.
        // handleChange() below needs to reference the dispatch function without re-subscribing,
        // so we use a ref to ensure that it always has the latest version.

        refs.setSnapshot = setSnapshot; // Check for a possible change between when we last rendered now.

        var maybeNewVersion = getVersion(source._source);

        if (!objectIs(version, maybeNewVersion)) {
          var maybeNewSnapshot = getSnapshot(source._source);
          {
            if (typeof maybeNewSnapshot === 'function') {
              error('Mutable source should not return a function as the snapshot value. ' + 'Functions may close over mutable values and cause tearing.');
            }
          }

          if (!objectIs(snapshot, maybeNewSnapshot)) {
            setSnapshot(maybeNewSnapshot);
            var lane = requestUpdateLane(fiber);
            markRootMutableRead(root, lane);
          } // If the source mutated between render and now,
          // there may be state updates already scheduled from the old source.
          // Entangle the updates so that they render in the same batch.


          markRootEntangled(root, root.mutableReadLanes);
        }
      }, [getSnapshot, source, subscribe]); // If we got a new source or subscribe function, re-subscribe in a passive effect.

      dispatcher.useEffect(function () {
        var handleChange = function () {
          var latestGetSnapshot = refs.getSnapshot;
          var latestSetSnapshot = refs.setSnapshot;

          try {
            latestSetSnapshot(latestGetSnapshot(source._source)); // Record a pending mutable source update with the same expiration time.

            var lane = requestUpdateLane(fiber);
            markRootMutableRead(root, lane);
          } catch (error) {
            // A selector might throw after a source mutation.
            // e.g. it might try to read from a part of the store that no longer exists.
            // In this case we should still schedule an update with React.
            // Worst case the selector will throw again and then an error boundary will handle it.
            latestSetSnapshot(function () {
              throw error;
            });
          }
        };

        var unsubscribe = subscribe(source._source, handleChange);
        {
          if (typeof unsubscribe !== 'function') {
            error('Mutable source subscribe function must return an unsubscribe function.');
          }
        }
        return unsubscribe;
      }, [source, subscribe]); // If any of the inputs to useMutableSource change, reading is potentially unsafe.
      //
      // If either the source or the subscription have changed we can't can't trust the update queue.
      // Maybe the source changed in a way that the old subscription ignored but the new one depends on.
      //
      // If the getSnapshot function changed, we also shouldn't rely on the update queue.
      // It's possible that the underlying source was mutated between the when the last "change" event fired,
      // and when the current render (with the new getSnapshot function) is processed.
      //
      // In both cases, we need to throw away pending updates (since they are no longer relevant)
      // and treat reading from the source as we do in the mount case.

      if (!objectIs(prevGetSnapshot, getSnapshot) || !objectIs(prevSource, source) || !objectIs(prevSubscribe, subscribe)) {
        // Create a new queue and setState method,
        // So if there are interleaved updates, they get pushed to the older queue.
        // When this becomes current, the previous queue and dispatch method will be discarded,
        // including any interleaving updates that occur.
        var newQueue = {
          pending: null,
          dispatch: null,
          lastRenderedReducer: basicStateReducer,
          lastRenderedState: snapshot
        };
        newQueue.dispatch = setSnapshot = dispatchAction.bind(null, currentlyRenderingFiber$1, newQueue);
        stateHook.queue = newQueue;
        stateHook.baseQueue = null;
        snapshot = readFromUnsubcribedMutableSource(root, source, getSnapshot);
        stateHook.memoizedState = stateHook.baseState = snapshot;
      }

      return snapshot;
    }

    function mountMutableSource(source, getSnapshot, subscribe) {
      var hook = mountWorkInProgressHook();
      hook.memoizedState = {
        refs: {
          getSnapshot: getSnapshot,
          setSnapshot: null
        },
        source: source,
        subscribe: subscribe
      };
      return useMutableSource(hook, source, getSnapshot, subscribe);
    }

    function updateMutableSource(source, getSnapshot, subscribe) {
      var hook = updateWorkInProgressHook();
      return useMutableSource(hook, source, getSnapshot, subscribe);
    }

    function mountState(initialState) {
      var hook = mountWorkInProgressHook();

      if (typeof initialState === 'function') {
        // $FlowFixMe: Flow doesn't like mixed types
        initialState = initialState();
      }

      hook.memoizedState = hook.baseState = initialState;
      var queue = hook.queue = {
        pending: null,
        dispatch: null,
        lastRenderedReducer: basicStateReducer,
        lastRenderedState: initialState
      };
      var dispatch = queue.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, queue);
      return [hook.memoizedState, dispatch];
    }

    function updateState(initialState) {
      return updateReducer(basicStateReducer);
    }

    function rerenderState(initialState) {
      return rerenderReducer(basicStateReducer);
    }

    function pushEffect(tag, create, destroy, deps) {
      var effect = {
        tag: tag,
        create: create,
        destroy: destroy,
        deps: deps,
        // Circular
        next: null
      };
      var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;

      if (componentUpdateQueue === null) {
        componentUpdateQueue = createFunctionComponentUpdateQueue();
        currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
        componentUpdateQueue.lastEffect = effect.next = effect;
      } else {
        var lastEffect = componentUpdateQueue.lastEffect;

        if (lastEffect === null) {
          componentUpdateQueue.lastEffect = effect.next = effect;
        } else {
          var firstEffect = lastEffect.next;
          lastEffect.next = effect;
          effect.next = firstEffect;
          componentUpdateQueue.lastEffect = effect;
        }
      }

      return effect;
    }

    function mountRef(initialValue) {
      var hook = mountWorkInProgressHook();
      var ref = {
        current: initialValue
      };
      {
        Object.seal(ref);
      }
      hook.memoizedState = ref;
      return ref;
    }

    function updateRef(initialValue) {
      var hook = updateWorkInProgressHook();
      return hook.memoizedState;
    }

    function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
      var hook = mountWorkInProgressHook();
      var nextDeps = deps === undefined ? null : deps;
      currentlyRenderingFiber$1.flags |= fiberFlags;
      hook.memoizedState = pushEffect(HasEffect | hookFlags, create, undefined, nextDeps);
    }

    function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
      var hook = updateWorkInProgressHook();
      var nextDeps = deps === undefined ? null : deps;
      var destroy = undefined;

      if (currentHook !== null) {
        var prevEffect = currentHook.memoizedState;
        destroy = prevEffect.destroy;

        if (nextDeps !== null) {
          var prevDeps = prevEffect.deps;

          if (areHookInputsEqual(nextDeps, prevDeps)) {
            pushEffect(hookFlags, create, destroy, nextDeps);
            return;
          }
        }
      }

      currentlyRenderingFiber$1.flags |= fiberFlags;
      hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy, nextDeps);
    }

    function mountEffect(create, deps) {
      {
        // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
        if ('undefined' !== typeof jest) {
          warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber$1);
        }
      }
      return mountEffectImpl(Update | Passive, Passive$1, create, deps);
    }

    function updateEffect(create, deps) {
      {
        // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
        if ('undefined' !== typeof jest) {
          warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber$1);
        }
      }
      return updateEffectImpl(Update | Passive, Passive$1, create, deps);
    }

    function mountLayoutEffect(create, deps) {
      return mountEffectImpl(Update, Layout, create, deps);
    }

    function updateLayoutEffect(create, deps) {
      return updateEffectImpl(Update, Layout, create, deps);
    }

    function imperativeHandleEffect(create, ref) {
      if (typeof ref === 'function') {
        var refCallback = ref;

        var _inst = create();

        refCallback(_inst);
        return function () {
          refCallback(null);
        };
      } else if (ref !== null && ref !== undefined) {
        var refObject = ref;
        {
          if (!refObject.hasOwnProperty('current')) {
            error('Expected useImperativeHandle() first argument to either be a ' + 'ref callback or React.createRef() object. Instead received: %s.', 'an object with keys {' + Object.keys(refObject).join(', ') + '}');
          }
        }

        var _inst2 = create();

        refObject.current = _inst2;
        return function () {
          refObject.current = null;
        };
      }
    }

    function mountImperativeHandle(ref, create, deps) {
      {
        if (typeof create !== 'function') {
          error('Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null');
        }
      } // TODO: If deps are provided, should we skip comparing the ref itself?

      var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;
      return mountEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
    }

    function updateImperativeHandle(ref, create, deps) {
      {
        if (typeof create !== 'function') {
          error('Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null');
        }
      } // TODO: If deps are provided, should we skip comparing the ref itself?

      var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;
      return updateEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
    }

    function mountDebugValue(value, formatterFn) {// This hook is normally a no-op.
      // The react-debug-hooks package injects its own implementation
      // so that e.g. DevTools can display custom hook values.
    }

    var updateDebugValue = mountDebugValue;

    function mountCallback(callback, deps) {
      var hook = mountWorkInProgressHook();
      var nextDeps = deps === undefined ? null : deps;
      hook.memoizedState = [callback, nextDeps];
      return callback;
    }

    function updateCallback(callback, deps) {
      var hook = updateWorkInProgressHook();
      var nextDeps = deps === undefined ? null : deps;
      var prevState = hook.memoizedState;

      if (prevState !== null) {
        if (nextDeps !== null) {
          var prevDeps = prevState[1];

          if (areHookInputsEqual(nextDeps, prevDeps)) {
            return prevState[0];
          }
        }
      }

      hook.memoizedState = [callback, nextDeps];
      return callback;
    }

    function mountMemo(nextCreate, deps) {
      var hook = mountWorkInProgressHook();
      var nextDeps = deps === undefined ? null : deps;
      var nextValue = nextCreate();
      hook.memoizedState = [nextValue, nextDeps];
      return nextValue;
    }

    function updateMemo(nextCreate, deps) {
      var hook = updateWorkInProgressHook();
      var nextDeps = deps === undefined ? null : deps;
      var prevState = hook.memoizedState;

      if (prevState !== null) {
        // Assume these are defined. If they're not, areHookInputsEqual will warn.
        if (nextDeps !== null) {
          var prevDeps = prevState[1];

          if (areHookInputsEqual(nextDeps, prevDeps)) {
            return prevState[0];
          }
        }
      }

      var nextValue = nextCreate();
      hook.memoizedState = [nextValue, nextDeps];
      return nextValue;
    }

    function mountDeferredValue(value) {
      var _mountState = mountState(value),
          prevValue = _mountState[0],
          setValue = _mountState[1];

      mountEffect(function () {
        var prevTransition = ReactCurrentBatchConfig$1.transition;
        ReactCurrentBatchConfig$1.transition = 1;

        try {
          setValue(value);
        } finally {
          ReactCurrentBatchConfig$1.transition = prevTransition;
        }
      }, [value]);
      return prevValue;
    }

    function updateDeferredValue(value) {
      var _updateState = updateState(),
          prevValue = _updateState[0],
          setValue = _updateState[1];

      updateEffect(function () {
        var prevTransition = ReactCurrentBatchConfig$1.transition;
        ReactCurrentBatchConfig$1.transition = 1;

        try {
          setValue(value);
        } finally {
          ReactCurrentBatchConfig$1.transition = prevTransition;
        }
      }, [value]);
      return prevValue;
    }

    function rerenderDeferredValue(value) {
      var _rerenderState = rerenderState(),
          prevValue = _rerenderState[0],
          setValue = _rerenderState[1];

      updateEffect(function () {
        var prevTransition = ReactCurrentBatchConfig$1.transition;
        ReactCurrentBatchConfig$1.transition = 1;

        try {
          setValue(value);
        } finally {
          ReactCurrentBatchConfig$1.transition = prevTransition;
        }
      }, [value]);
      return prevValue;
    }

    function startTransition(setPending, callback) {
      var priorityLevel = getCurrentPriorityLevel();
      {
        runWithPriority$1(priorityLevel < UserBlockingPriority$2 ? UserBlockingPriority$2 : priorityLevel, function () {
          setPending(true);
        });
        runWithPriority$1(priorityLevel > NormalPriority$1 ? NormalPriority$1 : priorityLevel, function () {
          var prevTransition = ReactCurrentBatchConfig$1.transition;
          ReactCurrentBatchConfig$1.transition = 1;

          try {
            setPending(false);
            callback();
          } finally {
            ReactCurrentBatchConfig$1.transition = prevTransition;
          }
        });
      }
    }

    function mountTransition() {
      var _mountState2 = mountState(false),
          isPending = _mountState2[0],
          setPending = _mountState2[1]; // The `start` method can be stored on a ref, since `setPending`
      // never changes.


      var start = startTransition.bind(null, setPending);
      mountRef(start);
      return [start, isPending];
    }

    function updateTransition() {
      var _updateState2 = updateState(),
          isPending = _updateState2[0];

      var startRef = updateRef();
      var start = startRef.current;
      return [start, isPending];
    }

    function rerenderTransition() {
      var _rerenderState2 = rerenderState(),
          isPending = _rerenderState2[0];

      var startRef = updateRef();
      var start = startRef.current;
      return [start, isPending];
    }

    var isUpdatingOpaqueValueInRenderPhase = false;

    function getIsUpdatingOpaqueValueInRenderPhaseInDEV() {
      {
        return isUpdatingOpaqueValueInRenderPhase;
      }
    }

    function warnOnOpaqueIdentifierAccessInDEV(fiber) {
      {
        // TODO: Should warn in effects and callbacks, too
        var name = getComponentName(fiber.type) || 'Unknown';

        if (getIsRendering() && !didWarnAboutUseOpaqueIdentifier[name]) {
          error('The object passed back from useOpaqueIdentifier is meant to be ' + 'passed through to attributes only. Do not read the ' + 'value directly.');
          didWarnAboutUseOpaqueIdentifier[name] = true;
        }
      }
    }

    function mountOpaqueIdentifier() {
      var makeId = makeClientIdInDEV.bind(null, warnOnOpaqueIdentifierAccessInDEV.bind(null, currentlyRenderingFiber$1));

      if (getIsHydrating()) {
        var didUpgrade = false;
        var fiber = currentlyRenderingFiber$1;

        var readValue = function () {
          if (!didUpgrade) {
            // Only upgrade once. This works even inside the render phase because
            // the update is added to a shared queue, which outlasts the
            // in-progress render.
            didUpgrade = true;
            {
              isUpdatingOpaqueValueInRenderPhase = true;
              setId(makeId());
              isUpdatingOpaqueValueInRenderPhase = false;
              warnOnOpaqueIdentifierAccessInDEV(fiber);
            }
          }

          {
            {
              throw Error("The object passed back from useOpaqueIdentifier is meant to be passed through to attributes only. Do not read the value directly.");
            }
          }
        };

        var id = makeOpaqueHydratingObject(readValue);
        var setId = mountState(id)[1];

        if ((currentlyRenderingFiber$1.mode & BlockingMode) === NoMode) {
          currentlyRenderingFiber$1.flags |= Update | Passive;
          pushEffect(HasEffect | Passive$1, function () {
            setId(makeId());
          }, undefined, null);
        }

        return id;
      } else {
        var _id = makeId();

        mountState(_id);
        return _id;
      }
    }

    function updateOpaqueIdentifier() {
      var id = updateState()[0];
      return id;
    }

    function rerenderOpaqueIdentifier() {
      var id = rerenderState()[0];
      return id;
    }

    function dispatchAction(fiber, queue, action) {
      {
        if (typeof arguments[3] === 'function') {
          error("State updates from the useState() and useReducer() Hooks don't support the " + 'second callback argument. To execute a side effect after ' + 'rendering, declare it in the component body with useEffect().');
        }
      }
      var eventTime = requestEventTime();
      var lane = requestUpdateLane(fiber);
      var update = {
        lane: lane,
        action: action,
        eagerReducer: null,
        eagerState: null,
        next: null
      }; // Append the update to the end of the list.

      var pending = queue.pending;

      if (pending === null) {
        // This is the first update. Create a circular list.
        update.next = update;
      } else {
        update.next = pending.next;
        pending.next = update;
      }

      queue.pending = update;
      var alternate = fiber.alternate;

      if (fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1) {
        // This is a render phase update. Stash it in a lazily-created map of
        // queue -> linked list of updates. After this render pass, we'll restart
        // and apply the stashed updates on top of the work-in-progress hook.
        didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;
      } else {
        if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {
          // The queue is currently empty, which means we can eagerly compute the
          // next state before entering the render phase. If the new state is the
          // same as the current state, we may be able to bail out entirely.
          var lastRenderedReducer = queue.lastRenderedReducer;

          if (lastRenderedReducer !== null) {
            var prevDispatcher;
            {
              prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            }

            try {
              var currentState = queue.lastRenderedState;
              var eagerState = lastRenderedReducer(currentState, action); // Stash the eagerly computed state, and the reducer used to compute
              // it, on the update object. If the reducer hasn't changed by the
              // time we enter the render phase, then the eager state can be used
              // without calling the reducer again.

              update.eagerReducer = lastRenderedReducer;
              update.eagerState = eagerState;

              if (objectIs(eagerState, currentState)) {
                // Fast path. We can bail out without scheduling React to re-render.
                // It's still possible that we'll need to rebase this update later,
                // if the component re-renders for a different reason and by that
                // time the reducer has changed.
                return;
              }
            } catch (error) {// Suppress the error. It will throw again in the render phase.
            } finally {
              {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            }
          }
        }

        {
          // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
          if ('undefined' !== typeof jest) {
            warnIfNotScopedWithMatchingAct(fiber);
            warnIfNotCurrentlyActingUpdatesInDev(fiber);
          }
        }
        scheduleUpdateOnFiber(fiber, lane, eventTime);
      }
    }

    var ContextOnlyDispatcher = {
      readContext: readContext,
      useCallback: throwInvalidHookError,
      useContext: throwInvalidHookError,
      useEffect: throwInvalidHookError,
      useImperativeHandle: throwInvalidHookError,
      useLayoutEffect: throwInvalidHookError,
      useMemo: throwInvalidHookError,
      useReducer: throwInvalidHookError,
      useRef: throwInvalidHookError,
      useState: throwInvalidHookError,
      useDebugValue: throwInvalidHookError,
      useDeferredValue: throwInvalidHookError,
      useTransition: throwInvalidHookError,
      useMutableSource: throwInvalidHookError,
      useOpaqueIdentifier: throwInvalidHookError,
      unstable_isNewReconciler: enableNewReconciler
    };
    var HooksDispatcherOnMountInDEV = null;
    var HooksDispatcherOnMountWithHookTypesInDEV = null;
    var HooksDispatcherOnUpdateInDEV = null;
    var HooksDispatcherOnRerenderInDEV = null;
    var InvalidNestedHooksDispatcherOnMountInDEV = null;
    var InvalidNestedHooksDispatcherOnUpdateInDEV = null;
    var InvalidNestedHooksDispatcherOnRerenderInDEV = null;
    {
      var warnInvalidContextAccess = function () {
        error('Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');
      };

      var warnInvalidHookAccess = function () {
        error('Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' + 'You can only call Hooks at the top level of your React function. ' + 'For more information, see ' + 'https://reactjs.org/link/rules-of-hooks');
      };

      HooksDispatcherOnMountInDEV = {
        readContext: function (context, observedBits) {
          return readContext(context, observedBits);
        },
        useCallback: function (callback, deps) {
          currentHookNameInDev = 'useCallback';
          mountHookTypesDev();
          checkDepsAreArrayDev(deps);
          return mountCallback(callback, deps);
        },
        useContext: function (context, observedBits) {
          currentHookNameInDev = 'useContext';
          mountHookTypesDev();
          return readContext(context, observedBits);
        },
        useEffect: function (create, deps) {
          currentHookNameInDev = 'useEffect';
          mountHookTypesDev();
          checkDepsAreArrayDev(deps);
          return mountEffect(create, deps);
        },
        useImperativeHandle: function (ref, create, deps) {
          currentHookNameInDev = 'useImperativeHandle';
          mountHookTypesDev();
          checkDepsAreArrayDev(deps);
          return mountImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function (create, deps) {
          currentHookNameInDev = 'useLayoutEffect';
          mountHookTypesDev();
          checkDepsAreArrayDev(deps);
          return mountLayoutEffect(create, deps);
        },
        useMemo: function (create, deps) {
          currentHookNameInDev = 'useMemo';
          mountHookTypesDev();
          checkDepsAreArrayDev(deps);
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountMemo(create, deps);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useReducer: function (reducer, initialArg, init) {
          currentHookNameInDev = 'useReducer';
          mountHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountReducer(reducer, initialArg, init);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useRef: function (initialValue) {
          currentHookNameInDev = 'useRef';
          mountHookTypesDev();
          return mountRef(initialValue);
        },
        useState: function (initialState) {
          currentHookNameInDev = 'useState';
          mountHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountState(initialState);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useDebugValue: function (value, formatterFn) {
          currentHookNameInDev = 'useDebugValue';
          mountHookTypesDev();
          return mountDebugValue();
        },
        useDeferredValue: function (value) {
          currentHookNameInDev = 'useDeferredValue';
          mountHookTypesDev();
          return mountDeferredValue(value);
        },
        useTransition: function () {
          currentHookNameInDev = 'useTransition';
          mountHookTypesDev();
          return mountTransition();
        },
        useMutableSource: function (source, getSnapshot, subscribe) {
          currentHookNameInDev = 'useMutableSource';
          mountHookTypesDev();
          return mountMutableSource(source, getSnapshot, subscribe);
        },
        useOpaqueIdentifier: function () {
          currentHookNameInDev = 'useOpaqueIdentifier';
          mountHookTypesDev();
          return mountOpaqueIdentifier();
        },
        unstable_isNewReconciler: enableNewReconciler
      };
      HooksDispatcherOnMountWithHookTypesInDEV = {
        readContext: function (context, observedBits) {
          return readContext(context, observedBits);
        },
        useCallback: function (callback, deps) {
          currentHookNameInDev = 'useCallback';
          updateHookTypesDev();
          return mountCallback(callback, deps);
        },
        useContext: function (context, observedBits) {
          currentHookNameInDev = 'useContext';
          updateHookTypesDev();
          return readContext(context, observedBits);
        },
        useEffect: function (create, deps) {
          currentHookNameInDev = 'useEffect';
          updateHookTypesDev();
          return mountEffect(create, deps);
        },
        useImperativeHandle: function (ref, create, deps) {
          currentHookNameInDev = 'useImperativeHandle';
          updateHookTypesDev();
          return mountImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function (create, deps) {
          currentHookNameInDev = 'useLayoutEffect';
          updateHookTypesDev();
          return mountLayoutEffect(create, deps);
        },
        useMemo: function (create, deps) {
          currentHookNameInDev = 'useMemo';
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountMemo(create, deps);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useReducer: function (reducer, initialArg, init) {
          currentHookNameInDev = 'useReducer';
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountReducer(reducer, initialArg, init);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useRef: function (initialValue) {
          currentHookNameInDev = 'useRef';
          updateHookTypesDev();
          return mountRef(initialValue);
        },
        useState: function (initialState) {
          currentHookNameInDev = 'useState';
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountState(initialState);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useDebugValue: function (value, formatterFn) {
          currentHookNameInDev = 'useDebugValue';
          updateHookTypesDev();
          return mountDebugValue();
        },
        useDeferredValue: function (value) {
          currentHookNameInDev = 'useDeferredValue';
          updateHookTypesDev();
          return mountDeferredValue(value);
        },
        useTransition: function () {
          currentHookNameInDev = 'useTransition';
          updateHookTypesDev();
          return mountTransition();
        },
        useMutableSource: function (source, getSnapshot, subscribe) {
          currentHookNameInDev = 'useMutableSource';
          updateHookTypesDev();
          return mountMutableSource(source, getSnapshot, subscribe);
        },
        useOpaqueIdentifier: function () {
          currentHookNameInDev = 'useOpaqueIdentifier';
          updateHookTypesDev();
          return mountOpaqueIdentifier();
        },
        unstable_isNewReconciler: enableNewReconciler
      };
      HooksDispatcherOnUpdateInDEV = {
        readContext: function (context, observedBits) {
          return readContext(context, observedBits);
        },
        useCallback: function (callback, deps) {
          currentHookNameInDev = 'useCallback';
          updateHookTypesDev();
          return updateCallback(callback, deps);
        },
        useContext: function (context, observedBits) {
          currentHookNameInDev = 'useContext';
          updateHookTypesDev();
          return readContext(context, observedBits);
        },
        useEffect: function (create, deps) {
          currentHookNameInDev = 'useEffect';
          updateHookTypesDev();
          return updateEffect(create, deps);
        },
        useImperativeHandle: function (ref, create, deps) {
          currentHookNameInDev = 'useImperativeHandle';
          updateHookTypesDev();
          return updateImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function (create, deps) {
          currentHookNameInDev = 'useLayoutEffect';
          updateHookTypesDev();
          return updateLayoutEffect(create, deps);
        },
        useMemo: function (create, deps) {
          currentHookNameInDev = 'useMemo';
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

          try {
            return updateMemo(create, deps);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useReducer: function (reducer, initialArg, init) {
          currentHookNameInDev = 'useReducer';
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

          try {
            return updateReducer(reducer, initialArg, init);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useRef: function (initialValue) {
          currentHookNameInDev = 'useRef';
          updateHookTypesDev();
          return updateRef();
        },
        useState: function (initialState) {
          currentHookNameInDev = 'useState';
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

          try {
            return updateState(initialState);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useDebugValue: function (value, formatterFn) {
          currentHookNameInDev = 'useDebugValue';
          updateHookTypesDev();
          return updateDebugValue();
        },
        useDeferredValue: function (value) {
          currentHookNameInDev = 'useDeferredValue';
          updateHookTypesDev();
          return updateDeferredValue(value);
        },
        useTransition: function () {
          currentHookNameInDev = 'useTransition';
          updateHookTypesDev();
          return updateTransition();
        },
        useMutableSource: function (source, getSnapshot, subscribe) {
          currentHookNameInDev = 'useMutableSource';
          updateHookTypesDev();
          return updateMutableSource(source, getSnapshot, subscribe);
        },
        useOpaqueIdentifier: function () {
          currentHookNameInDev = 'useOpaqueIdentifier';
          updateHookTypesDev();
          return updateOpaqueIdentifier();
        },
        unstable_isNewReconciler: enableNewReconciler
      };
      HooksDispatcherOnRerenderInDEV = {
        readContext: function (context, observedBits) {
          return readContext(context, observedBits);
        },
        useCallback: function (callback, deps) {
          currentHookNameInDev = 'useCallback';
          updateHookTypesDev();
          return updateCallback(callback, deps);
        },
        useContext: function (context, observedBits) {
          currentHookNameInDev = 'useContext';
          updateHookTypesDev();
          return readContext(context, observedBits);
        },
        useEffect: function (create, deps) {
          currentHookNameInDev = 'useEffect';
          updateHookTypesDev();
          return updateEffect(create, deps);
        },
        useImperativeHandle: function (ref, create, deps) {
          currentHookNameInDev = 'useImperativeHandle';
          updateHookTypesDev();
          return updateImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function (create, deps) {
          currentHookNameInDev = 'useLayoutEffect';
          updateHookTypesDev();
          return updateLayoutEffect(create, deps);
        },
        useMemo: function (create, deps) {
          currentHookNameInDev = 'useMemo';
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;

          try {
            return updateMemo(create, deps);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useReducer: function (reducer, initialArg, init) {
          currentHookNameInDev = 'useReducer';
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;

          try {
            return rerenderReducer(reducer, initialArg, init);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useRef: function (initialValue) {
          currentHookNameInDev = 'useRef';
          updateHookTypesDev();
          return updateRef();
        },
        useState: function (initialState) {
          currentHookNameInDev = 'useState';
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;

          try {
            return rerenderState(initialState);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useDebugValue: function (value, formatterFn) {
          currentHookNameInDev = 'useDebugValue';
          updateHookTypesDev();
          return updateDebugValue();
        },
        useDeferredValue: function (value) {
          currentHookNameInDev = 'useDeferredValue';
          updateHookTypesDev();
          return rerenderDeferredValue(value);
        },
        useTransition: function () {
          currentHookNameInDev = 'useTransition';
          updateHookTypesDev();
          return rerenderTransition();
        },
        useMutableSource: function (source, getSnapshot, subscribe) {
          currentHookNameInDev = 'useMutableSource';
          updateHookTypesDev();
          return updateMutableSource(source, getSnapshot, subscribe);
        },
        useOpaqueIdentifier: function () {
          currentHookNameInDev = 'useOpaqueIdentifier';
          updateHookTypesDev();
          return rerenderOpaqueIdentifier();
        },
        unstable_isNewReconciler: enableNewReconciler
      };
      InvalidNestedHooksDispatcherOnMountInDEV = {
        readContext: function (context, observedBits) {
          warnInvalidContextAccess();
          return readContext(context, observedBits);
        },
        useCallback: function (callback, deps) {
          currentHookNameInDev = 'useCallback';
          warnInvalidHookAccess();
          mountHookTypesDev();
          return mountCallback(callback, deps);
        },
        useContext: function (context, observedBits) {
          currentHookNameInDev = 'useContext';
          warnInvalidHookAccess();
          mountHookTypesDev();
          return readContext(context, observedBits);
        },
        useEffect: function (create, deps) {
          currentHookNameInDev = 'useEffect';
          warnInvalidHookAccess();
          mountHookTypesDev();
          return mountEffect(create, deps);
        },
        useImperativeHandle: function (ref, create, deps) {
          currentHookNameInDev = 'useImperativeHandle';
          warnInvalidHookAccess();
          mountHookTypesDev();
          return mountImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function (create, deps) {
          currentHookNameInDev = 'useLayoutEffect';
          warnInvalidHookAccess();
          mountHookTypesDev();
          return mountLayoutEffect(create, deps);
        },
        useMemo: function (create, deps) {
          currentHookNameInDev = 'useMemo';
          warnInvalidHookAccess();
          mountHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountMemo(create, deps);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useReducer: function (reducer, initialArg, init) {
          currentHookNameInDev = 'useReducer';
          warnInvalidHookAccess();
          mountHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountReducer(reducer, initialArg, init);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useRef: function (initialValue) {
          currentHookNameInDev = 'useRef';
          warnInvalidHookAccess();
          mountHookTypesDev();
          return mountRef(initialValue);
        },
        useState: function (initialState) {
          currentHookNameInDev = 'useState';
          warnInvalidHookAccess();
          mountHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountState(initialState);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useDebugValue: function (value, formatterFn) {
          currentHookNameInDev = 'useDebugValue';
          warnInvalidHookAccess();
          mountHookTypesDev();
          return mountDebugValue();
        },
        useDeferredValue: function (value) {
          currentHookNameInDev = 'useDeferredValue';
          warnInvalidHookAccess();
          mountHookTypesDev();
          return mountDeferredValue(value);
        },
        useTransition: function () {
          currentHookNameInDev = 'useTransition';
          warnInvalidHookAccess();
          mountHookTypesDev();
          return mountTransition();
        },
        useMutableSource: function (source, getSnapshot, subscribe) {
          currentHookNameInDev = 'useMutableSource';
          warnInvalidHookAccess();
          mountHookTypesDev();
          return mountMutableSource(source, getSnapshot, subscribe);
        },
        useOpaqueIdentifier: function () {
          currentHookNameInDev = 'useOpaqueIdentifier';
          warnInvalidHookAccess();
          mountHookTypesDev();
          return mountOpaqueIdentifier();
        },
        unstable_isNewReconciler: enableNewReconciler
      };
      InvalidNestedHooksDispatcherOnUpdateInDEV = {
        readContext: function (context, observedBits) {
          warnInvalidContextAccess();
          return readContext(context, observedBits);
        },
        useCallback: function (callback, deps) {
          currentHookNameInDev = 'useCallback';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateCallback(callback, deps);
        },
        useContext: function (context, observedBits) {
          currentHookNameInDev = 'useContext';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return readContext(context, observedBits);
        },
        useEffect: function (create, deps) {
          currentHookNameInDev = 'useEffect';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateEffect(create, deps);
        },
        useImperativeHandle: function (ref, create, deps) {
          currentHookNameInDev = 'useImperativeHandle';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function (create, deps) {
          currentHookNameInDev = 'useLayoutEffect';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateLayoutEffect(create, deps);
        },
        useMemo: function (create, deps) {
          currentHookNameInDev = 'useMemo';
          warnInvalidHookAccess();
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

          try {
            return updateMemo(create, deps);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useReducer: function (reducer, initialArg, init) {
          currentHookNameInDev = 'useReducer';
          warnInvalidHookAccess();
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

          try {
            return updateReducer(reducer, initialArg, init);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useRef: function (initialValue) {
          currentHookNameInDev = 'useRef';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateRef();
        },
        useState: function (initialState) {
          currentHookNameInDev = 'useState';
          warnInvalidHookAccess();
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

          try {
            return updateState(initialState);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useDebugValue: function (value, formatterFn) {
          currentHookNameInDev = 'useDebugValue';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateDebugValue();
        },
        useDeferredValue: function (value) {
          currentHookNameInDev = 'useDeferredValue';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateDeferredValue(value);
        },
        useTransition: function () {
          currentHookNameInDev = 'useTransition';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateTransition();
        },
        useMutableSource: function (source, getSnapshot, subscribe) {
          currentHookNameInDev = 'useMutableSource';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateMutableSource(source, getSnapshot, subscribe);
        },
        useOpaqueIdentifier: function () {
          currentHookNameInDev = 'useOpaqueIdentifier';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateOpaqueIdentifier();
        },
        unstable_isNewReconciler: enableNewReconciler
      };
      InvalidNestedHooksDispatcherOnRerenderInDEV = {
        readContext: function (context, observedBits) {
          warnInvalidContextAccess();
          return readContext(context, observedBits);
        },
        useCallback: function (callback, deps) {
          currentHookNameInDev = 'useCallback';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateCallback(callback, deps);
        },
        useContext: function (context, observedBits) {
          currentHookNameInDev = 'useContext';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return readContext(context, observedBits);
        },
        useEffect: function (create, deps) {
          currentHookNameInDev = 'useEffect';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateEffect(create, deps);
        },
        useImperativeHandle: function (ref, create, deps) {
          currentHookNameInDev = 'useImperativeHandle';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function (create, deps) {
          currentHookNameInDev = 'useLayoutEffect';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateLayoutEffect(create, deps);
        },
        useMemo: function (create, deps) {
          currentHookNameInDev = 'useMemo';
          warnInvalidHookAccess();
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

          try {
            return updateMemo(create, deps);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useReducer: function (reducer, initialArg, init) {
          currentHookNameInDev = 'useReducer';
          warnInvalidHookAccess();
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

          try {
            return rerenderReducer(reducer, initialArg, init);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useRef: function (initialValue) {
          currentHookNameInDev = 'useRef';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateRef();
        },
        useState: function (initialState) {
          currentHookNameInDev = 'useState';
          warnInvalidHookAccess();
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

          try {
            return rerenderState(initialState);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useDebugValue: function (value, formatterFn) {
          currentHookNameInDev = 'useDebugValue';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateDebugValue();
        },
        useDeferredValue: function (value) {
          currentHookNameInDev = 'useDeferredValue';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return rerenderDeferredValue(value);
        },
        useTransition: function () {
          currentHookNameInDev = 'useTransition';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return rerenderTransition();
        },
        useMutableSource: function (source, getSnapshot, subscribe) {
          currentHookNameInDev = 'useMutableSource';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateMutableSource(source, getSnapshot, subscribe);
        },
        useOpaqueIdentifier: function () {
          currentHookNameInDev = 'useOpaqueIdentifier';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return rerenderOpaqueIdentifier();
        },
        unstable_isNewReconciler: enableNewReconciler
      };
    }
    var now$1 = Scheduler.unstable_now;
    var commitTime = 0;
    var profilerStartTime = -1;

    function getCommitTime() {
      return commitTime;
    }

    function recordCommitTime() {
      commitTime = now$1();
    }

    function startProfilerTimer(fiber) {
      profilerStartTime = now$1();

      if (fiber.actualStartTime < 0) {
        fiber.actualStartTime = now$1();
      }
    }

    function stopProfilerTimerIfRunning(fiber) {
      profilerStartTime = -1;
    }

    function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {
      if (profilerStartTime >= 0) {
        var elapsedTime = now$1() - profilerStartTime;
        fiber.actualDuration += elapsedTime;

        if (overrideBaseTime) {
          fiber.selfBaseDuration = elapsedTime;
        }

        profilerStartTime = -1;
      }
    }

    function transferActualDuration(fiber) {
      // Transfer time spent rendering these children so we don't lose it
      // after we rerender. This is used as a helper in special cases
      // where we should count the work of multiple passes.
      var child = fiber.child;

      while (child) {
        fiber.actualDuration += child.actualDuration;
        child = child.sibling;
      }
    }

    var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
    var didReceiveUpdate = false;
    var didWarnAboutBadClass;
    var didWarnAboutModulePatternComponent;
    var didWarnAboutContextTypeOnFunctionComponent;
    var didWarnAboutGetDerivedStateOnFunctionComponent;
    var didWarnAboutFunctionRefs;
    var didWarnAboutReassigningProps;
    var didWarnAboutRevealOrder;
    var didWarnAboutTailOptions;
    {
      didWarnAboutBadClass = {};
      didWarnAboutModulePatternComponent = {};
      didWarnAboutContextTypeOnFunctionComponent = {};
      didWarnAboutGetDerivedStateOnFunctionComponent = {};
      didWarnAboutFunctionRefs = {};
      didWarnAboutReassigningProps = false;
      didWarnAboutRevealOrder = {};
      didWarnAboutTailOptions = {};
    }

    function reconcileChildren(current, workInProgress, nextChildren, renderLanes) {
      if (current === null) {
        // If this is a fresh new component that hasn't been rendered yet, we
        // won't update its child set by applying minimal side-effects. Instead,
        // we will add them all to the child before it gets rendered. That means
        // we can optimize this reconciliation pass by not tracking side-effects.
        workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);
      } else {
        // If the current child is the same as the work in progress, it means that
        // we haven't yet started any work on these children. Therefore, we use
        // the clone algorithm to create a copy of all the current children.
        // If we had any progressed work already, that is invalid at this point so
        // let's throw it out.
        workInProgress.child = reconcileChildFibers(workInProgress, current.child, nextChildren, renderLanes);
      }
    }

    function forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes) {
      // This function is fork of reconcileChildren. It's used in cases where we
      // want to reconcile without matching against the existing set. This has the
      // effect of all current children being unmounted; even if the type and key
      // are the same, the old child is unmounted and a new child is created.
      //
      // To do this, we're going to go through the reconcile algorithm twice. In
      // the first pass, we schedule a deletion for all the current children by
      // passing null.
      workInProgress.child = reconcileChildFibers(workInProgress, current.child, null, renderLanes); // In the second pass, we mount the new children. The trick here is that we
      // pass null in place of where we usually pass the current child set. This has
      // the effect of remounting all children regardless of whether their
      // identities match.

      workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);
    }

    function updateForwardRef(current, workInProgress, Component, nextProps, renderLanes) {
      // TODO: current can be non-null here even if the component
      // hasn't yet mounted. This happens after the first render suspends.
      // We'll need to figure out if this is fine or can cause issues.
      {
        if (workInProgress.type !== workInProgress.elementType) {
          // Lazy component props can't be validated in createElement
          // because they're only guaranteed to be resolved here.
          var innerPropTypes = Component.propTypes;

          if (innerPropTypes) {
            checkPropTypes(innerPropTypes, nextProps, // Resolved props
            'prop', getComponentName(Component));
          }
        }
      }
      var render = Component.render;
      var ref = workInProgress.ref; // The rest is a fork of updateFunctionComponent

      var nextChildren;
      prepareToReadContext(workInProgress, renderLanes);
      {
        ReactCurrentOwner$1.current = workInProgress;
        setIsRendering(true);
        nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);

        if (workInProgress.mode & StrictMode) {
          disableLogs();

          try {
            nextChildren = renderWithHooks(current, workInProgress, render, nextProps, ref, renderLanes);
          } finally {
            reenableLogs();
          }
        }

        setIsRendering(false);
      }

      if (current !== null && !didReceiveUpdate) {
        bailoutHooks(current, workInProgress, renderLanes);
        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
      } // React DevTools reads this flag.


      workInProgress.flags |= PerformedWork;
      reconcileChildren(current, workInProgress, nextChildren, renderLanes);
      return workInProgress.child;
    }

    function updateMemoComponent(current, workInProgress, Component, nextProps, updateLanes, renderLanes) {
      if (current === null) {
        var type = Component.type;

        if (isSimpleFunctionComponent(type) && Component.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.
        Component.defaultProps === undefined) {
          var resolvedType = type;
          {
            resolvedType = resolveFunctionForHotReloading(type);
          } // If this is a plain function component without default props,
          // and with only the default shallow comparison, we upgrade it
          // to a SimpleMemoComponent to allow fast path updates.

          workInProgress.tag = SimpleMemoComponent;
          workInProgress.type = resolvedType;
          {
            validateFunctionComponentInDev(workInProgress, type);
          }
          return updateSimpleMemoComponent(current, workInProgress, resolvedType, nextProps, updateLanes, renderLanes);
        }

        {
          var innerPropTypes = type.propTypes;

          if (innerPropTypes) {
            // Inner memo component props aren't currently validated in createElement.
            // We could move it there, but we'd still need this for lazy code path.
            checkPropTypes(innerPropTypes, nextProps, // Resolved props
            'prop', getComponentName(type));
          }
        }
        var child = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress, workInProgress.mode, renderLanes);
        child.ref = workInProgress.ref;
        child.return = workInProgress;
        workInProgress.child = child;
        return child;
      }

      {
        var _type = Component.type;
        var _innerPropTypes = _type.propTypes;

        if (_innerPropTypes) {
          // Inner memo component props aren't currently validated in createElement.
          // We could move it there, but we'd still need this for lazy code path.
          checkPropTypes(_innerPropTypes, nextProps, // Resolved props
          'prop', getComponentName(_type));
        }
      }
      var currentChild = current.child; // This is always exactly one child

      if (!includesSomeLane(updateLanes, renderLanes)) {
        // This will be the props with resolved defaultProps,
        // unlike current.memoizedProps which will be the unresolved ones.
        var prevProps = currentChild.memoizedProps; // Default to shallow comparison

        var compare = Component.compare;
        compare = compare !== null ? compare : shallowEqual;

        if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) {
          return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        }
      } // React DevTools reads this flag.


      workInProgress.flags |= PerformedWork;
      var newChild = createWorkInProgress(currentChild, nextProps);
      newChild.ref = workInProgress.ref;
      newChild.return = workInProgress;
      workInProgress.child = newChild;
      return newChild;
    }

    function updateSimpleMemoComponent(current, workInProgress, Component, nextProps, updateLanes, renderLanes) {
      // TODO: current can be non-null here even if the component
      // hasn't yet mounted. This happens when the inner render suspends.
      // We'll need to figure out if this is fine or can cause issues.
      {
        if (workInProgress.type !== workInProgress.elementType) {
          // Lazy component props can't be validated in createElement
          // because they're only guaranteed to be resolved here.
          var outerMemoType = workInProgress.elementType;

          if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
            // We warn when you define propTypes on lazy()
            // so let's just skip over it to find memo() outer wrapper.
            // Inner props for memo are validated later.
            var lazyComponent = outerMemoType;
            var payload = lazyComponent._payload;
            var init = lazyComponent._init;

            try {
              outerMemoType = init(payload);
            } catch (x) {
              outerMemoType = null;
            } // Inner propTypes will be validated in the function component path.


            var outerPropTypes = outerMemoType && outerMemoType.propTypes;

            if (outerPropTypes) {
              checkPropTypes(outerPropTypes, nextProps, // Resolved (SimpleMemoComponent has no defaultProps)
              'prop', getComponentName(outerMemoType));
            }
          }
        }
      }

      if (current !== null) {
        var prevProps = current.memoizedProps;

        if (shallowEqual(prevProps, nextProps) && current.ref === workInProgress.ref && // Prevent bailout if the implementation changed due to hot reload.
        workInProgress.type === current.type) {
          didReceiveUpdate = false;

          if (!includesSomeLane(renderLanes, updateLanes)) {
            // The pending lanes were cleared at the beginning of beginWork. We're
            // about to bail out, but there might be other lanes that weren't
            // included in the current render. Usually, the priority level of the
            // remaining updates is accumlated during the evaluation of the
            // component (i.e. when processing the update queue). But since since
            // we're bailing out early *without* evaluating the component, we need
            // to account for it here, too. Reset to the value of the current fiber.
            // NOTE: This only applies to SimpleMemoComponent, not MemoComponent,
            // because a MemoComponent fiber does not have hooks or an update queue;
            // rather, it wraps around an inner component, which may or may not
            // contains hooks.
            // TODO: Move the reset at in beginWork out of the common path so that
            // this is no longer necessary.
            workInProgress.lanes = current.lanes;
            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
          } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {
            // This is a special case that only exists for legacy mode.
            // See https://github.com/facebook/react/pull/19216.
            didReceiveUpdate = true;
          }
        }
      }

      return updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes);
    }

    function updateOffscreenComponent(current, workInProgress, renderLanes) {
      var nextProps = workInProgress.pendingProps;
      var nextChildren = nextProps.children;
      var prevState = current !== null ? current.memoizedState : null;

      if (nextProps.mode === 'hidden' || nextProps.mode === 'unstable-defer-without-hiding') {
        if ((workInProgress.mode & ConcurrentMode) === NoMode) {
          // In legacy sync mode, don't defer the subtree. Render it now.
          // TODO: Figure out what we should do in Blocking mode.
          var nextState = {
            baseLanes: NoLanes
          };
          workInProgress.memoizedState = nextState;
          pushRenderLanes(workInProgress, renderLanes);
        } else if (!includesSomeLane(renderLanes, OffscreenLane)) {
          var nextBaseLanes;

          if (prevState !== null) {
            var prevBaseLanes = prevState.baseLanes;
            nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);
          } else {
            nextBaseLanes = renderLanes;
          } // Schedule this fiber to re-render at offscreen priority. Then bailout.


          {
            markSpawnedWork(OffscreenLane);
          }
          workInProgress.lanes = workInProgress.childLanes = laneToLanes(OffscreenLane);
          var _nextState = {
            baseLanes: nextBaseLanes
          };
          workInProgress.memoizedState = _nextState; // We're about to bail out, but we need to push this to the stack anyway
          // to avoid a push/pop misalignment.

          pushRenderLanes(workInProgress, nextBaseLanes);
          return null;
        } else {
          // Rendering at offscreen, so we can clear the base lanes.
          var _nextState2 = {
            baseLanes: NoLanes
          };
          workInProgress.memoizedState = _nextState2; // Push the lanes that were skipped when we bailed out.

          var subtreeRenderLanes = prevState !== null ? prevState.baseLanes : renderLanes;
          pushRenderLanes(workInProgress, subtreeRenderLanes);
        }
      } else {
        var _subtreeRenderLanes;

        if (prevState !== null) {
          _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes); // Since we're not hidden anymore, reset the state

          workInProgress.memoizedState = null;
        } else {
          // We weren't previously hidden, and we still aren't, so there's nothing
          // special to do. Need to push to the stack regardless, though, to avoid
          // a push/pop misalignment.
          _subtreeRenderLanes = renderLanes;
        }

        pushRenderLanes(workInProgress, _subtreeRenderLanes);
      }

      reconcileChildren(current, workInProgress, nextChildren, renderLanes);
      return workInProgress.child;
    } // Note: These happen to have identical begin phases, for now. We shouldn't hold
    // ourselves to this constraint, though. If the behavior diverges, we should
    // fork the function.


    var updateLegacyHiddenComponent = updateOffscreenComponent;

    function updateFragment(current, workInProgress, renderLanes) {
      var nextChildren = workInProgress.pendingProps;
      reconcileChildren(current, workInProgress, nextChildren, renderLanes);
      return workInProgress.child;
    }

    function updateMode(current, workInProgress, renderLanes) {
      var nextChildren = workInProgress.pendingProps.children;
      reconcileChildren(current, workInProgress, nextChildren, renderLanes);
      return workInProgress.child;
    }

    function updateProfiler(current, workInProgress, renderLanes) {
      {
        workInProgress.flags |= Update; // Reset effect durations for the next eventual effect phase.
        // These are reset during render to allow the DevTools commit hook a chance to read them,

        var stateNode = workInProgress.stateNode;
        stateNode.effectDuration = 0;
        stateNode.passiveEffectDuration = 0;
      }
      var nextProps = workInProgress.pendingProps;
      var nextChildren = nextProps.children;
      reconcileChildren(current, workInProgress, nextChildren, renderLanes);
      return workInProgress.child;
    }

    function markRef(current, workInProgress) {
      var ref = workInProgress.ref;

      if (current === null && ref !== null || current !== null && current.ref !== ref) {
        // Schedule a Ref effect
        workInProgress.flags |= Ref;
      }
    }

    function updateFunctionComponent(current, workInProgress, Component, nextProps, renderLanes) {
      {
        if (workInProgress.type !== workInProgress.elementType) {
          // Lazy component props can't be validated in createElement
          // because they're only guaranteed to be resolved here.
          var innerPropTypes = Component.propTypes;

          if (innerPropTypes) {
            checkPropTypes(innerPropTypes, nextProps, // Resolved props
            'prop', getComponentName(Component));
          }
        }
      }
      var context;
      {
        var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);
        context = getMaskedContext(workInProgress, unmaskedContext);
      }
      var nextChildren;
      prepareToReadContext(workInProgress, renderLanes);
      {
        ReactCurrentOwner$1.current = workInProgress;
        setIsRendering(true);
        nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);

        if (workInProgress.mode & StrictMode) {
          disableLogs();

          try {
            nextChildren = renderWithHooks(current, workInProgress, Component, nextProps, context, renderLanes);
          } finally {
            reenableLogs();
          }
        }

        setIsRendering(false);
      }

      if (current !== null && !didReceiveUpdate) {
        bailoutHooks(current, workInProgress, renderLanes);
        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
      } // React DevTools reads this flag.


      workInProgress.flags |= PerformedWork;
      reconcileChildren(current, workInProgress, nextChildren, renderLanes);
      return workInProgress.child;
    }

    function updateClassComponent(current, workInProgress, Component, nextProps, renderLanes) {
      {
        if (workInProgress.type !== workInProgress.elementType) {
          // Lazy component props can't be validated in createElement
          // because they're only guaranteed to be resolved here.
          var innerPropTypes = Component.propTypes;

          if (innerPropTypes) {
            checkPropTypes(innerPropTypes, nextProps, // Resolved props
            'prop', getComponentName(Component));
          }
        }
      } // Push context providers early to prevent context stack mismatches.
      // During mounting we don't know the child context yet as the instance doesn't exist.
      // We will invalidate the child context in finishClassComponent() right after rendering.

      var hasContext;

      if (isContextProvider(Component)) {
        hasContext = true;
        pushContextProvider(workInProgress);
      } else {
        hasContext = false;
      }

      prepareToReadContext(workInProgress, renderLanes);
      var instance = workInProgress.stateNode;
      var shouldUpdate;

      if (instance === null) {
        if (current !== null) {
          // A class component without an instance only mounts if it suspended
          // inside a non-concurrent tree, in an inconsistent state. We want to
          // treat it like a new mount, even though an empty version of it already
          // committed. Disconnect the alternate pointers.
          current.alternate = null;
          workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

          workInProgress.flags |= Placement;
        } // In the initial pass we might need to construct the instance.


        constructClassInstance(workInProgress, Component, nextProps);
        mountClassInstance(workInProgress, Component, nextProps, renderLanes);
        shouldUpdate = true;
      } else if (current === null) {
        // In a resume, we'll already have an instance we can reuse.
        shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderLanes);
      } else {
        shouldUpdate = updateClassInstance(current, workInProgress, Component, nextProps, renderLanes);
      }

      var nextUnitOfWork = finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes);
      {
        var inst = workInProgress.stateNode;

        if (shouldUpdate && inst.props !== nextProps) {
          if (!didWarnAboutReassigningProps) {
            error('It looks like %s is reassigning its own `this.props` while rendering. ' + 'This is not supported and can lead to confusing bugs.', getComponentName(workInProgress.type) || 'a component');
          }

          didWarnAboutReassigningProps = true;
        }
      }
      return nextUnitOfWork;
    }

    function finishClassComponent(current, workInProgress, Component, shouldUpdate, hasContext, renderLanes) {
      // Refs should update even if shouldComponentUpdate returns false
      markRef(current, workInProgress);
      var didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;

      if (!shouldUpdate && !didCaptureError) {
        // Context providers should defer to sCU for rendering
        if (hasContext) {
          invalidateContextProvider(workInProgress, Component, false);
        }

        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
      }

      var instance = workInProgress.stateNode; // Rerender

      ReactCurrentOwner$1.current = workInProgress;
      var nextChildren;

      if (didCaptureError && typeof Component.getDerivedStateFromError !== 'function') {
        // If we captured an error, but getDerivedStateFromError is not defined,
        // unmount all the children. componentDidCatch will schedule an update to
        // re-render a fallback. This is temporary until we migrate everyone to
        // the new API.
        // TODO: Warn in a future release.
        nextChildren = null;
        {
          stopProfilerTimerIfRunning();
        }
      } else {
        {
          setIsRendering(true);
          nextChildren = instance.render();

          if (workInProgress.mode & StrictMode) {
            disableLogs();

            try {
              instance.render();
            } finally {
              reenableLogs();
            }
          }

          setIsRendering(false);
        }
      } // React DevTools reads this flag.


      workInProgress.flags |= PerformedWork;

      if (current !== null && didCaptureError) {
        // If we're recovering from an error, reconcile without reusing any of
        // the existing children. Conceptually, the normal children and the children
        // that are shown on error are two different sets, so we shouldn't reuse
        // normal children even if their identities match.
        forceUnmountCurrentAndReconcile(current, workInProgress, nextChildren, renderLanes);
      } else {
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
      } // Memoize state using the values we just used to render.
      // TODO: Restructure so we never read values from the instance.


      workInProgress.memoizedState = instance.state; // The context might have changed so we need to recalculate it.

      if (hasContext) {
        invalidateContextProvider(workInProgress, Component, true);
      }

      return workInProgress.child;
    }

    function pushHostRootContext(workInProgress) {
      var root = workInProgress.stateNode;

      if (root.pendingContext) {
        pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
      } else if (root.context) {
        // Should always be set
        pushTopLevelContextObject(workInProgress, root.context, false);
      }

      pushHostContainer(workInProgress, root.containerInfo);
    }

    function updateHostRoot(current, workInProgress, renderLanes) {
      pushHostRootContext(workInProgress);
      var updateQueue = workInProgress.updateQueue;

      if (!(current !== null && updateQueue !== null)) {
        {
          throw Error("If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue.");
        }
      }

      var nextProps = workInProgress.pendingProps;
      var prevState = workInProgress.memoizedState;
      var prevChildren = prevState !== null ? prevState.element : null;
      cloneUpdateQueue(current, workInProgress);
      processUpdateQueue(workInProgress, nextProps, null, renderLanes);
      var nextState = workInProgress.memoizedState; // Caution: React DevTools currently depends on this property
      // being called "element".

      var nextChildren = nextState.element;

      if (nextChildren === prevChildren) {
        resetHydrationState();
        return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
      }

      var root = workInProgress.stateNode;

      if (root.hydrate && enterHydrationState(workInProgress)) {
        // If we don't have any current children this might be the first pass.
        // We always try to hydrate. If this isn't a hydration pass there won't
        // be any children to hydrate which is effectively the same thing as
        // not hydrating.
        {
          var mutableSourceEagerHydrationData = root.mutableSourceEagerHydrationData;

          if (mutableSourceEagerHydrationData != null) {
            for (var i = 0; i < mutableSourceEagerHydrationData.length; i += 2) {
              var mutableSource = mutableSourceEagerHydrationData[i];
              var version = mutableSourceEagerHydrationData[i + 1];
              setWorkInProgressVersion(mutableSource, version);
            }
          }
        }
        var child = mountChildFibers(workInProgress, null, nextChildren, renderLanes);
        workInProgress.child = child;
        var node = child;

        while (node) {
          // Mark each child as hydrating. This is a fast path to know whether this
          // tree is part of a hydrating tree. This is used to determine if a child
          // node has fully mounted yet, and for scheduling event replaying.
          // Conceptually this is similar to Placement in that a new subtree is
          // inserted into the React tree here. It just happens to not need DOM
          // mutations because it already exists.
          node.flags = node.flags & ~Placement | Hydrating;
          node = node.sibling;
        }
      } else {
        // Otherwise reset hydration state in case we aborted and resumed another
        // root.
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
        resetHydrationState();
      }

      return workInProgress.child;
    }

    function updateHostComponent(current, workInProgress, renderLanes) {
      pushHostContext(workInProgress);

      if (current === null) {
        tryToClaimNextHydratableInstance(workInProgress);
      }

      var type = workInProgress.type;
      var nextProps = workInProgress.pendingProps;
      var prevProps = current !== null ? current.memoizedProps : null;
      var nextChildren = nextProps.children;
      var isDirectTextChild = shouldSetTextContent(type, nextProps);

      if (isDirectTextChild) {
        // We special case a direct text child of a host node. This is a common
        // case. We won't handle it as a reified child. We will instead handle
        // this in the host environment that also has access to this prop. That
        // avoids allocating another HostText fiber and traversing it.
        nextChildren = null;
      } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {
        // If we're switching from a direct text child to a normal child, or to
        // empty, we need to schedule the text content to be reset.
        workInProgress.flags |= ContentReset;
      }

      markRef(current, workInProgress);
      reconcileChildren(current, workInProgress, nextChildren, renderLanes);
      return workInProgress.child;
    }

    function updateHostText(current, workInProgress) {
      if (current === null) {
        tryToClaimNextHydratableInstance(workInProgress);
      } // Nothing to do here. This is terminal. We'll do the completion step
      // immediately after.


      return null;
    }

    function mountLazyComponent(_current, workInProgress, elementType, updateLanes, renderLanes) {
      if (_current !== null) {
        // A lazy component only mounts if it suspended inside a non-
        // concurrent tree, in an inconsistent state. We want to treat it like
        // a new mount, even though an empty version of it already committed.
        // Disconnect the alternate pointers.
        _current.alternate = null;
        workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

        workInProgress.flags |= Placement;
      }

      var props = workInProgress.pendingProps;
      var lazyComponent = elementType;
      var payload = lazyComponent._payload;
      var init = lazyComponent._init;
      var Component = init(payload); // Store the unwrapped component in the type.

      workInProgress.type = Component;
      var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);
      var resolvedProps = resolveDefaultProps(Component, props);
      var child;

      switch (resolvedTag) {
        case FunctionComponent:
          {
            {
              validateFunctionComponentInDev(workInProgress, Component);
              workInProgress.type = Component = resolveFunctionForHotReloading(Component);
            }
            child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderLanes);
            return child;
          }

        case ClassComponent:
          {
            {
              workInProgress.type = Component = resolveClassForHotReloading(Component);
            }
            child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderLanes);
            return child;
          }

        case ForwardRef:
          {
            {
              workInProgress.type = Component = resolveForwardRefForHotReloading(Component);
            }
            child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderLanes);
            return child;
          }

        case MemoComponent:
          {
            {
              if (workInProgress.type !== workInProgress.elementType) {
                var outerPropTypes = Component.propTypes;

                if (outerPropTypes) {
                  checkPropTypes(outerPropTypes, resolvedProps, // Resolved for outer only
                  'prop', getComponentName(Component));
                }
              }
            }
            child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too
            updateLanes, renderLanes);
            return child;
          }
      }

      var hint = '';
      {
        if (Component !== null && typeof Component === 'object' && Component.$$typeof === REACT_LAZY_TYPE) {
          hint = ' Did you wrap a component in React.lazy() more than once?';
        }
      } // This message intentionally doesn't mention ForwardRef or MemoComponent
      // because the fact that it's a separate type of work is an
      // implementation detail.

      {
        {
          throw Error("Element type is invalid. Received a promise that resolves to: " + Component + ". Lazy element type must resolve to a class or function." + hint);
        }
      }
    }

    function mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderLanes) {
      if (_current !== null) {
        // An incomplete component only mounts if it suspended inside a non-
        // concurrent tree, in an inconsistent state. We want to treat it like
        // a new mount, even though an empty version of it already committed.
        // Disconnect the alternate pointers.
        _current.alternate = null;
        workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

        workInProgress.flags |= Placement;
      } // Promote the fiber to a class and try rendering again.


      workInProgress.tag = ClassComponent; // The rest of this function is a fork of `updateClassComponent`
      // Push context providers early to prevent context stack mismatches.
      // During mounting we don't know the child context yet as the instance doesn't exist.
      // We will invalidate the child context in finishClassComponent() right after rendering.

      var hasContext;

      if (isContextProvider(Component)) {
        hasContext = true;
        pushContextProvider(workInProgress);
      } else {
        hasContext = false;
      }

      prepareToReadContext(workInProgress, renderLanes);
      constructClassInstance(workInProgress, Component, nextProps);
      mountClassInstance(workInProgress, Component, nextProps, renderLanes);
      return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);
    }

    function mountIndeterminateComponent(_current, workInProgress, Component, renderLanes) {
      if (_current !== null) {
        // An indeterminate component only mounts if it suspended inside a non-
        // concurrent tree, in an inconsistent state. We want to treat it like
        // a new mount, even though an empty version of it already committed.
        // Disconnect the alternate pointers.
        _current.alternate = null;
        workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

        workInProgress.flags |= Placement;
      }

      var props = workInProgress.pendingProps;
      var context;
      {
        var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);
        context = getMaskedContext(workInProgress, unmaskedContext);
      }
      prepareToReadContext(workInProgress, renderLanes);
      var value;
      {
        if (Component.prototype && typeof Component.prototype.render === 'function') {
          var componentName = getComponentName(Component) || 'Unknown';

          if (!didWarnAboutBadClass[componentName]) {
            error("The <%s /> component appears to have a render method, but doesn't extend React.Component. " + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);
            didWarnAboutBadClass[componentName] = true;
          }
        }

        if (workInProgress.mode & StrictMode) {
          ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
        }

        setIsRendering(true);
        ReactCurrentOwner$1.current = workInProgress;
        value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);
        setIsRendering(false);
      } // React DevTools reads this flag.

      workInProgress.flags |= PerformedWork;
      {
        // Support for module components is deprecated and is removed behind a flag.
        // Whether or not it would crash later, we want to show a good message in DEV first.
        if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
          var _componentName = getComponentName(Component) || 'Unknown';

          if (!didWarnAboutModulePatternComponent[_componentName]) {
            error('The <%s /> component appears to be a function component that returns a class instance. ' + 'Change %s to a class that extends React.Component instead. ' + "If you can't use a class try assigning the prototype on the function as a workaround. " + "`%s.prototype = React.Component.prototype`. Don't use an arrow function since it " + 'cannot be called with `new` by React.', _componentName, _componentName, _componentName);
            didWarnAboutModulePatternComponent[_componentName] = true;
          }
        }
      }

      if ( // Run these checks in production only if the flag is off.
      // Eventually we'll delete this branch altogether.
      typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
        {
          var _componentName2 = getComponentName(Component) || 'Unknown';

          if (!didWarnAboutModulePatternComponent[_componentName2]) {
            error('The <%s /> component appears to be a function component that returns a class instance. ' + 'Change %s to a class that extends React.Component instead. ' + "If you can't use a class try assigning the prototype on the function as a workaround. " + "`%s.prototype = React.Component.prototype`. Don't use an arrow function since it " + 'cannot be called with `new` by React.', _componentName2, _componentName2, _componentName2);
            didWarnAboutModulePatternComponent[_componentName2] = true;
          }
        } // Proceed under the assumption that this is a class instance

        workInProgress.tag = ClassComponent; // Throw out any hooks that were used.

        workInProgress.memoizedState = null;
        workInProgress.updateQueue = null; // Push context providers early to prevent context stack mismatches.
        // During mounting we don't know the child context yet as the instance doesn't exist.
        // We will invalidate the child context in finishClassComponent() right after rendering.

        var hasContext = false;

        if (isContextProvider(Component)) {
          hasContext = true;
          pushContextProvider(workInProgress);
        } else {
          hasContext = false;
        }

        workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;
        initializeUpdateQueue(workInProgress);
        var getDerivedStateFromProps = Component.getDerivedStateFromProps;

        if (typeof getDerivedStateFromProps === 'function') {
          applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, props);
        }

        adoptClassInstance(workInProgress, value);
        mountClassInstance(workInProgress, Component, props, renderLanes);
        return finishClassComponent(null, workInProgress, Component, true, hasContext, renderLanes);
      } else {
        // Proceed under the assumption that this is a function component
        workInProgress.tag = FunctionComponent;
        {
          if (workInProgress.mode & StrictMode) {
            disableLogs();

            try {
              value = renderWithHooks(null, workInProgress, Component, props, context, renderLanes);
            } finally {
              reenableLogs();
            }
          }
        }
        reconcileChildren(null, workInProgress, value, renderLanes);
        {
          validateFunctionComponentInDev(workInProgress, Component);
        }
        return workInProgress.child;
      }
    }

    function validateFunctionComponentInDev(workInProgress, Component) {
      {
        if (Component) {
          if (Component.childContextTypes) {
            error('%s(...): childContextTypes cannot be defined on a function component.', Component.displayName || Component.name || 'Component');
          }
        }

        if (workInProgress.ref !== null) {
          var info = '';
          var ownerName = getCurrentFiberOwnerNameInDevOrNull();

          if (ownerName) {
            info += '\n\nCheck the render method of `' + ownerName + '`.';
          }

          var warningKey = ownerName || workInProgress._debugID || '';
          var debugSource = workInProgress._debugSource;

          if (debugSource) {
            warningKey = debugSource.fileName + ':' + debugSource.lineNumber;
          }

          if (!didWarnAboutFunctionRefs[warningKey]) {
            didWarnAboutFunctionRefs[warningKey] = true;
            error('Function components cannot be given refs. ' + 'Attempts to access this ref will fail. ' + 'Did you mean to use React.forwardRef()?%s', info);
          }
        }

        if (typeof Component.getDerivedStateFromProps === 'function') {
          var _componentName3 = getComponentName(Component) || 'Unknown';

          if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {
            error('%s: Function components do not support getDerivedStateFromProps.', _componentName3);
            didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;
          }
        }

        if (typeof Component.contextType === 'object' && Component.contextType !== null) {
          var _componentName4 = getComponentName(Component) || 'Unknown';

          if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {
            error('%s: Function components do not support contextType.', _componentName4);
            didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;
          }
        }
      }
    }

    var SUSPENDED_MARKER = {
      dehydrated: null,
      retryLane: NoLane
    };

    function mountSuspenseOffscreenState(renderLanes) {
      return {
        baseLanes: renderLanes
      };
    }

    function updateSuspenseOffscreenState(prevOffscreenState, renderLanes) {
      return {
        baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes)
      };
    } // TODO: Probably should inline this back


    function shouldRemainOnFallback(suspenseContext, current, workInProgress, renderLanes) {
      // If we're already showing a fallback, there are cases where we need to
      // remain on that fallback regardless of whether the content has resolved.
      // For example, SuspenseList coordinates when nested content appears.
      if (current !== null) {
        var suspenseState = current.memoizedState;

        if (suspenseState === null) {
          // Currently showing content. Don't hide it, even if ForceSuspenseFallack
          // is true. More precise name might be "ForceRemainSuspenseFallback".
          // Note: This is a factoring smell. Can't remain on a fallback if there's
          // no fallback to remain on.
          return false;
        }
      } // Not currently showing content. Consult the Suspense context.


      return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
    }

    function getRemainingWorkInPrimaryTree(current, renderLanes) {
      // TODO: Should not remove render lanes that were pinged during this render
      return removeLanes(current.childLanes, renderLanes);
    }

    function updateSuspenseComponent(current, workInProgress, renderLanes) {
      var nextProps = workInProgress.pendingProps; // This is used by DevTools to force a boundary to suspend.

      {
        if (shouldSuspend(workInProgress)) {
          workInProgress.flags |= DidCapture;
        }
      }
      var suspenseContext = suspenseStackCursor.current;
      var showFallback = false;
      var didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;

      if (didSuspend || shouldRemainOnFallback(suspenseContext, current)) {
        // Something in this boundary's subtree already suspended. Switch to
        // rendering the fallback children.
        showFallback = true;
        workInProgress.flags &= ~DidCapture;
      } else {
        // Attempting the main content
        if (current === null || current.memoizedState !== null) {
          // This is a new mount or this boundary is already showing a fallback state.
          // Mark this subtree context as having at least one invisible parent that could
          // handle the fallback state.
          // Boundaries without fallbacks or should be avoided are not considered since
          // they cannot handle preferred fallback states.
          if (nextProps.fallback !== undefined && nextProps.unstable_avoidThisFallback !== true) {
            suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);
          }
        }
      }

      suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
      pushSuspenseContext(workInProgress, suspenseContext); // OK, the next part is confusing. We're about to reconcile the Suspense
      // boundary's children. This involves some custom reconcilation logic. Two
      // main reasons this is so complicated.
      //
      // First, Legacy Mode has different semantics for backwards compatibility. The
      // primary tree will commit in an inconsistent state, so when we do the
      // second pass to render the fallback, we do some exceedingly, uh, clever
      // hacks to make that not totally break. Like transferring effects and
      // deletions from hidden tree. In Concurrent Mode, it's much simpler,
      // because we bailout on the primary tree completely and leave it in its old
      // state, no effects. Same as what we do for Offscreen (except that
      // Offscreen doesn't have the first render pass).
      //
      // Second is hydration. During hydration, the Suspense fiber has a slightly
      // different layout, where the child points to a dehydrated fragment, which
      // contains the DOM rendered by the server.
      //
      // Third, even if you set all that aside, Suspense is like error boundaries in
      // that we first we try to render one tree, and if that fails, we render again
      // and switch to a different tree. Like a try/catch block. So we have to track
      // which branch we're currently rendering. Ideally we would model this using
      // a stack.

      if (current === null) {
        // Initial mount
        // If we're currently hydrating, try to hydrate this boundary.
        // But only if this has a fallback.
        if (nextProps.fallback !== undefined) {
          tryToClaimNextHydratableInstance(workInProgress); // This could've been a dehydrated suspense component.
        }

        var nextPrimaryChildren = nextProps.children;
        var nextFallbackChildren = nextProps.fallback;

        if (showFallback) {
          var fallbackFragment = mountSuspenseFallbackChildren(workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);
          var primaryChildFragment = workInProgress.child;
          primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes);
          workInProgress.memoizedState = SUSPENDED_MARKER;
          return fallbackFragment;
        } else if (typeof nextProps.unstable_expectedLoadTime === 'number') {
          // This is a CPU-bound tree. Skip this tree and show a placeholder to
          // unblock the surrounding content. Then immediately retry after the
          // initial commit.
          var _fallbackFragment = mountSuspenseFallbackChildren(workInProgress, nextPrimaryChildren, nextFallbackChildren, renderLanes);

          var _primaryChildFragment = workInProgress.child;
          _primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes);
          workInProgress.memoizedState = SUSPENDED_MARKER; // Since nothing actually suspended, there will nothing to ping this to
          // get it started back up to attempt the next item. While in terms of
          // priority this work has the same priority as this current render, it's
          // not part of the same transition once the transition has committed. If
          // it's sync, we still want to yield so that it can be painted.
          // Conceptually, this is really the same as pinging. We can use any
          // RetryLane even if it's the one currently rendering since we're leaving
          // it behind on this node.

          workInProgress.lanes = SomeRetryLane;
          {
            markSpawnedWork(SomeRetryLane);
          }
          return _fallbackFragment;
        } else {
          return mountSuspensePrimaryChildren(workInProgress, nextPrimaryChildren, renderLanes);
        }
      } else {
        // This is an update.
        // If the current fiber has a SuspenseState, that means it's already showing
        // a fallback.
        var prevState = current.memoizedState;

        if (prevState !== null) {
          if (showFallback) {
            var _nextFallbackChildren2 = nextProps.fallback;
            var _nextPrimaryChildren2 = nextProps.children;

            var _fallbackChildFragment = updateSuspenseFallbackChildren(current, workInProgress, _nextPrimaryChildren2, _nextFallbackChildren2, renderLanes);

            var _primaryChildFragment3 = workInProgress.child;
            var prevOffscreenState = current.child.memoizedState;
            _primaryChildFragment3.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);
            _primaryChildFragment3.childLanes = getRemainingWorkInPrimaryTree(current, renderLanes);
            workInProgress.memoizedState = SUSPENDED_MARKER;
            return _fallbackChildFragment;
          } else {
            var _nextPrimaryChildren3 = nextProps.children;

            var _primaryChildFragment4 = updateSuspensePrimaryChildren(current, workInProgress, _nextPrimaryChildren3, renderLanes);

            workInProgress.memoizedState = null;
            return _primaryChildFragment4;
          }
        } else {
          // The current tree is not already showing a fallback.
          if (showFallback) {
            // Timed out.
            var _nextFallbackChildren3 = nextProps.fallback;
            var _nextPrimaryChildren4 = nextProps.children;

            var _fallbackChildFragment2 = updateSuspenseFallbackChildren(current, workInProgress, _nextPrimaryChildren4, _nextFallbackChildren3, renderLanes);

            var _primaryChildFragment5 = workInProgress.child;
            var _prevOffscreenState = current.child.memoizedState;
            _primaryChildFragment5.memoizedState = _prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes) : updateSuspenseOffscreenState(_prevOffscreenState, renderLanes);
            _primaryChildFragment5.childLanes = getRemainingWorkInPrimaryTree(current, renderLanes); // Skip the primary children, and continue working on the
            // fallback children.

            workInProgress.memoizedState = SUSPENDED_MARKER;
            return _fallbackChildFragment2;
          } else {
            // Still haven't timed out. Continue rendering the children, like we
            // normally do.
            var _nextPrimaryChildren5 = nextProps.children;

            var _primaryChildFragment6 = updateSuspensePrimaryChildren(current, workInProgress, _nextPrimaryChildren5, renderLanes);

            workInProgress.memoizedState = null;
            return _primaryChildFragment6;
          }
        }
      }
    }

    function mountSuspensePrimaryChildren(workInProgress, primaryChildren, renderLanes) {
      var mode = workInProgress.mode;
      var primaryChildProps = {
        mode: 'visible',
        children: primaryChildren
      };
      var primaryChildFragment = createFiberFromOffscreen(primaryChildProps, mode, renderLanes, null);
      primaryChildFragment.return = workInProgress;
      workInProgress.child = primaryChildFragment;
      return primaryChildFragment;
    }

    function mountSuspenseFallbackChildren(workInProgress, primaryChildren, fallbackChildren, renderLanes) {
      var mode = workInProgress.mode;
      var progressedPrimaryFragment = workInProgress.child;
      var primaryChildProps = {
        mode: 'hidden',
        children: primaryChildren
      };
      var primaryChildFragment;
      var fallbackChildFragment;

      if ((mode & BlockingMode) === NoMode && progressedPrimaryFragment !== null) {
        // In legacy mode, we commit the primary tree as if it successfully
        // completed, even though it's in an inconsistent state.
        primaryChildFragment = progressedPrimaryFragment;
        primaryChildFragment.childLanes = NoLanes;
        primaryChildFragment.pendingProps = primaryChildProps;

        if (workInProgress.mode & ProfileMode) {
          // Reset the durations from the first pass so they aren't included in the
          // final amounts. This seems counterintuitive, since we're intentionally
          // not measuring part of the render phase, but this makes it match what we
          // do in Concurrent Mode.
          primaryChildFragment.actualDuration = 0;
          primaryChildFragment.actualStartTime = -1;
          primaryChildFragment.selfBaseDuration = 0;
          primaryChildFragment.treeBaseDuration = 0;
        }

        fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);
      } else {
        primaryChildFragment = createFiberFromOffscreen(primaryChildProps, mode, NoLanes, null);
        fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null);
      }

      primaryChildFragment.return = workInProgress;
      fallbackChildFragment.return = workInProgress;
      primaryChildFragment.sibling = fallbackChildFragment;
      workInProgress.child = primaryChildFragment;
      return fallbackChildFragment;
    }

    function createWorkInProgressOffscreenFiber(current, offscreenProps) {
      // The props argument to `createWorkInProgress` is `any` typed, so we use this
      // wrapper function to constrain it.
      return createWorkInProgress(current, offscreenProps);
    }

    function updateSuspensePrimaryChildren(current, workInProgress, primaryChildren, renderLanes) {
      var currentPrimaryChildFragment = current.child;
      var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
      var primaryChildFragment = createWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {
        mode: 'visible',
        children: primaryChildren
      });

      if ((workInProgress.mode & BlockingMode) === NoMode) {
        primaryChildFragment.lanes = renderLanes;
      }

      primaryChildFragment.return = workInProgress;
      primaryChildFragment.sibling = null;

      if (currentFallbackChildFragment !== null) {
        // Delete the fallback child fragment
        currentFallbackChildFragment.nextEffect = null;
        currentFallbackChildFragment.flags = Deletion;
        workInProgress.firstEffect = workInProgress.lastEffect = currentFallbackChildFragment;
      }

      workInProgress.child = primaryChildFragment;
      return primaryChildFragment;
    }

    function updateSuspenseFallbackChildren(current, workInProgress, primaryChildren, fallbackChildren, renderLanes) {
      var mode = workInProgress.mode;
      var currentPrimaryChildFragment = current.child;
      var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
      var primaryChildProps = {
        mode: 'hidden',
        children: primaryChildren
      };
      var primaryChildFragment;

      if ( // In legacy mode, we commit the primary tree as if it successfully
      // completed, even though it's in an inconsistent state.
      (mode & BlockingMode) === NoMode && // Make sure we're on the second pass, i.e. the primary child fragment was
      // already cloned. In legacy mode, the only case where this isn't true is
      // when DevTools forces us to display a fallback; we skip the first render
      // pass entirely and go straight to rendering the fallback. (In Concurrent
      // Mode, SuspenseList can also trigger this scenario, but this is a legacy-
      // only codepath.)
      workInProgress.child !== currentPrimaryChildFragment) {
        var progressedPrimaryFragment = workInProgress.child;
        primaryChildFragment = progressedPrimaryFragment;
        primaryChildFragment.childLanes = NoLanes;
        primaryChildFragment.pendingProps = primaryChildProps;

        if (workInProgress.mode & ProfileMode) {
          // Reset the durations from the first pass so they aren't included in the
          // final amounts. This seems counterintuitive, since we're intentionally
          // not measuring part of the render phase, but this makes it match what we
          // do in Concurrent Mode.
          primaryChildFragment.actualDuration = 0;
          primaryChildFragment.actualStartTime = -1;
          primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration;
          primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration;
        } // The fallback fiber was added as a deletion effect during the first pass.
        // However, since we're going to remain on the fallback, we no longer want
        // to delete it. So we need to remove it from the list. Deletions are stored
        // on the same list as effects. We want to keep the effects from the primary
        // tree. So we copy the primary child fragment's effect list, which does not
        // include the fallback deletion effect.


        var progressedLastEffect = primaryChildFragment.lastEffect;

        if (progressedLastEffect !== null) {
          workInProgress.firstEffect = primaryChildFragment.firstEffect;
          workInProgress.lastEffect = progressedLastEffect;
          progressedLastEffect.nextEffect = null;
        } else {
          // TODO: Reset this somewhere else? Lol legacy mode is so weird.
          workInProgress.firstEffect = workInProgress.lastEffect = null;
        }
      } else {
        primaryChildFragment = createWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps);
      }

      var fallbackChildFragment;

      if (currentFallbackChildFragment !== null) {
        fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren);
      } else {
        fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes, null); // Needs a placement effect because the parent (the Suspense boundary) already
        // mounted but this is a new fiber.

        fallbackChildFragment.flags |= Placement;
      }

      fallbackChildFragment.return = workInProgress;
      primaryChildFragment.return = workInProgress;
      primaryChildFragment.sibling = fallbackChildFragment;
      workInProgress.child = primaryChildFragment;
      return fallbackChildFragment;
    }

    function scheduleWorkOnFiber(fiber, renderLanes) {
      fiber.lanes = mergeLanes(fiber.lanes, renderLanes);
      var alternate = fiber.alternate;

      if (alternate !== null) {
        alternate.lanes = mergeLanes(alternate.lanes, renderLanes);
      }

      scheduleWorkOnParentPath(fiber.return, renderLanes);
    }

    function propagateSuspenseContextChange(workInProgress, firstChild, renderLanes) {
      // Mark any Suspense boundaries with fallbacks as having work to do.
      // If they were previously forced into fallbacks, they may now be able
      // to unblock.
      var node = firstChild;

      while (node !== null) {
        if (node.tag === SuspenseComponent) {
          var state = node.memoizedState;

          if (state !== null) {
            scheduleWorkOnFiber(node, renderLanes);
          }
        } else if (node.tag === SuspenseListComponent) {
          // If the tail is hidden there might not be an Suspense boundaries
          // to schedule work on. In this case we have to schedule it on the
          // list itself.
          // We don't have to traverse to the children of the list since
          // the list will propagate the change when it rerenders.
          scheduleWorkOnFiber(node, renderLanes);
        } else if (node.child !== null) {
          node.child.return = node;
          node = node.child;
          continue;
        }

        if (node === workInProgress) {
          return;
        }

        while (node.sibling === null) {
          if (node.return === null || node.return === workInProgress) {
            return;
          }

          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }
    }

    function findLastContentRow(firstChild) {
      // This is going to find the last row among these children that is already
      // showing content on the screen, as opposed to being in fallback state or
      // new. If a row has multiple Suspense boundaries, any of them being in the
      // fallback state, counts as the whole row being in a fallback state.
      // Note that the "rows" will be workInProgress, but any nested children
      // will still be current since we haven't rendered them yet. The mounted
      // order may not be the same as the new order. We use the new order.
      var row = firstChild;
      var lastContentRow = null;

      while (row !== null) {
        var currentRow = row.alternate; // New rows can't be content rows.

        if (currentRow !== null && findFirstSuspended(currentRow) === null) {
          lastContentRow = row;
        }

        row = row.sibling;
      }

      return lastContentRow;
    }

    function validateRevealOrder(revealOrder) {
      {
        if (revealOrder !== undefined && revealOrder !== 'forwards' && revealOrder !== 'backwards' && revealOrder !== 'together' && !didWarnAboutRevealOrder[revealOrder]) {
          didWarnAboutRevealOrder[revealOrder] = true;

          if (typeof revealOrder === 'string') {
            switch (revealOrder.toLowerCase()) {
              case 'together':
              case 'forwards':
              case 'backwards':
                {
                  error('"%s" is not a valid value for revealOrder on <SuspenseList />. ' + 'Use lowercase "%s" instead.', revealOrder, revealOrder.toLowerCase());
                  break;
                }

              case 'forward':
              case 'backward':
                {
                  error('"%s" is not a valid value for revealOrder on <SuspenseList />. ' + 'React uses the -s suffix in the spelling. Use "%ss" instead.', revealOrder, revealOrder.toLowerCase());
                  break;
                }

              default:
                error('"%s" is not a supported revealOrder on <SuspenseList />. ' + 'Did you mean "together", "forwards" or "backwards"?', revealOrder);
                break;
            }
          } else {
            error('%s is not a supported value for revealOrder on <SuspenseList />. ' + 'Did you mean "together", "forwards" or "backwards"?', revealOrder);
          }
        }
      }
    }

    function validateTailOptions(tailMode, revealOrder) {
      {
        if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {
          if (tailMode !== 'collapsed' && tailMode !== 'hidden') {
            didWarnAboutTailOptions[tailMode] = true;
            error('"%s" is not a supported value for tail on <SuspenseList />. ' + 'Did you mean "collapsed" or "hidden"?', tailMode);
          } else if (revealOrder !== 'forwards' && revealOrder !== 'backwards') {
            didWarnAboutTailOptions[tailMode] = true;
            error('<SuspenseList tail="%s" /> is only valid if revealOrder is ' + '"forwards" or "backwards". ' + 'Did you mean to specify revealOrder="forwards"?', tailMode);
          }
        }
      }
    }

    function validateSuspenseListNestedChild(childSlot, index) {
      {
        var isArray = Array.isArray(childSlot);
        var isIterable = !isArray && typeof getIteratorFn(childSlot) === 'function';

        if (isArray || isIterable) {
          var type = isArray ? 'array' : 'iterable';
          error('A nested %s was passed to row #%s in <SuspenseList />. Wrap it in ' + 'an additional SuspenseList to configure its revealOrder: ' + '<SuspenseList revealOrder=...> ... ' + '<SuspenseList revealOrder=...>{%s}</SuspenseList> ... ' + '</SuspenseList>', type, index, type);
          return false;
        }
      }
      return true;
    }

    function validateSuspenseListChildren(children, revealOrder) {
      {
        if ((revealOrder === 'forwards' || revealOrder === 'backwards') && children !== undefined && children !== null && children !== false) {
          if (Array.isArray(children)) {
            for (var i = 0; i < children.length; i++) {
              if (!validateSuspenseListNestedChild(children[i], i)) {
                return;
              }
            }
          } else {
            var iteratorFn = getIteratorFn(children);

            if (typeof iteratorFn === 'function') {
              var childrenIterator = iteratorFn.call(children);

              if (childrenIterator) {
                var step = childrenIterator.next();
                var _i = 0;

                for (; !step.done; step = childrenIterator.next()) {
                  if (!validateSuspenseListNestedChild(step.value, _i)) {
                    return;
                  }

                  _i++;
                }
              }
            } else {
              error('A single row was passed to a <SuspenseList revealOrder="%s" />. ' + 'This is not useful since it needs multiple rows. ' + 'Did you mean to pass multiple children or an array?', revealOrder);
            }
          }
        }
      }
    }

    function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode, lastEffectBeforeRendering) {
      var renderState = workInProgress.memoizedState;

      if (renderState === null) {
        workInProgress.memoizedState = {
          isBackwards: isBackwards,
          rendering: null,
          renderingStartTime: 0,
          last: lastContentRow,
          tail: tail,
          tailMode: tailMode,
          lastEffect: lastEffectBeforeRendering
        };
      } else {
        // We can reuse the existing object from previous renders.
        renderState.isBackwards = isBackwards;
        renderState.rendering = null;
        renderState.renderingStartTime = 0;
        renderState.last = lastContentRow;
        renderState.tail = tail;
        renderState.tailMode = tailMode;
        renderState.lastEffect = lastEffectBeforeRendering;
      }
    } // This can end up rendering this component multiple passes.
    // The first pass splits the children fibers into two sets. A head and tail.
    // We first render the head. If anything is in fallback state, we do another
    // pass through beginWork to rerender all children (including the tail) with
    // the force suspend context. If the first render didn't have anything in
    // in fallback state. Then we render each row in the tail one-by-one.
    // That happens in the completeWork phase without going back to beginWork.


    function updateSuspenseListComponent(current, workInProgress, renderLanes) {
      var nextProps = workInProgress.pendingProps;
      var revealOrder = nextProps.revealOrder;
      var tailMode = nextProps.tail;
      var newChildren = nextProps.children;
      validateRevealOrder(revealOrder);
      validateTailOptions(tailMode, revealOrder);
      validateSuspenseListChildren(newChildren, revealOrder);
      reconcileChildren(current, workInProgress, newChildren, renderLanes);
      var suspenseContext = suspenseStackCursor.current;
      var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);

      if (shouldForceFallback) {
        suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
        workInProgress.flags |= DidCapture;
      } else {
        var didSuspendBefore = current !== null && (current.flags & DidCapture) !== NoFlags;

        if (didSuspendBefore) {
          // If we previously forced a fallback, we need to schedule work
          // on any nested boundaries to let them know to try to render
          // again. This is the same as context updating.
          propagateSuspenseContextChange(workInProgress, workInProgress.child, renderLanes);
        }

        suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
      }

      pushSuspenseContext(workInProgress, suspenseContext);

      if ((workInProgress.mode & BlockingMode) === NoMode) {
        // In legacy mode, SuspenseList doesn't work so we just
        // use make it a noop by treating it as the default revealOrder.
        workInProgress.memoizedState = null;
      } else {
        switch (revealOrder) {
          case 'forwards':
            {
              var lastContentRow = findLastContentRow(workInProgress.child);
              var tail;

              if (lastContentRow === null) {
                // The whole list is part of the tail.
                // TODO: We could fast path by just rendering the tail now.
                tail = workInProgress.child;
                workInProgress.child = null;
              } else {
                // Disconnect the tail rows after the content row.
                // We're going to render them separately later.
                tail = lastContentRow.sibling;
                lastContentRow.sibling = null;
              }

              initSuspenseListRenderState(workInProgress, false, // isBackwards
              tail, lastContentRow, tailMode, workInProgress.lastEffect);
              break;
            }

          case 'backwards':
            {
              // We're going to find the first row that has existing content.
              // At the same time we're going to reverse the list of everything
              // we pass in the meantime. That's going to be our tail in reverse
              // order.
              var _tail = null;
              var row = workInProgress.child;
              workInProgress.child = null;

              while (row !== null) {
                var currentRow = row.alternate; // New rows can't be content rows.

                if (currentRow !== null && findFirstSuspended(currentRow) === null) {
                  // This is the beginning of the main content.
                  workInProgress.child = row;
                  break;
                }

                var nextRow = row.sibling;
                row.sibling = _tail;
                _tail = row;
                row = nextRow;
              } // TODO: If workInProgress.child is null, we can continue on the tail immediately.


              initSuspenseListRenderState(workInProgress, true, // isBackwards
              _tail, null, // last
              tailMode, workInProgress.lastEffect);
              break;
            }

          case 'together':
            {
              initSuspenseListRenderState(workInProgress, false, // isBackwards
              null, // tail
              null, // last
              undefined, workInProgress.lastEffect);
              break;
            }

          default:
            {
              // The default reveal order is the same as not having
              // a boundary.
              workInProgress.memoizedState = null;
            }
        }
      }

      return workInProgress.child;
    }

    function updatePortalComponent(current, workInProgress, renderLanes) {
      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
      var nextChildren = workInProgress.pendingProps;

      if (current === null) {
        // Portals are special because we don't append the children during mount
        // but at commit. Therefore we need to track insertions which the normal
        // flow doesn't do during mount. This doesn't happen at the root because
        // the root always starts with a "current" with a null child.
        // TODO: Consider unifying this with how the root works.
        workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderLanes);
      } else {
        reconcileChildren(current, workInProgress, nextChildren, renderLanes);
      }

      return workInProgress.child;
    }

    var hasWarnedAboutUsingNoValuePropOnContextProvider = false;

    function updateContextProvider(current, workInProgress, renderLanes) {
      var providerType = workInProgress.type;
      var context = providerType._context;
      var newProps = workInProgress.pendingProps;
      var oldProps = workInProgress.memoizedProps;
      var newValue = newProps.value;
      {
        if (!('value' in newProps)) {
          if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {
            hasWarnedAboutUsingNoValuePropOnContextProvider = true;
            error('The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?');
          }
        }

        var providerPropTypes = workInProgress.type.propTypes;

        if (providerPropTypes) {
          checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider');
        }
      }
      pushProvider(workInProgress, newValue);

      if (oldProps !== null) {
        var oldValue = oldProps.value;
        var changedBits = calculateChangedBits(context, newValue, oldValue);

        if (changedBits === 0) {
          // No change. Bailout early if children are the same.
          if (oldProps.children === newProps.children && !hasContextChanged()) {
            return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
          }
        } else {
          // The context value changed. Search for matching consumers and schedule
          // them to update.
          propagateContextChange(workInProgress, context, changedBits, renderLanes);
        }
      }

      var newChildren = newProps.children;
      reconcileChildren(current, workInProgress, newChildren, renderLanes);
      return workInProgress.child;
    }

    var hasWarnedAboutUsingContextAsConsumer = false;

    function updateContextConsumer(current, workInProgress, renderLanes) {
      var context = workInProgress.type; // The logic below for Context differs depending on PROD or DEV mode. In
      // DEV mode, we create a separate object for Context.Consumer that acts
      // like a proxy to Context. This proxy object adds unnecessary code in PROD
      // so we use the old behaviour (Context.Consumer references Context) to
      // reduce size and overhead. The separate object references context via
      // a property called "_context", which also gives us the ability to check
      // in DEV mode if this property exists or not and warn if it does not.

      {
        if (context._context === undefined) {
          // This may be because it's a Context (rather than a Consumer).
          // Or it may be because it's older React where they're the same thing.
          // We only want to warn if we're sure it's a new React.
          if (context !== context.Consumer) {
            if (!hasWarnedAboutUsingContextAsConsumer) {
              hasWarnedAboutUsingContextAsConsumer = true;
              error('Rendering <Context> directly is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
            }
          }
        } else {
          context = context._context;
        }
      }
      var newProps = workInProgress.pendingProps;
      var render = newProps.children;
      {
        if (typeof render !== 'function') {
          error('A context consumer was rendered with multiple children, or a child ' + "that isn't a function. A context consumer expects a single child " + 'that is a function. If you did pass a function, make sure there ' + 'is no trailing or leading whitespace around it.');
        }
      }
      prepareToReadContext(workInProgress, renderLanes);
      var newValue = readContext(context, newProps.unstable_observedBits);
      var newChildren;
      {
        ReactCurrentOwner$1.current = workInProgress;
        setIsRendering(true);
        newChildren = render(newValue);
        setIsRendering(false);
      } // React DevTools reads this flag.

      workInProgress.flags |= PerformedWork;
      reconcileChildren(current, workInProgress, newChildren, renderLanes);
      return workInProgress.child;
    }

    function markWorkInProgressReceivedUpdate() {
      didReceiveUpdate = true;
    }

    function bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes) {
      if (current !== null) {
        // Reuse previous dependencies
        workInProgress.dependencies = current.dependencies;
      }

      {
        // Don't update "base" render times for bailouts.
        stopProfilerTimerIfRunning();
      }
      markSkippedUpdateLanes(workInProgress.lanes); // Check if the children have any pending work.

      if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {
        // The children don't have any work either. We can skip them.
        // TODO: Once we add back resuming, we should check if the children are
        // a work-in-progress set. If so, we need to transfer their effects.
        return null;
      } else {
        // This fiber doesn't have work, but its subtree does. Clone the child
        // fibers and continue.
        cloneChildFibers(current, workInProgress);
        return workInProgress.child;
      }
    }

    function remountFiber(current, oldWorkInProgress, newWorkInProgress) {
      {
        var returnFiber = oldWorkInProgress.return;

        if (returnFiber === null) {
          throw new Error('Cannot swap the root fiber.');
        } // Disconnect from the old current.
        // It will get deleted.


        current.alternate = null;
        oldWorkInProgress.alternate = null; // Connect to the new tree.

        newWorkInProgress.index = oldWorkInProgress.index;
        newWorkInProgress.sibling = oldWorkInProgress.sibling;
        newWorkInProgress.return = oldWorkInProgress.return;
        newWorkInProgress.ref = oldWorkInProgress.ref; // Replace the child/sibling pointers above it.

        if (oldWorkInProgress === returnFiber.child) {
          returnFiber.child = newWorkInProgress;
        } else {
          var prevSibling = returnFiber.child;

          if (prevSibling === null) {
            throw new Error('Expected parent to have a child.');
          }

          while (prevSibling.sibling !== oldWorkInProgress) {
            prevSibling = prevSibling.sibling;

            if (prevSibling === null) {
              throw new Error('Expected to find the previous sibling.');
            }
          }

          prevSibling.sibling = newWorkInProgress;
        } // Delete the old fiber and place the new one.
        // Since the old fiber is disconnected, we have to schedule it manually.


        var last = returnFiber.lastEffect;

        if (last !== null) {
          last.nextEffect = current;
          returnFiber.lastEffect = current;
        } else {
          returnFiber.firstEffect = returnFiber.lastEffect = current;
        }

        current.nextEffect = null;
        current.flags = Deletion;
        newWorkInProgress.flags |= Placement; // Restart work from the new fiber.

        return newWorkInProgress;
      }
    }

    function beginWork(current, workInProgress, renderLanes) {
      var updateLanes = workInProgress.lanes;
      {
        if (workInProgress._debugNeedsRemount && current !== null) {
          // This will restart the begin phase with a new fiber.
          return remountFiber(current, workInProgress, createFiberFromTypeAndProps(workInProgress.type, workInProgress.key, workInProgress.pendingProps, workInProgress._debugOwner || null, workInProgress.mode, workInProgress.lanes));
        }
      }

      if (current !== null) {
        var oldProps = current.memoizedProps;
        var newProps = workInProgress.pendingProps;

        if (oldProps !== newProps || hasContextChanged() || // Force a re-render if the implementation changed due to hot reload:
        workInProgress.type !== current.type) {
          // If props or context changed, mark the fiber as having performed work.
          // This may be unset if the props are determined to be equal later (memo).
          didReceiveUpdate = true;
        } else if (!includesSomeLane(renderLanes, updateLanes)) {
          didReceiveUpdate = false; // This fiber does not have any pending work. Bailout without entering
          // the begin phase. There's still some bookkeeping we that needs to be done
          // in this optimized path, mostly pushing stuff onto the stack.

          switch (workInProgress.tag) {
            case HostRoot:
              pushHostRootContext(workInProgress);
              resetHydrationState();
              break;

            case HostComponent:
              pushHostContext(workInProgress);
              break;

            case ClassComponent:
              {
                var Component = workInProgress.type;

                if (isContextProvider(Component)) {
                  pushContextProvider(workInProgress);
                }

                break;
              }

            case HostPortal:
              pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
              break;

            case ContextProvider:
              {
                var newValue = workInProgress.memoizedProps.value;
                pushProvider(workInProgress, newValue);
                break;
              }

            case Profiler:
              {
                // Profiler should only call onRender when one of its descendants actually rendered.
                var hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);

                if (hasChildWork) {
                  workInProgress.flags |= Update;
                } // Reset effect durations for the next eventual effect phase.
                // These are reset during render to allow the DevTools commit hook a chance to read them,


                var stateNode = workInProgress.stateNode;
                stateNode.effectDuration = 0;
                stateNode.passiveEffectDuration = 0;
              }
              break;

            case SuspenseComponent:
              {
                var state = workInProgress.memoizedState;

                if (state !== null) {
                  // whether to retry the primary children, or to skip over it and
                  // go straight to the fallback. Check the priority of the primary
                  // child fragment.
                  var primaryChildFragment = workInProgress.child;
                  var primaryChildLanes = primaryChildFragment.childLanes;

                  if (includesSomeLane(renderLanes, primaryChildLanes)) {
                    // The primary children have pending work. Use the normal path
                    // to attempt to render the primary children again.
                    return updateSuspenseComponent(current, workInProgress, renderLanes);
                  } else {
                    // The primary child fragment does not have pending work marked
                    // on it
                    pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // The primary children do not have pending work with sufficient
                    // priority. Bailout.

                    var child = bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);

                    if (child !== null) {
                      // The fallback children have pending work. Skip over the
                      // primary children and work on the fallback.
                      return child.sibling;
                    } else {
                      return null;
                    }
                  }
                } else {
                  pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                }

                break;
              }

            case SuspenseListComponent:
              {
                var didSuspendBefore = (current.flags & DidCapture) !== NoFlags;

                var _hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);

                if (didSuspendBefore) {
                  if (_hasChildWork) {
                    // If something was in fallback state last time, and we have all the
                    // same children then we're still in progressive loading state.
                    // Something might get unblocked by state updates or retries in the
                    // tree which will affect the tail. So we need to use the normal
                    // path to compute the correct tail.
                    return updateSuspenseListComponent(current, workInProgress, renderLanes);
                  } // If none of the children had any work, that means that none of
                  // them got retried so they'll still be blocked in the same way
                  // as before. We can fast bail out.


                  workInProgress.flags |= DidCapture;
                } // If nothing suspended before and we're rendering the same children,
                // then the tail doesn't matter. Anything new that suspends will work
                // in the "together" mode, so we can continue from the state we had.


                var renderState = workInProgress.memoizedState;

                if (renderState !== null) {
                  // Reset to the "together" mode in case we've started a different
                  // update in the past but didn't complete it.
                  renderState.rendering = null;
                  renderState.tail = null;
                  renderState.lastEffect = null;
                }

                pushSuspenseContext(workInProgress, suspenseStackCursor.current);

                if (_hasChildWork) {
                  break;
                } else {
                  // If none of the children had any work, that means that none of
                  // them got retried so they'll still be blocked in the same way
                  // as before. We can fast bail out.
                  return null;
                }
              }

            case OffscreenComponent:
            case LegacyHiddenComponent:
              {
                // Need to check if the tree still needs to be deferred. This is
                // almost identical to the logic used in the normal update path,
                // so we'll just enter that. The only difference is we'll bail out
                // at the next level instead of this one, because the child props
                // have not changed. Which is fine.
                // TODO: Probably should refactor `beginWork` to split the bailout
                // path from the normal path. I'm tempted to do a labeled break here
                // but I won't :)
                workInProgress.lanes = NoLanes;
                return updateOffscreenComponent(current, workInProgress, renderLanes);
              }
          }

          return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);
        } else {
          if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {
            // This is a special case that only exists for legacy mode.
            // See https://github.com/facebook/react/pull/19216.
            didReceiveUpdate = true;
          } else {
            // An update was scheduled on this fiber, but there are no new props
            // nor legacy context. Set this to false. If an update queue or context
            // consumer produces a changed value, it will set this to true. Otherwise,
            // the component will assume the children have not changed and bail out.
            didReceiveUpdate = false;
          }
        }
      } else {
        didReceiveUpdate = false;
      } // Before entering the begin phase, clear pending update priority.
      // TODO: This assumes that we're about to evaluate the component and process
      // the update queue. However, there's an exception: SimpleMemoComponent
      // sometimes bails out later in the begin phase. This indicates that we should
      // move this assignment out of the common path and into each branch.


      workInProgress.lanes = NoLanes;

      switch (workInProgress.tag) {
        case IndeterminateComponent:
          {
            return mountIndeterminateComponent(current, workInProgress, workInProgress.type, renderLanes);
          }

        case LazyComponent:
          {
            var elementType = workInProgress.elementType;
            return mountLazyComponent(current, workInProgress, elementType, updateLanes, renderLanes);
          }

        case FunctionComponent:
          {
            var _Component = workInProgress.type;
            var unresolvedProps = workInProgress.pendingProps;
            var resolvedProps = workInProgress.elementType === _Component ? unresolvedProps : resolveDefaultProps(_Component, unresolvedProps);
            return updateFunctionComponent(current, workInProgress, _Component, resolvedProps, renderLanes);
          }

        case ClassComponent:
          {
            var _Component2 = workInProgress.type;
            var _unresolvedProps = workInProgress.pendingProps;

            var _resolvedProps = workInProgress.elementType === _Component2 ? _unresolvedProps : resolveDefaultProps(_Component2, _unresolvedProps);

            return updateClassComponent(current, workInProgress, _Component2, _resolvedProps, renderLanes);
          }

        case HostRoot:
          return updateHostRoot(current, workInProgress, renderLanes);

        case HostComponent:
          return updateHostComponent(current, workInProgress, renderLanes);

        case HostText:
          return updateHostText(current, workInProgress);

        case SuspenseComponent:
          return updateSuspenseComponent(current, workInProgress, renderLanes);

        case HostPortal:
          return updatePortalComponent(current, workInProgress, renderLanes);

        case ForwardRef:
          {
            var type = workInProgress.type;
            var _unresolvedProps2 = workInProgress.pendingProps;

            var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);

            return updateForwardRef(current, workInProgress, type, _resolvedProps2, renderLanes);
          }

        case Fragment:
          return updateFragment(current, workInProgress, renderLanes);

        case Mode:
          return updateMode(current, workInProgress, renderLanes);

        case Profiler:
          return updateProfiler(current, workInProgress, renderLanes);

        case ContextProvider:
          return updateContextProvider(current, workInProgress, renderLanes);

        case ContextConsumer:
          return updateContextConsumer(current, workInProgress, renderLanes);

        case MemoComponent:
          {
            var _type2 = workInProgress.type;
            var _unresolvedProps3 = workInProgress.pendingProps; // Resolve outer props first, then resolve inner props.

            var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);

            {
              if (workInProgress.type !== workInProgress.elementType) {
                var outerPropTypes = _type2.propTypes;

                if (outerPropTypes) {
                  checkPropTypes(outerPropTypes, _resolvedProps3, // Resolved for outer only
                  'prop', getComponentName(_type2));
                }
              }
            }
            _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
            return updateMemoComponent(current, workInProgress, _type2, _resolvedProps3, updateLanes, renderLanes);
          }

        case SimpleMemoComponent:
          {
            return updateSimpleMemoComponent(current, workInProgress, workInProgress.type, workInProgress.pendingProps, updateLanes, renderLanes);
          }

        case IncompleteClassComponent:
          {
            var _Component3 = workInProgress.type;
            var _unresolvedProps4 = workInProgress.pendingProps;

            var _resolvedProps4 = workInProgress.elementType === _Component3 ? _unresolvedProps4 : resolveDefaultProps(_Component3, _unresolvedProps4);

            return mountIncompleteClassComponent(current, workInProgress, _Component3, _resolvedProps4, renderLanes);
          }

        case SuspenseListComponent:
          {
            return updateSuspenseListComponent(current, workInProgress, renderLanes);
          }

        case FundamentalComponent:
          {
            break;
          }

        case ScopeComponent:
          {
            break;
          }

        case Block:
          {
            break;
          }

        case OffscreenComponent:
          {
            return updateOffscreenComponent(current, workInProgress, renderLanes);
          }

        case LegacyHiddenComponent:
          {
            return updateLegacyHiddenComponent(current, workInProgress, renderLanes);
          }
      }

      {
        {
          throw Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in React. Please file an issue.");
        }
      }
    }

    function markUpdate(workInProgress) {
      // Tag the fiber with an update effect. This turns a Placement into
      // a PlacementAndUpdate.
      workInProgress.flags |= Update;
    }

    function markRef$1(workInProgress) {
      workInProgress.flags |= Ref;
    }

    var appendAllChildren;
    var updateHostContainer;
    var updateHostComponent$1;
    var updateHostText$1;
    {
      // Mutation mode
      appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {
        // We only have the top Fiber that was created but we need recurse down its
        // children to find all the terminal nodes.
        var node = workInProgress.child;

        while (node !== null) {
          if (node.tag === HostComponent || node.tag === HostText) {
            appendInitialChild(parent, node.stateNode);
          } else if (node.tag === HostPortal) ;else if (node.child !== null) {
            node.child.return = node;
            node = node.child;
            continue;
          }

          if (node === workInProgress) {
            return;
          }

          while (node.sibling === null) {
            if (node.return === null || node.return === workInProgress) {
              return;
            }

            node = node.return;
          }

          node.sibling.return = node.return;
          node = node.sibling;
        }
      };

      updateHostContainer = function (workInProgress) {// Noop
      };

      updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {
        // If we have an alternate, that means this is an update and we need to
        // schedule a side-effect to do the updates.
        var oldProps = current.memoizedProps;

        if (oldProps === newProps) {
          // In mutation mode, this is sufficient for a bailout because
          // we won't touch this node even if children changed.
          return;
        } // If we get updated because one of our children updated, we don't
        // have newProps so we'll have to reuse them.
        // TODO: Split the update API as separate for the props vs. children.
        // Even better would be if children weren't special cased at all tho.


        var instance = workInProgress.stateNode;
        var currentHostContext = getHostContext(); // TODO: Experiencing an error where oldProps is null. Suggests a host
        // component is hitting the resume path. Figure out why. Possibly
        // related to `hidden`.

        var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext); // TODO: Type this specific to this type of component.

        workInProgress.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
        // is a new ref we mark this as an update. All the work is done in commitWork.

        if (updatePayload) {
          markUpdate(workInProgress);
        }
      };

      updateHostText$1 = function (current, workInProgress, oldText, newText) {
        // If the text differs, mark it as an update. All the work in done in commitWork.
        if (oldText !== newText) {
          markUpdate(workInProgress);
        }
      };
    }

    function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
      if (getIsHydrating()) {
        // If we're hydrating, we should consume as many items as we can
        // so we don't leave any behind.
        return;
      }

      switch (renderState.tailMode) {
        case 'hidden':
          {
            // Any insertions at the end of the tail list after this point
            // should be invisible. If there are already mounted boundaries
            // anything before them are not considered for collapsing.
            // Therefore we need to go through the whole tail to find if
            // there are any.
            var tailNode = renderState.tail;
            var lastTailNode = null;

            while (tailNode !== null) {
              if (tailNode.alternate !== null) {
                lastTailNode = tailNode;
              }

              tailNode = tailNode.sibling;
            } // Next we're simply going to delete all insertions after the
            // last rendered item.


            if (lastTailNode === null) {
              // All remaining items in the tail are insertions.
              renderState.tail = null;
            } else {
              // Detach the insertion after the last node that was already
              // inserted.
              lastTailNode.sibling = null;
            }

            break;
          }

        case 'collapsed':
          {
            // Any insertions at the end of the tail list after this point
            // should be invisible. If there are already mounted boundaries
            // anything before them are not considered for collapsing.
            // Therefore we need to go through the whole tail to find if
            // there are any.
            var _tailNode = renderState.tail;
            var _lastTailNode = null;

            while (_tailNode !== null) {
              if (_tailNode.alternate !== null) {
                _lastTailNode = _tailNode;
              }

              _tailNode = _tailNode.sibling;
            } // Next we're simply going to delete all insertions after the
            // last rendered item.


            if (_lastTailNode === null) {
              // All remaining items in the tail are insertions.
              if (!hasRenderedATailFallback && renderState.tail !== null) {
                // We suspended during the head. We want to show at least one
                // row at the tail. So we'll keep on and cut off the rest.
                renderState.tail.sibling = null;
              } else {
                renderState.tail = null;
              }
            } else {
              // Detach the insertion after the last node that was already
              // inserted.
              _lastTailNode.sibling = null;
            }

            break;
          }
      }
    }

    function completeWork(current, workInProgress, renderLanes) {
      var newProps = workInProgress.pendingProps;

      switch (workInProgress.tag) {
        case IndeterminateComponent:
        case LazyComponent:
        case SimpleMemoComponent:
        case FunctionComponent:
        case ForwardRef:
        case Fragment:
        case Mode:
        case Profiler:
        case ContextConsumer:
        case MemoComponent:
          return null;

        case ClassComponent:
          {
            var Component = workInProgress.type;

            if (isContextProvider(Component)) {
              popContext(workInProgress);
            }

            return null;
          }

        case HostRoot:
          {
            popHostContainer(workInProgress);
            popTopLevelContextObject(workInProgress);
            resetWorkInProgressVersions();
            var fiberRoot = workInProgress.stateNode;

            if (fiberRoot.pendingContext) {
              fiberRoot.context = fiberRoot.pendingContext;
              fiberRoot.pendingContext = null;
            }

            if (current === null || current.child === null) {
              // If we hydrated, pop so that we can delete any remaining children
              // that weren't hydrated.
              var wasHydrated = popHydrationState(workInProgress);

              if (wasHydrated) {
                // If we hydrated, then we'll need to schedule an update for
                // the commit side-effects on the root.
                markUpdate(workInProgress);
              } else if (!fiberRoot.hydrate) {
                // Schedule an effect to clear this container at the start of the next commit.
                // This handles the case of React rendering into a container with previous children.
                // It's also safe to do for updates too, because current.child would only be null
                // if the previous render was null (so the the container would already be empty).
                workInProgress.flags |= Snapshot;
              }
            }

            updateHostContainer(workInProgress);
            return null;
          }

        case HostComponent:
          {
            popHostContext(workInProgress);
            var rootContainerInstance = getRootHostContainer();
            var type = workInProgress.type;

            if (current !== null && workInProgress.stateNode != null) {
              updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);

              if (current.ref !== workInProgress.ref) {
                markRef$1(workInProgress);
              }
            } else {
              if (!newProps) {
                if (!(workInProgress.stateNode !== null)) {
                  {
                    throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                  }
                } // This can happen when we abort work.


                return null;
              }

              var currentHostContext = getHostContext(); // TODO: Move createInstance to beginWork and keep it on a context
              // "stack" as the parent. Then append children as we go in beginWork
              // or completeWork depending on whether we want to add them top->down or
              // bottom->up. Top->down is faster in IE11.

              var _wasHydrated = popHydrationState(workInProgress);

              if (_wasHydrated) {
                // TODO: Move this and createInstance step into the beginPhase
                // to consolidate.
                if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, currentHostContext)) {
                  // If changes to the hydrated node need to be applied at the
                  // commit-phase we mark this as such.
                  markUpdate(workInProgress);
                }
              } else {
                var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);
                appendAllChildren(instance, workInProgress, false, false);
                workInProgress.stateNode = instance; // Certain renderers require commit-time effects for initial mount.
                // (eg DOM renderer supports auto-focus for certain elements).
                // Make sure such renderers get scheduled for later work.

                if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance)) {
                  markUpdate(workInProgress);
                }
              }

              if (workInProgress.ref !== null) {
                // If there is a ref on a host node we need to schedule a callback
                markRef$1(workInProgress);
              }
            }

            return null;
          }

        case HostText:
          {
            var newText = newProps;

            if (current && workInProgress.stateNode != null) {
              var oldText = current.memoizedProps; // If we have an alternate, that means this is an update and we need
              // to schedule a side-effect to do the updates.

              updateHostText$1(current, workInProgress, oldText, newText);
            } else {
              if (typeof newText !== 'string') {
                if (!(workInProgress.stateNode !== null)) {
                  {
                    throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                  }
                } // This can happen when we abort work.

              }

              var _rootContainerInstance = getRootHostContainer();

              var _currentHostContext = getHostContext();

              var _wasHydrated2 = popHydrationState(workInProgress);

              if (_wasHydrated2) {
                if (prepareToHydrateHostTextInstance(workInProgress)) {
                  markUpdate(workInProgress);
                }
              } else {
                workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);
              }
            }

            return null;
          }

        case SuspenseComponent:
          {
            popSuspenseContext(workInProgress);
            var nextState = workInProgress.memoizedState;

            if ((workInProgress.flags & DidCapture) !== NoFlags) {
              // Something suspended. Re-render with the fallback children.
              workInProgress.lanes = renderLanes; // Do not reset the effect list.

              if ((workInProgress.mode & ProfileMode) !== NoMode) {
                transferActualDuration(workInProgress);
              }

              return workInProgress;
            }

            var nextDidTimeout = nextState !== null;
            var prevDidTimeout = false;

            if (current === null) {
              if (workInProgress.memoizedProps.fallback !== undefined) {
                popHydrationState(workInProgress);
              }
            } else {
              var prevState = current.memoizedState;
              prevDidTimeout = prevState !== null;
            }

            if (nextDidTimeout && !prevDidTimeout) {
              // If this subtreee is running in blocking mode we can suspend,
              // otherwise we won't suspend.
              // TODO: This will still suspend a synchronous tree if anything
              // in the concurrent tree already suspended during this render.
              // This is a known bug.
              if ((workInProgress.mode & BlockingMode) !== NoMode) {
                // TODO: Move this back to throwException because this is too late
                // if this is a large tree which is common for initial loads. We
                // don't know if we should restart a render or not until we get
                // this marker, and this is too late.
                // If this render already had a ping or lower pri updates,
                // and this is the first time we know we're going to suspend we
                // should be able to immediately restart from within throwException.
                var hasInvisibleChildContext = current === null && workInProgress.memoizedProps.unstable_avoidThisFallback !== true;

                if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) {
                  // If this was in an invisible tree or a new render, then showing
                  // this boundary is ok.
                  renderDidSuspend();
                } else {
                  // Otherwise, we're going to have to hide content so we should
                  // suspend for longer if possible.
                  renderDidSuspendDelayIfPossible();
                }
              }
            }

            {
              // TODO: Only schedule updates if these values are non equal, i.e. it changed.
              if (nextDidTimeout || prevDidTimeout) {
                // If this boundary just timed out, schedule an effect to attach a
                // retry listener to the promise. This flag is also used to hide the
                // primary children. In mutation mode, we also need the flag to
                // *unhide* children that were previously hidden, so check if this
                // is currently timed out, too.
                workInProgress.flags |= Update;
              }
            }
            return null;
          }

        case HostPortal:
          popHostContainer(workInProgress);
          updateHostContainer(workInProgress);

          if (current === null) {
            preparePortalMount(workInProgress.stateNode.containerInfo);
          }

          return null;

        case ContextProvider:
          // Pop provider fiber
          popProvider(workInProgress);
          return null;

        case IncompleteClassComponent:
          {
            // Same as class component case. I put it down here so that the tags are
            // sequential to ensure this switch is compiled to a jump table.
            var _Component = workInProgress.type;

            if (isContextProvider(_Component)) {
              popContext(workInProgress);
            }

            return null;
          }

        case SuspenseListComponent:
          {
            popSuspenseContext(workInProgress);
            var renderState = workInProgress.memoizedState;

            if (renderState === null) {
              // We're running in the default, "independent" mode.
              // We don't do anything in this mode.
              return null;
            }

            var didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;
            var renderedTail = renderState.rendering;

            if (renderedTail === null) {
              // We just rendered the head.
              if (!didSuspendAlready) {
                // This is the first pass. We need to figure out if anything is still
                // suspended in the rendered set.
                // If new content unsuspended, but there's still some content that
                // didn't. Then we need to do a second pass that forces everything
                // to keep showing their fallbacks.
                // We might be suspended if something in this render pass suspended, or
                // something in the previous committed pass suspended. Otherwise,
                // there's no chance so we can skip the expensive call to
                // findFirstSuspended.
                var cannotBeSuspended = renderHasNotSuspendedYet() && (current === null || (current.flags & DidCapture) === NoFlags);

                if (!cannotBeSuspended) {
                  var row = workInProgress.child;

                  while (row !== null) {
                    var suspended = findFirstSuspended(row);

                    if (suspended !== null) {
                      didSuspendAlready = true;
                      workInProgress.flags |= DidCapture;
                      cutOffTailIfNeeded(renderState, false); // If this is a newly suspended tree, it might not get committed as
                      // part of the second pass. In that case nothing will subscribe to
                      // its thennables. Instead, we'll transfer its thennables to the
                      // SuspenseList so that it can retry if they resolve.
                      // There might be multiple of these in the list but since we're
                      // going to wait for all of them anyway, it doesn't really matter
                      // which ones gets to ping. In theory we could get clever and keep
                      // track of how many dependencies remain but it gets tricky because
                      // in the meantime, we can add/remove/change items and dependencies.
                      // We might bail out of the loop before finding any but that
                      // doesn't matter since that means that the other boundaries that
                      // we did find already has their listeners attached.

                      var newThennables = suspended.updateQueue;

                      if (newThennables !== null) {
                        workInProgress.updateQueue = newThennables;
                        workInProgress.flags |= Update;
                      } // Rerender the whole list, but this time, we'll force fallbacks
                      // to stay in place.
                      // Reset the effect list before doing the second pass since that's now invalid.


                      if (renderState.lastEffect === null) {
                        workInProgress.firstEffect = null;
                      }

                      workInProgress.lastEffect = renderState.lastEffect; // Reset the child fibers to their original state.

                      resetChildFibers(workInProgress, renderLanes); // Set up the Suspense Context to force suspense and immediately
                      // rerender the children.

                      pushSuspenseContext(workInProgress, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback));
                      return workInProgress.child;
                    }

                    row = row.sibling;
                  }
                }

                if (renderState.tail !== null && now() > getRenderTargetTime()) {
                  // We have already passed our CPU deadline but we still have rows
                  // left in the tail. We'll just give up further attempts to render
                  // the main content and only render fallbacks.
                  workInProgress.flags |= DidCapture;
                  didSuspendAlready = true;
                  cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this
                  // to get it started back up to attempt the next item. While in terms
                  // of priority this work has the same priority as this current render,
                  // it's not part of the same transition once the transition has
                  // committed. If it's sync, we still want to yield so that it can be
                  // painted. Conceptually, this is really the same as pinging.
                  // We can use any RetryLane even if it's the one currently rendering
                  // since we're leaving it behind on this node.

                  workInProgress.lanes = SomeRetryLane;
                  {
                    markSpawnedWork(SomeRetryLane);
                  }
                }
              } else {
                cutOffTailIfNeeded(renderState, false);
              } // Next we're going to render the tail.

            } else {
              // Append the rendered row to the child list.
              if (!didSuspendAlready) {
                var _suspended = findFirstSuspended(renderedTail);

                if (_suspended !== null) {
                  workInProgress.flags |= DidCapture;
                  didSuspendAlready = true; // Ensure we transfer the update queue to the parent so that it doesn't
                  // get lost if this row ends up dropped during a second pass.

                  var _newThennables = _suspended.updateQueue;

                  if (_newThennables !== null) {
                    workInProgress.updateQueue = _newThennables;
                    workInProgress.flags |= Update;
                  }

                  cutOffTailIfNeeded(renderState, true); // This might have been modified.

                  if (renderState.tail === null && renderState.tailMode === 'hidden' && !renderedTail.alternate && !getIsHydrating() // We don't cut it if we're hydrating.
                  ) {
                    // We need to delete the row we just rendered.
                    // Reset the effect list to what it was before we rendered this
                    // child. The nested children have already appended themselves.
                    var lastEffect = workInProgress.lastEffect = renderState.lastEffect; // Remove any effects that were appended after this point.

                    if (lastEffect !== null) {
                      lastEffect.nextEffect = null;
                    } // We're done.


                    return null;
                  }
                } else if ( // The time it took to render last row is greater than the remaining
                // time we have to render. So rendering one more row would likely
                // exceed it.
                now() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes !== OffscreenLane) {
                  // We have now passed our CPU deadline and we'll just give up further
                  // attempts to render the main content and only render fallbacks.
                  // The assumption is that this is usually faster.
                  workInProgress.flags |= DidCapture;
                  didSuspendAlready = true;
                  cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this
                  // to get it started back up to attempt the next item. While in terms
                  // of priority this work has the same priority as this current render,
                  // it's not part of the same transition once the transition has
                  // committed. If it's sync, we still want to yield so that it can be
                  // painted. Conceptually, this is really the same as pinging.
                  // We can use any RetryLane even if it's the one currently rendering
                  // since we're leaving it behind on this node.

                  workInProgress.lanes = SomeRetryLane;
                  {
                    markSpawnedWork(SomeRetryLane);
                  }
                }
              }

              if (renderState.isBackwards) {
                // The effect list of the backwards tail will have been added
                // to the end. This breaks the guarantee that life-cycles fire in
                // sibling order but that isn't a strong guarantee promised by React.
                // Especially since these might also just pop in during future commits.
                // Append to the beginning of the list.
                renderedTail.sibling = workInProgress.child;
                workInProgress.child = renderedTail;
              } else {
                var previousSibling = renderState.last;

                if (previousSibling !== null) {
                  previousSibling.sibling = renderedTail;
                } else {
                  workInProgress.child = renderedTail;
                }

                renderState.last = renderedTail;
              }
            }

            if (renderState.tail !== null) {
              // We still have tail rows to render.
              // Pop a row.
              var next = renderState.tail;
              renderState.rendering = next;
              renderState.tail = next.sibling;
              renderState.lastEffect = workInProgress.lastEffect;
              renderState.renderingStartTime = now();
              next.sibling = null; // Restore the context.
              // TODO: We can probably just avoid popping it instead and only
              // setting it the first time we go from not suspended to suspended.

              var suspenseContext = suspenseStackCursor.current;

              if (didSuspendAlready) {
                suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
              } else {
                suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
              }

              pushSuspenseContext(workInProgress, suspenseContext); // Do a pass over the next row.

              return next;
            }

            return null;
          }

        case FundamentalComponent:
          {
            break;
          }

        case ScopeComponent:
          {
            break;
          }

        case Block:
          break;

        case OffscreenComponent:
        case LegacyHiddenComponent:
          {
            popRenderLanes(workInProgress);

            if (current !== null) {
              var _nextState = workInProgress.memoizedState;
              var _prevState = current.memoizedState;
              var prevIsHidden = _prevState !== null;
              var nextIsHidden = _nextState !== null;

              if (prevIsHidden !== nextIsHidden && newProps.mode !== 'unstable-defer-without-hiding') {
                workInProgress.flags |= Update;
              }
            }

            return null;
          }
      }

      {
        {
          throw Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in React. Please file an issue.");
        }
      }
    }

    function unwindWork(workInProgress, renderLanes) {
      switch (workInProgress.tag) {
        case ClassComponent:
          {
            var Component = workInProgress.type;

            if (isContextProvider(Component)) {
              popContext(workInProgress);
            }

            var flags = workInProgress.flags;

            if (flags & ShouldCapture) {
              workInProgress.flags = flags & ~ShouldCapture | DidCapture;

              if ((workInProgress.mode & ProfileMode) !== NoMode) {
                transferActualDuration(workInProgress);
              }

              return workInProgress;
            }

            return null;
          }

        case HostRoot:
          {
            popHostContainer(workInProgress);
            popTopLevelContextObject(workInProgress);
            resetWorkInProgressVersions();
            var _flags = workInProgress.flags;

            if (!((_flags & DidCapture) === NoFlags)) {
              {
                throw Error("The root failed to unmount after an error. This is likely a bug in React. Please file an issue.");
              }
            }

            workInProgress.flags = _flags & ~ShouldCapture | DidCapture;
            return workInProgress;
          }

        case HostComponent:
          {
            // TODO: popHydrationState
            popHostContext(workInProgress);
            return null;
          }

        case SuspenseComponent:
          {
            popSuspenseContext(workInProgress);
            var _flags2 = workInProgress.flags;

            if (_flags2 & ShouldCapture) {
              workInProgress.flags = _flags2 & ~ShouldCapture | DidCapture; // Captured a suspense effect. Re-render the boundary.

              if ((workInProgress.mode & ProfileMode) !== NoMode) {
                transferActualDuration(workInProgress);
              }

              return workInProgress;
            }

            return null;
          }

        case SuspenseListComponent:
          {
            popSuspenseContext(workInProgress); // SuspenseList doesn't actually catch anything. It should've been
            // caught by a nested boundary. If not, it should bubble through.

            return null;
          }

        case HostPortal:
          popHostContainer(workInProgress);
          return null;

        case ContextProvider:
          popProvider(workInProgress);
          return null;

        case OffscreenComponent:
        case LegacyHiddenComponent:
          popRenderLanes(workInProgress);
          return null;

        default:
          return null;
      }
    }

    function unwindInterruptedWork(interruptedWork) {
      switch (interruptedWork.tag) {
        case ClassComponent:
          {
            var childContextTypes = interruptedWork.type.childContextTypes;

            if (childContextTypes !== null && childContextTypes !== undefined) {
              popContext(interruptedWork);
            }

            break;
          }

        case HostRoot:
          {
            popHostContainer(interruptedWork);
            popTopLevelContextObject(interruptedWork);
            resetWorkInProgressVersions();
            break;
          }

        case HostComponent:
          {
            popHostContext(interruptedWork);
            break;
          }

        case HostPortal:
          popHostContainer(interruptedWork);
          break;

        case SuspenseComponent:
          popSuspenseContext(interruptedWork);
          break;

        case SuspenseListComponent:
          popSuspenseContext(interruptedWork);
          break;

        case ContextProvider:
          popProvider(interruptedWork);
          break;

        case OffscreenComponent:
        case LegacyHiddenComponent:
          popRenderLanes(interruptedWork);
          break;
      }
    }

    function createCapturedValue(value, source) {
      // If the value is an error, call this function immediately after it is thrown
      // so the stack is accurate.
      return {
        value: value,
        source: source,
        stack: getStackByFiberInDevAndProd(source)
      };
    } // This module is forked in different environments.
    // By default, return `true` to log errors to the console.
    // Forks can return `false` if this isn't desirable.


    function showErrorDialog(boundary, errorInfo) {
      return true;
    }

    function logCapturedError(boundary, errorInfo) {
      try {
        var logError = showErrorDialog(boundary, errorInfo); // Allow injected showErrorDialog() to prevent default console.error logging.
        // This enables renderers like ReactNative to better manage redbox behavior.

        if (logError === false) {
          return;
        }

        var error = errorInfo.value;

        if (true) {
          var source = errorInfo.source;
          var stack = errorInfo.stack;
          var componentStack = stack !== null ? stack : ''; // Browsers support silencing uncaught errors by calling
          // `preventDefault()` in window `error` handler.
          // We record this information as an expando on the error.

          if (error != null && error._suppressLogging) {
            if (boundary.tag === ClassComponent) {
              // The error is recoverable and was silenced.
              // Ignore it and don't print the stack addendum.
              // This is handy for testing error boundaries without noise.
              return;
            } // The error is fatal. Since the silencing might have
            // been accidental, we'll surface it anyway.
            // However, the browser would have silenced the original error
            // so we'll print it first, and then print the stack addendum.


            console['error'](error); // Don't transform to our wrapper
            // For a more detailed description of this block, see:
            // https://github.com/facebook/react/pull/13384
          }

          var componentName = source ? getComponentName(source.type) : null;
          var componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component:" : 'The above error occurred in one of your React components:';
          var errorBoundaryMessage;
          var errorBoundaryName = getComponentName(boundary.type);

          if (errorBoundaryName) {
            errorBoundaryMessage = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + errorBoundaryName + ".");
          } else {
            errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\n' + 'Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.';
          }

          var combinedMessage = componentNameMessage + "\n" + componentStack + "\n\n" + ("" + errorBoundaryMessage); // In development, we provide our own message with just the component stack.
          // We don't include the original error message and JS stack because the browser
          // has already printed it. Even if the application swallows the error, it is still
          // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.

          console['error'](combinedMessage); // Don't transform to our wrapper
        } else {}
      } catch (e) {
        // This method must not throw, or React internal state will get messed up.
        // If console.error is overridden, or logCapturedError() shows a dialog that throws,
        // we want to report this error outside of the normal stack as a last resort.
        // https://github.com/facebook/react/issues/13188
        setTimeout(function () {
          throw e;
        });
      }
    }

    var PossiblyWeakMap$1 = typeof WeakMap === 'function' ? WeakMap : Map;

    function createRootErrorUpdate(fiber, errorInfo, lane) {
      var update = createUpdate(NoTimestamp, lane); // Unmount the root by rendering null.

      update.tag = CaptureUpdate; // Caution: React DevTools currently depends on this property
      // being called "element".

      update.payload = {
        element: null
      };
      var error = errorInfo.value;

      update.callback = function () {
        onUncaughtError(error);
        logCapturedError(fiber, errorInfo);
      };

      return update;
    }

    function createClassErrorUpdate(fiber, errorInfo, lane) {
      var update = createUpdate(NoTimestamp, lane);
      update.tag = CaptureUpdate;
      var getDerivedStateFromError = fiber.type.getDerivedStateFromError;

      if (typeof getDerivedStateFromError === 'function') {
        var error$1 = errorInfo.value;

        update.payload = function () {
          logCapturedError(fiber, errorInfo);
          return getDerivedStateFromError(error$1);
        };
      }

      var inst = fiber.stateNode;

      if (inst !== null && typeof inst.componentDidCatch === 'function') {
        update.callback = function callback() {
          {
            markFailedErrorBoundaryForHotReloading(fiber);
          }

          if (typeof getDerivedStateFromError !== 'function') {
            // To preserve the preexisting retry behavior of error boundaries,
            // we keep track of which ones already failed during this batch.
            // This gets reset before we yield back to the browser.
            // TODO: Warn in strict mode if getDerivedStateFromError is
            // not defined.
            markLegacyErrorBoundaryAsFailed(this); // Only log here if componentDidCatch is the only error boundary method defined

            logCapturedError(fiber, errorInfo);
          }

          var error$1 = errorInfo.value;
          var stack = errorInfo.stack;
          this.componentDidCatch(error$1, {
            componentStack: stack !== null ? stack : ''
          });
          {
            if (typeof getDerivedStateFromError !== 'function') {
              // If componentDidCatch is the only error boundary method defined,
              // then it needs to call setState to recover from errors.
              // If no state update is scheduled then the boundary will swallow the error.
              if (!includesSomeLane(fiber.lanes, SyncLane)) {
                error('%s: Error boundaries should implement getDerivedStateFromError(). ' + 'In that method, return a state update to display an error message or fallback UI.', getComponentName(fiber.type) || 'Unknown');
              }
            }
          }
        };
      } else {
        update.callback = function () {
          markFailedErrorBoundaryForHotReloading(fiber);
        };
      }

      return update;
    }

    function attachPingListener(root, wakeable, lanes) {
      // Attach a listener to the promise to "ping" the root and retry. But only if
      // one does not already exist for the lanes we're currently rendering (which
      // acts like a "thread ID" here).
      var pingCache = root.pingCache;
      var threadIDs;

      if (pingCache === null) {
        pingCache = root.pingCache = new PossiblyWeakMap$1();
        threadIDs = new Set();
        pingCache.set(wakeable, threadIDs);
      } else {
        threadIDs = pingCache.get(wakeable);

        if (threadIDs === undefined) {
          threadIDs = new Set();
          pingCache.set(wakeable, threadIDs);
        }
      }

      if (!threadIDs.has(lanes)) {
        // Memoize using the thread ID to prevent redundant listeners.
        threadIDs.add(lanes);
        var ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);
        wakeable.then(ping, ping);
      }
    }

    function throwException(root, returnFiber, sourceFiber, value, rootRenderLanes) {
      // The source fiber did not complete.
      sourceFiber.flags |= Incomplete; // Its effect list is no longer valid.

      sourceFiber.firstEffect = sourceFiber.lastEffect = null;

      if (value !== null && typeof value === 'object' && typeof value.then === 'function') {
        // This is a wakeable.
        var wakeable = value;

        if ((sourceFiber.mode & BlockingMode) === NoMode) {
          // Reset the memoizedState to what it was before we attempted
          // to render it.
          var currentSource = sourceFiber.alternate;

          if (currentSource) {
            sourceFiber.updateQueue = currentSource.updateQueue;
            sourceFiber.memoizedState = currentSource.memoizedState;
            sourceFiber.lanes = currentSource.lanes;
          } else {
            sourceFiber.updateQueue = null;
            sourceFiber.memoizedState = null;
          }
        }

        var hasInvisibleParentBoundary = hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext); // Schedule the nearest Suspense to re-render the timed out view.

        var _workInProgress = returnFiber;

        do {
          if (_workInProgress.tag === SuspenseComponent && shouldCaptureSuspense(_workInProgress, hasInvisibleParentBoundary)) {
            // Found the nearest boundary.
            // Stash the promise on the boundary fiber. If the boundary times out, we'll
            // attach another listener to flip the boundary back to its normal state.
            var wakeables = _workInProgress.updateQueue;

            if (wakeables === null) {
              var updateQueue = new Set();
              updateQueue.add(wakeable);
              _workInProgress.updateQueue = updateQueue;
            } else {
              wakeables.add(wakeable);
            } // If the boundary is outside of blocking mode, we should *not*
            // suspend the commit. Pretend as if the suspended component rendered
            // null and keep rendering. In the commit phase, we'll schedule a
            // subsequent synchronous update to re-render the Suspense.
            //
            // Note: It doesn't matter whether the component that suspended was
            // inside a blocking mode tree. If the Suspense is outside of it, we
            // should *not* suspend the commit.


            if ((_workInProgress.mode & BlockingMode) === NoMode) {
              _workInProgress.flags |= DidCapture;
              sourceFiber.flags |= ForceUpdateForLegacySuspense; // We're going to commit this fiber even though it didn't complete.
              // But we shouldn't call any lifecycle methods or callbacks. Remove
              // all lifecycle effect tags.

              sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);

              if (sourceFiber.tag === ClassComponent) {
                var currentSourceFiber = sourceFiber.alternate;

                if (currentSourceFiber === null) {
                  // This is a new mount. Change the tag so it's not mistaken for a
                  // completed class component. For example, we should not call
                  // componentWillUnmount if it is deleted.
                  sourceFiber.tag = IncompleteClassComponent;
                } else {
                  // When we try rendering again, we should not reuse the current fiber,
                  // since it's known to be in an inconsistent state. Use a force update to
                  // prevent a bail out.
                  var update = createUpdate(NoTimestamp, SyncLane);
                  update.tag = ForceUpdate;
                  enqueueUpdate(sourceFiber, update);
                }
              } // The source fiber did not complete. Mark it with Sync priority to
              // indicate that it still has pending work.


              sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane); // Exit without suspending.

              return;
            } // Confirmed that the boundary is in a concurrent mode tree. Continue
            // with the normal suspend path.
            //
            // After this we'll use a set of heuristics to determine whether this
            // render pass will run to completion or restart or "suspend" the commit.
            // The actual logic for this is spread out in different places.
            //
            // This first principle is that if we're going to suspend when we complete
            // a root, then we should also restart if we get an update or ping that
            // might unsuspend it, and vice versa. The only reason to suspend is
            // because you think you might want to restart before committing. However,
            // it doesn't make sense to restart only while in the period we're suspended.
            //
            // Restarting too aggressively is also not good because it starves out any
            // intermediate loading state. So we use heuristics to determine when.
            // Suspense Heuristics
            //
            // If nothing threw a Promise or all the same fallbacks are already showing,
            // then don't suspend/restart.
            //
            // If this is an initial render of a new tree of Suspense boundaries and
            // those trigger a fallback, then don't suspend/restart. We want to ensure
            // that we can show the initial loading state as quickly as possible.
            //
            // If we hit a "Delayed" case, such as when we'd switch from content back into
            // a fallback, then we should always suspend/restart. Transitions apply
            // to this case. If none is defined, JND is used instead.
            //
            // If we're already showing a fallback and it gets "retried", allowing us to show
            // another level, but there's still an inner boundary that would show a fallback,
            // then we suspend/restart for 500ms since the last time we showed a fallback
            // anywhere in the tree. This effectively throttles progressive loading into a
            // consistent train of commits. This also gives us an opportunity to restart to
            // get to the completed state slightly earlier.
            //
            // If there's ambiguity due to batching it's resolved in preference of:
            // 1) "delayed", 2) "initial render", 3) "retry".
            //
            // We want to ensure that a "busy" state doesn't get force committed. We want to
            // ensure that new initial loading states can commit as soon as possible.


            attachPingListener(root, wakeable, rootRenderLanes);
            _workInProgress.flags |= ShouldCapture;
            _workInProgress.lanes = rootRenderLanes;
            return;
          } // This boundary already captured during this render. Continue to the next
          // boundary.


          _workInProgress = _workInProgress.return;
        } while (_workInProgress !== null); // No boundary was found. Fallthrough to error mode.
        // TODO: Use invariant so the message is stripped in prod?


        value = new Error((getComponentName(sourceFiber.type) || 'A React component') + ' suspended while rendering, but no fallback UI was specified.\n' + '\n' + 'Add a <Suspense fallback=...> component higher in the tree to ' + 'provide a loading indicator or placeholder to display.');
      } // We didn't find a boundary that could handle this type of exception. Start
      // over and traverse parent path again, this time treating the exception
      // as an error.


      renderDidError();
      value = createCapturedValue(value, sourceFiber);
      var workInProgress = returnFiber;

      do {
        switch (workInProgress.tag) {
          case HostRoot:
            {
              var _errorInfo = value;
              workInProgress.flags |= ShouldCapture;
              var lane = pickArbitraryLane(rootRenderLanes);
              workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);

              var _update = createRootErrorUpdate(workInProgress, _errorInfo, lane);

              enqueueCapturedUpdate(workInProgress, _update);
              return;
            }

          case ClassComponent:
            // Capture and retry
            var errorInfo = value;
            var ctor = workInProgress.type;
            var instance = workInProgress.stateNode;

            if ((workInProgress.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError === 'function' || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {
              workInProgress.flags |= ShouldCapture;

              var _lane = pickArbitraryLane(rootRenderLanes);

              workInProgress.lanes = mergeLanes(workInProgress.lanes, _lane); // Schedule the error boundary to re-render using updated state

              var _update2 = createClassErrorUpdate(workInProgress, errorInfo, _lane);

              enqueueCapturedUpdate(workInProgress, _update2);
              return;
            }

            break;
        }

        workInProgress = workInProgress.return;
      } while (workInProgress !== null);
    }

    var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
    {
      didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
    }
    var PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;

    var callComponentWillUnmountWithTimer = function (current, instance) {
      instance.props = current.memoizedProps;
      instance.state = current.memoizedState;
      {
        instance.componentWillUnmount();
      }
    }; // Capture errors so they don't interrupt unmounting.


    function safelyCallComponentWillUnmount(current, instance) {
      {
        invokeGuardedCallback(null, callComponentWillUnmountWithTimer, null, current, instance);

        if (hasCaughtError()) {
          var unmountError = clearCaughtError();
          captureCommitPhaseError(current, unmountError);
        }
      }
    }

    function safelyDetachRef(current) {
      var ref = current.ref;

      if (ref !== null) {
        if (typeof ref === 'function') {
          {
            invokeGuardedCallback(null, ref, null, null);

            if (hasCaughtError()) {
              var refError = clearCaughtError();
              captureCommitPhaseError(current, refError);
            }
          }
        } else {
          ref.current = null;
        }
      }
    }

    function safelyCallDestroy(current, destroy) {
      {
        invokeGuardedCallback(null, destroy, null);

        if (hasCaughtError()) {
          var error = clearCaughtError();
          captureCommitPhaseError(current, error);
        }
      }
    }

    function commitBeforeMutationLifeCycles(current, finishedWork) {
      switch (finishedWork.tag) {
        case FunctionComponent:
        case ForwardRef:
        case SimpleMemoComponent:
        case Block:
          {
            return;
          }

        case ClassComponent:
          {
            if (finishedWork.flags & Snapshot) {
              if (current !== null) {
                var prevProps = current.memoizedProps;
                var prevState = current.memoizedState;
                var instance = finishedWork.stateNode; // We could update instance props and state here,
                // but instead we rely on them being set during last render.
                // TODO: revisit this when we implement resuming.

                {
                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                    if (instance.props !== finishedWork.memoizedProps) {
                      error('Expected %s props to match memoized props before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance');
                    }

                    if (instance.state !== finishedWork.memoizedState) {
                      error('Expected %s state to match memoized state before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance');
                    }
                  }
                }
                var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);
                {
                  var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;

                  if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {
                    didWarnSet.add(finishedWork.type);
                    error('%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' + 'must be returned. You have returned undefined.', getComponentName(finishedWork.type));
                  }
                }
                instance.__reactInternalSnapshotBeforeUpdate = snapshot;
              }
            }

            return;
          }

        case HostRoot:
          {
            {
              if (finishedWork.flags & Snapshot) {
                var root = finishedWork.stateNode;
                clearContainer(root.containerInfo);
              }
            }
            return;
          }

        case HostComponent:
        case HostText:
        case HostPortal:
        case IncompleteClassComponent:
          // Nothing to do for these component types
          return;
      }

      {
        {
          throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
      }
    }

    function commitHookEffectListUnmount(tag, finishedWork) {
      var updateQueue = finishedWork.updateQueue;
      var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;

      if (lastEffect !== null) {
        var firstEffect = lastEffect.next;
        var effect = firstEffect;

        do {
          if ((effect.tag & tag) === tag) {
            // Unmount
            var destroy = effect.destroy;
            effect.destroy = undefined;

            if (destroy !== undefined) {
              destroy();
            }
          }

          effect = effect.next;
        } while (effect !== firstEffect);
      }
    }

    function commitHookEffectListMount(tag, finishedWork) {
      var updateQueue = finishedWork.updateQueue;
      var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;

      if (lastEffect !== null) {
        var firstEffect = lastEffect.next;
        var effect = firstEffect;

        do {
          if ((effect.tag & tag) === tag) {
            // Mount
            var create = effect.create;
            effect.destroy = create();
            {
              var destroy = effect.destroy;

              if (destroy !== undefined && typeof destroy !== 'function') {
                var addendum = void 0;

                if (destroy === null) {
                  addendum = ' You returned null. If your effect does not require clean ' + 'up, return undefined (or nothing).';
                } else if (typeof destroy.then === 'function') {
                  addendum = '\n\nIt looks like you wrote useEffect(async () => ...) or returned a Promise. ' + 'Instead, write the async function inside your effect ' + 'and call it immediately:\n\n' + 'useEffect(() => {\n' + '  async function fetchData() {\n' + '    // You can await here\n' + '    const response = await MyAPI.getData(someId);\n' + '    // ...\n' + '  }\n' + '  fetchData();\n' + "}, [someId]); // Or [] if effect doesn't need props or state\n\n" + 'Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching';
                } else {
                  addendum = ' You returned: ' + destroy;
                }

                error('An effect function must not return anything besides a function, ' + 'which is used for clean-up.%s', addendum);
              }
            }
          }

          effect = effect.next;
        } while (effect !== firstEffect);
      }
    }

    function schedulePassiveEffects(finishedWork) {
      var updateQueue = finishedWork.updateQueue;
      var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;

      if (lastEffect !== null) {
        var firstEffect = lastEffect.next;
        var effect = firstEffect;

        do {
          var _effect = effect,
              next = _effect.next,
              tag = _effect.tag;

          if ((tag & Passive$1) !== NoFlags$1 && (tag & HasEffect) !== NoFlags$1) {
            enqueuePendingPassiveHookEffectUnmount(finishedWork, effect);
            enqueuePendingPassiveHookEffectMount(finishedWork, effect);
          }

          effect = next;
        } while (effect !== firstEffect);
      }
    }

    function commitLifeCycles(finishedRoot, current, finishedWork, committedLanes) {
      switch (finishedWork.tag) {
        case FunctionComponent:
        case ForwardRef:
        case SimpleMemoComponent:
        case Block:
          {
            // At this point layout effects have already been destroyed (during mutation phase).
            // This is done to prevent sibling component effects from interfering with each other,
            // e.g. a destroy function in one component should never override a ref set
            // by a create function in another component during the same commit.
            {
              commitHookEffectListMount(Layout | HasEffect, finishedWork);
            }
            schedulePassiveEffects(finishedWork);
            return;
          }

        case ClassComponent:
          {
            var instance = finishedWork.stateNode;

            if (finishedWork.flags & Update) {
              if (current === null) {
                // We could update instance props and state here,
                // but instead we rely on them being set during last render.
                // TODO: revisit this when we implement resuming.
                {
                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                    if (instance.props !== finishedWork.memoizedProps) {
                      error('Expected %s props to match memoized props before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance');
                    }

                    if (instance.state !== finishedWork.memoizedState) {
                      error('Expected %s state to match memoized state before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance');
                    }
                  }
                }
                {
                  instance.componentDidMount();
                }
              } else {
                var prevProps = finishedWork.elementType === finishedWork.type ? current.memoizedProps : resolveDefaultProps(finishedWork.type, current.memoizedProps);
                var prevState = current.memoizedState; // We could update instance props and state here,
                // but instead we rely on them being set during last render.
                // TODO: revisit this when we implement resuming.

                {
                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                    if (instance.props !== finishedWork.memoizedProps) {
                      error('Expected %s props to match memoized props before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance');
                    }

                    if (instance.state !== finishedWork.memoizedState) {
                      error('Expected %s state to match memoized state before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance');
                    }
                  }
                }
                {
                  instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                }
              }
            } // TODO: I think this is now always non-null by the time it reaches the
            // commit phase. Consider removing the type check.


            var updateQueue = finishedWork.updateQueue;

            if (updateQueue !== null) {
              {
                if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                  if (instance.props !== finishedWork.memoizedProps) {
                    error('Expected %s props to match memoized props before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance');
                  }

                  if (instance.state !== finishedWork.memoizedState) {
                    error('Expected %s state to match memoized state before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.state`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance');
                  }
                }
              } // We could update instance props and state here,
              // but instead we rely on them being set during last render.
              // TODO: revisit this when we implement resuming.

              commitUpdateQueue(finishedWork, updateQueue, instance);
            }

            return;
          }

        case HostRoot:
          {
            // TODO: I think this is now always non-null by the time it reaches the
            // commit phase. Consider removing the type check.
            var _updateQueue = finishedWork.updateQueue;

            if (_updateQueue !== null) {
              var _instance = null;

              if (finishedWork.child !== null) {
                switch (finishedWork.child.tag) {
                  case HostComponent:
                    _instance = getPublicInstance(finishedWork.child.stateNode);
                    break;

                  case ClassComponent:
                    _instance = finishedWork.child.stateNode;
                    break;
                }
              }

              commitUpdateQueue(finishedWork, _updateQueue, _instance);
            }

            return;
          }

        case HostComponent:
          {
            var _instance2 = finishedWork.stateNode; // Renderers may schedule work to be done after host components are mounted
            // (eg DOM renderer may schedule auto-focus for inputs and form controls).
            // These effects should only be committed when components are first mounted,
            // aka when there is no current/alternate.

            if (current === null && finishedWork.flags & Update) {
              var type = finishedWork.type;
              var props = finishedWork.memoizedProps;
              commitMount(_instance2, type, props);
            }

            return;
          }

        case HostText:
          {
            // We have no life-cycles associated with text.
            return;
          }

        case HostPortal:
          {
            // We have no life-cycles associated with portals.
            return;
          }

        case Profiler:
          {
            {
              var _finishedWork$memoize2 = finishedWork.memoizedProps,
                  onCommit = _finishedWork$memoize2.onCommit,
                  onRender = _finishedWork$memoize2.onRender;
              var effectDuration = finishedWork.stateNode.effectDuration;
              var commitTime = getCommitTime();

              if (typeof onRender === 'function') {
                {
                  onRender(finishedWork.memoizedProps.id, current === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime, finishedRoot.memoizedInteractions);
                }
              }
            }
            return;
          }

        case SuspenseComponent:
          {
            commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
            return;
          }

        case SuspenseListComponent:
        case IncompleteClassComponent:
        case FundamentalComponent:
        case ScopeComponent:
        case OffscreenComponent:
        case LegacyHiddenComponent:
          return;
      }

      {
        {
          throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
      }
    }

    function hideOrUnhideAllChildren(finishedWork, isHidden) {
      {
        // We only have the top Fiber that was inserted but we need to recurse down its
        // children to find all the terminal nodes.
        var node = finishedWork;

        while (true) {
          if (node.tag === HostComponent) {
            var instance = node.stateNode;

            if (isHidden) {
              hideInstance(instance);
            } else {
              unhideInstance(node.stateNode, node.memoizedProps);
            }
          } else if (node.tag === HostText) {
            var _instance3 = node.stateNode;

            if (isHidden) {
              hideTextInstance(_instance3);
            } else {
              unhideTextInstance(_instance3, node.memoizedProps);
            }
          } else if ((node.tag === OffscreenComponent || node.tag === LegacyHiddenComponent) && node.memoizedState !== null && node !== finishedWork) ;else if (node.child !== null) {
            node.child.return = node;
            node = node.child;
            continue;
          }

          if (node === finishedWork) {
            return;
          }

          while (node.sibling === null) {
            if (node.return === null || node.return === finishedWork) {
              return;
            }

            node = node.return;
          }

          node.sibling.return = node.return;
          node = node.sibling;
        }
      }
    }

    function commitAttachRef(finishedWork) {
      var ref = finishedWork.ref;

      if (ref !== null) {
        var instance = finishedWork.stateNode;
        var instanceToUse;

        switch (finishedWork.tag) {
          case HostComponent:
            instanceToUse = getPublicInstance(instance);
            break;

          default:
            instanceToUse = instance;
        } // Moved outside to ensure DCE works with this flag


        if (typeof ref === 'function') {
          ref(instanceToUse);
        } else {
          {
            if (!ref.hasOwnProperty('current')) {
              error('Unexpected ref object provided for %s. ' + 'Use either a ref-setter function or React.createRef().', getComponentName(finishedWork.type));
            }
          }
          ref.current = instanceToUse;
        }
      }
    }

    function commitDetachRef(current) {
      var currentRef = current.ref;

      if (currentRef !== null) {
        if (typeof currentRef === 'function') {
          currentRef(null);
        } else {
          currentRef.current = null;
        }
      }
    } // User-originating errors (lifecycles and refs) should not interrupt
    // deletion, so don't let them throw. Host-originating errors should
    // interrupt deletion, so it's okay


    function commitUnmount(finishedRoot, current, renderPriorityLevel) {
      onCommitUnmount(current);

      switch (current.tag) {
        case FunctionComponent:
        case ForwardRef:
        case MemoComponent:
        case SimpleMemoComponent:
        case Block:
          {
            var updateQueue = current.updateQueue;

            if (updateQueue !== null) {
              var lastEffect = updateQueue.lastEffect;

              if (lastEffect !== null) {
                var firstEffect = lastEffect.next;
                var effect = firstEffect;

                do {
                  var _effect2 = effect,
                      destroy = _effect2.destroy,
                      tag = _effect2.tag;

                  if (destroy !== undefined) {
                    if ((tag & Passive$1) !== NoFlags$1) {
                      enqueuePendingPassiveHookEffectUnmount(current, effect);
                    } else {
                      {
                        safelyCallDestroy(current, destroy);
                      }
                    }
                  }

                  effect = effect.next;
                } while (effect !== firstEffect);
              }
            }

            return;
          }

        case ClassComponent:
          {
            safelyDetachRef(current);
            var instance = current.stateNode;

            if (typeof instance.componentWillUnmount === 'function') {
              safelyCallComponentWillUnmount(current, instance);
            }

            return;
          }

        case HostComponent:
          {
            safelyDetachRef(current);
            return;
          }

        case HostPortal:
          {
            // TODO: this is recursive.
            // We are also not using this parent because
            // the portal will get pushed immediately.
            {
              unmountHostComponents(finishedRoot, current);
            }
            return;
          }

        case FundamentalComponent:
          {
            return;
          }

        case DehydratedFragment:
          {
            return;
          }

        case ScopeComponent:
          {
            return;
          }
      }
    }

    function commitNestedUnmounts(finishedRoot, root, renderPriorityLevel) {
      // While we're inside a removed host node we don't want to call
      // removeChild on the inner nodes because they're removed by the top
      // call anyway. We also want to call componentWillUnmount on all
      // composites before this host node is removed from the tree. Therefore
      // we do an inner loop while we're still inside the host node.
      var node = root;

      while (true) {
        commitUnmount(finishedRoot, node); // Visit children because they may contain more composite or host nodes.
        // Skip portals because commitUnmount() currently visits them recursively.

        if (node.child !== null && // If we use mutation we drill down into portals using commitUnmount above.
        // If we don't use mutation we drill down into portals here instead.
        node.tag !== HostPortal) {
          node.child.return = node;
          node = node.child;
          continue;
        }

        if (node === root) {
          return;
        }

        while (node.sibling === null) {
          if (node.return === null || node.return === root) {
            return;
          }

          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }
    }

    function detachFiberMutation(fiber) {
      // Cut off the return pointers to disconnect it from the tree. Ideally, we
      // should clear the child pointer of the parent alternate to let this
      // get GC:ed but we don't know which for sure which parent is the current
      // one so we'll settle for GC:ing the subtree of this child. This child
      // itself will be GC:ed when the parent updates the next time.
      // Note: we cannot null out sibling here, otherwise it can cause issues
      // with findDOMNode and how it requires the sibling field to carry out
      // traversal in a later effect. See PR #16820. We now clear the sibling
      // field after effects, see: detachFiberAfterEffects.
      //
      // Don't disconnect stateNode now; it will be detached in detachFiberAfterEffects.
      // It may be required if the current component is an error boundary,
      // and one of its descendants throws while unmounting a passive effect.
      fiber.alternate = null;
      fiber.child = null;
      fiber.dependencies = null;
      fiber.firstEffect = null;
      fiber.lastEffect = null;
      fiber.memoizedProps = null;
      fiber.memoizedState = null;
      fiber.pendingProps = null;
      fiber.return = null;
      fiber.updateQueue = null;
      {
        fiber._debugOwner = null;
      }
    }

    function getHostParentFiber(fiber) {
      var parent = fiber.return;

      while (parent !== null) {
        if (isHostParent(parent)) {
          return parent;
        }

        parent = parent.return;
      }

      {
        {
          throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
        }
      }
    }

    function isHostParent(fiber) {
      return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
    }

    function getHostSibling(fiber) {
      // We're going to search forward into the tree until we find a sibling host
      // node. Unfortunately, if multiple insertions are done in a row we have to
      // search past them. This leads to exponential search for the next sibling.
      // TODO: Find a more efficient way to do this.
      var node = fiber;

      siblings: while (true) {
        // If we didn't find anything, let's try the next sibling.
        while (node.sibling === null) {
          if (node.return === null || isHostParent(node.return)) {
            // If we pop out of the root or hit the parent the fiber we are the
            // last sibling.
            return null;
          }

          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;

        while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment) {
          // If it is not host node and, we might have a host node inside it.
          // Try to search down until we find one.
          if (node.flags & Placement) {
            // If we don't have a child, try the siblings instead.
            continue siblings;
          } // If we don't have a child, try the siblings instead.
          // We also skip portals because they are not part of this host tree.


          if (node.child === null || node.tag === HostPortal) {
            continue siblings;
          } else {
            node.child.return = node;
            node = node.child;
          }
        } // Check if this host node is stable or about to be placed.


        if (!(node.flags & Placement)) {
          // Found it!
          return node.stateNode;
        }
      }
    }

    function commitPlacement(finishedWork) {
      var parentFiber = getHostParentFiber(finishedWork); // Note: these two variables *must* always be updated together.

      var parent;
      var isContainer;
      var parentStateNode = parentFiber.stateNode;

      switch (parentFiber.tag) {
        case HostComponent:
          parent = parentStateNode;
          isContainer = false;
          break;

        case HostRoot:
          parent = parentStateNode.containerInfo;
          isContainer = true;
          break;

        case HostPortal:
          parent = parentStateNode.containerInfo;
          isContainer = true;
          break;

        case FundamentalComponent: // eslint-disable-next-line-no-fallthrough

        default:
          {
            {
              throw Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
      }

      if (parentFiber.flags & ContentReset) {
        // Reset the text content of the parent before doing any insertions
        resetTextContent(parent); // Clear ContentReset from the effect tag

        parentFiber.flags &= ~ContentReset;
      }

      var before = getHostSibling(finishedWork); // We only have the top Fiber that was inserted but we need to recurse down its
      // children to find all the terminal nodes.

      if (isContainer) {
        insertOrAppendPlacementNodeIntoContainer(finishedWork, before, parent);
      } else {
        insertOrAppendPlacementNode(finishedWork, before, parent);
      }
    }

    function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
      var tag = node.tag;
      var isHost = tag === HostComponent || tag === HostText;

      if (isHost || enableFundamentalAPI) {
        var stateNode = isHost ? node.stateNode : node.stateNode.instance;

        if (before) {
          insertInContainerBefore(parent, stateNode, before);
        } else {
          appendChildToContainer(parent, stateNode);
        }
      } else if (tag === HostPortal) ;else {
        var child = node.child;

        if (child !== null) {
          insertOrAppendPlacementNodeIntoContainer(child, before, parent);
          var sibling = child.sibling;

          while (sibling !== null) {
            insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);
            sibling = sibling.sibling;
          }
        }
      }
    }

    function insertOrAppendPlacementNode(node, before, parent) {
      var tag = node.tag;
      var isHost = tag === HostComponent || tag === HostText;

      if (isHost || enableFundamentalAPI) {
        var stateNode = isHost ? node.stateNode : node.stateNode.instance;

        if (before) {
          insertBefore(parent, stateNode, before);
        } else {
          appendChild(parent, stateNode);
        }
      } else if (tag === HostPortal) ;else {
        var child = node.child;

        if (child !== null) {
          insertOrAppendPlacementNode(child, before, parent);
          var sibling = child.sibling;

          while (sibling !== null) {
            insertOrAppendPlacementNode(sibling, before, parent);
            sibling = sibling.sibling;
          }
        }
      }
    }

    function unmountHostComponents(finishedRoot, current, renderPriorityLevel) {
      // We only have the top Fiber that was deleted but we need to recurse down its
      // children to find all the terminal nodes.
      var node = current; // Each iteration, currentParent is populated with node's host parent if not
      // currentParentIsValid.

      var currentParentIsValid = false; // Note: these two variables *must* always be updated together.

      var currentParent;
      var currentParentIsContainer;

      while (true) {
        if (!currentParentIsValid) {
          var parent = node.return;

          findParent: while (true) {
            if (!(parent !== null)) {
              {
                throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
              }
            }

            var parentStateNode = parent.stateNode;

            switch (parent.tag) {
              case HostComponent:
                currentParent = parentStateNode;
                currentParentIsContainer = false;
                break findParent;

              case HostRoot:
                currentParent = parentStateNode.containerInfo;
                currentParentIsContainer = true;
                break findParent;

              case HostPortal:
                currentParent = parentStateNode.containerInfo;
                currentParentIsContainer = true;
                break findParent;
            }

            parent = parent.return;
          }

          currentParentIsValid = true;
        }

        if (node.tag === HostComponent || node.tag === HostText) {
          commitNestedUnmounts(finishedRoot, node); // After all the children have unmounted, it is now safe to remove the
          // node from the tree.

          if (currentParentIsContainer) {
            removeChildFromContainer(currentParent, node.stateNode);
          } else {
            removeChild(currentParent, node.stateNode);
          } // Don't visit children because we already visited them.

        } else if (node.tag === HostPortal) {
          if (node.child !== null) {
            // When we go into a portal, it becomes the parent to remove from.
            // We will reassign it back when we pop the portal on the way up.
            currentParent = node.stateNode.containerInfo;
            currentParentIsContainer = true; // Visit children because portals might contain host components.

            node.child.return = node;
            node = node.child;
            continue;
          }
        } else {
          commitUnmount(finishedRoot, node); // Visit children because we may find more host components below.

          if (node.child !== null) {
            node.child.return = node;
            node = node.child;
            continue;
          }
        }

        if (node === current) {
          return;
        }

        while (node.sibling === null) {
          if (node.return === null || node.return === current) {
            return;
          }

          node = node.return;

          if (node.tag === HostPortal) {
            // When we go out of the portal, we need to restore the parent.
            // Since we don't keep a stack of them, we will search for it.
            currentParentIsValid = false;
          }
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }
    }

    function commitDeletion(finishedRoot, current, renderPriorityLevel) {
      {
        // Recursively delete all host nodes from the parent.
        // Detach refs and call componentWillUnmount() on the whole subtree.
        unmountHostComponents(finishedRoot, current);
      }
      var alternate = current.alternate;
      detachFiberMutation(current);

      if (alternate !== null) {
        detachFiberMutation(alternate);
      }
    }

    function commitWork(current, finishedWork) {
      switch (finishedWork.tag) {
        case FunctionComponent:
        case ForwardRef:
        case MemoComponent:
        case SimpleMemoComponent:
        case Block:
          {
            // Layout effects are destroyed during the mutation phase so that all
            // destroy functions for all fibers are called before any create functions.
            // This prevents sibling component effects from interfering with each other,
            // e.g. a destroy function in one component should never override a ref set
            // by a create function in another component during the same commit.
            {
              commitHookEffectListUnmount(Layout | HasEffect, finishedWork);
            }
            return;
          }

        case ClassComponent:
          {
            return;
          }

        case HostComponent:
          {
            var instance = finishedWork.stateNode;

            if (instance != null) {
              // Commit the work prepared earlier.
              var newProps = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
              // as the newProps. The updatePayload will contain the real change in
              // this case.

              var oldProps = current !== null ? current.memoizedProps : newProps;
              var type = finishedWork.type; // TODO: Type the updateQueue to be specific to host components.

              var updatePayload = finishedWork.updateQueue;
              finishedWork.updateQueue = null;

              if (updatePayload !== null) {
                commitUpdate(instance, updatePayload, type, oldProps, newProps);
              }
            }

            return;
          }

        case HostText:
          {
            if (!(finishedWork.stateNode !== null)) {
              {
                throw Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
              }
            }

            var textInstance = finishedWork.stateNode;
            var newText = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
            // as the newProps. The updatePayload will contain the real change in
            // this case.

            var oldText = current !== null ? current.memoizedProps : newText;
            commitTextUpdate(textInstance, oldText, newText);
            return;
          }

        case HostRoot:
          {
            {
              var _root = finishedWork.stateNode;

              if (_root.hydrate) {
                // We've just hydrated. No need to hydrate again.
                _root.hydrate = false;
                commitHydratedContainer(_root.containerInfo);
              }
            }
            return;
          }

        case Profiler:
          {
            return;
          }

        case SuspenseComponent:
          {
            commitSuspenseComponent(finishedWork);
            attachSuspenseRetryListeners(finishedWork);
            return;
          }

        case SuspenseListComponent:
          {
            attachSuspenseRetryListeners(finishedWork);
            return;
          }

        case IncompleteClassComponent:
          {
            return;
          }

        case FundamentalComponent:
          {
            break;
          }

        case ScopeComponent:
          {
            break;
          }

        case OffscreenComponent:
        case LegacyHiddenComponent:
          {
            var newState = finishedWork.memoizedState;
            var isHidden = newState !== null;
            hideOrUnhideAllChildren(finishedWork, isHidden);
            return;
          }
      }

      {
        {
          throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
        }
      }
    }

    function commitSuspenseComponent(finishedWork) {
      var newState = finishedWork.memoizedState;

      if (newState !== null) {
        markCommitTimeOfFallback();
        {
          // Hide the Offscreen component that contains the primary children. TODO:
          // Ideally, this effect would have been scheduled on the Offscreen fiber
          // itself. That's how unhiding works: the Offscreen component schedules an
          // effect on itself. However, in this case, the component didn't complete,
          // so the fiber was never added to the effect list in the normal path. We
          // could have appended it to the effect list in the Suspense component's
          // second pass, but doing it this way is less complicated. This would be
          // simpler if we got rid of the effect list and traversed the tree, like
          // we're planning to do.
          var primaryChildParent = finishedWork.child;
          hideOrUnhideAllChildren(primaryChildParent, true);
        }
      }
    }

    function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {
      var newState = finishedWork.memoizedState;

      if (newState === null) {
        var current = finishedWork.alternate;

        if (current !== null) {
          var prevState = current.memoizedState;

          if (prevState !== null) {
            var suspenseInstance = prevState.dehydrated;

            if (suspenseInstance !== null) {
              commitHydratedSuspenseInstance(suspenseInstance);
            }
          }
        }
      }
    }

    function attachSuspenseRetryListeners(finishedWork) {
      // If this boundary just timed out, then it will have a set of wakeables.
      // For each wakeable, attach a listener so that when it resolves, React
      // attempts to re-render the boundary in the primary (pre-timeout) state.
      var wakeables = finishedWork.updateQueue;

      if (wakeables !== null) {
        finishedWork.updateQueue = null;
        var retryCache = finishedWork.stateNode;

        if (retryCache === null) {
          retryCache = finishedWork.stateNode = new PossiblyWeakSet();
        }

        wakeables.forEach(function (wakeable) {
          // Memoize using the boundary fiber to prevent redundant listeners.
          var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);

          if (!retryCache.has(wakeable)) {
            {
              if (wakeable.__reactDoNotTraceInteractions !== true) {
                retry = tracing.unstable_wrap(retry);
              }
            }
            retryCache.add(wakeable);
            wakeable.then(retry, retry);
          }
        });
      }
    } // This function detects when a Suspense boundary goes from visible to hidden.
    // It returns false if the boundary is already hidden.
    // TODO: Use an effect tag.


    function isSuspenseBoundaryBeingHidden(current, finishedWork) {
      if (current !== null) {
        var oldState = current.memoizedState;

        if (oldState === null || oldState.dehydrated !== null) {
          var newState = finishedWork.memoizedState;
          return newState !== null && newState.dehydrated === null;
        }
      }

      return false;
    }

    function commitResetTextContent(current) {
      resetTextContent(current.stateNode);
    }

    var COMPONENT_TYPE = 0;
    var HAS_PSEUDO_CLASS_TYPE = 1;
    var ROLE_TYPE = 2;
    var TEST_NAME_TYPE = 3;
    var TEXT_TYPE = 4;

    if (typeof Symbol === 'function' && Symbol.for) {
      var symbolFor$1 = Symbol.for;
      COMPONENT_TYPE = symbolFor$1('selector.component');
      HAS_PSEUDO_CLASS_TYPE = symbolFor$1('selector.has_pseudo_class');
      ROLE_TYPE = symbolFor$1('selector.role');
      TEST_NAME_TYPE = symbolFor$1('selector.test_id');
      TEXT_TYPE = symbolFor$1('selector.text');
    }

    var commitHooks = [];

    function onCommitRoot$1() {
      {
        commitHooks.forEach(function (commitHook) {
          return commitHook();
        });
      }
    }

    var ceil = Math.ceil;
    var ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher,
        ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner,
        IsSomeRendererActing = ReactSharedInternals.IsSomeRendererActing;
    var NoContext =
    /*             */
    0;
    var BatchedContext =
    /*               */
    1;
    var EventContext =
    /*                 */
    2;
    var DiscreteEventContext =
    /*         */
    4;
    var LegacyUnbatchedContext =
    /*       */
    8;
    var RenderContext =
    /*                */
    16;
    var CommitContext =
    /*                */
    32;
    var RetryAfterError =
    /*       */
    64;
    var RootIncomplete = 0;
    var RootFatalErrored = 1;
    var RootErrored = 2;
    var RootSuspended = 3;
    var RootSuspendedWithDelay = 4;
    var RootCompleted = 5; // Describes where we are in the React execution stack

    var executionContext = NoContext; // The root we're working on

    var workInProgressRoot = null; // The fiber we're working on

    var workInProgress = null; // The lanes we're rendering

    var workInProgressRootRenderLanes = NoLanes; // Stack that allows components to change the render lanes for its subtree
    // This is a superset of the lanes we started working on at the root. The only
    // case where it's different from `workInProgressRootRenderLanes` is when we
    // enter a subtree that is hidden and needs to be unhidden: Suspense and
    // Offscreen component.
    //
    // Most things in the work loop should deal with workInProgressRootRenderLanes.
    // Most things in begin/complete phases should deal with subtreeRenderLanes.

    var subtreeRenderLanes = NoLanes;
    var subtreeRenderLanesCursor = createCursor(NoLanes); // Whether to root completed, errored, suspended, etc.

    var workInProgressRootExitStatus = RootIncomplete; // A fatal error, if one is thrown

    var workInProgressRootFatalError = null; // "Included" lanes refer to lanes that were worked on during this render. It's
    // slightly different than `renderLanes` because `renderLanes` can change as you
    // enter and exit an Offscreen tree. This value is the combination of all render
    // lanes for the entire render phase.

    var workInProgressRootIncludedLanes = NoLanes; // The work left over by components that were visited during this render. Only
    // includes unprocessed updates, not work in bailed out children.

    var workInProgressRootSkippedLanes = NoLanes; // Lanes that were updated (in an interleaved event) during this render.

    var workInProgressRootUpdatedLanes = NoLanes; // Lanes that were pinged (in an interleaved event) during this render.

    var workInProgressRootPingedLanes = NoLanes;
    var mostRecentlyUpdatedRoot = null; // The most recent time we committed a fallback. This lets us ensure a train
    // model where we don't commit new loading states in too quick succession.

    var globalMostRecentFallbackTime = 0;
    var FALLBACK_THROTTLE_MS = 500; // The absolute time for when we should start giving up on rendering
    // more and prefer CPU suspense heuristics instead.

    var workInProgressRootRenderTargetTime = Infinity; // How long a render is supposed to take before we start following CPU
    // suspense heuristics and opt out of rendering more content.

    var RENDER_TIMEOUT_MS = 500;

    function resetRenderTimer() {
      workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;
    }

    function getRenderTargetTime() {
      return workInProgressRootRenderTargetTime;
    }

    var nextEffect = null;
    var hasUncaughtError = false;
    var firstUncaughtError = null;
    var legacyErrorBoundariesThatAlreadyFailed = null;
    var rootDoesHavePassiveEffects = false;
    var rootWithPendingPassiveEffects = null;
    var pendingPassiveEffectsRenderPriority = NoPriority$1;
    var pendingPassiveEffectsLanes = NoLanes;
    var pendingPassiveHookEffectsMount = [];
    var pendingPassiveHookEffectsUnmount = [];
    var rootsWithPendingDiscreteUpdates = null; // Use these to prevent an infinite loop of nested updates

    var NESTED_UPDATE_LIMIT = 50;
    var nestedUpdateCount = 0;
    var rootWithNestedUpdates = null;
    var NESTED_PASSIVE_UPDATE_LIMIT = 50;
    var nestedPassiveUpdateCount = 0; // Marks the need to reschedule pending interactions at these lanes
    // during the commit phase. This enables them to be traced across components
    // that spawn new work during render. E.g. hidden boundaries, suspended SSR
    // hydration or SuspenseList.
    // TODO: Can use a bitmask instead of an array

    var spawnedWorkDuringRender = null; // If two updates are scheduled within the same event, we should treat their
    // event times as simultaneous, even if the actual clock time has advanced
    // between the first and second call.

    var currentEventTime = NoTimestamp;
    var currentEventWipLanes = NoLanes;
    var currentEventPendingLanes = NoLanes; // Dev only flag that tracks if passive effects are currently being flushed.
    // We warn about state updates for unmounted components differently in this case.

    var isFlushingPassiveEffects = false;
    var focusedInstanceHandle = null;
    var shouldFireAfterActiveInstanceBlur = false;

    function getWorkInProgressRoot() {
      return workInProgressRoot;
    }

    function requestEventTime() {
      if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
        // We're inside React, so it's fine to read the actual time.
        return now();
      } // We're not inside React, so we may be in the middle of a browser event.


      if (currentEventTime !== NoTimestamp) {
        // Use the same start time for all updates until we enter React again.
        return currentEventTime;
      } // This is the first update since React yielded. Compute a new start time.


      currentEventTime = now();
      return currentEventTime;
    }

    function requestUpdateLane(fiber) {
      // Special cases
      var mode = fiber.mode;

      if ((mode & BlockingMode) === NoMode) {
        return SyncLane;
      } else if ((mode & ConcurrentMode) === NoMode) {
        return getCurrentPriorityLevel() === ImmediatePriority$1 ? SyncLane : SyncBatchedLane;
      } // The algorithm for assigning an update to a lane should be stable for all
      // updates at the same priority within the same event. To do this, the inputs
      // to the algorithm must be the same. For example, we use the `renderLanes`
      // to avoid choosing a lane that is already in the middle of rendering.
      //
      // However, the "included" lanes could be mutated in between updates in the
      // same event, like if you perform an update inside `flushSync`. Or any other
      // code path that might call `prepareFreshStack`.
      //
      // The trick we use is to cache the first of each of these inputs within an
      // event. Then reset the cached values once we can be sure the event is over.
      // Our heuristic for that is whenever we enter a concurrent work loop.
      //
      // We'll do the same for `currentEventPendingLanes` below.


      if (currentEventWipLanes === NoLanes) {
        currentEventWipLanes = workInProgressRootIncludedLanes;
      }

      var isTransition = requestCurrentTransition() !== NoTransition;

      if (isTransition) {
        if (currentEventPendingLanes !== NoLanes) {
          currentEventPendingLanes = mostRecentlyUpdatedRoot !== null ? mostRecentlyUpdatedRoot.pendingLanes : NoLanes;
        }

        return findTransitionLane(currentEventWipLanes, currentEventPendingLanes);
      } // TODO: Remove this dependency on the Scheduler priority.
      // To do that, we're replacing it with an update lane priority.


      var schedulerPriority = getCurrentPriorityLevel(); // The old behavior was using the priority level of the Scheduler.
      // This couples React to the Scheduler internals, so we're replacing it
      // with the currentUpdateLanePriority above. As an example of how this
      // could be problematic, if we're not inside `Scheduler.runWithPriority`,
      // then we'll get the priority of the current running Scheduler task,
      // which is probably not what we want.

      var lane;

      if ( // TODO: Temporary. We're removing the concept of discrete updates.
      (executionContext & DiscreteEventContext) !== NoContext && schedulerPriority === UserBlockingPriority$2) {
        lane = findUpdateLane(InputDiscreteLanePriority, currentEventWipLanes);
      } else {
        var schedulerLanePriority = schedulerPriorityToLanePriority(schedulerPriority);
        lane = findUpdateLane(schedulerLanePriority, currentEventWipLanes);
      }

      return lane;
    }

    function requestRetryLane(fiber) {
      // This is a fork of `requestUpdateLane` designed specifically for Suspense
      // "retries" — a special update that attempts to flip a Suspense boundary
      // from its placeholder state to its primary/resolved state.
      // Special cases
      var mode = fiber.mode;

      if ((mode & BlockingMode) === NoMode) {
        return SyncLane;
      } else if ((mode & ConcurrentMode) === NoMode) {
        return getCurrentPriorityLevel() === ImmediatePriority$1 ? SyncLane : SyncBatchedLane;
      } // See `requestUpdateLane` for explanation of `currentEventWipLanes`


      if (currentEventWipLanes === NoLanes) {
        currentEventWipLanes = workInProgressRootIncludedLanes;
      }

      return findRetryLane(currentEventWipLanes);
    }

    function scheduleUpdateOnFiber(fiber, lane, eventTime) {
      checkForNestedUpdates();
      warnAboutRenderPhaseUpdatesInDEV(fiber);
      var root = markUpdateLaneFromFiberToRoot(fiber, lane);

      if (root === null) {
        warnAboutUpdateOnUnmountedFiberInDEV(fiber);
        return null;
      } // Mark that the root has a pending update.


      markRootUpdated(root, lane, eventTime);

      if (root === workInProgressRoot) {
        // Received an update to a tree that's in the middle of rendering. Mark
        // that there was an interleaved update work on this root. Unless the
        // `deferRenderPhaseUpdateToNextBatch` flag is off and this is a render
        // phase update. In that case, we don't treat render phase updates as if
        // they were interleaved, for backwards compat reasons.
        {
          workInProgressRootUpdatedLanes = mergeLanes(workInProgressRootUpdatedLanes, lane);
        }

        if (workInProgressRootExitStatus === RootSuspendedWithDelay) {
          // The root already suspended with a delay, which means this render
          // definitely won't finish. Since we have a new update, let's mark it as
          // suspended now, right before marking the incoming update. This has the
          // effect of interrupting the current render and switching to the update.
          // TODO: Make sure this doesn't override pings that happen while we've
          // already started rendering.
          markRootSuspended$1(root, workInProgressRootRenderLanes);
        }
      } // TODO: requestUpdateLanePriority also reads the priority. Pass the
      // priority as an argument to that function and this one.


      var priorityLevel = getCurrentPriorityLevel();

      if (lane === SyncLane) {
        if ( // Check if we're inside unbatchedUpdates
        (executionContext & LegacyUnbatchedContext) !== NoContext && // Check if we're not already rendering
        (executionContext & (RenderContext | CommitContext)) === NoContext) {
          // Register pending interactions on the root to avoid losing traced interaction data.
          schedulePendingInteractions(root, lane); // This is a legacy edge case. The initial mount of a ReactDOM.render-ed
          // root inside of batchedUpdates should be synchronous, but layout updates
          // should be deferred until the end of the batch.

          performSyncWorkOnRoot(root);
        } else {
          ensureRootIsScheduled(root, eventTime);
          schedulePendingInteractions(root, lane);

          if (executionContext === NoContext) {
            // Flush the synchronous work now, unless we're already working or inside
            // a batch. This is intentionally inside scheduleUpdateOnFiber instead of
            // scheduleCallbackForFiber to preserve the ability to schedule a callback
            // without immediately flushing it. We only do this for user-initiated
            // updates, to preserve historical behavior of legacy mode.
            resetRenderTimer();
            flushSyncCallbackQueue();
          }
        }
      } else {
        // Schedule a discrete update but only if it's not Sync.
        if ((executionContext & DiscreteEventContext) !== NoContext && ( // Only updates at user-blocking priority or greater are considered
        // discrete, even inside a discrete event.
        priorityLevel === UserBlockingPriority$2 || priorityLevel === ImmediatePriority$1)) {
          // This is the result of a discrete event. Track the lowest priority
          // discrete update per root so we can flush them early, if needed.
          if (rootsWithPendingDiscreteUpdates === null) {
            rootsWithPendingDiscreteUpdates = new Set([root]);
          } else {
            rootsWithPendingDiscreteUpdates.add(root);
          }
        } // Schedule other updates after in case the callback is sync.


        ensureRootIsScheduled(root, eventTime);
        schedulePendingInteractions(root, lane);
      } // We use this when assigning a lane for a transition inside
      // `requestUpdateLane`. We assume it's the same as the root being updated,
      // since in the common case of a single root app it probably is. If it's not
      // the same root, then it's not a huge deal, we just might batch more stuff
      // together more than necessary.


      mostRecentlyUpdatedRoot = root;
    } // This is split into a separate function so we can mark a fiber with pending
    // work without treating it as a typical update that originates from an event;
    // e.g. retrying a Suspense boundary isn't an update, but it does schedule work
    // on a fiber.


    function markUpdateLaneFromFiberToRoot(sourceFiber, lane) {
      // Update the source fiber's lanes
      sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);
      var alternate = sourceFiber.alternate;

      if (alternate !== null) {
        alternate.lanes = mergeLanes(alternate.lanes, lane);
      }

      {
        if (alternate === null && (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags) {
          warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
        }
      } // Walk the parent path to the root and update the child expiration time.

      var node = sourceFiber;
      var parent = sourceFiber.return;

      while (parent !== null) {
        parent.childLanes = mergeLanes(parent.childLanes, lane);
        alternate = parent.alternate;

        if (alternate !== null) {
          alternate.childLanes = mergeLanes(alternate.childLanes, lane);
        } else {
          {
            if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {
              warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
            }
          }
        }

        node = parent;
        parent = parent.return;
      }

      if (node.tag === HostRoot) {
        var root = node.stateNode;
        return root;
      } else {
        return null;
      }
    } // Use this function to schedule a task for a root. There's only one task per
    // root; if a task was already scheduled, we'll check to make sure the priority
    // of the existing task is the same as the priority of the next level that the
    // root has work on. This function is called on every update, and right before
    // exiting a task.


    function ensureRootIsScheduled(root, currentTime) {
      var existingCallbackNode = root.callbackNode; // Check if any lanes are being starved by other work. If so, mark them as
      // expired so we know to work on those next.

      markStarvedLanesAsExpired(root, currentTime); // Determine the next lanes to work on, and their priority.

      var nextLanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes); // This returns the priority level computed during the `getNextLanes` call.

      var newCallbackPriority = returnNextLanesPriority();

      if (nextLanes === NoLanes) {
        // Special case: There's nothing to work on.
        if (existingCallbackNode !== null) {
          cancelCallback(existingCallbackNode);
          root.callbackNode = null;
          root.callbackPriority = NoLanePriority;
        }

        return;
      } // Check if there's an existing task. We may be able to reuse it.


      if (existingCallbackNode !== null) {
        var existingCallbackPriority = root.callbackPriority;

        if (existingCallbackPriority === newCallbackPriority) {
          // The priority hasn't changed. We can reuse the existing task. Exit.
          return;
        } // The priority changed. Cancel the existing callback. We'll schedule a new
        // one below.


        cancelCallback(existingCallbackNode);
      } // Schedule a new callback.


      var newCallbackNode;

      if (newCallbackPriority === SyncLanePriority) {
        // Special case: Sync React callbacks are scheduled on a special
        // internal queue
        newCallbackNode = scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));
      } else if (newCallbackPriority === SyncBatchedLanePriority) {
        newCallbackNode = scheduleCallback(ImmediatePriority$1, performSyncWorkOnRoot.bind(null, root));
      } else {
        var schedulerPriorityLevel = lanePriorityToSchedulerPriority(newCallbackPriority);
        newCallbackNode = scheduleCallback(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root));
      }

      root.callbackPriority = newCallbackPriority;
      root.callbackNode = newCallbackNode;
    } // This is the entry point for every concurrent task, i.e. anything that
    // goes through Scheduler.


    function performConcurrentWorkOnRoot(root) {
      // Since we know we're in a React event, we can clear the current
      // event time. The next update will compute a new event time.
      currentEventTime = NoTimestamp;
      currentEventWipLanes = NoLanes;
      currentEventPendingLanes = NoLanes;

      if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
        {
          throw Error("Should not already be working.");
        }
      } // Flush any pending passive effects before deciding which lanes to work on,
      // in case they schedule additional work.


      var originalCallbackNode = root.callbackNode;
      var didFlushPassiveEffects = flushPassiveEffects();

      if (didFlushPassiveEffects) {
        // Something in the passive effect phase may have canceled the current task.
        // Check if the task node for this root was changed.
        if (root.callbackNode !== originalCallbackNode) {
          // The current task was canceled. Exit. We don't need to call
          // `ensureRootIsScheduled` because the check above implies either that
          // there's a new task, or that there's no remaining work on this root.
          return null;
        }
      } // Determine the next expiration time to work on, using the fields stored
      // on the root.


      var lanes = getNextLanes(root, root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);

      if (lanes === NoLanes) {
        // Defensive coding. This is never expected to happen.
        return null;
      }

      var exitStatus = renderRootConcurrent(root, lanes);

      if (includesSomeLane(workInProgressRootIncludedLanes, workInProgressRootUpdatedLanes)) {
        // The render included lanes that were updated during the render phase.
        // For example, when unhiding a hidden tree, we include all the lanes
        // that were previously skipped when the tree was hidden. That set of
        // lanes is a superset of the lanes we started rendering with.
        //
        // So we'll throw out the current work and restart.
        prepareFreshStack(root, NoLanes);
      } else if (exitStatus !== RootIncomplete) {
        if (exitStatus === RootErrored) {
          executionContext |= RetryAfterError; // If an error occurred during hydration,
          // discard server response and fall back to client side render.

          if (root.hydrate) {
            root.hydrate = false;
            clearContainer(root.containerInfo);
          } // If something threw an error, try rendering one more time. We'll render
          // synchronously to block concurrent data mutations, and we'll includes
          // all pending updates are included. If it still fails after the second
          // attempt, we'll give up and commit the resulting tree.


          lanes = getLanesToRetrySynchronouslyOnError(root);

          if (lanes !== NoLanes) {
            exitStatus = renderRootSync(root, lanes);
          }
        }

        if (exitStatus === RootFatalErrored) {
          var fatalError = workInProgressRootFatalError;
          prepareFreshStack(root, NoLanes);
          markRootSuspended$1(root, lanes);
          ensureRootIsScheduled(root, now());
          throw fatalError;
        } // We now have a consistent tree. The next step is either to commit it,
        // or, if something suspended, wait to commit it after a timeout.


        var finishedWork = root.current.alternate;
        root.finishedWork = finishedWork;
        root.finishedLanes = lanes;
        finishConcurrentRender(root, exitStatus, lanes);
      }

      ensureRootIsScheduled(root, now());

      if (root.callbackNode === originalCallbackNode) {
        // The task node scheduled for this root is the same one that's
        // currently executed. Need to return a continuation.
        return performConcurrentWorkOnRoot.bind(null, root);
      }

      return null;
    }

    function finishConcurrentRender(root, exitStatus, lanes) {
      switch (exitStatus) {
        case RootIncomplete:
        case RootFatalErrored:
          {
            {
              {
                throw Error("Root did not complete. This is a bug in React.");
              }
            }
          }
        // Flow knows about invariant, so it complains if I add a break
        // statement, but eslint doesn't know about invariant, so it complains
        // if I do. eslint-disable-next-line no-fallthrough

        case RootErrored:
          {
            // We should have already attempted to retry this tree. If we reached
            // this point, it errored again. Commit it.
            commitRoot(root);
            break;
          }

        case RootSuspended:
          {
            markRootSuspended$1(root, lanes); // We have an acceptable loading state. We need to figure out if we
            // should immediately commit it or wait a bit.

            if (includesOnlyRetries(lanes) && // do not delay if we're inside an act() scope
            !shouldForceFlushFallbacksInDEV()) {
              // This render only included retries, no updates. Throttle committing
              // retries so that we don't show too many loading states too quickly.
              var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(); // Don't bother with a very short suspense time.

              if (msUntilTimeout > 10) {
                var nextLanes = getNextLanes(root, NoLanes);

                if (nextLanes !== NoLanes) {
                  // There's additional work on this root.
                  break;
                }

                var suspendedLanes = root.suspendedLanes;

                if (!isSubsetOfLanes(suspendedLanes, lanes)) {
                  // We should prefer to render the fallback of at the last
                  // suspended level. Ping the last suspended level to try
                  // rendering it again.
                  // FIXME: What if the suspended lanes are Idle? Should not restart.
                  var eventTime = requestEventTime();
                  markRootPinged(root, suspendedLanes);
                  break;
                } // The render is suspended, it hasn't timed out, and there's no
                // lower priority work to do. Instead of committing the fallback
                // immediately, wait for more data to arrive.


                root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root), msUntilTimeout);
                break;
              }
            } // The work expired. Commit immediately.


            commitRoot(root);
            break;
          }

        case RootSuspendedWithDelay:
          {
            markRootSuspended$1(root, lanes);

            if (includesOnlyTransitions(lanes)) {
              // This is a transition, so we should exit without committing a
              // placeholder and without scheduling a timeout. Delay indefinitely
              // until we receive more data.
              break;
            }

            if (!shouldForceFlushFallbacksInDEV()) {
              // This is not a transition, but we did trigger an avoided state.
              // Schedule a placeholder to display after a short delay, using the Just
              // Noticeable Difference.
              // TODO: Is the JND optimization worth the added complexity? If this is
              // the only reason we track the event time, then probably not.
              // Consider removing.
              var mostRecentEventTime = getMostRecentEventTime(root, lanes);
              var eventTimeMs = mostRecentEventTime;
              var timeElapsedMs = now() - eventTimeMs;

              var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs; // Don't bother with a very short suspense time.


              if (_msUntilTimeout > 10) {
                // Instead of committing the fallback immediately, wait for more data
                // to arrive.
                root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root), _msUntilTimeout);
                break;
              }
            } // Commit the placeholder.


            commitRoot(root);
            break;
          }

        case RootCompleted:
          {
            // The work completed. Ready to commit.
            commitRoot(root);
            break;
          }

        default:
          {
            {
              {
                throw Error("Unknown root exit status.");
              }
            }
          }
      }
    }

    function markRootSuspended$1(root, suspendedLanes) {
      // When suspending, we should always exclude lanes that were pinged or (more
      // rarely, since we try to avoid it) updated during the render phase.
      // TODO: Lol maybe there's a better way to factor this besides this
      // obnoxiously named function :)
      suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);
      suspendedLanes = removeLanes(suspendedLanes, workInProgressRootUpdatedLanes);
      markRootSuspended(root, suspendedLanes);
    } // This is the entry point for synchronous tasks that don't go
    // through Scheduler


    function performSyncWorkOnRoot(root) {
      if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
        {
          throw Error("Should not already be working.");
        }
      }

      flushPassiveEffects();
      var lanes;
      var exitStatus;

      if (root === workInProgressRoot && includesSomeLane(root.expiredLanes, workInProgressRootRenderLanes)) {
        // There's a partial tree, and at least one of its lanes has expired. Finish
        // rendering it before rendering the rest of the expired work.
        lanes = workInProgressRootRenderLanes;
        exitStatus = renderRootSync(root, lanes);

        if (includesSomeLane(workInProgressRootIncludedLanes, workInProgressRootUpdatedLanes)) {
          // The render included lanes that were updated during the render phase.
          // For example, when unhiding a hidden tree, we include all the lanes
          // that were previously skipped when the tree was hidden. That set of
          // lanes is a superset of the lanes we started rendering with.
          //
          // Note that this only happens when part of the tree is rendered
          // concurrently. If the whole tree is rendered synchronously, then there
          // are no interleaved events.
          lanes = getNextLanes(root, lanes);
          exitStatus = renderRootSync(root, lanes);
        }
      } else {
        lanes = getNextLanes(root, NoLanes);
        exitStatus = renderRootSync(root, lanes);
      }

      if (root.tag !== LegacyRoot && exitStatus === RootErrored) {
        executionContext |= RetryAfterError; // If an error occurred during hydration,
        // discard server response and fall back to client side render.

        if (root.hydrate) {
          root.hydrate = false;
          clearContainer(root.containerInfo);
        } // If something threw an error, try rendering one more time. We'll render
        // synchronously to block concurrent data mutations, and we'll includes
        // all pending updates are included. If it still fails after the second
        // attempt, we'll give up and commit the resulting tree.


        lanes = getLanesToRetrySynchronouslyOnError(root);

        if (lanes !== NoLanes) {
          exitStatus = renderRootSync(root, lanes);
        }
      }

      if (exitStatus === RootFatalErrored) {
        var fatalError = workInProgressRootFatalError;
        prepareFreshStack(root, NoLanes);
        markRootSuspended$1(root, lanes);
        ensureRootIsScheduled(root, now());
        throw fatalError;
      } // We now have a consistent tree. Because this is a sync render, we
      // will commit it even if something suspended.


      var finishedWork = root.current.alternate;
      root.finishedWork = finishedWork;
      root.finishedLanes = lanes;
      commitRoot(root); // Before exiting, make sure there's a callback scheduled for the next
      // pending level.

      ensureRootIsScheduled(root, now());
      return null;
    }

    function flushDiscreteUpdates() {
      // TODO: Should be able to flush inside batchedUpdates, but not inside `act`.
      // However, `act` uses `batchedUpdates`, so there's no way to distinguish
      // those two cases. Need to fix this before exposing flushDiscreteUpdates
      // as a public API.
      if ((executionContext & (BatchedContext | RenderContext | CommitContext)) !== NoContext) {
        {
          if ((executionContext & RenderContext) !== NoContext) {
            error('unstable_flushDiscreteUpdates: Cannot flush updates when React is ' + 'already rendering.');
          }
        } // We're already rendering, so we can't synchronously flush pending work.
        // This is probably a nested event dispatch triggered by a lifecycle/effect,
        // like `el.focus()`. Exit.

        return;
      }

      flushPendingDiscreteUpdates(); // If the discrete updates scheduled passive effects, flush them now so that
      // they fire before the next serial event.

      flushPassiveEffects();
    }

    function flushPendingDiscreteUpdates() {
      if (rootsWithPendingDiscreteUpdates !== null) {
        // For each root with pending discrete updates, schedule a callback to
        // immediately flush them.
        var roots = rootsWithPendingDiscreteUpdates;
        rootsWithPendingDiscreteUpdates = null;
        roots.forEach(function (root) {
          markDiscreteUpdatesExpired(root);
          ensureRootIsScheduled(root, now());
        });
      } // Now flush the immediate queue.


      flushSyncCallbackQueue();
    }

    function batchedUpdates$1(fn, a) {
      var prevExecutionContext = executionContext;
      executionContext |= BatchedContext;

      try {
        return fn(a);
      } finally {
        executionContext = prevExecutionContext;

        if (executionContext === NoContext) {
          // Flush the immediate callbacks that were scheduled during this batch
          resetRenderTimer();
          flushSyncCallbackQueue();
        }
      }
    }

    function batchedEventUpdates$1(fn, a) {
      var prevExecutionContext = executionContext;
      executionContext |= EventContext;

      try {
        return fn(a);
      } finally {
        executionContext = prevExecutionContext;

        if (executionContext === NoContext) {
          // Flush the immediate callbacks that were scheduled during this batch
          resetRenderTimer();
          flushSyncCallbackQueue();
        }
      }
    }

    function discreteUpdates$1(fn, a, b, c, d) {
      var prevExecutionContext = executionContext;
      executionContext |= DiscreteEventContext;
      {
        try {
          return runWithPriority$1(UserBlockingPriority$2, fn.bind(null, a, b, c, d));
        } finally {
          executionContext = prevExecutionContext;

          if (executionContext === NoContext) {
            // Flush the immediate callbacks that were scheduled during this batch
            resetRenderTimer();
            flushSyncCallbackQueue();
          }
        }
      }
    }

    function unbatchedUpdates(fn, a) {
      var prevExecutionContext = executionContext;
      executionContext &= ~BatchedContext;
      executionContext |= LegacyUnbatchedContext;

      try {
        return fn(a);
      } finally {
        executionContext = prevExecutionContext;

        if (executionContext === NoContext) {
          // Flush the immediate callbacks that were scheduled during this batch
          resetRenderTimer();
          flushSyncCallbackQueue();
        }
      }
    }

    function flushSync(fn, a) {
      var prevExecutionContext = executionContext;

      if ((prevExecutionContext & (RenderContext | CommitContext)) !== NoContext) {
        {
          error('flushSync was called from inside a lifecycle method. React cannot ' + 'flush when React is already rendering. Consider moving this call to ' + 'a scheduler task or micro task.');
        }
        return fn(a);
      }

      executionContext |= BatchedContext;
      {
        try {
          if (fn) {
            return runWithPriority$1(ImmediatePriority$1, fn.bind(null, a));
          } else {
            return undefined;
          }
        } finally {
          executionContext = prevExecutionContext; // Flush the immediate callbacks that were scheduled during this batch.
          // Note that this will happen even if batchedUpdates is higher up
          // the stack.

          flushSyncCallbackQueue();
        }
      }
    }

    function pushRenderLanes(fiber, lanes) {
      push(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);
      subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);
      workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);
    }

    function popRenderLanes(fiber) {
      subtreeRenderLanes = subtreeRenderLanesCursor.current;
      pop(subtreeRenderLanesCursor, fiber);
    }

    function prepareFreshStack(root, lanes) {
      root.finishedWork = null;
      root.finishedLanes = NoLanes;
      var timeoutHandle = root.timeoutHandle;

      if (timeoutHandle !== noTimeout) {
        // The root previous suspended and scheduled a timeout to commit a fallback
        // state. Now that we have additional work, cancel the timeout.
        root.timeoutHandle = noTimeout; // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above

        cancelTimeout(timeoutHandle);
      }

      if (workInProgress !== null) {
        var interruptedWork = workInProgress.return;

        while (interruptedWork !== null) {
          unwindInterruptedWork(interruptedWork);
          interruptedWork = interruptedWork.return;
        }
      }

      workInProgressRoot = root;
      workInProgress = createWorkInProgress(root.current, null);
      workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;
      workInProgressRootExitStatus = RootIncomplete;
      workInProgressRootFatalError = null;
      workInProgressRootSkippedLanes = NoLanes;
      workInProgressRootUpdatedLanes = NoLanes;
      workInProgressRootPingedLanes = NoLanes;
      {
        spawnedWorkDuringRender = null;
      }
      {
        ReactStrictModeWarnings.discardPendingWarnings();
      }
    }

    function handleError(root, thrownValue) {
      do {
        var erroredWork = workInProgress;

        try {
          // Reset module-level state that was set during the render phase.
          resetContextDependencies();
          resetHooksAfterThrow();
          resetCurrentFiber(); // TODO: I found and added this missing line while investigating a
          // separate issue. Write a regression test using string refs.

          ReactCurrentOwner$2.current = null;

          if (erroredWork === null || erroredWork.return === null) {
            // Expected to be working on a non-root fiber. This is a fatal error
            // because there's no ancestor that can handle it; the root is
            // supposed to capture all errors that weren't caught by an error
            // boundary.
            workInProgressRootExitStatus = RootFatalErrored;
            workInProgressRootFatalError = thrownValue; // Set `workInProgress` to null. This represents advancing to the next
            // sibling, or the parent if there are no siblings. But since the root
            // has no siblings nor a parent, we set it to null. Usually this is
            // handled by `completeUnitOfWork` or `unwindWork`, but since we're
            // intentionally not calling those, we need set it here.
            // TODO: Consider calling `unwindWork` to pop the contexts.

            workInProgress = null;
            return;
          }

          if (enableProfilerTimer && erroredWork.mode & ProfileMode) {
            // Record the time spent rendering before an error was thrown. This
            // avoids inaccurate Profiler durations in the case of a
            // suspended render.
            stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);
          }

          throwException(root, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes);
          completeUnitOfWork(erroredWork);
        } catch (yetAnotherThrownValue) {
          // Something in the return path also threw.
          thrownValue = yetAnotherThrownValue;

          if (workInProgress === erroredWork && erroredWork !== null) {
            // If this boundary has already errored, then we had trouble processing
            // the error. Bubble it to the next boundary.
            erroredWork = erroredWork.return;
            workInProgress = erroredWork;
          } else {
            erroredWork = workInProgress;
          }

          continue;
        } // Return to the normal work loop.


        return;
      } while (true);
    }

    function pushDispatcher() {
      var prevDispatcher = ReactCurrentDispatcher$2.current;
      ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;

      if (prevDispatcher === null) {
        // The React isomorphic package does not include a default dispatcher.
        // Instead the first renderer will lazily attach one, in order to give
        // nicer error messages.
        return ContextOnlyDispatcher;
      } else {
        return prevDispatcher;
      }
    }

    function popDispatcher(prevDispatcher) {
      ReactCurrentDispatcher$2.current = prevDispatcher;
    }

    function pushInteractions(root) {
      {
        var prevInteractions = tracing.__interactionsRef.current;
        tracing.__interactionsRef.current = root.memoizedInteractions;
        return prevInteractions;
      }
    }

    function popInteractions(prevInteractions) {
      {
        tracing.__interactionsRef.current = prevInteractions;
      }
    }

    function markCommitTimeOfFallback() {
      globalMostRecentFallbackTime = now();
    }

    function markSkippedUpdateLanes(lane) {
      workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);
    }

    function renderDidSuspend() {
      if (workInProgressRootExitStatus === RootIncomplete) {
        workInProgressRootExitStatus = RootSuspended;
      }
    }

    function renderDidSuspendDelayIfPossible() {
      if (workInProgressRootExitStatus === RootIncomplete || workInProgressRootExitStatus === RootSuspended) {
        workInProgressRootExitStatus = RootSuspendedWithDelay;
      } // Check if there are updates that we skipped tree that might have unblocked
      // this render.


      if (workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootUpdatedLanes))) {
        // Mark the current render as suspended so that we switch to working on
        // the updates that were skipped. Usually we only suspend at the end of
        // the render phase.
        // TODO: We should probably always mark the root as suspended immediately
        // (inside this function), since by suspending at the end of the render
        // phase introduces a potential mistake where we suspend lanes that were
        // pinged or updated while we were rendering.
        markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);
      }
    }

    function renderDidError() {
      if (workInProgressRootExitStatus !== RootCompleted) {
        workInProgressRootExitStatus = RootErrored;
      }
    } // Called during render to determine if anything has suspended.
    // Returns false if we're not sure.


    function renderHasNotSuspendedYet() {
      // If something errored or completed, we can't really be sure,
      // so those are false.
      return workInProgressRootExitStatus === RootIncomplete;
    }

    function renderRootSync(root, lanes) {
      var prevExecutionContext = executionContext;
      executionContext |= RenderContext;
      var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack
      // and prepare a fresh one. Otherwise we'll continue where we left off.

      if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
        prepareFreshStack(root, lanes);
        startWorkOnPendingInteractions(root, lanes);
      }

      var prevInteractions = pushInteractions(root);

      do {
        try {
          workLoopSync();
          break;
        } catch (thrownValue) {
          handleError(root, thrownValue);
        }
      } while (true);

      resetContextDependencies();
      {
        popInteractions(prevInteractions);
      }
      executionContext = prevExecutionContext;
      popDispatcher(prevDispatcher);

      if (workInProgress !== null) {
        // This is a sync render, so we should have finished the whole tree.
        {
          {
            throw Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
          }
        }
      }

      workInProgressRoot = null;
      workInProgressRootRenderLanes = NoLanes;
      return workInProgressRootExitStatus;
    } // The work loop is an extremely hot path. Tell Closure not to inline it.

    /** @noinline */


    function workLoopSync() {
      // Already timed out, so perform work without checking if we need to yield.
      while (workInProgress !== null) {
        performUnitOfWork(workInProgress);
      }
    }

    function renderRootConcurrent(root, lanes) {
      var prevExecutionContext = executionContext;
      executionContext |= RenderContext;
      var prevDispatcher = pushDispatcher(); // If the root or lanes have changed, throw out the existing stack
      // and prepare a fresh one. Otherwise we'll continue where we left off.

      if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {
        resetRenderTimer();
        prepareFreshStack(root, lanes);
        startWorkOnPendingInteractions(root, lanes);
      }

      var prevInteractions = pushInteractions(root);

      do {
        try {
          workLoopConcurrent();
          break;
        } catch (thrownValue) {
          handleError(root, thrownValue);
        }
      } while (true);

      resetContextDependencies();
      {
        popInteractions(prevInteractions);
      }
      popDispatcher(prevDispatcher);
      executionContext = prevExecutionContext;

      if (workInProgress !== null) {
        return RootIncomplete;
      } else {
        workInProgressRoot = null;
        workInProgressRootRenderLanes = NoLanes; // Return the final exit status.

        return workInProgressRootExitStatus;
      }
    }
    /** @noinline */


    function workLoopConcurrent() {
      // Perform work until Scheduler asks us to yield
      while (workInProgress !== null && !shouldYield()) {
        performUnitOfWork(workInProgress);
      }
    }

    function performUnitOfWork(unitOfWork) {
      // The current, flushed, state of this fiber is the alternate. Ideally
      // nothing should rely on this, but relying on it here means that we don't
      // need an additional field on the work in progress.
      var current = unitOfWork.alternate;
      setCurrentFiber(unitOfWork);
      var next;

      if ((unitOfWork.mode & ProfileMode) !== NoMode) {
        startProfilerTimer(unitOfWork);
        next = beginWork$1(current, unitOfWork, subtreeRenderLanes);
        stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);
      } else {
        next = beginWork$1(current, unitOfWork, subtreeRenderLanes);
      }

      resetCurrentFiber();
      unitOfWork.memoizedProps = unitOfWork.pendingProps;

      if (next === null) {
        // If this doesn't spawn new work, complete the current work.
        completeUnitOfWork(unitOfWork);
      } else {
        workInProgress = next;
      }

      ReactCurrentOwner$2.current = null;
    }

    function completeUnitOfWork(unitOfWork) {
      // Attempt to complete the current unit of work, then move to the next
      // sibling. If there are no more siblings, return to the parent fiber.
      var completedWork = unitOfWork;

      do {
        // The current, flushed, state of this fiber is the alternate. Ideally
        // nothing should rely on this, but relying on it here means that we don't
        // need an additional field on the work in progress.
        var current = completedWork.alternate;
        var returnFiber = completedWork.return; // Check if the work completed or if something threw.

        if ((completedWork.flags & Incomplete) === NoFlags) {
          setCurrentFiber(completedWork);
          var next = void 0;

          if ((completedWork.mode & ProfileMode) === NoMode) {
            next = completeWork(current, completedWork, subtreeRenderLanes);
          } else {
            startProfilerTimer(completedWork);
            next = completeWork(current, completedWork, subtreeRenderLanes); // Update render duration assuming we didn't error.

            stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);
          }

          resetCurrentFiber();

          if (next !== null) {
            // Completing this fiber spawned new work. Work on that next.
            workInProgress = next;
            return;
          }

          resetChildLanes(completedWork);

          if (returnFiber !== null && // Do not append effects to parents if a sibling failed to complete
          (returnFiber.flags & Incomplete) === NoFlags) {
            // Append all the effects of the subtree and this fiber onto the effect
            // list of the parent. The completion order of the children affects the
            // side-effect order.
            if (returnFiber.firstEffect === null) {
              returnFiber.firstEffect = completedWork.firstEffect;
            }

            if (completedWork.lastEffect !== null) {
              if (returnFiber.lastEffect !== null) {
                returnFiber.lastEffect.nextEffect = completedWork.firstEffect;
              }

              returnFiber.lastEffect = completedWork.lastEffect;
            } // If this fiber had side-effects, we append it AFTER the children's
            // side-effects. We can perform certain side-effects earlier if needed,
            // by doing multiple passes over the effect list. We don't want to
            // schedule our own side-effect on our own list because if end up
            // reusing children we'll schedule this effect onto itself since we're
            // at the end.


            var flags = completedWork.flags; // Skip both NoWork and PerformedWork tags when creating the effect
            // list. PerformedWork effect is read by React DevTools but shouldn't be
            // committed.

            if (flags > PerformedWork) {
              if (returnFiber.lastEffect !== null) {
                returnFiber.lastEffect.nextEffect = completedWork;
              } else {
                returnFiber.firstEffect = completedWork;
              }

              returnFiber.lastEffect = completedWork;
            }
          }
        } else {
          // This fiber did not complete because something threw. Pop values off
          // the stack without entering the complete phase. If this is a boundary,
          // capture values if possible.
          var _next = unwindWork(completedWork); // Because this fiber did not complete, don't reset its expiration time.


          if (_next !== null) {
            // If completing this work spawned new work, do that next. We'll come
            // back here again.
            // Since we're restarting, remove anything that is not a host effect
            // from the effect tag.
            _next.flags &= HostEffectMask;
            workInProgress = _next;
            return;
          }

          if ((completedWork.mode & ProfileMode) !== NoMode) {
            // Record the render duration for the fiber that errored.
            stopProfilerTimerIfRunningAndRecordDelta(completedWork, false); // Include the time spent working on failed children before continuing.

            var actualDuration = completedWork.actualDuration;
            var child = completedWork.child;

            while (child !== null) {
              actualDuration += child.actualDuration;
              child = child.sibling;
            }

            completedWork.actualDuration = actualDuration;
          }

          if (returnFiber !== null) {
            // Mark the parent fiber as incomplete and clear its effect list.
            returnFiber.firstEffect = returnFiber.lastEffect = null;
            returnFiber.flags |= Incomplete;
          }
        }

        var siblingFiber = completedWork.sibling;

        if (siblingFiber !== null) {
          // If there is more work to do in this returnFiber, do that next.
          workInProgress = siblingFiber;
          return;
        } // Otherwise, return to the parent


        completedWork = returnFiber; // Update the next thing we're working on in case something throws.

        workInProgress = completedWork;
      } while (completedWork !== null); // We've reached the root.


      if (workInProgressRootExitStatus === RootIncomplete) {
        workInProgressRootExitStatus = RootCompleted;
      }
    }

    function resetChildLanes(completedWork) {
      if ( // TODO: Move this check out of the hot path by moving `resetChildLanes`
      // to switch statement in `completeWork`.
      (completedWork.tag === LegacyHiddenComponent || completedWork.tag === OffscreenComponent) && completedWork.memoizedState !== null && !includesSomeLane(subtreeRenderLanes, OffscreenLane) && (completedWork.mode & ConcurrentMode) !== NoLanes) {
        // The children of this component are hidden. Don't bubble their
        // expiration times.
        return;
      }

      var newChildLanes = NoLanes; // Bubble up the earliest expiration time.

      if ((completedWork.mode & ProfileMode) !== NoMode) {
        // In profiling mode, resetChildExpirationTime is also used to reset
        // profiler durations.
        var actualDuration = completedWork.actualDuration;
        var treeBaseDuration = completedWork.selfBaseDuration; // When a fiber is cloned, its actualDuration is reset to 0. This value will
        // only be updated if work is done on the fiber (i.e. it doesn't bailout).
        // When work is done, it should bubble to the parent's actualDuration. If
        // the fiber has not been cloned though, (meaning no work was done), then
        // this value will reflect the amount of time spent working on a previous
        // render. In that case it should not bubble. We determine whether it was
        // cloned by comparing the child pointer.

        var shouldBubbleActualDurations = completedWork.alternate === null || completedWork.child !== completedWork.alternate.child;
        var child = completedWork.child;

        while (child !== null) {
          newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));

          if (shouldBubbleActualDurations) {
            actualDuration += child.actualDuration;
          }

          treeBaseDuration += child.treeBaseDuration;
          child = child.sibling;
        }

        var isTimedOutSuspense = completedWork.tag === SuspenseComponent && completedWork.memoizedState !== null;

        if (isTimedOutSuspense) {
          // Don't count time spent in a timed out Suspense subtree as part of the base duration.
          var primaryChildFragment = completedWork.child;

          if (primaryChildFragment !== null) {
            treeBaseDuration -= primaryChildFragment.treeBaseDuration;
          }
        }

        completedWork.actualDuration = actualDuration;
        completedWork.treeBaseDuration = treeBaseDuration;
      } else {
        var _child = completedWork.child;

        while (_child !== null) {
          newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child.lanes, _child.childLanes));
          _child = _child.sibling;
        }
      }

      completedWork.childLanes = newChildLanes;
    }

    function commitRoot(root) {
      var renderPriorityLevel = getCurrentPriorityLevel();
      runWithPriority$1(ImmediatePriority$1, commitRootImpl.bind(null, root, renderPriorityLevel));
      return null;
    }

    function commitRootImpl(root, renderPriorityLevel) {
      do {
        // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which
        // means `flushPassiveEffects` will sometimes result in additional
        // passive effects. So we need to keep flushing in a loop until there are
        // no more pending effects.
        // TODO: Might be better if `flushPassiveEffects` did not automatically
        // flush synchronous work at the end, to avoid factoring hazards like this.
        flushPassiveEffects();
      } while (rootWithPendingPassiveEffects !== null);

      flushRenderPhaseStrictModeWarningsInDEV();

      if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
        {
          throw Error("Should not already be working.");
        }
      }

      var finishedWork = root.finishedWork;
      var lanes = root.finishedLanes;

      if (finishedWork === null) {
        return null;
      }

      root.finishedWork = null;
      root.finishedLanes = NoLanes;

      if (!(finishedWork !== root.current)) {
        {
          throw Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
        }
      } // commitRoot never returns a continuation; it always finishes synchronously.
      // So we can clear these now to allow a new callback to be scheduled.


      root.callbackNode = null; // Update the first and last pending times on this root. The new first
      // pending time is whatever is left on the root fiber.

      var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);
      markRootFinished(root, remainingLanes); // Clear already finished discrete updates in case that a later call of
      // `flushDiscreteUpdates` starts a useless render pass which may cancels
      // a scheduled timeout.

      if (rootsWithPendingDiscreteUpdates !== null) {
        if (!hasDiscreteLanes(remainingLanes) && rootsWithPendingDiscreteUpdates.has(root)) {
          rootsWithPendingDiscreteUpdates.delete(root);
        }
      }

      if (root === workInProgressRoot) {
        // We can reset these now that they are finished.
        workInProgressRoot = null;
        workInProgress = null;
        workInProgressRootRenderLanes = NoLanes;
      } // Get the list of effects.


      var firstEffect;

      if (finishedWork.flags > PerformedWork) {
        // A fiber's effect list consists only of its children, not itself. So if
        // the root has an effect, we need to add it to the end of the list. The
        // resulting list is the set that would belong to the root's parent, if it
        // had one; that is, all the effects in the tree including the root.
        if (finishedWork.lastEffect !== null) {
          finishedWork.lastEffect.nextEffect = finishedWork;
          firstEffect = finishedWork.firstEffect;
        } else {
          firstEffect = finishedWork;
        }
      } else {
        // There is no effect on the root.
        firstEffect = finishedWork.firstEffect;
      }

      if (firstEffect !== null) {
        var prevExecutionContext = executionContext;
        executionContext |= CommitContext;
        var prevInteractions = pushInteractions(root); // Reset this to null before calling lifecycles

        ReactCurrentOwner$2.current = null; // The commit phase is broken into several sub-phases. We do a separate pass
        // of the effect list for each phase: all mutation effects come before all
        // layout effects, and so on.
        // The first phase a "before mutation" phase. We use this phase to read the
        // state of the host tree right before we mutate it. This is where
        // getSnapshotBeforeUpdate is called.

        focusedInstanceHandle = prepareForCommit(root.containerInfo);
        shouldFireAfterActiveInstanceBlur = false;
        nextEffect = firstEffect;

        do {
          {
            invokeGuardedCallback(null, commitBeforeMutationEffects, null);

            if (hasCaughtError()) {
              if (!(nextEffect !== null)) {
                {
                  throw Error("Should be working on an effect.");
                }
              }

              var error = clearCaughtError();
              captureCommitPhaseError(nextEffect, error);
              nextEffect = nextEffect.nextEffect;
            }
          }
        } while (nextEffect !== null); // We no longer need to track the active instance fiber


        focusedInstanceHandle = null;
        {
          // Mark the current commit time to be shared by all Profilers in this
          // batch. This enables them to be grouped later.
          recordCommitTime();
        } // The next phase is the mutation phase, where we mutate the host tree.

        nextEffect = firstEffect;

        do {
          {
            invokeGuardedCallback(null, commitMutationEffects, null, root, renderPriorityLevel);

            if (hasCaughtError()) {
              if (!(nextEffect !== null)) {
                {
                  throw Error("Should be working on an effect.");
                }
              }

              var _error = clearCaughtError();

              captureCommitPhaseError(nextEffect, _error);
              nextEffect = nextEffect.nextEffect;
            }
          }
        } while (nextEffect !== null);

        resetAfterCommit(root.containerInfo); // The work-in-progress tree is now the current tree. This must come after
        // the mutation phase, so that the previous tree is still current during
        // componentWillUnmount, but before the layout phase, so that the finished
        // work is current during componentDidMount/Update.

        root.current = finishedWork; // The next phase is the layout phase, where we call effects that read
        // the host tree after it's been mutated. The idiomatic use case for this is
        // layout, but class component lifecycles also fire here for legacy reasons.

        nextEffect = firstEffect;

        do {
          {
            invokeGuardedCallback(null, commitLayoutEffects, null, root, lanes);

            if (hasCaughtError()) {
              if (!(nextEffect !== null)) {
                {
                  throw Error("Should be working on an effect.");
                }
              }

              var _error2 = clearCaughtError();

              captureCommitPhaseError(nextEffect, _error2);
              nextEffect = nextEffect.nextEffect;
            }
          }
        } while (nextEffect !== null);

        nextEffect = null; // Tell Scheduler to yield at the end of the frame, so the browser has an
        // opportunity to paint.

        requestPaint();
        {
          popInteractions(prevInteractions);
        }
        executionContext = prevExecutionContext;
      } else {
        // No effects.
        root.current = finishedWork; // Measure these anyway so the flamegraph explicitly shows that there were
        // no effects.
        // TODO: Maybe there's a better way to report this.

        {
          recordCommitTime();
        }
      }

      var rootDidHavePassiveEffects = rootDoesHavePassiveEffects;

      if (rootDoesHavePassiveEffects) {
        // This commit has passive effects. Stash a reference to them. But don't
        // schedule a callback until after flushing layout work.
        rootDoesHavePassiveEffects = false;
        rootWithPendingPassiveEffects = root;
        pendingPassiveEffectsLanes = lanes;
        pendingPassiveEffectsRenderPriority = renderPriorityLevel;
      } else {
        // We are done with the effect chain at this point so let's clear the
        // nextEffect pointers to assist with GC. If we have passive effects, we'll
        // clear this in flushPassiveEffects.
        nextEffect = firstEffect;

        while (nextEffect !== null) {
          var nextNextEffect = nextEffect.nextEffect;
          nextEffect.nextEffect = null;

          if (nextEffect.flags & Deletion) {
            detachFiberAfterEffects(nextEffect);
          }

          nextEffect = nextNextEffect;
        }
      } // Read this again, since an effect might have updated it


      remainingLanes = root.pendingLanes; // Check if there's remaining work on this root

      if (remainingLanes !== NoLanes) {
        {
          if (spawnedWorkDuringRender !== null) {
            var expirationTimes = spawnedWorkDuringRender;
            spawnedWorkDuringRender = null;

            for (var i = 0; i < expirationTimes.length; i++) {
              scheduleInteractions(root, expirationTimes[i], root.memoizedInteractions);
            }
          }

          schedulePendingInteractions(root, remainingLanes);
        }
      } else {
        // If there's no remaining work, we can clear the set of already failed
        // error boundaries.
        legacyErrorBoundariesThatAlreadyFailed = null;
      }

      {
        if (!rootDidHavePassiveEffects) {
          // If there are no passive effects, then we can complete the pending interactions.
          // Otherwise, we'll wait until after the passive effects are flushed.
          // Wait to do this until after remaining work has been scheduled,
          // so that we don't prematurely signal complete for interactions when there's e.g. hidden work.
          finishPendingInteractions(root, lanes);
        }
      }

      if (remainingLanes === SyncLane) {
        // Count the number of times the root synchronously re-renders without
        // finishing. If there are too many, it indicates an infinite update loop.
        if (root === rootWithNestedUpdates) {
          nestedUpdateCount++;
        } else {
          nestedUpdateCount = 0;
          rootWithNestedUpdates = root;
        }
      } else {
        nestedUpdateCount = 0;
      }

      onCommitRoot(finishedWork.stateNode, renderPriorityLevel);
      {
        onCommitRoot$1();
      } // Always call this before exiting `commitRoot`, to ensure that any
      // additional work on this root is scheduled.

      ensureRootIsScheduled(root, now());

      if (hasUncaughtError) {
        hasUncaughtError = false;
        var _error3 = firstUncaughtError;
        firstUncaughtError = null;
        throw _error3;
      }

      if ((executionContext & LegacyUnbatchedContext) !== NoContext) {
        // a ReactDOM.render-ed root inside of batchedUpdates. The commit fired
        // synchronously, but layout updates should be deferred until the end
        // of the batch.
        return null;
      } // If layout work was scheduled, flush it now.


      flushSyncCallbackQueue();
      return null;
    }

    function commitBeforeMutationEffects() {
      while (nextEffect !== null) {
        var current = nextEffect.alternate;

        if (!shouldFireAfterActiveInstanceBlur && focusedInstanceHandle !== null) {
          if ((nextEffect.flags & Deletion) !== NoFlags) {
            if (doesFiberContain(nextEffect, focusedInstanceHandle)) {
              shouldFireAfterActiveInstanceBlur = true;
            }
          } else {
            // TODO: Move this out of the hot path using a dedicated effect tag.
            if (nextEffect.tag === SuspenseComponent && isSuspenseBoundaryBeingHidden(current, nextEffect) && doesFiberContain(nextEffect, focusedInstanceHandle)) {
              shouldFireAfterActiveInstanceBlur = true;
            }
          }
        }

        var flags = nextEffect.flags;

        if ((flags & Snapshot) !== NoFlags) {
          setCurrentFiber(nextEffect);
          commitBeforeMutationLifeCycles(current, nextEffect);
          resetCurrentFiber();
        }

        if ((flags & Passive) !== NoFlags) {
          // If there are passive effects, schedule a callback to flush at
          // the earliest opportunity.
          if (!rootDoesHavePassiveEffects) {
            rootDoesHavePassiveEffects = true;
            scheduleCallback(NormalPriority$1, function () {
              flushPassiveEffects();
              return null;
            });
          }
        }

        nextEffect = nextEffect.nextEffect;
      }
    }

    function commitMutationEffects(root, renderPriorityLevel) {
      // TODO: Should probably move the bulk of this function to commitWork.
      while (nextEffect !== null) {
        setCurrentFiber(nextEffect);
        var flags = nextEffect.flags;

        if (flags & ContentReset) {
          commitResetTextContent(nextEffect);
        }

        if (flags & Ref) {
          var current = nextEffect.alternate;

          if (current !== null) {
            commitDetachRef(current);
          }
        } // The following switch statement is only concerned about placement,
        // updates, and deletions. To avoid needing to add a case for every possible
        // bitmap value, we remove the secondary effects from the effect tag and
        // switch on that value.


        var primaryFlags = flags & (Placement | Update | Deletion | Hydrating);

        switch (primaryFlags) {
          case Placement:
            {
              commitPlacement(nextEffect); // Clear the "placement" from effect tag so that we know that this is
              // inserted, before any life-cycles like componentDidMount gets called.
              // TODO: findDOMNode doesn't rely on this any more but isMounted does
              // and isMounted is deprecated anyway so we should be able to kill this.

              nextEffect.flags &= ~Placement;
              break;
            }

          case PlacementAndUpdate:
            {
              // Placement
              commitPlacement(nextEffect); // Clear the "placement" from effect tag so that we know that this is
              // inserted, before any life-cycles like componentDidMount gets called.

              nextEffect.flags &= ~Placement; // Update

              var _current = nextEffect.alternate;
              commitWork(_current, nextEffect);
              break;
            }

          case Hydrating:
            {
              nextEffect.flags &= ~Hydrating;
              break;
            }

          case HydratingAndUpdate:
            {
              nextEffect.flags &= ~Hydrating; // Update

              var _current2 = nextEffect.alternate;
              commitWork(_current2, nextEffect);
              break;
            }

          case Update:
            {
              var _current3 = nextEffect.alternate;
              commitWork(_current3, nextEffect);
              break;
            }

          case Deletion:
            {
              commitDeletion(root, nextEffect);
              break;
            }
        }

        resetCurrentFiber();
        nextEffect = nextEffect.nextEffect;
      }
    }

    function commitLayoutEffects(root, committedLanes) {
      while (nextEffect !== null) {
        setCurrentFiber(nextEffect);
        var flags = nextEffect.flags;

        if (flags & (Update | Callback)) {
          var current = nextEffect.alternate;
          commitLifeCycles(root, current, nextEffect);
        }

        {
          if (flags & Ref) {
            commitAttachRef(nextEffect);
          }
        }
        resetCurrentFiber();
        nextEffect = nextEffect.nextEffect;
      }
    }

    function flushPassiveEffects() {
      // Returns whether passive effects were flushed.
      if (pendingPassiveEffectsRenderPriority !== NoPriority$1) {
        var priorityLevel = pendingPassiveEffectsRenderPriority > NormalPriority$1 ? NormalPriority$1 : pendingPassiveEffectsRenderPriority;
        pendingPassiveEffectsRenderPriority = NoPriority$1;
        {
          return runWithPriority$1(priorityLevel, flushPassiveEffectsImpl);
        }
      }

      return false;
    }

    function enqueuePendingPassiveHookEffectMount(fiber, effect) {
      pendingPassiveHookEffectsMount.push(effect, fiber);

      if (!rootDoesHavePassiveEffects) {
        rootDoesHavePassiveEffects = true;
        scheduleCallback(NormalPriority$1, function () {
          flushPassiveEffects();
          return null;
        });
      }
    }

    function enqueuePendingPassiveHookEffectUnmount(fiber, effect) {
      pendingPassiveHookEffectsUnmount.push(effect, fiber);
      {
        fiber.flags |= PassiveUnmountPendingDev;
        var alternate = fiber.alternate;

        if (alternate !== null) {
          alternate.flags |= PassiveUnmountPendingDev;
        }
      }

      if (!rootDoesHavePassiveEffects) {
        rootDoesHavePassiveEffects = true;
        scheduleCallback(NormalPriority$1, function () {
          flushPassiveEffects();
          return null;
        });
      }
    }

    function invokePassiveEffectCreate(effect) {
      var create = effect.create;
      effect.destroy = create();
    }

    function flushPassiveEffectsImpl() {
      if (rootWithPendingPassiveEffects === null) {
        return false;
      }

      var root = rootWithPendingPassiveEffects;
      var lanes = pendingPassiveEffectsLanes;
      rootWithPendingPassiveEffects = null;
      pendingPassiveEffectsLanes = NoLanes;

      if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
        {
          throw Error("Cannot flush passive effects while already rendering.");
        }
      }

      {
        isFlushingPassiveEffects = true;
      }
      var prevExecutionContext = executionContext;
      executionContext |= CommitContext;
      var prevInteractions = pushInteractions(root); // It's important that ALL pending passive effect destroy functions are called
      // before ANY passive effect create functions are called.
      // Otherwise effects in sibling components might interfere with each other.
      // e.g. a destroy function in one component may unintentionally override a ref
      // value set by a create function in another component.
      // Layout effects have the same constraint.
      // First pass: Destroy stale passive effects.

      var unmountEffects = pendingPassiveHookEffectsUnmount;
      pendingPassiveHookEffectsUnmount = [];

      for (var i = 0; i < unmountEffects.length; i += 2) {
        var _effect = unmountEffects[i];
        var fiber = unmountEffects[i + 1];
        var destroy = _effect.destroy;
        _effect.destroy = undefined;
        {
          fiber.flags &= ~PassiveUnmountPendingDev;
          var alternate = fiber.alternate;

          if (alternate !== null) {
            alternate.flags &= ~PassiveUnmountPendingDev;
          }
        }

        if (typeof destroy === 'function') {
          {
            setCurrentFiber(fiber);
            {
              invokeGuardedCallback(null, destroy, null);
            }

            if (hasCaughtError()) {
              if (!(fiber !== null)) {
                {
                  throw Error("Should be working on an effect.");
                }
              }

              var error = clearCaughtError();
              captureCommitPhaseError(fiber, error);
            }

            resetCurrentFiber();
          }
        }
      } // Second pass: Create new passive effects.


      var mountEffects = pendingPassiveHookEffectsMount;
      pendingPassiveHookEffectsMount = [];

      for (var _i = 0; _i < mountEffects.length; _i += 2) {
        var _effect2 = mountEffects[_i];
        var _fiber = mountEffects[_i + 1];
        {
          setCurrentFiber(_fiber);
          {
            invokeGuardedCallback(null, invokePassiveEffectCreate, null, _effect2);
          }

          if (hasCaughtError()) {
            if (!(_fiber !== null)) {
              {
                throw Error("Should be working on an effect.");
              }
            }

            var _error4 = clearCaughtError();

            captureCommitPhaseError(_fiber, _error4);
          }

          resetCurrentFiber();
        }
      } // Note: This currently assumes there are no passive effects on the root fiber
      // because the root is not part of its own effect list.
      // This could change in the future.


      var effect = root.current.firstEffect;

      while (effect !== null) {
        var nextNextEffect = effect.nextEffect; // Remove nextEffect pointer to assist GC

        effect.nextEffect = null;

        if (effect.flags & Deletion) {
          detachFiberAfterEffects(effect);
        }

        effect = nextNextEffect;
      }

      {
        popInteractions(prevInteractions);
        finishPendingInteractions(root, lanes);
      }
      {
        isFlushingPassiveEffects = false;
      }
      executionContext = prevExecutionContext;
      flushSyncCallbackQueue(); // If additional passive effects were scheduled, increment a counter. If this
      // exceeds the limit, we'll fire a warning.

      nestedPassiveUpdateCount = rootWithPendingPassiveEffects === null ? 0 : nestedPassiveUpdateCount + 1;
      return true;
    }

    function isAlreadyFailedLegacyErrorBoundary(instance) {
      return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
    }

    function markLegacyErrorBoundaryAsFailed(instance) {
      if (legacyErrorBoundariesThatAlreadyFailed === null) {
        legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);
      } else {
        legacyErrorBoundariesThatAlreadyFailed.add(instance);
      }
    }

    function prepareToThrowUncaughtError(error) {
      if (!hasUncaughtError) {
        hasUncaughtError = true;
        firstUncaughtError = error;
      }
    }

    var onUncaughtError = prepareToThrowUncaughtError;

    function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
      var errorInfo = createCapturedValue(error, sourceFiber);
      var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);
      enqueueUpdate(rootFiber, update);
      var eventTime = requestEventTime();
      var root = markUpdateLaneFromFiberToRoot(rootFiber, SyncLane);

      if (root !== null) {
        markRootUpdated(root, SyncLane, eventTime);
        ensureRootIsScheduled(root, eventTime);
        schedulePendingInteractions(root, SyncLane);
      }
    }

    function captureCommitPhaseError(sourceFiber, error) {
      if (sourceFiber.tag === HostRoot) {
        // Error was thrown at the root. There is no parent, so the root
        // itself should capture it.
        captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);
        return;
      }

      var fiber = sourceFiber.return;

      while (fiber !== null) {
        if (fiber.tag === HostRoot) {
          captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);
          return;
        } else if (fiber.tag === ClassComponent) {
          var ctor = fiber.type;
          var instance = fiber.stateNode;

          if (typeof ctor.getDerivedStateFromError === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {
            var errorInfo = createCapturedValue(error, sourceFiber);
            var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);
            enqueueUpdate(fiber, update);
            var eventTime = requestEventTime();
            var root = markUpdateLaneFromFiberToRoot(fiber, SyncLane);

            if (root !== null) {
              markRootUpdated(root, SyncLane, eventTime);
              ensureRootIsScheduled(root, eventTime);
              schedulePendingInteractions(root, SyncLane);
            } else {
              // This component has already been unmounted.
              // We can't schedule any follow up work for the root because the fiber is already unmounted,
              // but we can still call the log-only boundary so the error isn't swallowed.
              //
              // TODO This is only a temporary bandaid for the old reconciler fork.
              // We can delete this special case once the new fork is merged.
              if (typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {
                try {
                  instance.componentDidCatch(error, errorInfo);
                } catch (errorToIgnore) {// TODO Ignore this error? Rethrow it?
                  // This is kind of an edge case.
                }
              }
            }

            return;
          }
        }

        fiber = fiber.return;
      }
    }

    function pingSuspendedRoot(root, wakeable, pingedLanes) {
      var pingCache = root.pingCache;

      if (pingCache !== null) {
        // The wakeable resolved, so we no longer need to memoize, because it will
        // never be thrown again.
        pingCache.delete(wakeable);
      }

      var eventTime = requestEventTime();
      markRootPinged(root, pingedLanes);

      if (workInProgressRoot === root && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)) {
        // Received a ping at the same priority level at which we're currently
        // rendering. We might want to restart this render. This should mirror
        // the logic of whether or not a root suspends once it completes.
        // TODO: If we're rendering sync either due to Sync, Batched or expired,
        // we should probably never restart.
        // If we're suspended with delay, or if it's a retry, we'll always suspend
        // so we can always restart.
        if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) {
          // Restart from the root.
          prepareFreshStack(root, NoLanes);
        } else {
          // Even though we can't restart right now, we might get an
          // opportunity later. So we mark this render as having a ping.
          workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes);
        }
      }

      ensureRootIsScheduled(root, eventTime);
      schedulePendingInteractions(root, pingedLanes);
    }

    function retryTimedOutBoundary(boundaryFiber, retryLane) {
      // The boundary fiber (a Suspense component or SuspenseList component)
      // previously was rendered in its fallback state. One of the promises that
      // suspended it has resolved, which means at least part of the tree was
      // likely unblocked. Try rendering again, at a new expiration time.
      if (retryLane === NoLane) {
        retryLane = requestRetryLane(boundaryFiber);
      } // TODO: Special case idle priority?


      var eventTime = requestEventTime();
      var root = markUpdateLaneFromFiberToRoot(boundaryFiber, retryLane);

      if (root !== null) {
        markRootUpdated(root, retryLane, eventTime);
        ensureRootIsScheduled(root, eventTime);
        schedulePendingInteractions(root, retryLane);
      }
    }

    function resolveRetryWakeable(boundaryFiber, wakeable) {
      var retryLane = NoLane; // Default

      var retryCache;
      {
        retryCache = boundaryFiber.stateNode;
      }

      if (retryCache !== null) {
        // The wakeable resolved, so we no longer need to memoize, because it will
        // never be thrown again.
        retryCache.delete(wakeable);
      }

      retryTimedOutBoundary(boundaryFiber, retryLane);
    } // Computes the next Just Noticeable Difference (JND) boundary.
    // The theory is that a person can't tell the difference between small differences in time.
    // Therefore, if we wait a bit longer than necessary that won't translate to a noticeable
    // difference in the experience. However, waiting for longer might mean that we can avoid
    // showing an intermediate loading state. The longer we have already waited, the harder it
    // is to tell small differences in time. Therefore, the longer we've already waited,
    // the longer we can wait additionally. At some point we have to give up though.
    // We pick a train model where the next boundary commits at a consistent schedule.
    // These particular numbers are vague estimates. We expect to adjust them based on research.


    function jnd(timeElapsed) {
      return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3000 ? 3000 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;
    }

    function checkForNestedUpdates() {
      if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
        nestedUpdateCount = 0;
        rootWithNestedUpdates = null;
        {
          {
            throw Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
          }
        }
      }

      {
        if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {
          nestedPassiveUpdateCount = 0;
          error('Maximum update depth exceeded. This can happen when a component ' + "calls setState inside useEffect, but useEffect either doesn't " + 'have a dependency array, or one of the dependencies changes on ' + 'every render.');
        }
      }
    }

    function flushRenderPhaseStrictModeWarningsInDEV() {
      {
        ReactStrictModeWarnings.flushLegacyContextWarning();
        {
          ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
        }
      }
    }

    var didWarnStateUpdateForNotYetMountedComponent = null;

    function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {
      {
        if ((executionContext & RenderContext) !== NoContext) {
          // We let the other warning about render phase updates deal with this one.
          return;
        }

        if (!(fiber.mode & (BlockingMode | ConcurrentMode))) {
          return;
        }

        var tag = fiber.tag;

        if (tag !== IndeterminateComponent && tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent && tag !== Block) {
          // Only warn for user-defined components, not internal ones like Suspense.
          return;
        } // We show the whole stack but dedupe on the top component's name because
        // the problematic code almost always lies inside that component.


        var componentName = getComponentName(fiber.type) || 'ReactComponent';

        if (didWarnStateUpdateForNotYetMountedComponent !== null) {
          if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {
            return;
          }

          didWarnStateUpdateForNotYetMountedComponent.add(componentName);
        } else {
          didWarnStateUpdateForNotYetMountedComponent = new Set([componentName]);
        }

        var previousFiber = current;

        try {
          setCurrentFiber(fiber);
          error("Can't perform a React state update on a component that hasn't mounted yet. " + 'This indicates that you have a side-effect in your render function that ' + 'asynchronously later calls tries to update the component. Move this work to ' + 'useEffect instead.');
        } finally {
          if (previousFiber) {
            setCurrentFiber(fiber);
          } else {
            resetCurrentFiber();
          }
        }
      }
    }

    var didWarnStateUpdateForUnmountedComponent = null;

    function warnAboutUpdateOnUnmountedFiberInDEV(fiber) {
      {
        var tag = fiber.tag;

        if (tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent && tag !== Block) {
          // Only warn for user-defined components, not internal ones like Suspense.
          return;
        } // If there are pending passive effects unmounts for this Fiber,
        // we can assume that they would have prevented this update.


        if ((fiber.flags & PassiveUnmountPendingDev) !== NoFlags) {
          return;
        } // We show the whole stack but dedupe on the top component's name because
        // the problematic code almost always lies inside that component.


        var componentName = getComponentName(fiber.type) || 'ReactComponent';

        if (didWarnStateUpdateForUnmountedComponent !== null) {
          if (didWarnStateUpdateForUnmountedComponent.has(componentName)) {
            return;
          }

          didWarnStateUpdateForUnmountedComponent.add(componentName);
        } else {
          didWarnStateUpdateForUnmountedComponent = new Set([componentName]);
        }

        if (isFlushingPassiveEffects) ;else {
          var previousFiber = current;

          try {
            setCurrentFiber(fiber);
            error("Can't perform a React state update on an unmounted component. This " + 'is a no-op, but it indicates a memory leak in your application. To ' + 'fix, cancel all subscriptions and asynchronous tasks in %s.', tag === ClassComponent ? 'the componentWillUnmount method' : 'a useEffect cleanup function');
          } finally {
            if (previousFiber) {
              setCurrentFiber(fiber);
            } else {
              resetCurrentFiber();
            }
          }
        }
      }
    }

    var beginWork$1;
    {
      var dummyFiber = null;

      beginWork$1 = function (current, unitOfWork, lanes) {
        // If a component throws an error, we replay it again in a synchronously
        // dispatched event, so that the debugger will treat it as an uncaught
        // error See ReactErrorUtils for more information.
        // Before entering the begin phase, copy the work-in-progress onto a dummy
        // fiber. If beginWork throws, we'll use this to reset the state.
        var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);

        try {
          return beginWork(current, unitOfWork, lanes);
        } catch (originalError) {
          if (originalError !== null && typeof originalError === 'object' && typeof originalError.then === 'function') {
            // Don't replay promises. Treat everything else like an error.
            throw originalError;
          } // Keep this code in sync with handleError; any changes here must have
          // corresponding changes there.


          resetContextDependencies();
          resetHooksAfterThrow(); // Don't reset current debug fiber, since we're about to work on the
          // same fiber again.
          // Unwind the failed stack frame

          unwindInterruptedWork(unitOfWork); // Restore the original properties of the fiber.

          assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);

          if (unitOfWork.mode & ProfileMode) {
            // Reset the profiler timer.
            startProfilerTimer(unitOfWork);
          } // Run beginWork again.


          invokeGuardedCallback(null, beginWork, null, current, unitOfWork, lanes);

          if (hasCaughtError()) {
            var replayError = clearCaughtError(); // `invokeGuardedCallback` sometimes sets an expando `_suppressLogging`.
            // Rethrow this error instead of the original one.

            throw replayError;
          } else {
            // This branch is reachable if the render phase is impure.
            throw originalError;
          }
        }
      };
    }
    var didWarnAboutUpdateInRender = false;
    var didWarnAboutUpdateInRenderForAnotherComponent;
    {
      didWarnAboutUpdateInRenderForAnotherComponent = new Set();
    }

    function warnAboutRenderPhaseUpdatesInDEV(fiber) {
      {
        if (isRendering && (executionContext & RenderContext) !== NoContext && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) {
          switch (fiber.tag) {
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent:
              {
                var renderingComponentName = workInProgress && getComponentName(workInProgress.type) || 'Unknown'; // Dedupe by the rendering component because it's the one that needs to be fixed.

                var dedupeKey = renderingComponentName;

                if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {
                  didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);
                  var setStateComponentName = getComponentName(fiber.type) || 'Unknown';
                  error('Cannot update a component (`%s`) while rendering a ' + 'different component (`%s`). To locate the bad setState() call inside `%s`, ' + 'follow the stack trace as described in https://reactjs.org/link/setstate-in-render', setStateComponentName, renderingComponentName, renderingComponentName);
                }

                break;
              }

            case ClassComponent:
              {
                if (!didWarnAboutUpdateInRender) {
                  error('Cannot update during an existing state transition (such as ' + 'within `render`). Render methods should be a pure ' + 'function of props and state.');
                  didWarnAboutUpdateInRender = true;
                }

                break;
              }
          }
        }
      }
    } // a 'shared' variable that changes when act() opens/closes in tests.


    var IsThisRendererActing = {
      current: false
    };

    function warnIfNotScopedWithMatchingAct(fiber) {
      {
        if (IsSomeRendererActing.current === true && IsThisRendererActing.current !== true) {
          var previousFiber = current;

          try {
            setCurrentFiber(fiber);
            error("It looks like you're using the wrong act() around your test interactions.\n" + 'Be sure to use the matching version of act() corresponding to your renderer:\n\n' + '// for react-dom:\n' + // Break up imports to avoid accidentally parsing them as dependencies.
            'import {act} fr' + "om 'react-dom/test-utils';\n" + '// ...\n' + 'act(() => ...);\n\n' + '// for react-test-renderer:\n' + // Break up imports to avoid accidentally parsing them as dependencies.
            'import TestRenderer fr' + "om react-test-renderer';\n" + 'const {act} = TestRenderer;\n' + '// ...\n' + 'act(() => ...);');
          } finally {
            if (previousFiber) {
              setCurrentFiber(fiber);
            } else {
              resetCurrentFiber();
            }
          }
        }
      }
    }

    function warnIfNotCurrentlyActingEffectsInDEV(fiber) {
      {
        if ((fiber.mode & StrictMode) !== NoMode && IsSomeRendererActing.current === false && IsThisRendererActing.current === false) {
          error('An update to %s ran an effect, but was not wrapped in act(...).\n\n' + 'When testing, code that causes React state updates should be ' + 'wrapped into act(...):\n\n' + 'act(() => {\n' + '  /* fire events that update state */\n' + '});\n' + '/* assert on the output */\n\n' + "This ensures that you're testing the behavior the user would see " + 'in the browser.' + ' Learn more at https://reactjs.org/link/wrap-tests-with-act', getComponentName(fiber.type));
        }
      }
    }

    function warnIfNotCurrentlyActingUpdatesInDEV(fiber) {
      {
        if (executionContext === NoContext && IsSomeRendererActing.current === false && IsThisRendererActing.current === false) {
          var previousFiber = current;

          try {
            setCurrentFiber(fiber);
            error('An update to %s inside a test was not wrapped in act(...).\n\n' + 'When testing, code that causes React state updates should be ' + 'wrapped into act(...):\n\n' + 'act(() => {\n' + '  /* fire events that update state */\n' + '});\n' + '/* assert on the output */\n\n' + "This ensures that you're testing the behavior the user would see " + 'in the browser.' + ' Learn more at https://reactjs.org/link/wrap-tests-with-act', getComponentName(fiber.type));
          } finally {
            if (previousFiber) {
              setCurrentFiber(fiber);
            } else {
              resetCurrentFiber();
            }
          }
        }
      }
    }

    var warnIfNotCurrentlyActingUpdatesInDev = warnIfNotCurrentlyActingUpdatesInDEV; // In tests, we want to enforce a mocked scheduler.

    var didWarnAboutUnmockedScheduler = false; // TODO Before we release concurrent mode, revisit this and decide whether a mocked
    // scheduler is the actual recommendation. The alternative could be a testing build,
    // a new lib, or whatever; we dunno just yet. This message is for early adopters
    // to get their tests right.

    function warnIfUnmockedScheduler(fiber) {
      {
        if (didWarnAboutUnmockedScheduler === false && Scheduler.unstable_flushAllWithoutAsserting === undefined) {
          if (fiber.mode & BlockingMode || fiber.mode & ConcurrentMode) {
            didWarnAboutUnmockedScheduler = true;
            error('In Concurrent or Sync modes, the "scheduler" module needs to be mocked ' + 'to guarantee consistent behaviour across tests and browsers. ' + 'For example, with jest: \n' + // Break up requires to avoid accidentally parsing them as dependencies.
            "jest.mock('scheduler', () => require" + "('scheduler/unstable_mock'));\n\n" + 'For more info, visit https://reactjs.org/link/mock-scheduler');
          }
        }
      }
    }

    function computeThreadID(root, lane) {
      // Interaction threads are unique per root and expiration time.
      // NOTE: Intentionally unsound cast. All that matters is that it's a number
      // and it represents a batch of work. Could make a helper function instead,
      // but meh this is fine for now.
      return lane * 1000 + root.interactionThreadID;
    }

    function markSpawnedWork(lane) {
      if (spawnedWorkDuringRender === null) {
        spawnedWorkDuringRender = [lane];
      } else {
        spawnedWorkDuringRender.push(lane);
      }
    }

    function scheduleInteractions(root, lane, interactions) {
      if (interactions.size > 0) {
        var pendingInteractionMap = root.pendingInteractionMap;
        var pendingInteractions = pendingInteractionMap.get(lane);

        if (pendingInteractions != null) {
          interactions.forEach(function (interaction) {
            if (!pendingInteractions.has(interaction)) {
              // Update the pending async work count for previously unscheduled interaction.
              interaction.__count++;
            }

            pendingInteractions.add(interaction);
          });
        } else {
          pendingInteractionMap.set(lane, new Set(interactions)); // Update the pending async work count for the current interactions.

          interactions.forEach(function (interaction) {
            interaction.__count++;
          });
        }

        var subscriber = tracing.__subscriberRef.current;

        if (subscriber !== null) {
          var threadID = computeThreadID(root, lane);
          subscriber.onWorkScheduled(interactions, threadID);
        }
      }
    }

    function schedulePendingInteractions(root, lane) {
      scheduleInteractions(root, lane, tracing.__interactionsRef.current);
    }

    function startWorkOnPendingInteractions(root, lanes) {
      // we can accurately attribute time spent working on it, And so that cascading
      // work triggered during the render phase will be associated with it.
      var interactions = new Set();
      root.pendingInteractionMap.forEach(function (scheduledInteractions, scheduledLane) {
        if (includesSomeLane(lanes, scheduledLane)) {
          scheduledInteractions.forEach(function (interaction) {
            return interactions.add(interaction);
          });
        }
      }); // Store the current set of interactions on the FiberRoot for a few reasons:
      // We can re-use it in hot functions like performConcurrentWorkOnRoot()
      // without having to recalculate it. We will also use it in commitWork() to
      // pass to any Profiler onRender() hooks. This also provides DevTools with a
      // way to access it when the onCommitRoot() hook is called.

      root.memoizedInteractions = interactions;

      if (interactions.size > 0) {
        var subscriber = tracing.__subscriberRef.current;

        if (subscriber !== null) {
          var threadID = computeThreadID(root, lanes);

          try {
            subscriber.onWorkStarted(interactions, threadID);
          } catch (error) {
            // If the subscriber throws, rethrow it in a separate task
            scheduleCallback(ImmediatePriority$1, function () {
              throw error;
            });
          }
        }
      }
    }

    function finishPendingInteractions(root, committedLanes) {
      var remainingLanesAfterCommit = root.pendingLanes;
      var subscriber;

      try {
        subscriber = tracing.__subscriberRef.current;

        if (subscriber !== null && root.memoizedInteractions.size > 0) {
          // FIXME: More than one lane can finish in a single commit.
          var threadID = computeThreadID(root, committedLanes);
          subscriber.onWorkStopped(root.memoizedInteractions, threadID);
        }
      } catch (error) {
        // If the subscriber throws, rethrow it in a separate task
        scheduleCallback(ImmediatePriority$1, function () {
          throw error;
        });
      } finally {
        // Clear completed interactions from the pending Map.
        // Unless the render was suspended or cascading work was scheduled,
        // In which case– leave pending interactions until the subsequent render.
        var pendingInteractionMap = root.pendingInteractionMap;
        pendingInteractionMap.forEach(function (scheduledInteractions, lane) {
          // Only decrement the pending interaction count if we're done.
          // If there's still work at the current priority,
          // That indicates that we are waiting for suspense data.
          if (!includesSomeLane(remainingLanesAfterCommit, lane)) {
            pendingInteractionMap.delete(lane);
            scheduledInteractions.forEach(function (interaction) {
              interaction.__count--;

              if (subscriber !== null && interaction.__count === 0) {
                try {
                  subscriber.onInteractionScheduledWorkCompleted(interaction);
                } catch (error) {
                  // If the subscriber throws, rethrow it in a separate task
                  scheduleCallback(ImmediatePriority$1, function () {
                    throw error;
                  });
                }
              }
            });
          }
        });
      }
    } // `act` testing API


    function shouldForceFlushFallbacksInDEV() {
      // Never force flush in production. This function should get stripped out.
      return actingUpdatesScopeDepth > 0;
    } // so we can tell if any async act() calls try to run in parallel.


    var actingUpdatesScopeDepth = 0;

    function detachFiberAfterEffects(fiber) {
      fiber.sibling = null;
      fiber.stateNode = null;
    }

    var resolveFamily = null; // $FlowFixMe Flow gets confused by a WeakSet feature check below.

    var failedBoundaries = null;

    var setRefreshHandler = function (handler) {
      {
        resolveFamily = handler;
      }
    };

    function resolveFunctionForHotReloading(type) {
      {
        if (resolveFamily === null) {
          // Hot reloading is disabled.
          return type;
        }

        var family = resolveFamily(type);

        if (family === undefined) {
          return type;
        } // Use the latest known implementation.


        return family.current;
      }
    }

    function resolveClassForHotReloading(type) {
      // No implementation differences.
      return resolveFunctionForHotReloading(type);
    }

    function resolveForwardRefForHotReloading(type) {
      {
        if (resolveFamily === null) {
          // Hot reloading is disabled.
          return type;
        }

        var family = resolveFamily(type);

        if (family === undefined) {
          // Check if we're dealing with a real forwardRef. Don't want to crash early.
          if (type !== null && type !== undefined && typeof type.render === 'function') {
            // ForwardRef is special because its resolved .type is an object,
            // but it's possible that we only have its inner render function in the map.
            // If that inner render function is different, we'll build a new forwardRef type.
            var currentRender = resolveFunctionForHotReloading(type.render);

            if (type.render !== currentRender) {
              var syntheticType = {
                $$typeof: REACT_FORWARD_REF_TYPE,
                render: currentRender
              };

              if (type.displayName !== undefined) {
                syntheticType.displayName = type.displayName;
              }

              return syntheticType;
            }
          }

          return type;
        } // Use the latest known implementation.


        return family.current;
      }
    }

    function isCompatibleFamilyForHotReloading(fiber, element) {
      {
        if (resolveFamily === null) {
          // Hot reloading is disabled.
          return false;
        }

        var prevType = fiber.elementType;
        var nextType = element.type; // If we got here, we know types aren't === equal.

        var needsCompareFamilies = false;
        var $$typeofNextType = typeof nextType === 'object' && nextType !== null ? nextType.$$typeof : null;

        switch (fiber.tag) {
          case ClassComponent:
            {
              if (typeof nextType === 'function') {
                needsCompareFamilies = true;
              }

              break;
            }

          case FunctionComponent:
            {
              if (typeof nextType === 'function') {
                needsCompareFamilies = true;
              } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                // We don't know the inner type yet.
                // We're going to assume that the lazy inner type is stable,
                // and so it is sufficient to avoid reconciling it away.
                // We're not going to unwrap or actually use the new lazy type.
                needsCompareFamilies = true;
              }

              break;
            }

          case ForwardRef:
            {
              if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {
                needsCompareFamilies = true;
              } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                needsCompareFamilies = true;
              }

              break;
            }

          case MemoComponent:
          case SimpleMemoComponent:
            {
              if ($$typeofNextType === REACT_MEMO_TYPE) {
                // TODO: if it was but can no longer be simple,
                // we shouldn't set this.
                needsCompareFamilies = true;
              } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                needsCompareFamilies = true;
              }

              break;
            }

          default:
            return false;
        } // Check if both types have a family and it's the same one.


        if (needsCompareFamilies) {
          // Note: memo() and forwardRef() we'll compare outer rather than inner type.
          // This means both of them need to be registered to preserve state.
          // If we unwrapped and compared the inner types for wrappers instead,
          // then we would risk falsely saying two separate memo(Foo)
          // calls are equivalent because they wrap the same Foo function.
          var prevFamily = resolveFamily(prevType);

          if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) {
            return true;
          }
        }

        return false;
      }
    }

    function markFailedErrorBoundaryForHotReloading(fiber) {
      {
        if (resolveFamily === null) {
          // Hot reloading is disabled.
          return;
        }

        if (typeof WeakSet !== 'function') {
          return;
        }

        if (failedBoundaries === null) {
          failedBoundaries = new WeakSet();
        }

        failedBoundaries.add(fiber);
      }
    }

    var scheduleRefresh = function (root, update) {
      {
        if (resolveFamily === null) {
          // Hot reloading is disabled.
          return;
        }

        var staleFamilies = update.staleFamilies,
            updatedFamilies = update.updatedFamilies;
        flushPassiveEffects();
        flushSync(function () {
          scheduleFibersWithFamiliesRecursively(root.current, updatedFamilies, staleFamilies);
        });
      }
    };

    var scheduleRoot = function (root, element) {
      {
        if (root.context !== emptyContextObject) {
          // Super edge case: root has a legacy _renderSubtree context
          // but we don't know the parentComponent so we can't pass it.
          // Just ignore. We'll delete this with _renderSubtree code path later.
          return;
        }

        flushPassiveEffects();
        flushSync(function () {
          updateContainer(element, root, null, null);
        });
      }
    };

    function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
      {
        var alternate = fiber.alternate,
            child = fiber.child,
            sibling = fiber.sibling,
            tag = fiber.tag,
            type = fiber.type;
        var candidateType = null;

        switch (tag) {
          case FunctionComponent:
          case SimpleMemoComponent:
          case ClassComponent:
            candidateType = type;
            break;

          case ForwardRef:
            candidateType = type.render;
            break;
        }

        if (resolveFamily === null) {
          throw new Error('Expected resolveFamily to be set during hot reload.');
        }

        var needsRender = false;
        var needsRemount = false;

        if (candidateType !== null) {
          var family = resolveFamily(candidateType);

          if (family !== undefined) {
            if (staleFamilies.has(family)) {
              needsRemount = true;
            } else if (updatedFamilies.has(family)) {
              if (tag === ClassComponent) {
                needsRemount = true;
              } else {
                needsRender = true;
              }
            }
          }
        }

        if (failedBoundaries !== null) {
          if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) {
            needsRemount = true;
          }
        }

        if (needsRemount) {
          fiber._debugNeedsRemount = true;
        }

        if (needsRemount || needsRender) {
          scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
        }

        if (child !== null && !needsRemount) {
          scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
        }

        if (sibling !== null) {
          scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
        }
      }
    }

    var findHostInstancesForRefresh = function (root, families) {
      {
        var hostInstances = new Set();
        var types = new Set(families.map(function (family) {
          return family.current;
        }));
        findHostInstancesForMatchingFibersRecursively(root.current, types, hostInstances);
        return hostInstances;
      }
    };

    function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {
      {
        var child = fiber.child,
            sibling = fiber.sibling,
            tag = fiber.tag,
            type = fiber.type;
        var candidateType = null;

        switch (tag) {
          case FunctionComponent:
          case SimpleMemoComponent:
          case ClassComponent:
            candidateType = type;
            break;

          case ForwardRef:
            candidateType = type.render;
            break;
        }

        var didMatch = false;

        if (candidateType !== null) {
          if (types.has(candidateType)) {
            didMatch = true;
          }
        }

        if (didMatch) {
          // We have a match. This only drills down to the closest host components.
          // There's no need to search deeper because for the purpose of giving
          // visual feedback, "flashing" outermost parent rectangles is sufficient.
          findHostInstancesForFiberShallowly(fiber, hostInstances);
        } else {
          // If there's no match, maybe there will be one further down in the child tree.
          if (child !== null) {
            findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);
          }
        }

        if (sibling !== null) {
          findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);
        }
      }
    }

    function findHostInstancesForFiberShallowly(fiber, hostInstances) {
      {
        var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);

        if (foundHostInstances) {
          return;
        } // If we didn't find any host children, fallback to closest host parent.


        var node = fiber;

        while (true) {
          switch (node.tag) {
            case HostComponent:
              hostInstances.add(node.stateNode);
              return;

            case HostPortal:
              hostInstances.add(node.stateNode.containerInfo);
              return;

            case HostRoot:
              hostInstances.add(node.stateNode.containerInfo);
              return;
          }

          if (node.return === null) {
            throw new Error('Expected to reach root first.');
          }

          node = node.return;
        }
      }
    }

    function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {
      {
        var node = fiber;
        var foundHostInstances = false;

        while (true) {
          if (node.tag === HostComponent) {
            // We got a match.
            foundHostInstances = true;
            hostInstances.add(node.stateNode); // There may still be more, so keep searching.
          } else if (node.child !== null) {
            node.child.return = node;
            node = node.child;
            continue;
          }

          if (node === fiber) {
            return foundHostInstances;
          }

          while (node.sibling === null) {
            if (node.return === null || node.return === fiber) {
              return foundHostInstances;
            }

            node = node.return;
          }

          node.sibling.return = node.return;
          node = node.sibling;
        }
      }
      return false;
    }

    var hasBadMapPolyfill;
    {
      hasBadMapPolyfill = false;

      try {
        var nonExtensibleObject = Object.preventExtensions({});
        /* eslint-disable no-new */

        new Map([[nonExtensibleObject, null]]);
        new Set([nonExtensibleObject]);
        /* eslint-enable no-new */
      } catch (e) {
        // TODO: Consider warning about bad polyfills
        hasBadMapPolyfill = true;
      }
    }
    var debugCounter = 1;

    function FiberNode(tag, pendingProps, key, mode) {
      // Instance
      this.tag = tag;
      this.key = key;
      this.elementType = null;
      this.type = null;
      this.stateNode = null; // Fiber

      this.return = null;
      this.child = null;
      this.sibling = null;
      this.index = 0;
      this.ref = null;
      this.pendingProps = pendingProps;
      this.memoizedProps = null;
      this.updateQueue = null;
      this.memoizedState = null;
      this.dependencies = null;
      this.mode = mode; // Effects

      this.flags = NoFlags;
      this.nextEffect = null;
      this.firstEffect = null;
      this.lastEffect = null;
      this.lanes = NoLanes;
      this.childLanes = NoLanes;
      this.alternate = null;
      {
        // Note: The following is done to avoid a v8 performance cliff.
        //
        // Initializing the fields below to smis and later updating them with
        // double values will cause Fibers to end up having separate shapes.
        // This behavior/bug has something to do with Object.preventExtension().
        // Fortunately this only impacts DEV builds.
        // Unfortunately it makes React unusably slow for some applications.
        // To work around this, initialize the fields below with doubles.
        //
        // Learn more about this here:
        // https://github.com/facebook/react/issues/14365
        // https://bugs.chromium.org/p/v8/issues/detail?id=8538
        this.actualDuration = Number.NaN;
        this.actualStartTime = Number.NaN;
        this.selfBaseDuration = Number.NaN;
        this.treeBaseDuration = Number.NaN; // It's okay to replace the initial doubles with smis after initialization.
        // This won't trigger the performance cliff mentioned above,
        // and it simplifies other profiler code (including DevTools).

        this.actualDuration = 0;
        this.actualStartTime = -1;
        this.selfBaseDuration = 0;
        this.treeBaseDuration = 0;
      }
      {
        // This isn't directly used but is handy for debugging internals:
        this._debugID = debugCounter++;
        this._debugSource = null;
        this._debugOwner = null;
        this._debugNeedsRemount = false;
        this._debugHookTypes = null;

        if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {
          Object.preventExtensions(this);
        }
      }
    } // This is a constructor function, rather than a POJO constructor, still
    // please ensure we do the following:
    // 1) Nobody should add any instance methods on this. Instance methods can be
    //    more difficult to predict when they get optimized and they are almost
    //    never inlined properly in static compilers.
    // 2) Nobody should rely on `instanceof Fiber` for type testing. We should
    //    always know when it is a fiber.
    // 3) We might want to experiment with using numeric keys since they are easier
    //    to optimize in a non-JIT environment.
    // 4) We can easily go from a constructor to a createFiber object literal if that
    //    is faster.
    // 5) It should be easy to port this to a C struct and keep a C implementation
    //    compatible.


    var createFiber = function (tag, pendingProps, key, mode) {
      // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
      return new FiberNode(tag, pendingProps, key, mode);
    };

    function shouldConstruct$1(Component) {
      var prototype = Component.prototype;
      return !!(prototype && prototype.isReactComponent);
    }

    function isSimpleFunctionComponent(type) {
      return typeof type === 'function' && !shouldConstruct$1(type) && type.defaultProps === undefined;
    }

    function resolveLazyComponentTag(Component) {
      if (typeof Component === 'function') {
        return shouldConstruct$1(Component) ? ClassComponent : FunctionComponent;
      } else if (Component !== undefined && Component !== null) {
        var $$typeof = Component.$$typeof;

        if ($$typeof === REACT_FORWARD_REF_TYPE) {
          return ForwardRef;
        }

        if ($$typeof === REACT_MEMO_TYPE) {
          return MemoComponent;
        }
      }

      return IndeterminateComponent;
    } // This is used to create an alternate fiber to do work on.


    function createWorkInProgress(current, pendingProps) {
      var workInProgress = current.alternate;

      if (workInProgress === null) {
        // We use a double buffering pooling technique because we know that we'll
        // only ever need at most two versions of a tree. We pool the "other" unused
        // node that we're free to reuse. This is lazily created to avoid allocating
        // extra objects for things that are never updated. It also allow us to
        // reclaim the extra memory if needed.
        workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);
        workInProgress.elementType = current.elementType;
        workInProgress.type = current.type;
        workInProgress.stateNode = current.stateNode;
        {
          // DEV-only fields
          workInProgress._debugID = current._debugID;
          workInProgress._debugSource = current._debugSource;
          workInProgress._debugOwner = current._debugOwner;
          workInProgress._debugHookTypes = current._debugHookTypes;
        }
        workInProgress.alternate = current;
        current.alternate = workInProgress;
      } else {
        workInProgress.pendingProps = pendingProps; // Needed because Blocks store data on type.

        workInProgress.type = current.type; // We already have an alternate.
        // Reset the effect tag.

        workInProgress.flags = NoFlags; // The effect list is no longer valid.

        workInProgress.nextEffect = null;
        workInProgress.firstEffect = null;
        workInProgress.lastEffect = null;
        {
          // We intentionally reset, rather than copy, actualDuration & actualStartTime.
          // This prevents time from endlessly accumulating in new commits.
          // This has the downside of resetting values for different priority renders,
          // But works for yielding (the common case) and should support resuming.
          workInProgress.actualDuration = 0;
          workInProgress.actualStartTime = -1;
        }
      }

      workInProgress.childLanes = current.childLanes;
      workInProgress.lanes = current.lanes;
      workInProgress.child = current.child;
      workInProgress.memoizedProps = current.memoizedProps;
      workInProgress.memoizedState = current.memoizedState;
      workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so
      // it cannot be shared with the current fiber.

      var currentDependencies = current.dependencies;
      workInProgress.dependencies = currentDependencies === null ? null : {
        lanes: currentDependencies.lanes,
        firstContext: currentDependencies.firstContext
      }; // These will be overridden during the parent's reconciliation

      workInProgress.sibling = current.sibling;
      workInProgress.index = current.index;
      workInProgress.ref = current.ref;
      {
        workInProgress.selfBaseDuration = current.selfBaseDuration;
        workInProgress.treeBaseDuration = current.treeBaseDuration;
      }
      {
        workInProgress._debugNeedsRemount = current._debugNeedsRemount;

        switch (workInProgress.tag) {
          case IndeterminateComponent:
          case FunctionComponent:
          case SimpleMemoComponent:
            workInProgress.type = resolveFunctionForHotReloading(current.type);
            break;

          case ClassComponent:
            workInProgress.type = resolveClassForHotReloading(current.type);
            break;

          case ForwardRef:
            workInProgress.type = resolveForwardRefForHotReloading(current.type);
            break;
        }
      }
      return workInProgress;
    } // Used to reuse a Fiber for a second pass.


    function resetWorkInProgress(workInProgress, renderLanes) {
      // This resets the Fiber to what createFiber or createWorkInProgress would
      // have set the values to before during the first pass. Ideally this wouldn't
      // be necessary but unfortunately many code paths reads from the workInProgress
      // when they should be reading from current and writing to workInProgress.
      // We assume pendingProps, index, key, ref, return are still untouched to
      // avoid doing another reconciliation.
      // Reset the effect tag but keep any Placement tags, since that's something
      // that child fiber is setting, not the reconciliation.
      workInProgress.flags &= Placement; // The effect list is no longer valid.

      workInProgress.nextEffect = null;
      workInProgress.firstEffect = null;
      workInProgress.lastEffect = null;
      var current = workInProgress.alternate;

      if (current === null) {
        // Reset to createFiber's initial values.
        workInProgress.childLanes = NoLanes;
        workInProgress.lanes = renderLanes;
        workInProgress.child = null;
        workInProgress.memoizedProps = null;
        workInProgress.memoizedState = null;
        workInProgress.updateQueue = null;
        workInProgress.dependencies = null;
        workInProgress.stateNode = null;
        {
          // Note: We don't reset the actualTime counts. It's useful to accumulate
          // actual time across multiple render passes.
          workInProgress.selfBaseDuration = 0;
          workInProgress.treeBaseDuration = 0;
        }
      } else {
        // Reset to the cloned values that createWorkInProgress would've.
        workInProgress.childLanes = current.childLanes;
        workInProgress.lanes = current.lanes;
        workInProgress.child = current.child;
        workInProgress.memoizedProps = current.memoizedProps;
        workInProgress.memoizedState = current.memoizedState;
        workInProgress.updateQueue = current.updateQueue; // Needed because Blocks store data on type.

        workInProgress.type = current.type; // Clone the dependencies object. This is mutated during the render phase, so
        // it cannot be shared with the current fiber.

        var currentDependencies = current.dependencies;
        workInProgress.dependencies = currentDependencies === null ? null : {
          lanes: currentDependencies.lanes,
          firstContext: currentDependencies.firstContext
        };
        {
          // Note: We don't reset the actualTime counts. It's useful to accumulate
          // actual time across multiple render passes.
          workInProgress.selfBaseDuration = current.selfBaseDuration;
          workInProgress.treeBaseDuration = current.treeBaseDuration;
        }
      }

      return workInProgress;
    }

    function createHostRootFiber(tag) {
      var mode;

      if (tag === ConcurrentRoot) {
        mode = ConcurrentMode | BlockingMode | StrictMode;
      } else if (tag === BlockingRoot) {
        mode = BlockingMode | StrictMode;
      } else {
        mode = NoMode;
      }

      if (isDevToolsPresent) {
        // Always collect profile timings when DevTools are present.
        // This enables DevTools to start capturing timing at any point–
        // Without some nodes in the tree having empty base times.
        mode |= ProfileMode;
      }

      return createFiber(HostRoot, null, null, mode);
    }

    function createFiberFromTypeAndProps(type, // React$ElementType
    key, pendingProps, owner, mode, lanes) {
      var fiberTag = IndeterminateComponent; // The resolved type is set if we know what the final type will be. I.e. it's not lazy.

      var resolvedType = type;

      if (typeof type === 'function') {
        if (shouldConstruct$1(type)) {
          fiberTag = ClassComponent;
          {
            resolvedType = resolveClassForHotReloading(resolvedType);
          }
        } else {
          {
            resolvedType = resolveFunctionForHotReloading(resolvedType);
          }
        }
      } else if (typeof type === 'string') {
        fiberTag = HostComponent;
      } else {
        getTag: switch (type) {
          case REACT_FRAGMENT_TYPE:
            return createFiberFromFragment(pendingProps.children, mode, lanes, key);

          case REACT_DEBUG_TRACING_MODE_TYPE:
            fiberTag = Mode;
            mode |= DebugTracingMode;
            break;

          case REACT_STRICT_MODE_TYPE:
            fiberTag = Mode;
            mode |= StrictMode;
            break;

          case REACT_PROFILER_TYPE:
            return createFiberFromProfiler(pendingProps, mode, lanes, key);

          case REACT_SUSPENSE_TYPE:
            return createFiberFromSuspense(pendingProps, mode, lanes, key);

          case REACT_SUSPENSE_LIST_TYPE:
            return createFiberFromSuspenseList(pendingProps, mode, lanes, key);

          case REACT_OFFSCREEN_TYPE:
            return createFiberFromOffscreen(pendingProps, mode, lanes, key);

          case REACT_LEGACY_HIDDEN_TYPE:
            return createFiberFromLegacyHidden(pendingProps, mode, lanes, key);

          case REACT_SCOPE_TYPE: // eslint-disable-next-line no-fallthrough

          default:
            {
              if (typeof type === 'object' && type !== null) {
                switch (type.$$typeof) {
                  case REACT_PROVIDER_TYPE:
                    fiberTag = ContextProvider;
                    break getTag;

                  case REACT_CONTEXT_TYPE:
                    // This is a consumer
                    fiberTag = ContextConsumer;
                    break getTag;

                  case REACT_FORWARD_REF_TYPE:
                    fiberTag = ForwardRef;
                    {
                      resolvedType = resolveForwardRefForHotReloading(resolvedType);
                    }
                    break getTag;

                  case REACT_MEMO_TYPE:
                    fiberTag = MemoComponent;
                    break getTag;

                  case REACT_LAZY_TYPE:
                    fiberTag = LazyComponent;
                    resolvedType = null;
                    break getTag;

                  case REACT_BLOCK_TYPE:
                    fiberTag = Block;
                    break getTag;
                }
              }

              var info = '';
              {
                if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
                  info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and " + 'named imports.';
                }

                var ownerName = owner ? getComponentName(owner.type) : null;

                if (ownerName) {
                  info += '\n\nCheck the render method of `' + ownerName + '`.';
                }
              }
              {
                {
                  throw Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (type == null ? type : typeof type) + "." + info);
                }
              }
            }
        }
      }

      var fiber = createFiber(fiberTag, pendingProps, key, mode);
      fiber.elementType = type;
      fiber.type = resolvedType;
      fiber.lanes = lanes;
      {
        fiber._debugOwner = owner;
      }
      return fiber;
    }

    function createFiberFromElement(element, mode, lanes) {
      var owner = null;
      {
        owner = element._owner;
      }
      var type = element.type;
      var key = element.key;
      var pendingProps = element.props;
      var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes);
      {
        fiber._debugSource = element._source;
        fiber._debugOwner = element._owner;
      }
      return fiber;
    }

    function createFiberFromFragment(elements, mode, lanes, key) {
      var fiber = createFiber(Fragment, elements, key, mode);
      fiber.lanes = lanes;
      return fiber;
    }

    function createFiberFromProfiler(pendingProps, mode, lanes, key) {
      {
        if (typeof pendingProps.id !== 'string') {
          error('Profiler must specify an "id" as a prop');
        }
      }
      var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode); // TODO: The Profiler fiber shouldn't have a type. It has a tag.

      fiber.elementType = REACT_PROFILER_TYPE;
      fiber.type = REACT_PROFILER_TYPE;
      fiber.lanes = lanes;
      {
        fiber.stateNode = {
          effectDuration: 0,
          passiveEffectDuration: 0
        };
      }
      return fiber;
    }

    function createFiberFromSuspense(pendingProps, mode, lanes, key) {
      var fiber = createFiber(SuspenseComponent, pendingProps, key, mode); // TODO: The SuspenseComponent fiber shouldn't have a type. It has a tag.
      // This needs to be fixed in getComponentName so that it relies on the tag
      // instead.

      fiber.type = REACT_SUSPENSE_TYPE;
      fiber.elementType = REACT_SUSPENSE_TYPE;
      fiber.lanes = lanes;
      return fiber;
    }

    function createFiberFromSuspenseList(pendingProps, mode, lanes, key) {
      var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);
      {
        // TODO: The SuspenseListComponent fiber shouldn't have a type. It has a tag.
        // This needs to be fixed in getComponentName so that it relies on the tag
        // instead.
        fiber.type = REACT_SUSPENSE_LIST_TYPE;
      }
      fiber.elementType = REACT_SUSPENSE_LIST_TYPE;
      fiber.lanes = lanes;
      return fiber;
    }

    function createFiberFromOffscreen(pendingProps, mode, lanes, key) {
      var fiber = createFiber(OffscreenComponent, pendingProps, key, mode); // TODO: The OffscreenComponent fiber shouldn't have a type. It has a tag.
      // This needs to be fixed in getComponentName so that it relies on the tag
      // instead.

      {
        fiber.type = REACT_OFFSCREEN_TYPE;
      }
      fiber.elementType = REACT_OFFSCREEN_TYPE;
      fiber.lanes = lanes;
      return fiber;
    }

    function createFiberFromLegacyHidden(pendingProps, mode, lanes, key) {
      var fiber = createFiber(LegacyHiddenComponent, pendingProps, key, mode); // TODO: The LegacyHidden fiber shouldn't have a type. It has a tag.
      // This needs to be fixed in getComponentName so that it relies on the tag
      // instead.

      {
        fiber.type = REACT_LEGACY_HIDDEN_TYPE;
      }
      fiber.elementType = REACT_LEGACY_HIDDEN_TYPE;
      fiber.lanes = lanes;
      return fiber;
    }

    function createFiberFromText(content, mode, lanes) {
      var fiber = createFiber(HostText, content, null, mode);
      fiber.lanes = lanes;
      return fiber;
    }

    function createFiberFromHostInstanceForDeletion() {
      var fiber = createFiber(HostComponent, null, null, NoMode); // TODO: These should not need a type.

      fiber.elementType = 'DELETED';
      fiber.type = 'DELETED';
      return fiber;
    }

    function createFiberFromPortal(portal, mode, lanes) {
      var pendingProps = portal.children !== null ? portal.children : [];
      var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
      fiber.lanes = lanes;
      fiber.stateNode = {
        containerInfo: portal.containerInfo,
        pendingChildren: null,
        // Used by persistent updates
        implementation: portal.implementation
      };
      return fiber;
    } // Used for stashing WIP properties to replay failed work in DEV.


    function assignFiberPropertiesInDEV(target, source) {
      if (target === null) {
        // This Fiber's initial properties will always be overwritten.
        // We only use a Fiber to ensure the same hidden class so DEV isn't slow.
        target = createFiber(IndeterminateComponent, null, null, NoMode);
      } // This is intentionally written as a list of all properties.
      // We tried to use Object.assign() instead but this is called in
      // the hottest path, and Object.assign() was too slow:
      // https://github.com/facebook/react/issues/12502
      // This code is DEV-only so size is not a concern.


      target.tag = source.tag;
      target.key = source.key;
      target.elementType = source.elementType;
      target.type = source.type;
      target.stateNode = source.stateNode;
      target.return = source.return;
      target.child = source.child;
      target.sibling = source.sibling;
      target.index = source.index;
      target.ref = source.ref;
      target.pendingProps = source.pendingProps;
      target.memoizedProps = source.memoizedProps;
      target.updateQueue = source.updateQueue;
      target.memoizedState = source.memoizedState;
      target.dependencies = source.dependencies;
      target.mode = source.mode;
      target.flags = source.flags;
      target.nextEffect = source.nextEffect;
      target.firstEffect = source.firstEffect;
      target.lastEffect = source.lastEffect;
      target.lanes = source.lanes;
      target.childLanes = source.childLanes;
      target.alternate = source.alternate;
      {
        target.actualDuration = source.actualDuration;
        target.actualStartTime = source.actualStartTime;
        target.selfBaseDuration = source.selfBaseDuration;
        target.treeBaseDuration = source.treeBaseDuration;
      }
      target._debugID = source._debugID;
      target._debugSource = source._debugSource;
      target._debugOwner = source._debugOwner;
      target._debugNeedsRemount = source._debugNeedsRemount;
      target._debugHookTypes = source._debugHookTypes;
      return target;
    }

    function FiberRootNode(containerInfo, tag, hydrate) {
      this.tag = tag;
      this.containerInfo = containerInfo;
      this.pendingChildren = null;
      this.current = null;
      this.pingCache = null;
      this.finishedWork = null;
      this.timeoutHandle = noTimeout;
      this.context = null;
      this.pendingContext = null;
      this.hydrate = hydrate;
      this.callbackNode = null;
      this.callbackPriority = NoLanePriority;
      this.eventTimes = createLaneMap(NoLanes);
      this.expirationTimes = createLaneMap(NoTimestamp);
      this.pendingLanes = NoLanes;
      this.suspendedLanes = NoLanes;
      this.pingedLanes = NoLanes;
      this.expiredLanes = NoLanes;
      this.mutableReadLanes = NoLanes;
      this.finishedLanes = NoLanes;
      this.entangledLanes = NoLanes;
      this.entanglements = createLaneMap(NoLanes);
      {
        this.mutableSourceEagerHydrationData = null;
      }
      {
        this.interactionThreadID = tracing.unstable_getThreadID();
        this.memoizedInteractions = new Set();
        this.pendingInteractionMap = new Map();
      }
      {
        switch (tag) {
          case BlockingRoot:
            this._debugRootType = 'createBlockingRoot()';
            break;

          case ConcurrentRoot:
            this._debugRootType = 'createRoot()';
            break;

          case LegacyRoot:
            this._debugRootType = 'createLegacyRoot()';
            break;
        }
      }
    }

    function createFiberRoot(containerInfo, tag, hydrate, hydrationCallbacks) {
      var root = new FiberRootNode(containerInfo, tag, hydrate); // stateNode is any.

      var uninitializedFiber = createHostRootFiber(tag);
      root.current = uninitializedFiber;
      uninitializedFiber.stateNode = root;
      initializeUpdateQueue(uninitializedFiber);
      return root;
    } // This ensures that the version used for server rendering matches the one
    // that is eventually read during hydration.
    // If they don't match there's a potential tear and a full deopt render is required.


    function registerMutableSourceForHydration(root, mutableSource) {
      var getVersion = mutableSource._getVersion;
      var version = getVersion(mutableSource._source); // TODO Clear this data once all pending hydration work is finished.
      // Retaining it forever may interfere with GC.

      if (root.mutableSourceEagerHydrationData == null) {
        root.mutableSourceEagerHydrationData = [mutableSource, version];
      } else {
        root.mutableSourceEagerHydrationData.push(mutableSource, version);
      }
    }

    function createPortal(children, containerInfo, // TODO: figure out the API for cross-renderer implementation.
    implementation) {
      var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
      return {
        // This tag allow us to uniquely identify this as a React Portal
        $$typeof: REACT_PORTAL_TYPE,
        key: key == null ? null : '' + key,
        children: children,
        containerInfo: containerInfo,
        implementation: implementation
      };
    }

    var didWarnAboutNestedUpdates;
    var didWarnAboutFindNodeInStrictMode;
    {
      didWarnAboutNestedUpdates = false;
      didWarnAboutFindNodeInStrictMode = {};
    }

    function getContextForSubtree(parentComponent) {
      if (!parentComponent) {
        return emptyContextObject;
      }

      var fiber = get(parentComponent);
      var parentContext = findCurrentUnmaskedContext(fiber);

      if (fiber.tag === ClassComponent) {
        var Component = fiber.type;

        if (isContextProvider(Component)) {
          return processChildContext(fiber, Component, parentContext);
        }
      }

      return parentContext;
    }

    function findHostInstanceWithWarning(component, methodName) {
      {
        var fiber = get(component);

        if (fiber === undefined) {
          if (typeof component.render === 'function') {
            {
              {
                throw Error("Unable to find node on an unmounted component.");
              }
            }
          } else {
            {
              {
                throw Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(component));
              }
            }
          }
        }

        var hostFiber = findCurrentHostFiber(fiber);

        if (hostFiber === null) {
          return null;
        }

        if (hostFiber.mode & StrictMode) {
          var componentName = getComponentName(fiber.type) || 'Component';

          if (!didWarnAboutFindNodeInStrictMode[componentName]) {
            didWarnAboutFindNodeInStrictMode[componentName] = true;
            var previousFiber = current;

            try {
              setCurrentFiber(hostFiber);

              if (fiber.mode & StrictMode) {
                error('%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which is inside StrictMode. ' + 'Instead, add a ref directly to the element you want to reference. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-find-node', methodName, methodName, componentName);
              } else {
                error('%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which renders StrictMode children. ' + 'Instead, add a ref directly to the element you want to reference. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-find-node', methodName, methodName, componentName);
              }
            } finally {
              // Ideally this should reset to previous but this shouldn't be called in
              // render and there's another warning for that anyway.
              if (previousFiber) {
                setCurrentFiber(previousFiber);
              } else {
                resetCurrentFiber();
              }
            }
          }
        }

        return hostFiber.stateNode;
      }
    }

    function createContainer(containerInfo, tag, hydrate, hydrationCallbacks) {
      return createFiberRoot(containerInfo, tag, hydrate);
    }

    function updateContainer(element, container, parentComponent, callback) {
      {
        onScheduleRoot(container, element);
      }
      var current$1 = container.current;
      var eventTime = requestEventTime();
      {
        // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
        if ('undefined' !== typeof jest) {
          warnIfUnmockedScheduler(current$1);
          warnIfNotScopedWithMatchingAct(current$1);
        }
      }
      var lane = requestUpdateLane(current$1);
      var context = getContextForSubtree(parentComponent);

      if (container.context === null) {
        container.context = context;
      } else {
        container.pendingContext = context;
      }

      {
        if (isRendering && current !== null && !didWarnAboutNestedUpdates) {
          didWarnAboutNestedUpdates = true;
          error('Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\n\n' + 'Check the render method of %s.', getComponentName(current.type) || 'Unknown');
        }
      }
      var update = createUpdate(eventTime, lane); // Caution: React DevTools currently depends on this property
      // being called "element".

      update.payload = {
        element: element
      };
      callback = callback === undefined ? null : callback;

      if (callback !== null) {
        {
          if (typeof callback !== 'function') {
            error('render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback);
          }
        }
        update.callback = callback;
      }

      enqueueUpdate(current$1, update);
      scheduleUpdateOnFiber(current$1, lane, eventTime);
      return lane;
    }

    function getPublicRootInstance(container) {
      var containerFiber = container.current;

      if (!containerFiber.child) {
        return null;
      }

      switch (containerFiber.child.tag) {
        case HostComponent:
          return getPublicInstance(containerFiber.child.stateNode);

        default:
          return containerFiber.child.stateNode;
      }
    }

    function markRetryLaneImpl(fiber, retryLane) {
      var suspenseState = fiber.memoizedState;

      if (suspenseState !== null && suspenseState.dehydrated !== null) {
        suspenseState.retryLane = higherPriorityLane(suspenseState.retryLane, retryLane);
      }
    } // Increases the priority of thennables when they resolve within this boundary.


    function markRetryLaneIfNotHydrated(fiber, retryLane) {
      markRetryLaneImpl(fiber, retryLane);
      var alternate = fiber.alternate;

      if (alternate) {
        markRetryLaneImpl(alternate, retryLane);
      }
    }

    function attemptUserBlockingHydration$1(fiber) {
      if (fiber.tag !== SuspenseComponent) {
        // We ignore HostRoots here because we can't increase
        // their priority and they should not suspend on I/O,
        // since you have to wrap anything that might suspend in
        // Suspense.
        return;
      }

      var eventTime = requestEventTime();
      var lane = InputDiscreteHydrationLane;
      scheduleUpdateOnFiber(fiber, lane, eventTime);
      markRetryLaneIfNotHydrated(fiber, lane);
    }

    function attemptContinuousHydration$1(fiber) {
      if (fiber.tag !== SuspenseComponent) {
        // We ignore HostRoots here because we can't increase
        // their priority and they should not suspend on I/O,
        // since you have to wrap anything that might suspend in
        // Suspense.
        return;
      }

      var eventTime = requestEventTime();
      var lane = SelectiveHydrationLane;
      scheduleUpdateOnFiber(fiber, lane, eventTime);
      markRetryLaneIfNotHydrated(fiber, lane);
    }

    function attemptHydrationAtCurrentPriority$1(fiber) {
      if (fiber.tag !== SuspenseComponent) {
        // We ignore HostRoots here because we can't increase
        // their priority other than synchronously flush it.
        return;
      }

      var eventTime = requestEventTime();
      var lane = requestUpdateLane(fiber);
      scheduleUpdateOnFiber(fiber, lane, eventTime);
      markRetryLaneIfNotHydrated(fiber, lane);
    }

    function runWithPriority$2(priority, fn) {
      try {
        setCurrentUpdateLanePriority(priority);
        return fn();
      } finally {}
    }

    function findHostInstanceWithNoPortals(fiber) {
      var hostFiber = findCurrentHostFiberWithNoPortals(fiber);

      if (hostFiber === null) {
        return null;
      }

      if (hostFiber.tag === FundamentalComponent) {
        return hostFiber.stateNode.instance;
      }

      return hostFiber.stateNode;
    }

    var shouldSuspendImpl = function (fiber) {
      return false;
    };

    function shouldSuspend(fiber) {
      return shouldSuspendImpl(fiber);
    }

    var overrideHookState = null;
    var overrideHookStateDeletePath = null;
    var overrideHookStateRenamePath = null;
    var overrideProps = null;
    var overridePropsDeletePath = null;
    var overridePropsRenamePath = null;
    var scheduleUpdate = null;
    var setSuspenseHandler = null;
    {
      var copyWithDeleteImpl = function (obj, path, index) {
        var key = path[index];
        var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj);

        if (index + 1 === path.length) {
          if (Array.isArray(updated)) {
            updated.splice(key, 1);
          } else {
            delete updated[key];
          }

          return updated;
        } // $FlowFixMe number or string is fine here


        updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);
        return updated;
      };

      var copyWithDelete = function (obj, path) {
        return copyWithDeleteImpl(obj, path, 0);
      };

      var copyWithRenameImpl = function (obj, oldPath, newPath, index) {
        var oldKey = oldPath[index];
        var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj);

        if (index + 1 === oldPath.length) {
          var newKey = newPath[index]; // $FlowFixMe number or string is fine here

          updated[newKey] = updated[oldKey];

          if (Array.isArray(updated)) {
            updated.splice(oldKey, 1);
          } else {
            delete updated[oldKey];
          }
        } else {
          // $FlowFixMe number or string is fine here
          updated[oldKey] = copyWithRenameImpl( // $FlowFixMe number or string is fine here
          obj[oldKey], oldPath, newPath, index + 1);
        }

        return updated;
      };

      var copyWithRename = function (obj, oldPath, newPath) {
        if (oldPath.length !== newPath.length) {
          warn('copyWithRename() expects paths of the same length');
          return;
        } else {
          for (var i = 0; i < newPath.length - 1; i++) {
            if (oldPath[i] !== newPath[i]) {
              warn('copyWithRename() expects paths to be the same except for the deepest key');
              return;
            }
          }
        }

        return copyWithRenameImpl(obj, oldPath, newPath, 0);
      };

      var copyWithSetImpl = function (obj, path, index, value) {
        if (index >= path.length) {
          return value;
        }

        var key = path[index];
        var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj); // $FlowFixMe number or string is fine here

        updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);
        return updated;
      };

      var copyWithSet = function (obj, path, value) {
        return copyWithSetImpl(obj, path, 0, value);
      };

      var findHook = function (fiber, id) {
        // For now, the "id" of stateful hooks is just the stateful hook index.
        // This may change in the future with e.g. nested hooks.
        var currentHook = fiber.memoizedState;

        while (currentHook !== null && id > 0) {
          currentHook = currentHook.next;
          id--;
        }

        return currentHook;
      }; // Support DevTools editable values for useState and useReducer.


      overrideHookState = function (fiber, id, path, value) {
        var hook = findHook(fiber, id);

        if (hook !== null) {
          var newState = copyWithSet(hook.memoizedState, path, value);
          hook.memoizedState = newState;
          hook.baseState = newState; // We aren't actually adding an update to the queue,
          // because there is no update we can add for useReducer hooks that won't trigger an error.
          // (There's no appropriate action type for DevTools overrides.)
          // As a result though, React will see the scheduled update as a noop and bailout.
          // Shallow cloning props works as a workaround for now to bypass the bailout check.

          fiber.memoizedProps = _assign({}, fiber.memoizedProps);
          scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
        }
      };

      overrideHookStateDeletePath = function (fiber, id, path) {
        var hook = findHook(fiber, id);

        if (hook !== null) {
          var newState = copyWithDelete(hook.memoizedState, path);
          hook.memoizedState = newState;
          hook.baseState = newState; // We aren't actually adding an update to the queue,
          // because there is no update we can add for useReducer hooks that won't trigger an error.
          // (There's no appropriate action type for DevTools overrides.)
          // As a result though, React will see the scheduled update as a noop and bailout.
          // Shallow cloning props works as a workaround for now to bypass the bailout check.

          fiber.memoizedProps = _assign({}, fiber.memoizedProps);
          scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
        }
      };

      overrideHookStateRenamePath = function (fiber, id, oldPath, newPath) {
        var hook = findHook(fiber, id);

        if (hook !== null) {
          var newState = copyWithRename(hook.memoizedState, oldPath, newPath);
          hook.memoizedState = newState;
          hook.baseState = newState; // We aren't actually adding an update to the queue,
          // because there is no update we can add for useReducer hooks that won't trigger an error.
          // (There's no appropriate action type for DevTools overrides.)
          // As a result though, React will see the scheduled update as a noop and bailout.
          // Shallow cloning props works as a workaround for now to bypass the bailout check.

          fiber.memoizedProps = _assign({}, fiber.memoizedProps);
          scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
        }
      }; // Support DevTools props for function components, forwardRef, memo, host components, etc.


      overrideProps = function (fiber, path, value) {
        fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);

        if (fiber.alternate) {
          fiber.alternate.pendingProps = fiber.pendingProps;
        }

        scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
      };

      overridePropsDeletePath = function (fiber, path) {
        fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);

        if (fiber.alternate) {
          fiber.alternate.pendingProps = fiber.pendingProps;
        }

        scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
      };

      overridePropsRenamePath = function (fiber, oldPath, newPath) {
        fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);

        if (fiber.alternate) {
          fiber.alternate.pendingProps = fiber.pendingProps;
        }

        scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
      };

      scheduleUpdate = function (fiber) {
        scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);
      };

      setSuspenseHandler = function (newShouldSuspendImpl) {
        shouldSuspendImpl = newShouldSuspendImpl;
      };
    }

    function findHostInstanceByFiber(fiber) {
      var hostFiber = findCurrentHostFiber(fiber);

      if (hostFiber === null) {
        return null;
      }

      return hostFiber.stateNode;
    }

    function emptyFindFiberByHostInstance(instance) {
      return null;
    }

    function getCurrentFiberForDevTools() {
      return current;
    }

    function injectIntoDevTools(devToolsConfig) {
      var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
      var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
      return injectInternals({
        bundleType: devToolsConfig.bundleType,
        version: devToolsConfig.version,
        rendererPackageName: devToolsConfig.rendererPackageName,
        rendererConfig: devToolsConfig.rendererConfig,
        overrideHookState: overrideHookState,
        overrideHookStateDeletePath: overrideHookStateDeletePath,
        overrideHookStateRenamePath: overrideHookStateRenamePath,
        overrideProps: overrideProps,
        overridePropsDeletePath: overridePropsDeletePath,
        overridePropsRenamePath: overridePropsRenamePath,
        setSuspenseHandler: setSuspenseHandler,
        scheduleUpdate: scheduleUpdate,
        currentDispatcherRef: ReactCurrentDispatcher,
        findHostInstanceByFiber: findHostInstanceByFiber,
        findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,
        // React Refresh
        findHostInstancesForRefresh: findHostInstancesForRefresh,
        scheduleRefresh: scheduleRefresh,
        scheduleRoot: scheduleRoot,
        setRefreshHandler: setRefreshHandler,
        // Enables DevTools to append owner stacks to error messages in DEV mode.
        getCurrentFiber: getCurrentFiberForDevTools
      });
    }

    function ReactDOMRoot(container, options) {
      this._internalRoot = createRootImpl(container, ConcurrentRoot, options);
    }

    function ReactDOMBlockingRoot(container, tag, options) {
      this._internalRoot = createRootImpl(container, tag, options);
    }

    ReactDOMRoot.prototype.render = ReactDOMBlockingRoot.prototype.render = function (children) {
      var root = this._internalRoot;
      {
        if (typeof arguments[1] === 'function') {
          error('render(...): does not support the second callback argument. ' + 'To execute a side effect after rendering, declare it in a component body with useEffect().');
        }

        var container = root.containerInfo;

        if (container.nodeType !== COMMENT_NODE) {
          var hostInstance = findHostInstanceWithNoPortals(root.current);

          if (hostInstance) {
            if (hostInstance.parentNode !== container) {
              error('render(...): It looks like the React-rendered content of the ' + 'root container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + "root.unmount() to empty a root's container.");
            }
          }
        }
      }
      updateContainer(children, root, null, null);
    };

    ReactDOMRoot.prototype.unmount = ReactDOMBlockingRoot.prototype.unmount = function () {
      {
        if (typeof arguments[0] === 'function') {
          error('unmount(...): does not support a callback argument. ' + 'To execute a side effect after rendering, declare it in a component body with useEffect().');
        }
      }
      var root = this._internalRoot;
      var container = root.containerInfo;
      updateContainer(null, root, null, function () {
        unmarkContainerAsRoot(container);
      });
    };

    function createRootImpl(container, tag, options) {
      // Tag is either LegacyRoot or Concurrent Root
      var hydrate = options != null && options.hydrate === true;
      var hydrationCallbacks = options != null && options.hydrationOptions || null;
      var mutableSources = options != null && options.hydrationOptions != null && options.hydrationOptions.mutableSources || null;
      var root = createContainer(container, tag, hydrate);
      markContainerAsRoot(root.current, container);
      var containerNodeType = container.nodeType;
      {
        var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
        listenToAllSupportedEvents(rootContainerElement);
      }

      if (mutableSources) {
        for (var i = 0; i < mutableSources.length; i++) {
          var mutableSource = mutableSources[i];
          registerMutableSourceForHydration(root, mutableSource);
        }
      }

      return root;
    }

    function createLegacyRoot(container, options) {
      return new ReactDOMBlockingRoot(container, LegacyRoot, options);
    }

    function isValidContainer(node) {
      return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));
    }

    var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;
    var topLevelUpdateWarnings;
    var warnedAboutHydrateAPI = false;
    {
      topLevelUpdateWarnings = function (container) {
        if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
          var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer._internalRoot.current);

          if (hostInstance) {
            if (hostInstance.parentNode !== container) {
              error('render(...): It looks like the React-rendered content of this ' + 'container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + 'ReactDOM.unmountComponentAtNode to empty a container.');
            }
          }
        }

        var isRootRenderedBySomeReact = !!container._reactRootContainer;
        var rootEl = getReactRootElementInContainer(container);
        var hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));

        if (hasNonRootReactChild && !isRootRenderedBySomeReact) {
          error('render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.');
        }

        if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === 'BODY') {
          error('render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.');
        }
      };
    }

    function getReactRootElementInContainer(container) {
      if (!container) {
        return null;
      }

      if (container.nodeType === DOCUMENT_NODE) {
        return container.documentElement;
      } else {
        return container.firstChild;
      }
    }

    function shouldHydrateDueToLegacyHeuristic(container) {
      var rootElement = getReactRootElementInContainer(container);
      return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));
    }

    function legacyCreateRootFromDOMContainer(container, forceHydrate) {
      var shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container); // First clear any existing content.

      if (!shouldHydrate) {
        var warned = false;
        var rootSibling;

        while (rootSibling = container.lastChild) {
          {
            if (!warned && rootSibling.nodeType === ELEMENT_NODE && rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)) {
              warned = true;
              error('render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.');
            }
          }
          container.removeChild(rootSibling);
        }
      }

      {
        if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {
          warnedAboutHydrateAPI = true;
          warn('render(): Calling ReactDOM.render() to hydrate server-rendered markup ' + 'will stop working in React v18. Replace the ReactDOM.render() call ' + 'with ReactDOM.hydrate() if you want React to attach to the server HTML.');
        }
      }
      return createLegacyRoot(container, shouldHydrate ? {
        hydrate: true
      } : undefined);
    }

    function warnOnInvalidCallback$1(callback, callerName) {
      {
        if (callback !== null && typeof callback !== 'function') {
          error('%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);
        }
      }
    }

    function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
      {
        topLevelUpdateWarnings(container);
        warnOnInvalidCallback$1(callback === undefined ? null : callback, 'render');
      } // TODO: Without `any` type, Flow says "Property cannot be accessed on any
      // member of intersection type." Whyyyyyy.

      var root = container._reactRootContainer;
      var fiberRoot;

      if (!root) {
        // Initial mount
        root = container._reactRootContainer = legacyCreateRootFromDOMContainer(container, forceHydrate);
        fiberRoot = root._internalRoot;

        if (typeof callback === 'function') {
          var originalCallback = callback;

          callback = function () {
            var instance = getPublicRootInstance(fiberRoot);
            originalCallback.call(instance);
          };
        } // Initial mount should not be batched.


        unbatchedUpdates(function () {
          updateContainer(children, fiberRoot, parentComponent, callback);
        });
      } else {
        fiberRoot = root._internalRoot;

        if (typeof callback === 'function') {
          var _originalCallback = callback;

          callback = function () {
            var instance = getPublicRootInstance(fiberRoot);

            _originalCallback.call(instance);
          };
        } // Update


        updateContainer(children, fiberRoot, parentComponent, callback);
      }

      return getPublicRootInstance(fiberRoot);
    }

    function findDOMNode(componentOrElement) {
      {
        var owner = ReactCurrentOwner$3.current;

        if (owner !== null && owner.stateNode !== null) {
          var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;

          if (!warnedAboutRefsInRender) {
            error('%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(owner.type) || 'A component');
          }

          owner.stateNode._warnedAboutRefsInRender = true;
        }
      }

      if (componentOrElement == null) {
        return null;
      }

      if (componentOrElement.nodeType === ELEMENT_NODE) {
        return componentOrElement;
      }

      {
        return findHostInstanceWithWarning(componentOrElement, 'findDOMNode');
      }
    }

    function hydrate(element, container, callback) {
      if (!isValidContainer(container)) {
        {
          throw Error("Target container is not a DOM element.");
        }
      }

      {
        var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;

        if (isModernRoot) {
          error('You are calling ReactDOM.hydrate() on a container that was previously ' + 'passed to ReactDOM.createRoot(). This is not supported. ' + 'Did you mean to call createRoot(container, {hydrate: true}).render(element)?');
        }
      } // TODO: throw or warn if we couldn't hydrate?

      return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
    }

    function render(element, container, callback) {
      if (!isValidContainer(container)) {
        {
          throw Error("Target container is not a DOM element.");
        }
      }

      {
        var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;

        if (isModernRoot) {
          error('You are calling ReactDOM.render() on a container that was previously ' + 'passed to ReactDOM.createRoot(). This is not supported. ' + 'Did you mean to call root.render(element)?');
        }
      }
      return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
    }

    function unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
      if (!isValidContainer(containerNode)) {
        {
          throw Error("Target container is not a DOM element.");
        }
      }

      if (!(parentComponent != null && has(parentComponent))) {
        {
          throw Error("parentComponent must be a valid React Component");
        }
      }

      return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
    }

    function unmountComponentAtNode(container) {
      if (!isValidContainer(container)) {
        {
          throw Error("unmountComponentAtNode(...): Target container is not a DOM element.");
        }
      }

      {
        var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;

        if (isModernRoot) {
          error('You are calling ReactDOM.unmountComponentAtNode() on a container that was previously ' + 'passed to ReactDOM.createRoot(). This is not supported. Did you mean to call root.unmount()?');
        }
      }

      if (container._reactRootContainer) {
        {
          var rootEl = getReactRootElementInContainer(container);
          var renderedByDifferentReact = rootEl && !getInstanceFromNode(rootEl);

          if (renderedByDifferentReact) {
            error("unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.');
          }
        } // Unmount should not be batched.

        unbatchedUpdates(function () {
          legacyRenderSubtreeIntoContainer(null, null, container, false, function () {
            // $FlowFixMe This should probably use `delete container._reactRootContainer`
            container._reactRootContainer = null;
            unmarkContainerAsRoot(container);
          });
        }); // If you call unmountComponentAtNode twice in quick succession, you'll
        // get `true` twice. That's probably fine?

        return true;
      } else {
        {
          var _rootEl = getReactRootElementInContainer(container);

          var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode(_rootEl)); // Check if the container itself is a React root node.

          var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainer(container.parentNode) && !!container.parentNode._reactRootContainer;

          if (hasNonRootReactChild) {
            error("unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.');
          }
        }
        return false;
      }
    }

    setAttemptUserBlockingHydration(attemptUserBlockingHydration$1);
    setAttemptContinuousHydration(attemptContinuousHydration$1);
    setAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority$1);
    setAttemptHydrationAtPriority(runWithPriority$2);
    var didWarnAboutUnstableCreatePortal = false;
    {
      if (typeof Map !== 'function' || // $FlowIssue Flow incorrectly thinks Map has no prototype
      Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' || // $FlowIssue Flow incorrectly thinks Set has no prototype
      Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') {
        error('React depends on Map and Set built-in types. Make sure that you load a ' + 'polyfill in older browsers. https://reactjs.org/link/react-polyfills');
      }
    }
    setRestoreImplementation(restoreControlledState$3);
    setBatchingImplementation(batchedUpdates$1, discreteUpdates$1, flushDiscreteUpdates, batchedEventUpdates$1);

    function createPortal$1(children, container) {
      var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

      if (!isValidContainer(container)) {
        {
          throw Error("Target container is not a DOM element.");
        }
      } // TODO: pass ReactDOM portal implementation as third argument
      // $FlowFixMe The Flow type is opaque but there's no way to actually create it.


      return createPortal(children, container, null, key);
    }

    function renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
      return unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback);
    }

    function unstable_createPortal(children, container) {
      var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
      {
        if (!didWarnAboutUnstableCreatePortal) {
          didWarnAboutUnstableCreatePortal = true;
          warn('The ReactDOM.unstable_createPortal() alias has been deprecated, ' + 'and will be removed in React 18+. Update your code to use ' + 'ReactDOM.createPortal() instead. It has the exact same API, ' + 'but without the "unstable_" prefix.');
        }
      }
      return createPortal$1(children, container, key);
    }

    var Internals = {
      // Keep in sync with ReactTestUtils.js, and ReactTestUtilsAct.js.
      // This is an array for better minification.
      Events: [getInstanceFromNode, getNodeFromInstance, getFiberCurrentPropsFromNode, enqueueStateRestore, restoreStateIfNeeded, flushPassiveEffects, // TODO: This is related to `act`, not events. Move to separate key?
      IsThisRendererActing]
    };
    var foundDevTools = injectIntoDevTools({
      findFiberByHostInstance: getClosestInstanceFromNode,
      bundleType: 1,
      version: ReactVersion,
      rendererPackageName: 'react-dom'
    });
    {
      if (!foundDevTools && canUseDOM && window.top === window.self) {
        // If we're in Chrome or Firefox, provide a download link if not installed.
        if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
          var protocol = window.location.protocol; // Don't warn in exotic cases like chrome-extension://.

          if (/^(https?|file):$/.test(protocol)) {
            // eslint-disable-next-line react-internal/no-production-logging
            console.info('%cDownload the React DevTools ' + 'for a better development experience: ' + 'https://reactjs.org/link/react-devtools' + (protocol === 'file:' ? '\nYou might need to use a local HTTP server (instead of file://): ' + 'https://reactjs.org/link/react-devtools-faq' : ''), 'font-weight:bold');
          }
        }
      }
    }
    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Internals;
    exports.createPortal = createPortal$1;
    exports.findDOMNode = findDOMNode;
    exports.flushSync = flushSync;
    exports.hydrate = hydrate;
    exports.render = render;
    exports.unmountComponentAtNode = unmountComponentAtNode;
    exports.unstable_batchedUpdates = batchedUpdates$1;
    exports.unstable_createPortal = unstable_createPortal;
    exports.unstable_renderSubtreeIntoContainer = renderSubtreeIntoContainer;
    exports.version = ReactVersion;
  })();
}

/***/ }),

/***/ "./node_modules/react-dom/index.js":
/*!*****************************************!*\
  !*** ./node_modules/react-dom/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {
    return;
  }

  if (true) {
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
  }

  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react-dom.development.js */ "./node_modules/react-dom/cjs/react-dom.development.js");
}

/***/ }),

/***/ "./node_modules/react-refresh/cjs/react-refresh-runtime.development.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/react-refresh/cjs/react-refresh-runtime.development.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** @license React vundefined
 * react-refresh-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


if (true) {
  (function () {
    'use strict'; // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.

    var REACT_ELEMENT_TYPE = 0xeac7;
    var REACT_PORTAL_TYPE = 0xeaca;
    var REACT_FRAGMENT_TYPE = 0xeacb;
    var REACT_STRICT_MODE_TYPE = 0xeacc;
    var REACT_PROFILER_TYPE = 0xead2;
    var REACT_PROVIDER_TYPE = 0xeacd;
    var REACT_CONTEXT_TYPE = 0xeace;
    var REACT_FORWARD_REF_TYPE = 0xead0;
    var REACT_SUSPENSE_TYPE = 0xead1;
    var REACT_SUSPENSE_LIST_TYPE = 0xead8;
    var REACT_MEMO_TYPE = 0xead3;
    var REACT_LAZY_TYPE = 0xead4;
    var REACT_SCOPE_TYPE = 0xead7;
    var REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;
    var REACT_OFFSCREEN_TYPE = 0xeae2;
    var REACT_LEGACY_HIDDEN_TYPE = 0xeae3;
    var REACT_CACHE_TYPE = 0xeae4;

    if (typeof Symbol === 'function' && Symbol.for) {
      var symbolFor = Symbol.for;
      REACT_ELEMENT_TYPE = symbolFor('react.element');
      REACT_PORTAL_TYPE = symbolFor('react.portal');
      REACT_FRAGMENT_TYPE = symbolFor('react.fragment');
      REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');
      REACT_PROFILER_TYPE = symbolFor('react.profiler');
      REACT_PROVIDER_TYPE = symbolFor('react.provider');
      REACT_CONTEXT_TYPE = symbolFor('react.context');
      REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');
      REACT_SUSPENSE_TYPE = symbolFor('react.suspense');
      REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');
      REACT_MEMO_TYPE = symbolFor('react.memo');
      REACT_LAZY_TYPE = symbolFor('react.lazy');
      REACT_SCOPE_TYPE = symbolFor('react.scope');
      REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');
      REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');
      REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');
      REACT_CACHE_TYPE = symbolFor('react.cache');
    }

    var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map; // We never remove these associations.
    // It's OK to reference families, but use WeakMap/Set for types.

    var allFamiliesByID = new Map();
    var allFamiliesByType = new PossiblyWeakMap();
    var allSignaturesByType = new PossiblyWeakMap(); // This WeakMap is read by React, so we only put families
    // that have actually been edited here. This keeps checks fast.
    // $FlowIssue

    var updatedFamiliesByType = new PossiblyWeakMap(); // This is cleared on every performReactRefresh() call.
    // It is an array of [Family, NextType] tuples.

    var pendingUpdates = []; // This is injected by the renderer via DevTools global hook.

    var helpersByRendererID = new Map();
    var helpersByRoot = new Map(); // We keep track of mounted roots so we can schedule updates.

    var mountedRoots = new Set(); // If a root captures an error, we remember it so we can retry on edit.

    var failedRoots = new Set(); // In environments that support WeakMap, we also remember the last element for every root.
    // It needs to be weak because we do this even for roots that failed to mount.
    // If there is no WeakMap, we won't attempt to do retrying.
    // $FlowIssue

    var rootElements = // $FlowIssue
    typeof WeakMap === 'function' ? new WeakMap() : null;
    var isPerformingRefresh = false;

    function computeFullKey(signature) {
      if (signature.fullKey !== null) {
        return signature.fullKey;
      }

      var fullKey = signature.ownKey;
      var hooks;

      try {
        hooks = signature.getCustomHooks();
      } catch (err) {
        // This can happen in an edge case, e.g. if expression like Foo.useSomething
        // depends on Foo which is lazily initialized during rendering.
        // In that case just assume we'll have to remount.
        signature.forceReset = true;
        signature.fullKey = fullKey;
        return fullKey;
      }

      for (var i = 0; i < hooks.length; i++) {
        var hook = hooks[i];

        if (typeof hook !== 'function') {
          // Something's wrong. Assume we need to remount.
          signature.forceReset = true;
          signature.fullKey = fullKey;
          return fullKey;
        }

        var nestedHookSignature = allSignaturesByType.get(hook);

        if (nestedHookSignature === undefined) {
          // No signature means Hook wasn't in the source code, e.g. in a library.
          // We'll skip it because we can assume it won't change during this session.
          continue;
        }

        var nestedHookKey = computeFullKey(nestedHookSignature);

        if (nestedHookSignature.forceReset) {
          signature.forceReset = true;
        }

        fullKey += '\n---\n' + nestedHookKey;
      }

      signature.fullKey = fullKey;
      return fullKey;
    }

    function haveEqualSignatures(prevType, nextType) {
      var prevSignature = allSignaturesByType.get(prevType);
      var nextSignature = allSignaturesByType.get(nextType);

      if (prevSignature === undefined && nextSignature === undefined) {
        return true;
      }

      if (prevSignature === undefined || nextSignature === undefined) {
        return false;
      }

      if (computeFullKey(prevSignature) !== computeFullKey(nextSignature)) {
        return false;
      }

      if (nextSignature.forceReset) {
        return false;
      }

      return true;
    }

    function isReactClass(type) {
      return type.prototype && type.prototype.isReactComponent;
    }

    function canPreserveStateBetween(prevType, nextType) {
      if (isReactClass(prevType) || isReactClass(nextType)) {
        return false;
      }

      if (haveEqualSignatures(prevType, nextType)) {
        return true;
      }

      return false;
    }

    function resolveFamily(type) {
      // Only check updated types to keep lookups fast.
      return updatedFamiliesByType.get(type);
    } // If we didn't care about IE11, we could use new Map/Set(iterable).


    function cloneMap(map) {
      var clone = new Map();
      map.forEach(function (value, key) {
        clone.set(key, value);
      });
      return clone;
    }

    function cloneSet(set) {
      var clone = new Set();
      set.forEach(function (value) {
        clone.add(value);
      });
      return clone;
    } // This is a safety mechanism to protect against rogue getters and Proxies.


    function getProperty(object, property) {
      try {
        return object[property];
      } catch (err) {
        // Intentionally ignore.
        return undefined;
      }
    }

    function performReactRefresh() {
      if (pendingUpdates.length === 0) {
        return null;
      }

      if (isPerformingRefresh) {
        return null;
      }

      isPerformingRefresh = true;

      try {
        var staleFamilies = new Set();
        var updatedFamilies = new Set();
        var updates = pendingUpdates;
        pendingUpdates = [];
        updates.forEach(function (_ref) {
          var family = _ref[0],
              nextType = _ref[1]; // Now that we got a real edit, we can create associations
          // that will be read by the React reconciler.

          var prevType = family.current;
          updatedFamiliesByType.set(prevType, family);
          updatedFamiliesByType.set(nextType, family);
          family.current = nextType; // Determine whether this should be a re-render or a re-mount.

          if (canPreserveStateBetween(prevType, nextType)) {
            updatedFamilies.add(family);
          } else {
            staleFamilies.add(family);
          }
        }); // TODO: rename these fields to something more meaningful.

        var update = {
          updatedFamilies: updatedFamilies,
          // Families that will re-render preserving state
          staleFamilies: staleFamilies // Families that will be remounted

        };
        helpersByRendererID.forEach(function (helpers) {
          // Even if there are no roots, set the handler on first update.
          // This ensures that if *new* roots are mounted, they'll use the resolve handler.
          helpers.setRefreshHandler(resolveFamily);
        });
        var didError = false;
        var firstError = null; // We snapshot maps and sets that are mutated during commits.
        // If we don't do this, there is a risk they will be mutated while
        // we iterate over them. For example, trying to recover a failed root
        // may cause another root to be added to the failed list -- an infinite loop.

        var failedRootsSnapshot = cloneSet(failedRoots);
        var mountedRootsSnapshot = cloneSet(mountedRoots);
        var helpersByRootSnapshot = cloneMap(helpersByRoot);
        failedRootsSnapshot.forEach(function (root) {
          var helpers = helpersByRootSnapshot.get(root);

          if (helpers === undefined) {
            throw new Error('Could not find helpers for a root. This is a bug in React Refresh.');
          }

          if (!failedRoots.has(root)) {// No longer failed.
          }

          if (rootElements === null) {
            return;
          }

          if (!rootElements.has(root)) {
            return;
          }

          var element = rootElements.get(root);

          try {
            helpers.scheduleRoot(root, element);
          } catch (err) {
            if (!didError) {
              didError = true;
              firstError = err;
            } // Keep trying other roots.

          }
        });
        mountedRootsSnapshot.forEach(function (root) {
          var helpers = helpersByRootSnapshot.get(root);

          if (helpers === undefined) {
            throw new Error('Could not find helpers for a root. This is a bug in React Refresh.');
          }

          if (!mountedRoots.has(root)) {// No longer mounted.
          }

          try {
            helpers.scheduleRefresh(root, update);
          } catch (err) {
            if (!didError) {
              didError = true;
              firstError = err;
            } // Keep trying other roots.

          }
        });

        if (didError) {
          throw firstError;
        }

        return update;
      } finally {
        isPerformingRefresh = false;
      }
    }

    function register(type, id) {
      {
        if (type === null) {
          return;
        }

        if (typeof type !== 'function' && typeof type !== 'object') {
          return;
        } // This can happen in an edge case, e.g. if we register
        // return value of a HOC but it returns a cached component.
        // Ignore anything but the first registration for each type.


        if (allFamiliesByType.has(type)) {
          return;
        } // Create family or remember to update it.
        // None of this bookkeeping affects reconciliation
        // until the first performReactRefresh() call above.


        var family = allFamiliesByID.get(id);

        if (family === undefined) {
          family = {
            current: type
          };
          allFamiliesByID.set(id, family);
        } else {
          pendingUpdates.push([family, type]);
        }

        allFamiliesByType.set(type, family); // Visit inner types because we might not have registered them.

        if (typeof type === 'object' && type !== null) {
          switch (getProperty(type, '$$typeof')) {
            case REACT_FORWARD_REF_TYPE:
              register(type.render, id + '$render');
              break;

            case REACT_MEMO_TYPE:
              register(type.type, id + '$type');
              break;
          }
        }
      }
    }

    function setSignature(type, key) {
      var forceReset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      var getCustomHooks = arguments.length > 3 ? arguments[3] : undefined;
      {
        if (!allSignaturesByType.has(type)) {
          allSignaturesByType.set(type, {
            forceReset: forceReset,
            ownKey: key,
            fullKey: null,
            getCustomHooks: getCustomHooks || function () {
              return [];
            }
          });
        } // Visit inner types because we might not have signed them.


        if (typeof type === 'object' && type !== null) {
          switch (getProperty(type, '$$typeof')) {
            case REACT_FORWARD_REF_TYPE:
              setSignature(type.render, key, forceReset, getCustomHooks);
              break;

            case REACT_MEMO_TYPE:
              setSignature(type.type, key, forceReset, getCustomHooks);
              break;
          }
        }
      }
    } // This is lazily called during first render for a type.
    // It captures Hook list at that time so inline requires don't break comparisons.


    function collectCustomHooksForSignature(type) {
      {
        var signature = allSignaturesByType.get(type);

        if (signature !== undefined) {
          computeFullKey(signature);
        }
      }
    }

    function getFamilyByID(id) {
      {
        return allFamiliesByID.get(id);
      }
    }

    function getFamilyByType(type) {
      {
        return allFamiliesByType.get(type);
      }
    }

    function findAffectedHostInstances(families) {
      {
        var affectedInstances = new Set();
        mountedRoots.forEach(function (root) {
          var helpers = helpersByRoot.get(root);

          if (helpers === undefined) {
            throw new Error('Could not find helpers for a root. This is a bug in React Refresh.');
          }

          var instancesForRoot = helpers.findHostInstancesForRefresh(root, families);
          instancesForRoot.forEach(function (inst) {
            affectedInstances.add(inst);
          });
        });
        return affectedInstances;
      }
    }

    function injectIntoGlobalHook(globalObject) {
      {
        // For React Native, the global hook will be set up by require('react-devtools-core').
        // That code will run before us. So we need to monkeypatch functions on existing hook.
        // For React Web, the global hook will be set up by the extension.
        // This will also run before us.
        var hook = globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__;

        if (hook === undefined) {
          // However, if there is no DevTools extension, we'll need to set up the global hook ourselves.
          // Note that in this case it's important that renderer code runs *after* this method call.
          // Otherwise, the renderer will think that there is no global hook, and won't do the injection.
          var nextID = 0;
          globalObject.__REACT_DEVTOOLS_GLOBAL_HOOK__ = hook = {
            renderers: new Map(),
            supportsFiber: true,
            inject: function (injected) {
              return nextID++;
            },
            onScheduleFiberRoot: function (id, root, children) {},
            onCommitFiberRoot: function (id, root, maybePriorityLevel, didError) {},
            onCommitFiberUnmount: function () {}
          };
        }

        if (hook.isDisabled) {
          // This isn't a real property on the hook, but it can be set to opt out
          // of DevTools integration and associated warnings and logs.
          // Using console['warn'] to evade Babel and ESLint
          console['warn']('Something has shimmed the React DevTools global hook (__REACT_DEVTOOLS_GLOBAL_HOOK__). ' + 'Fast Refresh is not compatible with this shim and will be disabled.');
          return;
        } // Here, we just want to get a reference to scheduleRefresh.


        var oldInject = hook.inject;

        hook.inject = function (injected) {
          var id = oldInject.apply(this, arguments);

          if (typeof injected.scheduleRefresh === 'function' && typeof injected.setRefreshHandler === 'function') {
            // This version supports React Refresh.
            helpersByRendererID.set(id, injected);
          }

          return id;
        }; // Do the same for any already injected roots.
        // This is useful if ReactDOM has already been initialized.
        // https://github.com/facebook/react/issues/17626


        hook.renderers.forEach(function (injected, id) {
          if (typeof injected.scheduleRefresh === 'function' && typeof injected.setRefreshHandler === 'function') {
            // This version supports React Refresh.
            helpersByRendererID.set(id, injected);
          }
        }); // We also want to track currently mounted roots.

        var oldOnCommitFiberRoot = hook.onCommitFiberRoot;

        var oldOnScheduleFiberRoot = hook.onScheduleFiberRoot || function () {};

        hook.onScheduleFiberRoot = function (id, root, children) {
          if (!isPerformingRefresh) {
            // If it was intentionally scheduled, don't attempt to restore.
            // This includes intentionally scheduled unmounts.
            failedRoots.delete(root);

            if (rootElements !== null) {
              rootElements.set(root, children);
            }
          }

          return oldOnScheduleFiberRoot.apply(this, arguments);
        };

        hook.onCommitFiberRoot = function (id, root, maybePriorityLevel, didError) {
          var helpers = helpersByRendererID.get(id);

          if (helpers !== undefined) {
            helpersByRoot.set(root, helpers);
            var current = root.current;
            var alternate = current.alternate; // We need to determine whether this root has just (un)mounted.
            // This logic is copy-pasted from similar logic in the DevTools backend.
            // If this breaks with some refactoring, you'll want to update DevTools too.

            if (alternate !== null) {
              var wasMounted = alternate.memoizedState != null && alternate.memoizedState.element != null;
              var isMounted = current.memoizedState != null && current.memoizedState.element != null;

              if (!wasMounted && isMounted) {
                // Mount a new root.
                mountedRoots.add(root);
                failedRoots.delete(root);
              } else if (wasMounted && isMounted) ;else if (wasMounted && !isMounted) {
                // Unmount an existing root.
                mountedRoots.delete(root);

                if (didError) {
                  // We'll remount it on future edits.
                  failedRoots.add(root);
                } else {
                  helpersByRoot.delete(root);
                }
              } else if (!wasMounted && !isMounted) {
                if (didError) {
                  // We'll remount it on future edits.
                  failedRoots.add(root);
                }
              }
            } else {
              // Mount a new root.
              mountedRoots.add(root);
            }
          } // Always call the decorated DevTools hook.


          return oldOnCommitFiberRoot.apply(this, arguments);
        };
      }
    }

    function hasUnrecoverableErrors() {
      // TODO: delete this after removing dependency in RN.
      return false;
    } // Exposed for testing.


    function _getMountedRootCount() {
      {
        return mountedRoots.size;
      }
    } // This is a wrapper over more primitive functions for setting signature.
    // Signatures let us decide whether the Hook order has changed on refresh.
    //
    // This function is intended to be used as a transform target, e.g.:
    // var _s = createSignatureFunctionForTransform()
    //
    // function Hello() {
    //   const [foo, setFoo] = useState(0);
    //   const value = useCustomHook();
    //   _s(); /* Call without arguments triggers collecting the custom Hook list.
    //          * This doesn't happen during the module evaluation because we
    //          * don't want to change the module order with inline requires.
    //          * Next calls are noops. */
    //   return <h1>Hi</h1>;
    // }
    //
    // /* Call with arguments attaches the signature to the type: */
    // _s(
    //   Hello,
    //   'useState{[foo, setFoo]}(0)',
    //   () => [useCustomHook], /* Lazy to avoid triggering inline requires */
    // );


    function createSignatureFunctionForTransform() {
      {
        var savedType;
        var hasCustomHooks;
        var didCollectHooks = false;
        return function (type, key, forceReset, getCustomHooks) {
          if (typeof key === 'string') {
            // We're in the initial phase that associates signatures
            // with the functions. Note this may be called multiple times
            // in HOC chains like _s(hoc1(_s(hoc2(_s(actualFunction))))).
            if (!savedType) {
              // We're in the innermost call, so this is the actual type.
              savedType = type;
              hasCustomHooks = typeof getCustomHooks === 'function';
            } // Set the signature for all types (even wrappers!) in case
            // they have no signatures of their own. This is to prevent
            // problems like https://github.com/facebook/react/issues/20417.


            if (type != null && (typeof type === 'function' || typeof type === 'object')) {
              setSignature(type, key, forceReset, getCustomHooks);
            }

            return type;
          } else {
            // We're in the _s() call without arguments, which means
            // this is the time to collect custom Hook signatures.
            // Only do this once. This path is hot and runs *inside* every render!
            if (!didCollectHooks && hasCustomHooks) {
              didCollectHooks = true;
              collectCustomHooksForSignature(savedType);
            }
          }
        };
      }
    }

    function isLikelyComponentType(type) {
      {
        switch (typeof type) {
          case 'function':
            {
              // First, deal with classes.
              if (type.prototype != null) {
                if (type.prototype.isReactComponent) {
                  // React class.
                  return true;
                }

                var ownNames = Object.getOwnPropertyNames(type.prototype);

                if (ownNames.length > 1 || ownNames[0] !== 'constructor') {
                  // This looks like a class.
                  return false;
                } // eslint-disable-next-line no-proto


                if (type.prototype.__proto__ !== Object.prototype) {
                  // It has a superclass.
                  return false;
                } // Pass through.
                // This looks like a regular function with empty prototype.

              } // For plain functions and arrows, use name as a heuristic.


              var name = type.name || type.displayName;
              return typeof name === 'string' && /^[A-Z]/.test(name);
            }

          case 'object':
            {
              if (type != null) {
                switch (getProperty(type, '$$typeof')) {
                  case REACT_FORWARD_REF_TYPE:
                  case REACT_MEMO_TYPE:
                    // Definitely React components.
                    return true;

                  default:
                    return false;
                }
              }

              return false;
            }

          default:
            {
              return false;
            }
        }
      }
    }

    exports._getMountedRootCount = _getMountedRootCount;
    exports.collectCustomHooksForSignature = collectCustomHooksForSignature;
    exports.createSignatureFunctionForTransform = createSignatureFunctionForTransform;
    exports.findAffectedHostInstances = findAffectedHostInstances;
    exports.getFamilyByID = getFamilyByID;
    exports.getFamilyByType = getFamilyByType;
    exports.hasUnrecoverableErrors = hasUnrecoverableErrors;
    exports.injectIntoGlobalHook = injectIntoGlobalHook;
    exports.isLikelyComponentType = isLikelyComponentType;
    exports.performReactRefresh = performReactRefresh;
    exports.register = register;
    exports.setSignature = setSignature;
  })();
}

/***/ }),

/***/ "./node_modules/react-refresh/runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react-refresh/runtime.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react-refresh-runtime.development.js */ "./node_modules/react-refresh/cjs/react-refresh-runtime.development.js");
}

/***/ }),

/***/ "./node_modules/react-router-dom/index.js":
/*!************************************************!*\
  !*** ./node_modules/react-router-dom/index.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MemoryRouter": () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_1__.MemoryRouter),
/* harmony export */   "Navigate": () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_1__.Navigate),
/* harmony export */   "Outlet": () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_1__.Outlet),
/* harmony export */   "Route": () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_1__.Route),
/* harmony export */   "Router": () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_1__.Router),
/* harmony export */   "Routes": () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_1__.Routes),
/* harmony export */   "UNSAFE_LocationContext": () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_LocationContext),
/* harmony export */   "UNSAFE_NavigationContext": () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_NavigationContext),
/* harmony export */   "UNSAFE_RouteContext": () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_1__.UNSAFE_RouteContext),
/* harmony export */   "createRoutesFromChildren": () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_1__.createRoutesFromChildren),
/* harmony export */   "generatePath": () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_1__.generatePath),
/* harmony export */   "matchPath": () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_1__.matchPath),
/* harmony export */   "matchRoutes": () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_1__.matchRoutes),
/* harmony export */   "renderMatches": () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_1__.renderMatches),
/* harmony export */   "resolvePath": () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_1__.resolvePath),
/* harmony export */   "useHref": () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_1__.useHref),
/* harmony export */   "useInRouterContext": () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_1__.useInRouterContext),
/* harmony export */   "useLocation": () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_1__.useLocation),
/* harmony export */   "useMatch": () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_1__.useMatch),
/* harmony export */   "useNavigate": () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_1__.useNavigate),
/* harmony export */   "useNavigationType": () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_1__.useNavigationType),
/* harmony export */   "useOutlet": () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_1__.useOutlet),
/* harmony export */   "useOutletContext": () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_1__.useOutletContext),
/* harmony export */   "useParams": () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_1__.useParams),
/* harmony export */   "useResolvedPath": () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_1__.useResolvedPath),
/* harmony export */   "useRoutes": () => (/* reexport safe */ react_router__WEBPACK_IMPORTED_MODULE_1__.useRoutes),
/* harmony export */   "BrowserRouter": () => (/* binding */ BrowserRouter),
/* harmony export */   "HashRouter": () => (/* binding */ HashRouter),
/* harmony export */   "Link": () => (/* binding */ Link),
/* harmony export */   "NavLink": () => (/* binding */ NavLink),
/* harmony export */   "createSearchParams": () => (/* binding */ createSearchParams),
/* harmony export */   "unstable_HistoryRouter": () => (/* binding */ HistoryRouter),
/* harmony export */   "useLinkClickHandler": () => (/* binding */ useLinkClickHandler),
/* harmony export */   "useSearchParams": () => (/* binding */ useSearchParams)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var history__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! history */ "./node_modules/history/index.js");
/* harmony import */ var react_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-router */ "./node_modules/react-router/index.js");
/**
 * React Router DOM v6.2.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */





function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

const _excluded = ["onClick", "reloadDocument", "replace", "state", "target", "to"],
      _excluded2 = ["aria-current", "caseSensitive", "className", "end", "style", "to", "children"];

function warning(cond, message) {
  if (!cond) {
    // eslint-disable-next-line no-console
    if (typeof console !== "undefined") console.warn(message);

    try {
      // Welcome to debugging React Router!
      //
      // This error is thrown as a convenience so you can more easily
      // find the source for a warning that appears in the console by
      // enabling "pause on exceptions" in your JavaScript debugger.
      throw new Error(message); // eslint-disable-next-line no-empty
    } catch (e) {}
  }
} ////////////////////////////////////////////////////////////////////////////////
// COMPONENTS
////////////////////////////////////////////////////////////////////////////////

/**
 * A `<Router>` for use in web browsers. Provides the cleanest URLs.
 */


function BrowserRouter(_ref) {
  let {
    basename,
    children,
    window
  } = _ref;
  let historyRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();

  if (historyRef.current == null) {
    historyRef.current = (0,history__WEBPACK_IMPORTED_MODULE_2__.createBrowserHistory)({
      window
    });
  }

  let history = historyRef.current;
  let [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
    action: history.action,
    location: history.location
  });
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => history.listen(setState), [history]);
  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react_router__WEBPACK_IMPORTED_MODULE_1__.Router, {
    basename: basename,
    children: children,
    location: state.location,
    navigationType: state.action,
    navigator: history
  });
}
/**
 * A `<Router>` for use in web browsers. Stores the location in the hash
 * portion of the URL so it is not sent to the server.
 */


function HashRouter(_ref2) {
  let {
    basename,
    children,
    window
  } = _ref2;
  let historyRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();

  if (historyRef.current == null) {
    historyRef.current = (0,history__WEBPACK_IMPORTED_MODULE_2__.createHashHistory)({
      window
    });
  }

  let history = historyRef.current;
  let [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
    action: history.action,
    location: history.location
  });
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => history.listen(setState), [history]);
  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react_router__WEBPACK_IMPORTED_MODULE_1__.Router, {
    basename: basename,
    children: children,
    location: state.location,
    navigationType: state.action,
    navigator: history
  });
}
/**
 * A `<Router>` that accepts a pre-instantiated history object. It's important
 * to note that using your own history object is highly discouraged and may add
 * two versions of the history library to your bundles unless you use the same
 * version of the history library that React Router uses internally.
 */


function HistoryRouter(_ref3) {
  let {
    basename,
    children,
    history
  } = _ref3;
  const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
    action: history.action,
    location: history.location
  });
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => history.listen(setState), [history]);
  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(react_router__WEBPACK_IMPORTED_MODULE_1__.Router, {
    basename: basename,
    children: children,
    location: state.location,
    navigationType: state.action,
    navigator: history
  });
}

if (true) {
  HistoryRouter.displayName = "unstable_HistoryRouter";
}

function isModifiedEvent(event) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}
/**
 * The public API for rendering a history-aware <a>.
 */


const Link = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function LinkWithRef(_ref4, ref) {
  let {
    onClick,
    reloadDocument,
    replace = false,
    state,
    target,
    to
  } = _ref4,
      rest = _objectWithoutPropertiesLoose(_ref4, _excluded);

  let href = (0,react_router__WEBPACK_IMPORTED_MODULE_1__.useHref)(to);
  let internalOnClick = useLinkClickHandler(to, {
    replace,
    state,
    target
  });

  function handleClick(event) {
    if (onClick) onClick(event);

    if (!event.defaultPrevented && !reloadDocument) {
      internalOnClick(event);
    }
  }

  return (
    /*#__PURE__*/
    // eslint-disable-next-line jsx-a11y/anchor-has-content
    (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)("a", _extends({}, rest, {
      href: href,
      onClick: handleClick,
      ref: ref,
      target: target
    }))
  );
});

if (true) {
  Link.displayName = "Link";
}
/**
 * A <Link> wrapper that knows if it's "active" or not.
 */


const NavLink = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function NavLinkWithRef(_ref5, ref) {
  let {
    "aria-current": ariaCurrentProp = "page",
    caseSensitive = false,
    className: classNameProp = "",
    end = false,
    style: styleProp,
    to,
    children
  } = _ref5,
      rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);

  let location = (0,react_router__WEBPACK_IMPORTED_MODULE_1__.useLocation)();
  let path = (0,react_router__WEBPACK_IMPORTED_MODULE_1__.useResolvedPath)(to);
  let locationPathname = location.pathname;
  let toPathname = path.pathname;

  if (!caseSensitive) {
    locationPathname = locationPathname.toLowerCase();
    toPathname = toPathname.toLowerCase();
  }

  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === "/";
  let ariaCurrent = isActive ? ariaCurrentProp : undefined;
  let className;

  if (typeof classNameProp === "function") {
    className = classNameProp({
      isActive
    });
  } else {
    // If the className prop is not a function, we use a default `active`
    // class for <NavLink />s that are active. In v5 `active` was the default
    // value for `activeClassName`, but we are removing that API and can still
    // use the old default behavior for a cleaner upgrade path and keep the
    // simple styling rules working as they currently do.
    className = [classNameProp, isActive ? "active" : null].filter(Boolean).join(" ");
  }

  let style = typeof styleProp === "function" ? styleProp({
    isActive
  }) : styleProp;
  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Link, _extends({}, rest, {
    "aria-current": ariaCurrent,
    className: className,
    ref: ref,
    style: style,
    to: to
  }), typeof children === "function" ? children({
    isActive
  }) : children);
});

if (true) {
  NavLink.displayName = "NavLink";
} ////////////////////////////////////////////////////////////////////////////////
// HOOKS
////////////////////////////////////////////////////////////////////////////////

/**
 * Handles the click behavior for router `<Link>` components. This is useful if
 * you need to create custom `<Link>` components with the same click behavior we
 * use in our exported `<Link>`.
 */


function useLinkClickHandler(to, _temp) {
  let {
    target,
    replace: replaceProp,
    state
  } = _temp === void 0 ? {} : _temp;
  let navigate = (0,react_router__WEBPACK_IMPORTED_MODULE_1__.useNavigate)();
  let location = (0,react_router__WEBPACK_IMPORTED_MODULE_1__.useLocation)();
  let path = (0,react_router__WEBPACK_IMPORTED_MODULE_1__.useResolvedPath)(to);
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(event => {
    if (event.button === 0 && ( // Ignore everything but left clicks
    !target || target === "_self") && // Let browser handle "target=_blank" etc.
    !isModifiedEvent(event) // Ignore clicks with modifier keys
    ) {
      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of
      // a push, so do the same here.

      let replace = !!replaceProp || (0,history__WEBPACK_IMPORTED_MODULE_2__.createPath)(location) === (0,history__WEBPACK_IMPORTED_MODULE_2__.createPath)(path);
      navigate(to, {
        replace,
        state
      });
    }
  }, [location, navigate, path, replaceProp, state, target, to]);
}
/**
 * A convenient wrapper for reading and writing search parameters via the
 * URLSearchParams interface.
 */


function useSearchParams(defaultInit) {
   true ? warning(typeof URLSearchParams !== "undefined", "You cannot use the `useSearchParams` hook in a browser that does not " + "support the URLSearchParams API. If you need to support Internet " + "Explorer 11, we recommend you load a polyfill such as " + "https://github.com/ungap/url-search-params\n\n" + "If you're unsure how to load polyfills, we recommend you check out " + "https://polyfill.io/v3/ which provides some recommendations about how " + "to load polyfills only for users that need them, instead of for every " + "user.") : 0;
  let defaultSearchParamsRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(createSearchParams(defaultInit));
  let location = (0,react_router__WEBPACK_IMPORTED_MODULE_1__.useLocation)();
  let searchParams = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
    let searchParams = createSearchParams(location.search);

    for (let key of defaultSearchParamsRef.current.keys()) {
      if (!searchParams.has(key)) {
        defaultSearchParamsRef.current.getAll(key).forEach(value => {
          searchParams.append(key, value);
        });
      }
    }

    return searchParams;
  }, [location.search]);
  let navigate = (0,react_router__WEBPACK_IMPORTED_MODULE_1__.useNavigate)();
  let setSearchParams = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((nextInit, navigateOptions) => {
    navigate("?" + createSearchParams(nextInit), navigateOptions);
  }, [navigate]);
  return [searchParams, setSearchParams];
}
/**
 * Creates a URLSearchParams object using the given initializer.
 *
 * This is identical to `new URLSearchParams(init)` except it also
 * supports arrays as values in the object form of the initializer
 * instead of just strings. This is convenient when you need multiple
 * values for a given key, but don't want to use an array initializer.
 *
 * For example, instead of:
 *
 *   let searchParams = new URLSearchParams([
 *     ['sort', 'name'],
 *     ['sort', 'price']
 *   ]);
 *
 * you can do:
 *
 *   let searchParams = createSearchParams({
 *     sort: ['name', 'price']
 *   });
 */


function createSearchParams(init) {
  if (init === void 0) {
    init = "";
  }

  return new URLSearchParams(typeof init === "string" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {
    let value = init[key];
    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);
  }, []));
}



/***/ }),

/***/ "./node_modules/react-router/index.js":
/*!********************************************!*\
  !*** ./node_modules/react-router/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MemoryRouter": () => (/* binding */ MemoryRouter),
/* harmony export */   "Navigate": () => (/* binding */ Navigate),
/* harmony export */   "Outlet": () => (/* binding */ Outlet),
/* harmony export */   "Route": () => (/* binding */ Route),
/* harmony export */   "Router": () => (/* binding */ Router),
/* harmony export */   "Routes": () => (/* binding */ Routes),
/* harmony export */   "UNSAFE_LocationContext": () => (/* binding */ LocationContext),
/* harmony export */   "UNSAFE_NavigationContext": () => (/* binding */ NavigationContext),
/* harmony export */   "UNSAFE_RouteContext": () => (/* binding */ RouteContext),
/* harmony export */   "createRoutesFromChildren": () => (/* binding */ createRoutesFromChildren),
/* harmony export */   "generatePath": () => (/* binding */ generatePath),
/* harmony export */   "matchPath": () => (/* binding */ matchPath),
/* harmony export */   "matchRoutes": () => (/* binding */ matchRoutes),
/* harmony export */   "renderMatches": () => (/* binding */ renderMatches),
/* harmony export */   "resolvePath": () => (/* binding */ resolvePath),
/* harmony export */   "useHref": () => (/* binding */ useHref),
/* harmony export */   "useInRouterContext": () => (/* binding */ useInRouterContext),
/* harmony export */   "useLocation": () => (/* binding */ useLocation),
/* harmony export */   "useMatch": () => (/* binding */ useMatch),
/* harmony export */   "useNavigate": () => (/* binding */ useNavigate),
/* harmony export */   "useNavigationType": () => (/* binding */ useNavigationType),
/* harmony export */   "useOutlet": () => (/* binding */ useOutlet),
/* harmony export */   "useOutletContext": () => (/* binding */ useOutletContext),
/* harmony export */   "useParams": () => (/* binding */ useParams),
/* harmony export */   "useResolvedPath": () => (/* binding */ useResolvedPath),
/* harmony export */   "useRoutes": () => (/* binding */ useRoutes)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var history__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! history */ "./node_modules/history/index.js");
/**
 * React Router v6.2.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */



function invariant(cond, message) {
  if (!cond) throw new Error(message);
}

function warning(cond, message) {
  if (!cond) {
    // eslint-disable-next-line no-console
    if (typeof console !== "undefined") console.warn(message);

    try {
      // Welcome to debugging React Router!
      //
      // This error is thrown as a convenience so you can more easily
      // find the source for a warning that appears in the console by
      // enabling "pause on exceptions" in your JavaScript debugger.
      throw new Error(message); // eslint-disable-next-line no-empty
    } catch (e) {}
  }
}

const alreadyWarned = {};

function warningOnce(key, cond, message) {
  if (!cond && !alreadyWarned[key]) {
    alreadyWarned[key] = true;
     true ? warning(false, message) : 0;
  }
} ///////////////////////////////////////////////////////////////////////////////
// CONTEXT
///////////////////////////////////////////////////////////////////////////////

/**
 * A Navigator is a "location changer"; it's how you get to different locations.
 *
 * Every history instance conforms to the Navigator interface, but the
 * distinction is useful primarily when it comes to the low-level <Router> API
 * where both the location and a navigator must be provided separately in order
 * to avoid "tearing" that may occur in a suspense-enabled app if the action
 * and/or location were to be read directly from the history instance.
 */


const NavigationContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);

if (true) {
  NavigationContext.displayName = "Navigation";
}

const LocationContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);

if (true) {
  LocationContext.displayName = "Location";
}

const RouteContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({
  outlet: null,
  matches: []
});

if (true) {
  RouteContext.displayName = "Route";
} ///////////////////////////////////////////////////////////////////////////////
// COMPONENTS
///////////////////////////////////////////////////////////////////////////////

/**
 * A <Router> that stores all entries in memory.
 *
 * @see https://reactrouter.com/docs/en/v6/api#memoryrouter
 */


function MemoryRouter(_ref) {
  let {
    basename,
    children,
    initialEntries,
    initialIndex
  } = _ref;
  let historyRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();

  if (historyRef.current == null) {
    historyRef.current = (0,history__WEBPACK_IMPORTED_MODULE_1__.createMemoryHistory)({
      initialEntries,
      initialIndex
    });
  }

  let history = historyRef.current;
  let [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({
    action: history.action,
    location: history.location
  });
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(() => history.listen(setState), [history]);
  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Router, {
    basename: basename,
    children: children,
    location: state.location,
    navigationType: state.action,
    navigator: history
  });
}
/**
 * Changes the current location.
 *
 * Note: This API is mostly useful in React.Component subclasses that are not
 * able to use hooks. In functional components, we recommend you use the
 * `useNavigate` hook instead.
 *
 * @see https://reactrouter.com/docs/en/v6/api#navigate
 */


function Navigate(_ref2) {
  let {
    to,
    replace,
    state
  } = _ref2;
  !useInRouterContext() ?  true ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of
  // the router loaded. We can help them understand how to avoid that.
  "<Navigate> may be used only in the context of a <Router> component.") : 0 : void 0;
   true ? warning(!(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(NavigationContext).static, "<Navigate> must not be used on the initial render in a <StaticRouter>. " + "This is a no-op, but you should modify your code so the <Navigate> is " + "only ever rendered in response to some user interaction or state change.") : 0;
  let navigate = useNavigate();
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    navigate(to, {
      replace,
      state
    });
  });
  return null;
}
/**
 * Renders the child route's element, if there is one.
 *
 * @see https://reactrouter.com/docs/en/v6/api#outlet
 */


function Outlet(props) {
  return useOutlet(props.context);
}
/**
 * Declares an element that should be rendered at a certain URL path.
 *
 * @see https://reactrouter.com/docs/en/v6/api#route
 */


function Route(_props) {
   true ? invariant(false, "A <Route> is only ever to be used as the child of <Routes> element, " + "never rendered directly. Please wrap your <Route> in a <Routes>.") : 0;
}
/**
 * Provides location context for the rest of the app.
 *
 * Note: You usually won't render a <Router> directly. Instead, you'll render a
 * router that is more specific to your environment such as a <BrowserRouter>
 * in web browsers or a <StaticRouter> for server rendering.
 *
 * @see https://reactrouter.com/docs/en/v6/api#router
 */


function Router(_ref3) {
  let {
    basename: basenameProp = "/",
    children = null,
    location: locationProp,
    navigationType = history__WEBPACK_IMPORTED_MODULE_1__.Action.Pop,
    navigator,
    static: staticProp = false
  } = _ref3;
  !!useInRouterContext() ?  true ? invariant(false, "You cannot render a <Router> inside another <Router>." + " You should never have more than one in your app.") : 0 : void 0;
  let basename = normalizePathname(basenameProp);
  let navigationContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => ({
    basename,
    navigator,
    static: staticProp
  }), [basename, navigator, staticProp]);

  if (typeof locationProp === "string") {
    locationProp = (0,history__WEBPACK_IMPORTED_MODULE_1__.parsePath)(locationProp);
  }

  let {
    pathname = "/",
    search = "",
    hash = "",
    state = null,
    key = "default"
  } = locationProp;
  let location = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => {
    let trailingPathname = stripBasename(pathname, basename);

    if (trailingPathname == null) {
      return null;
    }

    return {
      pathname: trailingPathname,
      search,
      hash,
      state,
      key
    };
  }, [basename, pathname, search, hash, state, key]);
   true ? warning(location != null, "<Router basename=\"" + basename + "\"> is not able to match the URL " + ("\"" + pathname + search + hash + "\" because it does not start with the ") + "basename, so the <Router> won't render anything.") : 0;

  if (location == null) {
    return null;
  }

  return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(NavigationContext.Provider, {
    value: navigationContext
  }, /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(LocationContext.Provider, {
    children: children,
    value: {
      location,
      navigationType
    }
  }));
}
/**
 * A container for a nested tree of <Route> elements that renders the branch
 * that best matches the current location.
 *
 * @see https://reactrouter.com/docs/en/v6/api#routes
 */


function Routes(_ref4) {
  let {
    children,
    location
  } = _ref4;
  return useRoutes(createRoutesFromChildren(children), location);
} ///////////////////////////////////////////////////////////////////////////////
// HOOKS
///////////////////////////////////////////////////////////////////////////////

/**
 * Returns the full href for the given "to" value. This is useful for building
 * custom links that are also accessible and preserve right-click behavior.
 *
 * @see https://reactrouter.com/docs/en/v6/api#usehref
 */


function useHref(to) {
  !useInRouterContext() ?  true ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the
  // router loaded. We can help them understand how to avoid that.
  "useHref() may be used only in the context of a <Router> component.") : 0 : void 0;
  let {
    basename,
    navigator
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(NavigationContext);
  let {
    hash,
    pathname,
    search
  } = useResolvedPath(to);
  let joinedPathname = pathname;

  if (basename !== "/") {
    let toPathname = getToPathname(to);
    let endsWithSlash = toPathname != null && toPathname.endsWith("/");
    joinedPathname = pathname === "/" ? basename + (endsWithSlash ? "/" : "") : joinPaths([basename, pathname]);
  }

  return navigator.createHref({
    pathname: joinedPathname,
    search,
    hash
  });
}
/**
 * Returns true if this component is a descendant of a <Router>.
 *
 * @see https://reactrouter.com/docs/en/v6/api#useinroutercontext
 */


function useInRouterContext() {
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(LocationContext) != null;
}
/**
 * Returns the current location object, which represents the current URL in web
 * browsers.
 *
 * Note: If you're using this it may mean you're doing some of your own
 * "routing" in your app, and we'd like to know what your use case is. We may
 * be able to provide something higher-level to better suit your needs.
 *
 * @see https://reactrouter.com/docs/en/v6/api#uselocation
 */


function useLocation() {
  !useInRouterContext() ?  true ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the
  // router loaded. We can help them understand how to avoid that.
  "useLocation() may be used only in the context of a <Router> component.") : 0 : void 0;
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(LocationContext).location;
}
/**
 * Returns the current navigation action which describes how the router came to
 * the current location, either by a pop, push, or replace on the history stack.
 *
 * @see https://reactrouter.com/docs/en/v6/api#usenavigationtype
 */


function useNavigationType() {
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(LocationContext).navigationType;
}
/**
 * Returns true if the URL for the given "to" value matches the current URL.
 * This is useful for components that need to know "active" state, e.g.
 * <NavLink>.
 *
 * @see https://reactrouter.com/docs/en/v6/api#usematch
 */


function useMatch(pattern) {
  !useInRouterContext() ?  true ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the
  // router loaded. We can help them understand how to avoid that.
  "useMatch() may be used only in the context of a <Router> component.") : 0 : void 0;
  let {
    pathname
  } = useLocation();
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => matchPath(pattern, pathname), [pathname, pattern]);
}
/**
 * The interface for the navigate() function returned from useNavigate().
 */

/**
 * Returns an imperative method for changing the location. Used by <Link>s, but
 * may also be used by other elements to change the location.
 *
 * @see https://reactrouter.com/docs/en/v6/api#usenavigate
 */


function useNavigate() {
  !useInRouterContext() ?  true ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the
  // router loaded. We can help them understand how to avoid that.
  "useNavigate() may be used only in the context of a <Router> component.") : 0 : void 0;
  let {
    basename,
    navigator
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(NavigationContext);
  let {
    matches
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(RouteContext);
  let {
    pathname: locationPathname
  } = useLocation();
  let routePathnamesJson = JSON.stringify(matches.map(match => match.pathnameBase));
  let activeRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);
  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
    activeRef.current = true;
  });
  let navigate = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (to, options) {
    if (options === void 0) {
      options = {};
    }

     true ? warning(activeRef.current, "You should call navigate() in a React.useEffect(), not when " + "your component is first rendered.") : 0;
    if (!activeRef.current) return;

    if (typeof to === "number") {
      navigator.go(to);
      return;
    }

    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname);

    if (basename !== "/") {
      path.pathname = joinPaths([basename, path.pathname]);
    }

    (!!options.replace ? navigator.replace : navigator.push)(path, options.state);
  }, [basename, navigator, routePathnamesJson, locationPathname]);
  return navigate;
}

const OutletContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);
/**
 * Returns the context (if provided) for the child route at this level of the route
 * hierarchy.
 * @see https://reactrouter.com/docs/en/v6/api#useoutletcontext
 */

function useOutletContext() {
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(OutletContext);
}
/**
 * Returns the element for the child route at this level of the route
 * hierarchy. Used internally by <Outlet> to render child routes.
 *
 * @see https://reactrouter.com/docs/en/v6/api#useoutlet
 */


function useOutlet(context) {
  let outlet = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(RouteContext).outlet;

  if (outlet) {
    return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(OutletContext.Provider, {
      value: context
    }, outlet);
  }

  return outlet;
}
/**
 * Returns an object of key/value pairs of the dynamic params from the current
 * URL that were matched by the route path.
 *
 * @see https://reactrouter.com/docs/en/v6/api#useparams
 */


function useParams() {
  let {
    matches
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(RouteContext);
  let routeMatch = matches[matches.length - 1];
  return routeMatch ? routeMatch.params : {};
}
/**
 * Resolves the pathname of the given `to` value against the current location.
 *
 * @see https://reactrouter.com/docs/en/v6/api#useresolvedpath
 */


function useResolvedPath(to) {
  let {
    matches
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(RouteContext);
  let {
    pathname: locationPathname
  } = useLocation();
  let routePathnamesJson = JSON.stringify(matches.map(match => match.pathnameBase));
  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname), [to, routePathnamesJson, locationPathname]);
}
/**
 * Returns the element of the route that matched the current location, prepared
 * with the correct context to render the remainder of the route tree. Route
 * elements in the tree must render an <Outlet> to render their child route's
 * element.
 *
 * @see https://reactrouter.com/docs/en/v6/api#useroutes
 */


function useRoutes(routes, locationArg) {
  !useInRouterContext() ?  true ? invariant(false, // TODO: This error is probably because they somehow have 2 versions of the
  // router loaded. We can help them understand how to avoid that.
  "useRoutes() may be used only in the context of a <Router> component.") : 0 : void 0;
  let {
    matches: parentMatches
  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(RouteContext);
  let routeMatch = parentMatches[parentMatches.length - 1];
  let parentParams = routeMatch ? routeMatch.params : {};
  let parentPathname = routeMatch ? routeMatch.pathname : "/";
  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : "/";
  let parentRoute = routeMatch && routeMatch.route;

  if (true) {
    // You won't get a warning about 2 different <Routes> under a <Route>
    // without a trailing *, but this is a best-effort warning anyway since we
    // cannot even give the warning unless they land at the parent route.
    //
    // Example:
    //
    // <Routes>
    //   {/* This route path MUST end with /* because otherwise
    //       it will never match /blog/post/123 */}
    //   <Route path="blog" element={<Blog />} />
    //   <Route path="blog/feed" element={<BlogFeed />} />
    // </Routes>
    //
    // function Blog() {
    //   return (
    //     <Routes>
    //       <Route path="post/:id" element={<Post />} />
    //     </Routes>
    //   );
    // }
    let parentPath = parentRoute && parentRoute.path || "";
    warningOnce(parentPathname, !parentRoute || parentPath.endsWith("*"), "You rendered descendant <Routes> (or called `useRoutes()`) at " + ("\"" + parentPathname + "\" (under <Route path=\"" + parentPath + "\">) but the ") + "parent route path has no trailing \"*\". This means if you navigate " + "deeper, the parent won't match anymore and therefore the child " + "routes will never render.\n\n" + ("Please change the parent <Route path=\"" + parentPath + "\"> to <Route ") + ("path=\"" + (parentPath === "/" ? "*" : parentPath + "/*") + "\">."));
  }

  let locationFromContext = useLocation();
  let location;

  if (locationArg) {
    var _parsedLocationArg$pa;

    let parsedLocationArg = typeof locationArg === "string" ? (0,history__WEBPACK_IMPORTED_MODULE_1__.parsePath)(locationArg) : locationArg;
    !(parentPathnameBase === "/" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ?  true ? invariant(false, "When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, " + "the location pathname must begin with the portion of the URL pathname that was " + ("matched by all parent routes. The current pathname base is \"" + parentPathnameBase + "\" ") + ("but pathname \"" + parsedLocationArg.pathname + "\" was given in the `location` prop.")) : 0 : void 0;
    location = parsedLocationArg;
  } else {
    location = locationFromContext;
  }

  let pathname = location.pathname || "/";
  let remainingPathname = parentPathnameBase === "/" ? pathname : pathname.slice(parentPathnameBase.length) || "/";
  let matches = matchRoutes(routes, {
    pathname: remainingPathname
  });

  if (true) {
     true ? warning(parentRoute || matches != null, "No routes matched location \"" + location.pathname + location.search + location.hash + "\" ") : 0;
     true ? warning(matches == null || matches[matches.length - 1].route.element !== undefined, "Matched leaf route at location \"" + location.pathname + location.search + location.hash + "\" does not have an element. " + "This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.") : 0;
  }

  return _renderMatches(matches && matches.map(match => Object.assign({}, match, {
    params: Object.assign({}, parentParams, match.params),
    pathname: joinPaths([parentPathnameBase, match.pathname]),
    pathnameBase: match.pathnameBase === "/" ? parentPathnameBase : joinPaths([parentPathnameBase, match.pathnameBase])
  })), parentMatches);
} ///////////////////////////////////////////////////////////////////////////////
// UTILS
///////////////////////////////////////////////////////////////////////////////

/**
 * Creates a route config from a React "children" object, which is usually
 * either a `<Route>` element or an array of them. Used internally by
 * `<Routes>` to create a route config from its children.
 *
 * @see https://reactrouter.com/docs/en/v6/api#createroutesfromchildren
 */


function createRoutesFromChildren(children) {
  let routes = [];
  react__WEBPACK_IMPORTED_MODULE_0__.Children.forEach(children, element => {
    if (! /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(element)) {
      // Ignore non-elements. This allows people to more easily inline
      // conditionals in their route config.
      return;
    }

    if (element.type === react__WEBPACK_IMPORTED_MODULE_0__.Fragment) {
      // Transparently support React.Fragment and its children.
      routes.push.apply(routes, createRoutesFromChildren(element.props.children));
      return;
    }

    !(element.type === Route) ?  true ? invariant(false, "[" + (typeof element.type === "string" ? element.type : element.type.name) + "] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>") : 0 : void 0;
    let route = {
      caseSensitive: element.props.caseSensitive,
      element: element.props.element,
      index: element.props.index,
      path: element.props.path
    };

    if (element.props.children) {
      route.children = createRoutesFromChildren(element.props.children);
    }

    routes.push(route);
  });
  return routes;
}
/**
 * The parameters that were parsed from the URL path.
 */

/**
 * Returns a path with params interpolated.
 *
 * @see https://reactrouter.com/docs/en/v6/api#generatepath
 */


function generatePath(path, params) {
  if (params === void 0) {
    params = {};
  }

  return path.replace(/:(\w+)/g, (_, key) => {
    !(params[key] != null) ?  true ? invariant(false, "Missing \":" + key + "\" param") : 0 : void 0;
    return params[key];
  }).replace(/\/*\*$/, _ => params["*"] == null ? "" : params["*"].replace(/^\/*/, "/"));
}
/**
 * A RouteMatch contains info about how a route matched a URL.
 */

/**
 * Matches the given routes to a location and returns the match data.
 *
 * @see https://reactrouter.com/docs/en/v6/api#matchroutes
 */


function matchRoutes(routes, locationArg, basename) {
  if (basename === void 0) {
    basename = "/";
  }

  let location = typeof locationArg === "string" ? (0,history__WEBPACK_IMPORTED_MODULE_1__.parsePath)(locationArg) : locationArg;
  let pathname = stripBasename(location.pathname || "/", basename);

  if (pathname == null) {
    return null;
  }

  let branches = flattenRoutes(routes);
  rankRouteBranches(branches);
  let matches = null;

  for (let i = 0; matches == null && i < branches.length; ++i) {
    matches = matchRouteBranch(branches[i], pathname);
  }

  return matches;
}

function flattenRoutes(routes, branches, parentsMeta, parentPath) {
  if (branches === void 0) {
    branches = [];
  }

  if (parentsMeta === void 0) {
    parentsMeta = [];
  }

  if (parentPath === void 0) {
    parentPath = "";
  }

  routes.forEach((route, index) => {
    let meta = {
      relativePath: route.path || "",
      caseSensitive: route.caseSensitive === true,
      childrenIndex: index,
      route
    };

    if (meta.relativePath.startsWith("/")) {
      !meta.relativePath.startsWith(parentPath) ?  true ? invariant(false, "Absolute route path \"" + meta.relativePath + "\" nested under path " + ("\"" + parentPath + "\" is not valid. An absolute child route path ") + "must start with the combined path of all its parent routes.") : 0 : void 0;
      meta.relativePath = meta.relativePath.slice(parentPath.length);
    }

    let path = joinPaths([parentPath, meta.relativePath]);
    let routesMeta = parentsMeta.concat(meta); // Add the children before adding this route to the array so we traverse the
    // route tree depth-first and child routes appear before their parents in
    // the "flattened" version.

    if (route.children && route.children.length > 0) {
      !(route.index !== true) ?  true ? invariant(false, "Index routes must not have child routes. Please remove " + ("all child routes from route path \"" + path + "\".")) : 0 : void 0;
      flattenRoutes(route.children, branches, routesMeta, path);
    } // Routes without a path shouldn't ever match by themselves unless they are
    // index routes, so don't add them to the list of possible branches.


    if (route.path == null && !route.index) {
      return;
    }

    branches.push({
      path,
      score: computeScore(path, route.index),
      routesMeta
    });
  });
  return branches;
}

function rankRouteBranches(branches) {
  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first
  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));
}

const paramRe = /^:\w+$/;
const dynamicSegmentValue = 3;
const indexRouteValue = 2;
const emptySegmentValue = 1;
const staticSegmentValue = 10;
const splatPenalty = -2;

const isSplat = s => s === "*";

function computeScore(path, index) {
  let segments = path.split("/");
  let initialScore = segments.length;

  if (segments.some(isSplat)) {
    initialScore += splatPenalty;
  }

  if (index) {
    initialScore += indexRouteValue;
  }

  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === "" ? emptySegmentValue : staticSegmentValue), initialScore);
}

function compareIndexes(a, b) {
  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);
  return siblings ? // If two routes are siblings, we should try to match the earlier sibling
  // first. This allows people to have fine-grained control over the matching
  // behavior by simply putting routes with identical paths in the order they
  // want them tried.
  a[a.length - 1] - b[b.length - 1] : // Otherwise, it doesn't really make sense to rank non-siblings by index,
  // so they sort equally.
  0;
}

function matchRouteBranch(branch, pathname) {
  let {
    routesMeta
  } = branch;
  let matchedParams = {};
  let matchedPathname = "/";
  let matches = [];

  for (let i = 0; i < routesMeta.length; ++i) {
    let meta = routesMeta[i];
    let end = i === routesMeta.length - 1;
    let remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/";
    let match = matchPath({
      path: meta.relativePath,
      caseSensitive: meta.caseSensitive,
      end
    }, remainingPathname);
    if (!match) return null;
    Object.assign(matchedParams, match.params);
    let route = meta.route;
    matches.push({
      params: matchedParams,
      pathname: joinPaths([matchedPathname, match.pathname]),
      pathnameBase: joinPaths([matchedPathname, match.pathnameBase]),
      route
    });

    if (match.pathnameBase !== "/") {
      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);
    }
  }

  return matches;
}
/**
 * Renders the result of `matchRoutes()` into a React element.
 */


function renderMatches(matches) {
  return _renderMatches(matches);
}

function _renderMatches(matches, parentMatches) {
  if (parentMatches === void 0) {
    parentMatches = [];
  }

  if (matches == null) return null;
  return matches.reduceRight((outlet, match, index) => {
    return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(RouteContext.Provider, {
      children: match.route.element !== undefined ? match.route.element : /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(Outlet, null),
      value: {
        outlet,
        matches: parentMatches.concat(matches.slice(0, index + 1))
      }
    });
  }, null);
}
/**
 * A PathPattern is used to match on some portion of a URL pathname.
 */

/**
 * Performs pattern matching on a URL pathname and returns information about
 * the match.
 *
 * @see https://reactrouter.com/docs/en/v6/api#matchpath
 */


function matchPath(pattern, pathname) {
  if (typeof pattern === "string") {
    pattern = {
      path: pattern,
      caseSensitive: false,
      end: true
    };
  }

  let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);
  let match = pathname.match(matcher);
  if (!match) return null;
  let matchedPathname = match[0];
  let pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1");
  let captureGroups = match.slice(1);
  let params = paramNames.reduce((memo, paramName, index) => {
    // We need to compute the pathnameBase here using the raw splat value
    // instead of using params["*"] later because it will be decoded then
    if (paramName === "*") {
      let splatValue = captureGroups[index] || "";
      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
    }

    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || "", paramName);
    return memo;
  }, {});
  return {
    params,
    pathname: matchedPathname,
    pathnameBase,
    pattern
  };
}

function compilePath(path, caseSensitive, end) {
  if (caseSensitive === void 0) {
    caseSensitive = false;
  }

  if (end === void 0) {
    end = true;
  }

   true ? warning(path === "*" || !path.endsWith("*") || path.endsWith("/*"), "Route path \"" + path + "\" will be treated as if it were " + ("\"" + path.replace(/\*$/, "/*") + "\" because the `*` character must ") + "always follow a `/` in the pattern. To get rid of this warning, " + ("please change the route path to \"" + path.replace(/\*$/, "/*") + "\".")) : 0;
  let paramNames = [];
  let regexpSource = "^" + path.replace(/\/*\*?$/, "") // Ignore trailing / and /*, we'll handle it below
  .replace(/^\/*/, "/") // Make sure it has a leading /
  .replace(/[\\.*+^$?{}|()[\]]/g, "\\$&") // Escape special regex chars
  .replace(/:(\w+)/g, (_, paramName) => {
    paramNames.push(paramName);
    return "([^\\/]+)";
  });

  if (path.endsWith("*")) {
    paramNames.push("*");
    regexpSource += path === "*" || path === "/*" ? "(.*)$" // Already matched the initial /, just match the rest
    : "(?:\\/(.+)|\\/*)$"; // Don't include the / in params["*"]
  } else {
    regexpSource += end ? "\\/*$" // When matching to the end, ignore trailing slashes
    : // Otherwise, match a word boundary or a proceeding /. The word boundary restricts
    // parent routes to matching only their own words and nothing more, e.g. parent
    // route "/home" should not match "/home2".
    "(?:\\b|\\/|$)";
  }

  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : "i");
  return [matcher, paramNames];
}

function safelyDecodeURIComponent(value, paramName) {
  try {
    return decodeURIComponent(value);
  } catch (error) {
     true ? warning(false, "The value for the URL param \"" + paramName + "\" will not be decoded because" + (" the string \"" + value + "\" is a malformed URL segment. This is probably") + (" due to a bad percent encoding (" + error + ").")) : 0;
    return value;
  }
}
/**
 * Returns a resolved path object relative to the given pathname.
 *
 * @see https://reactrouter.com/docs/en/v6/api#resolvepath
 */


function resolvePath(to, fromPathname) {
  if (fromPathname === void 0) {
    fromPathname = "/";
  }

  let {
    pathname: toPathname,
    search = "",
    hash = ""
  } = typeof to === "string" ? (0,history__WEBPACK_IMPORTED_MODULE_1__.parsePath)(to) : to;
  let pathname = toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;
  return {
    pathname,
    search: normalizeSearch(search),
    hash: normalizeHash(hash)
  };
}

function resolvePathname(relativePath, fromPathname) {
  let segments = fromPathname.replace(/\/+$/, "").split("/");
  let relativeSegments = relativePath.split("/");
  relativeSegments.forEach(segment => {
    if (segment === "..") {
      // Keep the root "" segment so the pathname starts at /
      if (segments.length > 1) segments.pop();
    } else if (segment !== ".") {
      segments.push(segment);
    }
  });
  return segments.length > 1 ? segments.join("/") : "/";
}

function resolveTo(toArg, routePathnames, locationPathname) {
  let to = typeof toArg === "string" ? (0,history__WEBPACK_IMPORTED_MODULE_1__.parsePath)(toArg) : toArg;
  let toPathname = toArg === "" || to.pathname === "" ? "/" : to.pathname; // If a pathname is explicitly provided in `to`, it should be relative to the
  // route context. This is explained in `Note on `<Link to>` values` in our
  // migration guide from v5 as a means of disambiguation between `to` values
  // that begin with `/` and those that do not. However, this is problematic for
  // `to` values that do not provide a pathname. `to` can simply be a search or
  // hash string, in which case we should assume that the navigation is relative
  // to the current location's pathname and *not* the route pathname.

  let from;

  if (toPathname == null) {
    from = locationPathname;
  } else {
    let routePathnameIndex = routePathnames.length - 1;

    if (toPathname.startsWith("..")) {
      let toSegments = toPathname.split("/"); // Each leading .. segment means "go up one route" instead of "go up one
      // URL segment".  This is a key difference from how <a href> works and a
      // major reason we call this a "to" value instead of a "href".

      while (toSegments[0] === "..") {
        toSegments.shift();
        routePathnameIndex -= 1;
      }

      to.pathname = toSegments.join("/");
    } // If there are more ".." segments than parent routes, resolve relative to
    // the root / URL.


    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
  }

  let path = resolvePath(to, from); // Ensure the pathname has a trailing slash if the original to value had one.

  if (toPathname && toPathname !== "/" && toPathname.endsWith("/") && !path.pathname.endsWith("/")) {
    path.pathname += "/";
  }

  return path;
}

function getToPathname(to) {
  // Empty strings should be treated the same as / paths
  return to === "" || to.pathname === "" ? "/" : typeof to === "string" ? (0,history__WEBPACK_IMPORTED_MODULE_1__.parsePath)(to).pathname : to.pathname;
}

function stripBasename(pathname, basename) {
  if (basename === "/") return pathname;

  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {
    return null;
  }

  let nextChar = pathname.charAt(basename.length);

  if (nextChar && nextChar !== "/") {
    // pathname does not start with basename/
    return null;
  }

  return pathname.slice(basename.length) || "/";
}

const joinPaths = paths => paths.join("/").replace(/\/\/+/g, "/");

const normalizePathname = pathname => pathname.replace(/\/+$/, "").replace(/^\/*/, "/");

const normalizeSearch = search => !search || search === "?" ? "" : search.startsWith("?") ? search : "?" + search;

const normalizeHash = hash => !hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash; ///////////////////////////////////////////////////////////////////////////////




/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** @license React v17.0.2
 * react-jsx-dev-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


if (true) {
  (function () {
    'use strict';

    var React = __webpack_require__(/*! react */ "./node_modules/react/index.js");

    var _assign = __webpack_require__(/*! object-assign */ "./node_modules/object-assign/index.js"); // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.


    var REACT_ELEMENT_TYPE = 0xeac7;
    var REACT_PORTAL_TYPE = 0xeaca;
    exports.Fragment = 0xeacb;
    var REACT_STRICT_MODE_TYPE = 0xeacc;
    var REACT_PROFILER_TYPE = 0xead2;
    var REACT_PROVIDER_TYPE = 0xeacd;
    var REACT_CONTEXT_TYPE = 0xeace;
    var REACT_FORWARD_REF_TYPE = 0xead0;
    var REACT_SUSPENSE_TYPE = 0xead1;
    var REACT_SUSPENSE_LIST_TYPE = 0xead8;
    var REACT_MEMO_TYPE = 0xead3;
    var REACT_LAZY_TYPE = 0xead4;
    var REACT_BLOCK_TYPE = 0xead9;
    var REACT_SERVER_BLOCK_TYPE = 0xeada;
    var REACT_FUNDAMENTAL_TYPE = 0xead5;
    var REACT_SCOPE_TYPE = 0xead7;
    var REACT_OPAQUE_ID_TYPE = 0xeae0;
    var REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;
    var REACT_OFFSCREEN_TYPE = 0xeae2;
    var REACT_LEGACY_HIDDEN_TYPE = 0xeae3;

    if (typeof Symbol === 'function' && Symbol.for) {
      var symbolFor = Symbol.for;
      REACT_ELEMENT_TYPE = symbolFor('react.element');
      REACT_PORTAL_TYPE = symbolFor('react.portal');
      exports.Fragment = symbolFor('react.fragment');
      REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');
      REACT_PROFILER_TYPE = symbolFor('react.profiler');
      REACT_PROVIDER_TYPE = symbolFor('react.provider');
      REACT_CONTEXT_TYPE = symbolFor('react.context');
      REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');
      REACT_SUSPENSE_TYPE = symbolFor('react.suspense');
      REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');
      REACT_MEMO_TYPE = symbolFor('react.memo');
      REACT_LAZY_TYPE = symbolFor('react.lazy');
      REACT_BLOCK_TYPE = symbolFor('react.block');
      REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');
      REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');
      REACT_SCOPE_TYPE = symbolFor('react.scope');
      REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');
      REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');
      REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');
      REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');
    }

    var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator';

    function getIteratorFn(maybeIterable) {
      if (maybeIterable === null || typeof maybeIterable !== 'object') {
        return null;
      }

      var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

      if (typeof maybeIterator === 'function') {
        return maybeIterator;
      }

      return null;
    }

    var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

    function error(format) {
      {
        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
          args[_key2 - 1] = arguments[_key2];
        }

        printWarning('error', format, args);
      }
    }

    function printWarning(level, format, args) {
      // When changing this logic, you might want to also
      // update consoleWithStackDev.www.js as well.
      {
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum();

        if (stack !== '') {
          format += '%s';
          args = args.concat([stack]);
        }

        var argsWithFormat = args.map(function (item) {
          return '' + item;
        }); // Careful: RN currently depends on this prefix

        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
        // breaks IE9: https://github.com/facebook/react/issues/13610
        // eslint-disable-next-line react-internal/no-production-logging

        Function.prototype.apply.call(console[level], console, argsWithFormat);
      }
    } // Filter certain DOM attributes (e.g. src, href) if their values are empty strings.


    var enableScopeAPI = false; // Experimental Create Event Handle API.

    function isValidElementType(type) {
      if (typeof type === 'string' || typeof type === 'function') {
        return true;
      } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).


      if (type === exports.Fragment || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI) {
        return true;
      }

      if (typeof type === 'object' && type !== null) {
        if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {
          return true;
        }
      }

      return false;
    }

    function getWrappedName(outerType, innerType, wrapperName) {
      var functionName = innerType.displayName || innerType.name || '';
      return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
    }

    function getContextName(type) {
      return type.displayName || 'Context';
    }

    function getComponentName(type) {
      if (type == null) {
        // Host root, text node or just invalid type.
        return null;
      }

      {
        if (typeof type.tag === 'number') {
          error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
        }
      }

      if (typeof type === 'function') {
        return type.displayName || type.name || null;
      }

      if (typeof type === 'string') {
        return type;
      }

      switch (type) {
        case exports.Fragment:
          return 'Fragment';

        case REACT_PORTAL_TYPE:
          return 'Portal';

        case REACT_PROFILER_TYPE:
          return 'Profiler';

        case REACT_STRICT_MODE_TYPE:
          return 'StrictMode';

        case REACT_SUSPENSE_TYPE:
          return 'Suspense';

        case REACT_SUSPENSE_LIST_TYPE:
          return 'SuspenseList';
      }

      if (typeof type === 'object') {
        switch (type.$$typeof) {
          case REACT_CONTEXT_TYPE:
            var context = type;
            return getContextName(context) + '.Consumer';

          case REACT_PROVIDER_TYPE:
            var provider = type;
            return getContextName(provider._context) + '.Provider';

          case REACT_FORWARD_REF_TYPE:
            return getWrappedName(type, type.render, 'ForwardRef');

          case REACT_MEMO_TYPE:
            return getComponentName(type.type);

          case REACT_BLOCK_TYPE:
            return getComponentName(type._render);

          case REACT_LAZY_TYPE:
            {
              var lazyComponent = type;
              var payload = lazyComponent._payload;
              var init = lazyComponent._init;

              try {
                return getComponentName(init(payload));
              } catch (x) {
                return null;
              }
            }
        }
      }

      return null;
    } // Helpers to patch console.logs to avoid logging during side-effect free
    // replaying on render function. This currently only patches the object
    // lazily which won't cover if the log function was extracted eagerly.
    // We could also eagerly patch the method.


    var disabledDepth = 0;
    var prevLog;
    var prevInfo;
    var prevWarn;
    var prevError;
    var prevGroup;
    var prevGroupCollapsed;
    var prevGroupEnd;

    function disabledLog() {}

    disabledLog.__reactDisabledLog = true;

    function disableLogs() {
      {
        if (disabledDepth === 0) {
          /* eslint-disable react-internal/no-production-logging */
          prevLog = console.log;
          prevInfo = console.info;
          prevWarn = console.warn;
          prevError = console.error;
          prevGroup = console.group;
          prevGroupCollapsed = console.groupCollapsed;
          prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099

          var props = {
            configurable: true,
            enumerable: true,
            value: disabledLog,
            writable: true
          }; // $FlowFixMe Flow thinks console is immutable.

          Object.defineProperties(console, {
            info: props,
            log: props,
            warn: props,
            error: props,
            group: props,
            groupCollapsed: props,
            groupEnd: props
          });
          /* eslint-enable react-internal/no-production-logging */
        }

        disabledDepth++;
      }
    }

    function reenableLogs() {
      {
        disabledDepth--;

        if (disabledDepth === 0) {
          /* eslint-disable react-internal/no-production-logging */
          var props = {
            configurable: true,
            enumerable: true,
            writable: true
          }; // $FlowFixMe Flow thinks console is immutable.

          Object.defineProperties(console, {
            log: _assign({}, props, {
              value: prevLog
            }),
            info: _assign({}, props, {
              value: prevInfo
            }),
            warn: _assign({}, props, {
              value: prevWarn
            }),
            error: _assign({}, props, {
              value: prevError
            }),
            group: _assign({}, props, {
              value: prevGroup
            }),
            groupCollapsed: _assign({}, props, {
              value: prevGroupCollapsed
            }),
            groupEnd: _assign({}, props, {
              value: prevGroupEnd
            })
          });
          /* eslint-enable react-internal/no-production-logging */
        }

        if (disabledDepth < 0) {
          error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
        }
      }
    }

    var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
    var prefix;

    function describeBuiltInComponentFrame(name, source, ownerFn) {
      {
        if (prefix === undefined) {
          // Extract the VM specific prefix used by each line.
          try {
            throw Error();
          } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || '';
          }
        } // We use the prefix to ensure our stacks line up with native stack frames.


        return '\n' + prefix + name;
      }
    }

    var reentry = false;
    var componentFrameCache;
    {
      var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
      componentFrameCache = new PossiblyWeakMap();
    }

    function describeNativeComponentFrame(fn, construct) {
      // If something asked for a stack inside a fake render, it should get ignored.
      if (!fn || reentry) {
        return '';
      }

      {
        var frame = componentFrameCache.get(fn);

        if (frame !== undefined) {
          return frame;
        }
      }
      var control;
      reentry = true;
      var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.

      Error.prepareStackTrace = undefined;
      var previousDispatcher;
      {
        previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function
        // for warnings.

        ReactCurrentDispatcher.current = null;
        disableLogs();
      }

      try {
        // This should throw.
        if (construct) {
          // Something should be setting the props in the constructor.
          var Fake = function () {
            throw Error();
          }; // $FlowFixMe


          Object.defineProperty(Fake.prototype, 'props', {
            set: function () {
              // We use a throwing setter instead of frozen or non-writable props
              // because that won't throw in a non-strict mode function.
              throw Error();
            }
          });

          if (typeof Reflect === 'object' && Reflect.construct) {
            // We construct a different control for this case to include any extra
            // frames added by the construct call.
            try {
              Reflect.construct(Fake, []);
            } catch (x) {
              control = x;
            }

            Reflect.construct(fn, [], Fake);
          } else {
            try {
              Fake.call();
            } catch (x) {
              control = x;
            }

            fn.call(Fake.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (x) {
            control = x;
          }

          fn();
        }
      } catch (sample) {
        // This is inlined manually because closure doesn't do it for us.
        if (sample && control && typeof sample.stack === 'string') {
          // This extracts the first frame from the sample that isn't also in the control.
          // Skipping one frame that we assume is the frame that calls the two.
          var sampleLines = sample.stack.split('\n');
          var controlLines = control.stack.split('\n');
          var s = sampleLines.length - 1;
          var c = controlLines.length - 1;

          while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
            // We expect at least one stack frame to be shared.
            // Typically this will be the root most one. However, stack frames may be
            // cut off due to maximum stack limits. In this case, one maybe cut off
            // earlier than the other. We assume that the sample is longer or the same
            // and there for cut off earlier. So we should find the root most frame in
            // the sample somewhere in the control.
            c--;
          }

          for (; s >= 1 && c >= 0; s--, c--) {
            // Next we find the first one that isn't the same which should be the
            // frame that called our sample function and the control.
            if (sampleLines[s] !== controlLines[c]) {
              // In V8, the first line is describing the message but other VMs don't.
              // If we're about to return the first line, and the control is also on the same
              // line, that's a pretty good indicator that our sample threw at same line as
              // the control. I.e. before we entered the sample frame. So we ignore this result.
              // This can happen if you passed a class to function component, or non-function.
              if (s !== 1 || c !== 1) {
                do {
                  s--;
                  c--; // We may still have similar intermediate frames from the construct call.
                  // The next one that isn't the same should be our match though.

                  if (c < 0 || sampleLines[s] !== controlLines[c]) {
                    // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                    var _frame = '\n' + sampleLines[s].replace(' at new ', ' at ');

                    {
                      if (typeof fn === 'function') {
                        componentFrameCache.set(fn, _frame);
                      }
                    } // Return the line we found.

                    return _frame;
                  }
                } while (s >= 1 && c >= 0);
              }

              break;
            }
          }
        }
      } finally {
        reentry = false;
        {
          ReactCurrentDispatcher.current = previousDispatcher;
          reenableLogs();
        }
        Error.prepareStackTrace = previousPrepareStackTrace;
      } // Fallback to just using the name if we couldn't make it throw.


      var name = fn ? fn.displayName || fn.name : '';
      var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';
      {
        if (typeof fn === 'function') {
          componentFrameCache.set(fn, syntheticFrame);
        }
      }
      return syntheticFrame;
    }

    function describeFunctionComponentFrame(fn, source, ownerFn) {
      {
        return describeNativeComponentFrame(fn, false);
      }
    }

    function shouldConstruct(Component) {
      var prototype = Component.prototype;
      return !!(prototype && prototype.isReactComponent);
    }

    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
      if (type == null) {
        return '';
      }

      if (typeof type === 'function') {
        {
          return describeNativeComponentFrame(type, shouldConstruct(type));
        }
      }

      if (typeof type === 'string') {
        return describeBuiltInComponentFrame(type);
      }

      switch (type) {
        case REACT_SUSPENSE_TYPE:
          return describeBuiltInComponentFrame('Suspense');

        case REACT_SUSPENSE_LIST_TYPE:
          return describeBuiltInComponentFrame('SuspenseList');
      }

      if (typeof type === 'object') {
        switch (type.$$typeof) {
          case REACT_FORWARD_REF_TYPE:
            return describeFunctionComponentFrame(type.render);

          case REACT_MEMO_TYPE:
            // Memo may contain any component type so we recursively resolve it.
            return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);

          case REACT_BLOCK_TYPE:
            return describeFunctionComponentFrame(type._render);

          case REACT_LAZY_TYPE:
            {
              var lazyComponent = type;
              var payload = lazyComponent._payload;
              var init = lazyComponent._init;

              try {
                // Lazy may contain any component type so we recursively resolve it.
                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
              } catch (x) {}
            }
        }
      }

      return '';
    }

    var loggedTypeFailures = {};
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;

    function setCurrentlyValidatingElement(element) {
      {
        if (element) {
          var owner = element._owner;
          var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
          ReactDebugCurrentFrame.setExtraStackFrame(stack);
        } else {
          ReactDebugCurrentFrame.setExtraStackFrame(null);
        }
      }
    }

    function checkPropTypes(typeSpecs, values, location, componentName, element) {
      {
        // $FlowFixMe This is okay but Flow doesn't know it.
        var has = Function.call.bind(Object.prototype.hasOwnProperty);

        for (var typeSpecName in typeSpecs) {
          if (has(typeSpecs, typeSpecName)) {
            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
            // fail the render phase where it didn't fail before. So we log it.
            // After these have been cleaned up, we'll let them throw.

            try {
              // This is intentionally an invariant that gets caught. It's the same
              // behavior as without this statement except with a better message.
              if (typeof typeSpecs[typeSpecName] !== 'function') {
                var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
                err.name = 'Invariant Violation';
                throw err;
              }

              error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
            } catch (ex) {
              error$1 = ex;
            }

            if (error$1 && !(error$1 instanceof Error)) {
              setCurrentlyValidatingElement(element);
              error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);
              setCurrentlyValidatingElement(null);
            }

            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
              // Only monitor this failure once because there tends to be a lot of the
              // same error.
              loggedTypeFailures[error$1.message] = true;
              setCurrentlyValidatingElement(element);
              error('Failed %s type: %s', location, error$1.message);
              setCurrentlyValidatingElement(null);
            }
          }
        }
      }
    }

    var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var RESERVED_PROPS = {
      key: true,
      ref: true,
      __self: true,
      __source: true
    };
    var specialPropKeyWarningShown;
    var specialPropRefWarningShown;
    var didWarnAboutStringRefs;
    {
      didWarnAboutStringRefs = {};
    }

    function hasValidRef(config) {
      {
        if (hasOwnProperty.call(config, 'ref')) {
          var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;

          if (getter && getter.isReactWarning) {
            return false;
          }
        }
      }
      return config.ref !== undefined;
    }

    function hasValidKey(config) {
      {
        if (hasOwnProperty.call(config, 'key')) {
          var getter = Object.getOwnPropertyDescriptor(config, 'key').get;

          if (getter && getter.isReactWarning) {
            return false;
          }
        }
      }
      return config.key !== undefined;
    }

    function warnIfStringRefCannotBeAutoConverted(config, self) {
      {
        if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {
          var componentName = getComponentName(ReactCurrentOwner.current.type);

          if (!didWarnAboutStringRefs[componentName]) {
            error('Component "%s" contains the string ref "%s". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentName(ReactCurrentOwner.current.type), config.ref);
            didWarnAboutStringRefs[componentName] = true;
          }
        }
      }
    }

    function defineKeyPropWarningGetter(props, displayName) {
      {
        var warnAboutAccessingKey = function () {
          if (!specialPropKeyWarningShown) {
            specialPropKeyWarningShown = true;
            error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
          }
        };

        warnAboutAccessingKey.isReactWarning = true;
        Object.defineProperty(props, 'key', {
          get: warnAboutAccessingKey,
          configurable: true
        });
      }
    }

    function defineRefPropWarningGetter(props, displayName) {
      {
        var warnAboutAccessingRef = function () {
          if (!specialPropRefWarningShown) {
            specialPropRefWarningShown = true;
            error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
          }
        };

        warnAboutAccessingRef.isReactWarning = true;
        Object.defineProperty(props, 'ref', {
          get: warnAboutAccessingRef,
          configurable: true
        });
      }
    }
    /**
     * Factory method to create a new React element. This no longer adheres to
     * the class pattern, so do not use new to call it. Also, instanceof check
     * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
     * if something is a React Element.
     *
     * @param {*} type
     * @param {*} props
     * @param {*} key
     * @param {string|object} ref
     * @param {*} owner
     * @param {*} self A *temporary* helper to detect places where `this` is
     * different from the `owner` when React.createElement is called, so that we
     * can warn. We want to get rid of owner and replace string `ref`s with arrow
     * functions, and as long as `this` and owner are the same, there will be no
     * change in behavior.
     * @param {*} source An annotation object (added by a transpiler or otherwise)
     * indicating filename, line number, and/or other information.
     * @internal
     */


    var ReactElement = function (type, key, ref, self, source, owner, props) {
      var element = {
        // This tag allows us to uniquely identify this as a React Element
        $$typeof: REACT_ELEMENT_TYPE,
        // Built-in properties that belong on the element
        type: type,
        key: key,
        ref: ref,
        props: props,
        // Record the component responsible for creating this element.
        _owner: owner
      };
      {
        // The validation flag is currently mutative. We put it on
        // an external backing store so that we can freeze the whole object.
        // This can be replaced with a WeakMap once they are implemented in
        // commonly used development environments.
        element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
        // the validation flag non-enumerable (where possible, which should
        // include every environment we run tests in), so the test framework
        // ignores it.

        Object.defineProperty(element._store, 'validated', {
          configurable: false,
          enumerable: false,
          writable: true,
          value: false
        }); // self and source are DEV only properties.

        Object.defineProperty(element, '_self', {
          configurable: false,
          enumerable: false,
          writable: false,
          value: self
        }); // Two elements created in two different places should be considered
        // equal for testing purposes and therefore we hide it from enumeration.

        Object.defineProperty(element, '_source', {
          configurable: false,
          enumerable: false,
          writable: false,
          value: source
        });

        if (Object.freeze) {
          Object.freeze(element.props);
          Object.freeze(element);
        }
      }
      return element;
    };
    /**
     * https://github.com/reactjs/rfcs/pull/107
     * @param {*} type
     * @param {object} props
     * @param {string} key
     */


    function jsxDEV(type, config, maybeKey, source, self) {
      {
        var propName; // Reserved names are extracted

        var props = {};
        var key = null;
        var ref = null; // Currently, key can be spread in as a prop. This causes a potential
        // issue if key is also explicitly declared (ie. <div {...props} key="Hi" />
        // or <div key="Hi" {...props} /> ). We want to deprecate key spread,
        // but as an intermediary step, we will use jsxDEV for everything except
        // <div {...props} key="Hi" />, because we aren't currently able to tell if
        // key is explicitly declared to be undefined or not.

        if (maybeKey !== undefined) {
          key = '' + maybeKey;
        }

        if (hasValidKey(config)) {
          key = '' + config.key;
        }

        if (hasValidRef(config)) {
          ref = config.ref;
          warnIfStringRefCannotBeAutoConverted(config, self);
        } // Remaining properties are added to a new props object


        for (propName in config) {
          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
            props[propName] = config[propName];
          }
        } // Resolve default props


        if (type && type.defaultProps) {
          var defaultProps = type.defaultProps;

          for (propName in defaultProps) {
            if (props[propName] === undefined) {
              props[propName] = defaultProps[propName];
            }
          }
        }

        if (key || ref) {
          var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

          if (key) {
            defineKeyPropWarningGetter(props, displayName);
          }

          if (ref) {
            defineRefPropWarningGetter(props, displayName);
          }
        }

        return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
      }
    }

    var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;

    function setCurrentlyValidatingElement$1(element) {
      {
        if (element) {
          var owner = element._owner;
          var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
          ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else {
          ReactDebugCurrentFrame$1.setExtraStackFrame(null);
        }
      }
    }

    var propTypesMisspellWarningShown;
    {
      propTypesMisspellWarningShown = false;
    }
    /**
     * Verifies the object is a ReactElement.
     * See https://reactjs.org/docs/react-api.html#isvalidelement
     * @param {?object} object
     * @return {boolean} True if `object` is a ReactElement.
     * @final
     */

    function isValidElement(object) {
      {
        return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
      }
    }

    function getDeclarationErrorAddendum() {
      {
        if (ReactCurrentOwner$1.current) {
          var name = getComponentName(ReactCurrentOwner$1.current.type);

          if (name) {
            return '\n\nCheck the render method of `' + name + '`.';
          }
        }

        return '';
      }
    }

    function getSourceInfoErrorAddendum(source) {
      {
        if (source !== undefined) {
          var fileName = source.fileName.replace(/^.*[\\\/]/, '');
          var lineNumber = source.lineNumber;
          return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
        }

        return '';
      }
    }
    /**
     * Warn if there's no key explicitly set on dynamic arrays of children or
     * object keys are not valid. This allows us to keep track of children between
     * updates.
     */


    var ownerHasKeyUseWarning = {};

    function getCurrentComponentErrorInfo(parentType) {
      {
        var info = getDeclarationErrorAddendum();

        if (!info) {
          var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;

          if (parentName) {
            info = "\n\nCheck the top-level render call using <" + parentName + ">.";
          }
        }

        return info;
      }
    }
    /**
     * Warn if the element doesn't have an explicit key assigned to it.
     * This element is in an array. The array could grow and shrink or be
     * reordered. All children that haven't already been validated are required to
     * have a "key" property assigned to it. Error statuses are cached so a warning
     * will only be shown once.
     *
     * @internal
     * @param {ReactElement} element Element that requires a key.
     * @param {*} parentType element's parent's type.
     */


    function validateExplicitKey(element, parentType) {
      {
        if (!element._store || element._store.validated || element.key != null) {
          return;
        }

        element._store.validated = true;
        var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);

        if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
          return;
        }

        ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
        // property, it may be the creator of the child that's responsible for
        // assigning it a key.

        var childOwner = '';

        if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {
          // Give the component that originally created this child.
          childOwner = " It was passed a child from " + getComponentName(element._owner.type) + ".";
        }

        setCurrentlyValidatingElement$1(element);
        error('Each child in a list should have a unique "key" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
        setCurrentlyValidatingElement$1(null);
      }
    }
    /**
     * Ensure that every element either is passed in a static location, in an
     * array with an explicit keys property defined, or in an object literal
     * with valid key property.
     *
     * @internal
     * @param {ReactNode} node Statically passed child of any type.
     * @param {*} parentType node's parent's type.
     */


    function validateChildKeys(node, parentType) {
      {
        if (typeof node !== 'object') {
          return;
        }

        if (Array.isArray(node)) {
          for (var i = 0; i < node.length; i++) {
            var child = node[i];

            if (isValidElement(child)) {
              validateExplicitKey(child, parentType);
            }
          }
        } else if (isValidElement(node)) {
          // This element was passed in a valid location.
          if (node._store) {
            node._store.validated = true;
          }
        } else if (node) {
          var iteratorFn = getIteratorFn(node);

          if (typeof iteratorFn === 'function') {
            // Entry iterators used to provide implicit keys,
            // but now we print a separate warning for them later.
            if (iteratorFn !== node.entries) {
              var iterator = iteratorFn.call(node);
              var step;

              while (!(step = iterator.next()).done) {
                if (isValidElement(step.value)) {
                  validateExplicitKey(step.value, parentType);
                }
              }
            }
          }
        }
      }
    }
    /**
     * Given an element, validate that its props follow the propTypes definition,
     * provided by the type.
     *
     * @param {ReactElement} element
     */


    function validatePropTypes(element) {
      {
        var type = element.type;

        if (type === null || type === undefined || typeof type === 'string') {
          return;
        }

        var propTypes;

        if (typeof type === 'function') {
          propTypes = type.propTypes;
        } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
        // Inner props are checked in the reconciler.
        type.$$typeof === REACT_MEMO_TYPE)) {
          propTypes = type.propTypes;
        } else {
          return;
        }

        if (propTypes) {
          // Intentionally inside to avoid triggering lazy initializers:
          var name = getComponentName(type);
          checkPropTypes(propTypes, element.props, 'prop', name, element);
        } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
          propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:

          var _name = getComponentName(type);

          error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
        }

        if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {
          error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
        }
      }
    }
    /**
     * Given a fragment, validate that it can only be provided with fragment props
     * @param {ReactElement} fragment
     */


    function validateFragmentProps(fragment) {
      {
        var keys = Object.keys(fragment.props);

        for (var i = 0; i < keys.length; i++) {
          var key = keys[i];

          if (key !== 'children' && key !== 'key') {
            setCurrentlyValidatingElement$1(fragment);
            error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);
            setCurrentlyValidatingElement$1(null);
            break;
          }
        }

        if (fragment.ref !== null) {
          setCurrentlyValidatingElement$1(fragment);
          error('Invalid attribute `ref` supplied to `React.Fragment`.');
          setCurrentlyValidatingElement$1(null);
        }
      }
    }

    function jsxWithValidation(type, props, key, isStaticChildren, source, self) {
      {
        var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
        // succeed and there will likely be errors in render.

        if (!validType) {
          var info = '';

          if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
            info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
          }

          var sourceInfo = getSourceInfoErrorAddendum(source);

          if (sourceInfo) {
            info += sourceInfo;
          } else {
            info += getDeclarationErrorAddendum();
          }

          var typeString;

          if (type === null) {
            typeString = 'null';
          } else if (Array.isArray(type)) {
            typeString = 'array';
          } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
            typeString = "<" + (getComponentName(type.type) || 'Unknown') + " />";
            info = ' Did you accidentally export a JSX literal instead of a component?';
          } else {
            typeString = typeof type;
          }

          error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
        }

        var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.
        // TODO: Drop this when these are no longer allowed as the type argument.

        if (element == null) {
          return element;
        } // Skip key warning if the type isn't valid since our key validation logic
        // doesn't expect a non-string/function type and can throw confusing errors.
        // We don't want exception behavior to differ between dev and prod.
        // (Rendering will throw with a helpful message and as soon as the type is
        // fixed, the key warnings will appear.)


        if (validType) {
          var children = props.children;

          if (children !== undefined) {
            if (isStaticChildren) {
              if (Array.isArray(children)) {
                for (var i = 0; i < children.length; i++) {
                  validateChildKeys(children[i], type);
                }

                if (Object.freeze) {
                  Object.freeze(children);
                }
              } else {
                error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');
              }
            } else {
              validateChildKeys(children, type);
            }
          }
        }

        if (type === exports.Fragment) {
          validateFragmentProps(element);
        } else {
          validatePropTypes(element);
        }

        return element;
      }
    } // These two functions exist to still get child warnings in dev


    var jsxDEV$1 = jsxWithValidation;
    exports.jsxDEV = jsxDEV$1;
  })();
}

/***/ }),

/***/ "./node_modules/react/cjs/react.development.js":
/*!*****************************************************!*\
  !*** ./node_modules/react/cjs/react.development.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
/** @license React v17.0.2
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


if (true) {
  (function () {
    'use strict';

    var _assign = __webpack_require__(/*! object-assign */ "./node_modules/object-assign/index.js"); // TODO: this is special because it gets imported during build.


    var ReactVersion = '17.0.2'; // ATTENTION
    // When adding new symbols to this file,
    // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'
    // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.

    var REACT_ELEMENT_TYPE = 0xeac7;
    var REACT_PORTAL_TYPE = 0xeaca;
    exports.Fragment = 0xeacb;
    exports.StrictMode = 0xeacc;
    exports.Profiler = 0xead2;
    var REACT_PROVIDER_TYPE = 0xeacd;
    var REACT_CONTEXT_TYPE = 0xeace;
    var REACT_FORWARD_REF_TYPE = 0xead0;
    exports.Suspense = 0xead1;
    var REACT_SUSPENSE_LIST_TYPE = 0xead8;
    var REACT_MEMO_TYPE = 0xead3;
    var REACT_LAZY_TYPE = 0xead4;
    var REACT_BLOCK_TYPE = 0xead9;
    var REACT_SERVER_BLOCK_TYPE = 0xeada;
    var REACT_FUNDAMENTAL_TYPE = 0xead5;
    var REACT_SCOPE_TYPE = 0xead7;
    var REACT_OPAQUE_ID_TYPE = 0xeae0;
    var REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;
    var REACT_OFFSCREEN_TYPE = 0xeae2;
    var REACT_LEGACY_HIDDEN_TYPE = 0xeae3;

    if (typeof Symbol === 'function' && Symbol.for) {
      var symbolFor = Symbol.for;
      REACT_ELEMENT_TYPE = symbolFor('react.element');
      REACT_PORTAL_TYPE = symbolFor('react.portal');
      exports.Fragment = symbolFor('react.fragment');
      exports.StrictMode = symbolFor('react.strict_mode');
      exports.Profiler = symbolFor('react.profiler');
      REACT_PROVIDER_TYPE = symbolFor('react.provider');
      REACT_CONTEXT_TYPE = symbolFor('react.context');
      REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');
      exports.Suspense = symbolFor('react.suspense');
      REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');
      REACT_MEMO_TYPE = symbolFor('react.memo');
      REACT_LAZY_TYPE = symbolFor('react.lazy');
      REACT_BLOCK_TYPE = symbolFor('react.block');
      REACT_SERVER_BLOCK_TYPE = symbolFor('react.server.block');
      REACT_FUNDAMENTAL_TYPE = symbolFor('react.fundamental');
      REACT_SCOPE_TYPE = symbolFor('react.scope');
      REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');
      REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');
      REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');
      REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');
    }

    var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator';

    function getIteratorFn(maybeIterable) {
      if (maybeIterable === null || typeof maybeIterable !== 'object') {
        return null;
      }

      var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

      if (typeof maybeIterator === 'function') {
        return maybeIterator;
      }

      return null;
    }
    /**
     * Keeps track of the current dispatcher.
     */


    var ReactCurrentDispatcher = {
      /**
       * @internal
       * @type {ReactComponent}
       */
      current: null
    };
    /**
     * Keeps track of the current batch's configuration such as how long an update
     * should suspend for if it needs to.
     */

    var ReactCurrentBatchConfig = {
      transition: 0
    };
    /**
     * Keeps track of the current owner.
     *
     * The current owner is the component who should own any components that are
     * currently being constructed.
     */

    var ReactCurrentOwner = {
      /**
       * @internal
       * @type {ReactComponent}
       */
      current: null
    };
    var ReactDebugCurrentFrame = {};
    var currentExtraStackFrame = null;

    function setExtraStackFrame(stack) {
      {
        currentExtraStackFrame = stack;
      }
    }

    {
      ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {
        {
          currentExtraStackFrame = stack;
        }
      }; // Stack implementation injected by the current renderer.


      ReactDebugCurrentFrame.getCurrentStack = null;

      ReactDebugCurrentFrame.getStackAddendum = function () {
        var stack = ''; // Add an extra top frame while an element is being validated

        if (currentExtraStackFrame) {
          stack += currentExtraStackFrame;
        } // Delegate to the injected renderer-specific implementation


        var impl = ReactDebugCurrentFrame.getCurrentStack;

        if (impl) {
          stack += impl() || '';
        }

        return stack;
      };
    }
    /**
     * Used by act() to track whether you're inside an act() scope.
     */

    var IsSomeRendererActing = {
      current: false
    };
    var ReactSharedInternals = {
      ReactCurrentDispatcher: ReactCurrentDispatcher,
      ReactCurrentBatchConfig: ReactCurrentBatchConfig,
      ReactCurrentOwner: ReactCurrentOwner,
      IsSomeRendererActing: IsSomeRendererActing,
      // Used by renderers to avoid bundling object-assign twice in UMD bundles:
      assign: _assign
    };
    {
      ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
    } // by calls to these methods by a Babel plugin.
    //
    // In PROD (or in packages without access to React internals),
    // they are left as they are instead.

    function warn(format) {
      {
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        printWarning('warn', format, args);
      }
    }

    function error(format) {
      {
        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
          args[_key2 - 1] = arguments[_key2];
        }

        printWarning('error', format, args);
      }
    }

    function printWarning(level, format, args) {
      // When changing this logic, you might want to also
      // update consoleWithStackDev.www.js as well.
      {
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum();

        if (stack !== '') {
          format += '%s';
          args = args.concat([stack]);
        }

        var argsWithFormat = args.map(function (item) {
          return '' + item;
        }); // Careful: RN currently depends on this prefix

        argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
        // breaks IE9: https://github.com/facebook/react/issues/13610
        // eslint-disable-next-line react-internal/no-production-logging

        Function.prototype.apply.call(console[level], console, argsWithFormat);
      }
    }

    var didWarnStateUpdateForUnmountedComponent = {};

    function warnNoop(publicInstance, callerName) {
      {
        var _constructor = publicInstance.constructor;
        var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
        var warningKey = componentName + "." + callerName;

        if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
          return;
        }

        error("Can't call %s on a component that is not yet mounted. " + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);
        didWarnStateUpdateForUnmountedComponent[warningKey] = true;
      }
    }
    /**
     * This is the abstract API for an update queue.
     */


    var ReactNoopUpdateQueue = {
      /**
       * Checks whether or not this composite component is mounted.
       * @param {ReactClass} publicInstance The instance we want to test.
       * @return {boolean} True if mounted, false otherwise.
       * @protected
       * @final
       */
      isMounted: function (publicInstance) {
        return false;
      },

      /**
       * Forces an update. This should only be invoked when it is known with
       * certainty that we are **not** in a DOM transaction.
       *
       * You may want to call this when you know that some deeper aspect of the
       * component's state has changed but `setState` was not called.
       *
       * This will not invoke `shouldComponentUpdate`, but it will invoke
       * `componentWillUpdate` and `componentDidUpdate`.
       *
       * @param {ReactClass} publicInstance The instance that should rerender.
       * @param {?function} callback Called after component is updated.
       * @param {?string} callerName name of the calling function in the public API.
       * @internal
       */
      enqueueForceUpdate: function (publicInstance, callback, callerName) {
        warnNoop(publicInstance, 'forceUpdate');
      },

      /**
       * Replaces all of the state. Always use this or `setState` to mutate state.
       * You should treat `this.state` as immutable.
       *
       * There is no guarantee that `this.state` will be immediately updated, so
       * accessing `this.state` after calling this method may return the old value.
       *
       * @param {ReactClass} publicInstance The instance that should rerender.
       * @param {object} completeState Next state.
       * @param {?function} callback Called after component is updated.
       * @param {?string} callerName name of the calling function in the public API.
       * @internal
       */
      enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
        warnNoop(publicInstance, 'replaceState');
      },

      /**
       * Sets a subset of the state. This only exists because _pendingState is
       * internal. This provides a merging strategy that is not available to deep
       * properties which is confusing. TODO: Expose pendingState or don't use it
       * during the merge.
       *
       * @param {ReactClass} publicInstance The instance that should rerender.
       * @param {object} partialState Next partial state to be merged with state.
       * @param {?function} callback Called after component is updated.
       * @param {?string} Name of the calling function in the public API.
       * @internal
       */
      enqueueSetState: function (publicInstance, partialState, callback, callerName) {
        warnNoop(publicInstance, 'setState');
      }
    };
    var emptyObject = {};
    {
      Object.freeze(emptyObject);
    }
    /**
     * Base class helpers for the updating state of a component.
     */

    function Component(props, context, updater) {
      this.props = props;
      this.context = context; // If a component has string refs, we will assign a different object later.

      this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
      // renderer.

      this.updater = updater || ReactNoopUpdateQueue;
    }

    Component.prototype.isReactComponent = {};
    /**
     * Sets a subset of the state. Always use this to mutate
     * state. You should treat `this.state` as immutable.
     *
     * There is no guarantee that `this.state` will be immediately updated, so
     * accessing `this.state` after calling this method may return the old value.
     *
     * There is no guarantee that calls to `setState` will run synchronously,
     * as they may eventually be batched together.  You can provide an optional
     * callback that will be executed when the call to setState is actually
     * completed.
     *
     * When a function is provided to setState, it will be called at some point in
     * the future (not synchronously). It will be called with the up to date
     * component arguments (state, props, context). These values can be different
     * from this.* because your function may be called after receiveProps but before
     * shouldComponentUpdate, and this new state, props, and context will not yet be
     * assigned to this.
     *
     * @param {object|function} partialState Next partial state or function to
     *        produce next partial state to be merged with current state.
     * @param {?function} callback Called after state is updated.
     * @final
     * @protected
     */

    Component.prototype.setState = function (partialState, callback) {
      if (!(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null)) {
        {
          throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
        }
      }

      this.updater.enqueueSetState(this, partialState, callback, 'setState');
    };
    /**
     * Forces an update. This should only be invoked when it is known with
     * certainty that we are **not** in a DOM transaction.
     *
     * You may want to call this when you know that some deeper aspect of the
     * component's state has changed but `setState` was not called.
     *
     * This will not invoke `shouldComponentUpdate`, but it will invoke
     * `componentWillUpdate` and `componentDidUpdate`.
     *
     * @param {?function} callback Called after update is complete.
     * @final
     * @protected
     */


    Component.prototype.forceUpdate = function (callback) {
      this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
    };
    /**
     * Deprecated APIs. These APIs used to exist on classic React classes but since
     * we would like to deprecate them, we're not going to move them over to this
     * modern base class. Instead, we define a getter that warns if it's accessed.
     */


    {
      var deprecatedAPIs = {
        isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
        replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
      };

      var defineDeprecationWarning = function (methodName, info) {
        Object.defineProperty(Component.prototype, methodName, {
          get: function () {
            warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
            return undefined;
          }
        });
      };

      for (var fnName in deprecatedAPIs) {
        if (deprecatedAPIs.hasOwnProperty(fnName)) {
          defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
        }
      }
    }

    function ComponentDummy() {}

    ComponentDummy.prototype = Component.prototype;
    /**
     * Convenience component with default shallow equality check for sCU.
     */

    function PureComponent(props, context, updater) {
      this.props = props;
      this.context = context; // If a component has string refs, we will assign a different object later.

      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;
    }

    var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
    pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.

    _assign(pureComponentPrototype, Component.prototype);

    pureComponentPrototype.isPureReactComponent = true; // an immutable object with a single mutable value

    function createRef() {
      var refObject = {
        current: null
      };
      {
        Object.seal(refObject);
      }
      return refObject;
    }

    function getWrappedName(outerType, innerType, wrapperName) {
      var functionName = innerType.displayName || innerType.name || '';
      return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
    }

    function getContextName(type) {
      return type.displayName || 'Context';
    }

    function getComponentName(type) {
      if (type == null) {
        // Host root, text node or just invalid type.
        return null;
      }

      {
        if (typeof type.tag === 'number') {
          error('Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
        }
      }

      if (typeof type === 'function') {
        return type.displayName || type.name || null;
      }

      if (typeof type === 'string') {
        return type;
      }

      switch (type) {
        case exports.Fragment:
          return 'Fragment';

        case REACT_PORTAL_TYPE:
          return 'Portal';

        case exports.Profiler:
          return 'Profiler';

        case exports.StrictMode:
          return 'StrictMode';

        case exports.Suspense:
          return 'Suspense';

        case REACT_SUSPENSE_LIST_TYPE:
          return 'SuspenseList';
      }

      if (typeof type === 'object') {
        switch (type.$$typeof) {
          case REACT_CONTEXT_TYPE:
            var context = type;
            return getContextName(context) + '.Consumer';

          case REACT_PROVIDER_TYPE:
            var provider = type;
            return getContextName(provider._context) + '.Provider';

          case REACT_FORWARD_REF_TYPE:
            return getWrappedName(type, type.render, 'ForwardRef');

          case REACT_MEMO_TYPE:
            return getComponentName(type.type);

          case REACT_BLOCK_TYPE:
            return getComponentName(type._render);

          case REACT_LAZY_TYPE:
            {
              var lazyComponent = type;
              var payload = lazyComponent._payload;
              var init = lazyComponent._init;

              try {
                return getComponentName(init(payload));
              } catch (x) {
                return null;
              }
            }
        }
      }

      return null;
    }

    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var RESERVED_PROPS = {
      key: true,
      ref: true,
      __self: true,
      __source: true
    };
    var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
    {
      didWarnAboutStringRefs = {};
    }

    function hasValidRef(config) {
      {
        if (hasOwnProperty.call(config, 'ref')) {
          var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;

          if (getter && getter.isReactWarning) {
            return false;
          }
        }
      }
      return config.ref !== undefined;
    }

    function hasValidKey(config) {
      {
        if (hasOwnProperty.call(config, 'key')) {
          var getter = Object.getOwnPropertyDescriptor(config, 'key').get;

          if (getter && getter.isReactWarning) {
            return false;
          }
        }
      }
      return config.key !== undefined;
    }

    function defineKeyPropWarningGetter(props, displayName) {
      var warnAboutAccessingKey = function () {
        {
          if (!specialPropKeyWarningShown) {
            specialPropKeyWarningShown = true;
            error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
          }
        }
      };

      warnAboutAccessingKey.isReactWarning = true;
      Object.defineProperty(props, 'key', {
        get: warnAboutAccessingKey,
        configurable: true
      });
    }

    function defineRefPropWarningGetter(props, displayName) {
      var warnAboutAccessingRef = function () {
        {
          if (!specialPropRefWarningShown) {
            specialPropRefWarningShown = true;
            error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);
          }
        }
      };

      warnAboutAccessingRef.isReactWarning = true;
      Object.defineProperty(props, 'ref', {
        get: warnAboutAccessingRef,
        configurable: true
      });
    }

    function warnIfStringRefCannotBeAutoConverted(config) {
      {
        if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
          var componentName = getComponentName(ReactCurrentOwner.current.type);

          if (!didWarnAboutStringRefs[componentName]) {
            error('Component "%s" contains the string ref "%s". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);
            didWarnAboutStringRefs[componentName] = true;
          }
        }
      }
    }
    /**
     * Factory method to create a new React element. This no longer adheres to
     * the class pattern, so do not use new to call it. Also, instanceof check
     * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
     * if something is a React Element.
     *
     * @param {*} type
     * @param {*} props
     * @param {*} key
     * @param {string|object} ref
     * @param {*} owner
     * @param {*} self A *temporary* helper to detect places where `this` is
     * different from the `owner` when React.createElement is called, so that we
     * can warn. We want to get rid of owner and replace string `ref`s with arrow
     * functions, and as long as `this` and owner are the same, there will be no
     * change in behavior.
     * @param {*} source An annotation object (added by a transpiler or otherwise)
     * indicating filename, line number, and/or other information.
     * @internal
     */


    var ReactElement = function (type, key, ref, self, source, owner, props) {
      var element = {
        // This tag allows us to uniquely identify this as a React Element
        $$typeof: REACT_ELEMENT_TYPE,
        // Built-in properties that belong on the element
        type: type,
        key: key,
        ref: ref,
        props: props,
        // Record the component responsible for creating this element.
        _owner: owner
      };
      {
        // The validation flag is currently mutative. We put it on
        // an external backing store so that we can freeze the whole object.
        // This can be replaced with a WeakMap once they are implemented in
        // commonly used development environments.
        element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
        // the validation flag non-enumerable (where possible, which should
        // include every environment we run tests in), so the test framework
        // ignores it.

        Object.defineProperty(element._store, 'validated', {
          configurable: false,
          enumerable: false,
          writable: true,
          value: false
        }); // self and source are DEV only properties.

        Object.defineProperty(element, '_self', {
          configurable: false,
          enumerable: false,
          writable: false,
          value: self
        }); // Two elements created in two different places should be considered
        // equal for testing purposes and therefore we hide it from enumeration.

        Object.defineProperty(element, '_source', {
          configurable: false,
          enumerable: false,
          writable: false,
          value: source
        });

        if (Object.freeze) {
          Object.freeze(element.props);
          Object.freeze(element);
        }
      }
      return element;
    };
    /**
     * Create and return a new ReactElement of the given type.
     * See https://reactjs.org/docs/react-api.html#createelement
     */


    function createElement(type, config, children) {
      var propName; // Reserved names are extracted

      var props = {};
      var key = null;
      var ref = null;
      var self = null;
      var source = null;

      if (config != null) {
        if (hasValidRef(config)) {
          ref = config.ref;
          {
            warnIfStringRefCannotBeAutoConverted(config);
          }
        }

        if (hasValidKey(config)) {
          key = '' + config.key;
        }

        self = config.__self === undefined ? null : config.__self;
        source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object

        for (propName in config) {
          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
            props[propName] = config[propName];
          }
        }
      } // Children can be more than one argument, and those are transferred onto
      // the newly allocated props object.


      var childrenLength = arguments.length - 2;

      if (childrenLength === 1) {
        props.children = children;
      } else if (childrenLength > 1) {
        var childArray = Array(childrenLength);

        for (var i = 0; i < childrenLength; i++) {
          childArray[i] = arguments[i + 2];
        }

        {
          if (Object.freeze) {
            Object.freeze(childArray);
          }
        }
        props.children = childArray;
      } // Resolve default props


      if (type && type.defaultProps) {
        var defaultProps = type.defaultProps;

        for (propName in defaultProps) {
          if (props[propName] === undefined) {
            props[propName] = defaultProps[propName];
          }
        }
      }

      {
        if (key || ref) {
          var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

          if (key) {
            defineKeyPropWarningGetter(props, displayName);
          }

          if (ref) {
            defineRefPropWarningGetter(props, displayName);
          }
        }
      }
      return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
    }

    function cloneAndReplaceKey(oldElement, newKey) {
      var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
      return newElement;
    }
    /**
     * Clone and return a new ReactElement using element as the starting point.
     * See https://reactjs.org/docs/react-api.html#cloneelement
     */


    function cloneElement(element, config, children) {
      if (!!(element === null || element === undefined)) {
        {
          throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
        }
      }

      var propName; // Original props are copied

      var props = _assign({}, element.props); // Reserved names are extracted


      var key = element.key;
      var ref = element.ref; // Self is preserved since the owner is preserved.

      var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
      // transpiler, and the original source is probably a better indicator of the
      // true owner.

      var source = element._source; // Owner will be preserved, unless ref is overridden

      var owner = element._owner;

      if (config != null) {
        if (hasValidRef(config)) {
          // Silently steal the ref from the parent.
          ref = config.ref;
          owner = ReactCurrentOwner.current;
        }

        if (hasValidKey(config)) {
          key = '' + config.key;
        } // Remaining properties override existing props


        var defaultProps;

        if (element.type && element.type.defaultProps) {
          defaultProps = element.type.defaultProps;
        }

        for (propName in config) {
          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
            if (config[propName] === undefined && defaultProps !== undefined) {
              // Resolve default props
              props[propName] = defaultProps[propName];
            } else {
              props[propName] = config[propName];
            }
          }
        }
      } // Children can be more than one argument, and those are transferred onto
      // the newly allocated props object.


      var childrenLength = arguments.length - 2;

      if (childrenLength === 1) {
        props.children = children;
      } else if (childrenLength > 1) {
        var childArray = Array(childrenLength);

        for (var i = 0; i < childrenLength; i++) {
          childArray[i] = arguments[i + 2];
        }

        props.children = childArray;
      }

      return ReactElement(element.type, key, ref, self, source, owner, props);
    }
    /**
     * Verifies the object is a ReactElement.
     * See https://reactjs.org/docs/react-api.html#isvalidelement
     * @param {?object} object
     * @return {boolean} True if `object` is a ReactElement.
     * @final
     */


    function isValidElement(object) {
      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }

    var SEPARATOR = '.';
    var SUBSEPARATOR = ':';
    /**
     * Escape and wrap key so it is safe to use as a reactid
     *
     * @param {string} key to be escaped.
     * @return {string} the escaped key.
     */

    function escape(key) {
      var escapeRegex = /[=:]/g;
      var escaperLookup = {
        '=': '=0',
        ':': '=2'
      };
      var escapedString = key.replace(escapeRegex, function (match) {
        return escaperLookup[match];
      });
      return '$' + escapedString;
    }
    /**
     * TODO: Test that a single child and an array with one item have the same key
     * pattern.
     */


    var didWarnAboutMaps = false;
    var userProvidedKeyEscapeRegex = /\/+/g;

    function escapeUserProvidedKey(text) {
      return text.replace(userProvidedKeyEscapeRegex, '$&/');
    }
    /**
     * Generate a key string that identifies a element within a set.
     *
     * @param {*} element A element that could contain a manual key.
     * @param {number} index Index that is used if a manual key is not provided.
     * @return {string}
     */


    function getElementKey(element, index) {
      // Do some typechecking here since we call this blindly. We want to ensure
      // that we don't block potential future ES APIs.
      if (typeof element === 'object' && element !== null && element.key != null) {
        // Explicit key
        return escape('' + element.key);
      } // Implicit key determined by the index in the set


      return index.toString(36);
    }

    function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
      var type = typeof children;

      if (type === 'undefined' || type === 'boolean') {
        // All of the above are perceived as null.
        children = null;
      }

      var invokeCallback = false;

      if (children === null) {
        invokeCallback = true;
      } else {
        switch (type) {
          case 'string':
          case 'number':
            invokeCallback = true;
            break;

          case 'object':
            switch (children.$$typeof) {
              case REACT_ELEMENT_TYPE:
              case REACT_PORTAL_TYPE:
                invokeCallback = true;
            }

        }
      }

      if (invokeCallback) {
        var _child = children;
        var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array
        // so that it's consistent if the number of children grows:

        var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;

        if (Array.isArray(mappedChild)) {
          var escapedChildKey = '';

          if (childKey != null) {
            escapedChildKey = escapeUserProvidedKey(childKey) + '/';
          }

          mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {
            return c;
          });
        } else if (mappedChild != null) {
          if (isValidElement(mappedChild)) {
            mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as
            // traverseAllChildren used to do for objects as children
            escapedPrefix + ( // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
            mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
            escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);
          }

          array.push(mappedChild);
        }

        return 1;
      }

      var child;
      var nextName;
      var subtreeCount = 0; // Count of children found in the current subtree.

      var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

      if (Array.isArray(children)) {
        for (var i = 0; i < children.length; i++) {
          child = children[i];
          nextName = nextNamePrefix + getElementKey(child, i);
          subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
        }
      } else {
        var iteratorFn = getIteratorFn(children);

        if (typeof iteratorFn === 'function') {
          var iterableChildren = children;
          {
            // Warn about using Maps as children
            if (iteratorFn === iterableChildren.entries) {
              if (!didWarnAboutMaps) {
                warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');
              }

              didWarnAboutMaps = true;
            }
          }
          var iterator = iteratorFn.call(iterableChildren);
          var step;
          var ii = 0;

          while (!(step = iterator.next()).done) {
            child = step.value;
            nextName = nextNamePrefix + getElementKey(child, ii++);
            subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
          }
        } else if (type === 'object') {
          var childrenString = '' + children;
          {
            {
              throw Error("Objects are not valid as a React child (found: " + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + "). If you meant to render a collection of children, use an array instead.");
            }
          }
        }
      }

      return subtreeCount;
    }
    /**
     * Maps children that are typically specified as `props.children`.
     *
     * See https://reactjs.org/docs/react-api.html#reactchildrenmap
     *
     * The provided mapFunction(child, index) will be called for each
     * leaf child.
     *
     * @param {?*} children Children tree container.
     * @param {function(*, int)} func The map function.
     * @param {*} context Context for mapFunction.
     * @return {object} Object containing the ordered map of results.
     */


    function mapChildren(children, func, context) {
      if (children == null) {
        return children;
      }

      var result = [];
      var count = 0;
      mapIntoArray(children, result, '', '', function (child) {
        return func.call(context, child, count++);
      });
      return result;
    }
    /**
     * Count the number of children that are typically specified as
     * `props.children`.
     *
     * See https://reactjs.org/docs/react-api.html#reactchildrencount
     *
     * @param {?*} children Children tree container.
     * @return {number} The number of children.
     */


    function countChildren(children) {
      var n = 0;
      mapChildren(children, function () {
        n++; // Don't return anything
      });
      return n;
    }
    /**
     * Iterates through children that are typically specified as `props.children`.
     *
     * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
     *
     * The provided forEachFunc(child, index) will be called for each
     * leaf child.
     *
     * @param {?*} children Children tree container.
     * @param {function(*, int)} forEachFunc
     * @param {*} forEachContext Context for forEachContext.
     */


    function forEachChildren(children, forEachFunc, forEachContext) {
      mapChildren(children, function () {
        forEachFunc.apply(this, arguments); // Don't return anything.
      }, forEachContext);
    }
    /**
     * Flatten a children object (typically specified as `props.children`) and
     * return an array with appropriately re-keyed children.
     *
     * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
     */


    function toArray(children) {
      return mapChildren(children, function (child) {
        return child;
      }) || [];
    }
    /**
     * Returns the first child in a collection of children and verifies that there
     * is only one child in the collection.
     *
     * See https://reactjs.org/docs/react-api.html#reactchildrenonly
     *
     * The current implementation of this function assumes that a single child gets
     * passed without a wrapper, but the purpose of this helper function is to
     * abstract away the particular structure of children.
     *
     * @param {?object} children Child collection structure.
     * @return {ReactElement} The first and only `ReactElement` contained in the
     * structure.
     */


    function onlyChild(children) {
      if (!isValidElement(children)) {
        {
          throw Error("React.Children.only expected to receive a single React element child.");
        }
      }

      return children;
    }

    function createContext(defaultValue, calculateChangedBits) {
      if (calculateChangedBits === undefined) {
        calculateChangedBits = null;
      } else {
        {
          if (calculateChangedBits !== null && typeof calculateChangedBits !== 'function') {
            error('createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits);
          }
        }
      }

      var context = {
        $$typeof: REACT_CONTEXT_TYPE,
        _calculateChangedBits: calculateChangedBits,
        // As a workaround to support multiple concurrent renderers, we categorize
        // some renderers as primary and others as secondary. We only expect
        // there to be two concurrent renderers at most: React Native (primary) and
        // Fabric (secondary); React DOM (primary) and React ART (secondary).
        // Secondary renderers store their context values on separate fields.
        _currentValue: defaultValue,
        _currentValue2: defaultValue,
        // Used to track how many concurrent renderers this context currently
        // supports within in a single renderer. Such as parallel server rendering.
        _threadCount: 0,
        // These are circular
        Provider: null,
        Consumer: null
      };
      context.Provider = {
        $$typeof: REACT_PROVIDER_TYPE,
        _context: context
      };
      var hasWarnedAboutUsingNestedContextConsumers = false;
      var hasWarnedAboutUsingConsumerProvider = false;
      var hasWarnedAboutDisplayNameOnConsumer = false;
      {
        // A separate object, but proxies back to the original context object for
        // backwards compatibility. It has a different $$typeof, so we can properly
        // warn for the incorrect usage of Context as a Consumer.
        var Consumer = {
          $$typeof: REACT_CONTEXT_TYPE,
          _context: context,
          _calculateChangedBits: context._calculateChangedBits
        }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here

        Object.defineProperties(Consumer, {
          Provider: {
            get: function () {
              if (!hasWarnedAboutUsingConsumerProvider) {
                hasWarnedAboutUsingConsumerProvider = true;
                error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');
              }

              return context.Provider;
            },
            set: function (_Provider) {
              context.Provider = _Provider;
            }
          },
          _currentValue: {
            get: function () {
              return context._currentValue;
            },
            set: function (_currentValue) {
              context._currentValue = _currentValue;
            }
          },
          _currentValue2: {
            get: function () {
              return context._currentValue2;
            },
            set: function (_currentValue2) {
              context._currentValue2 = _currentValue2;
            }
          },
          _threadCount: {
            get: function () {
              return context._threadCount;
            },
            set: function (_threadCount) {
              context._threadCount = _threadCount;
            }
          },
          Consumer: {
            get: function () {
              if (!hasWarnedAboutUsingNestedContextConsumers) {
                hasWarnedAboutUsingNestedContextConsumers = true;
                error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
              }

              return context.Consumer;
            }
          },
          displayName: {
            get: function () {
              return context.displayName;
            },
            set: function (displayName) {
              if (!hasWarnedAboutDisplayNameOnConsumer) {
                warn('Setting `displayName` on Context.Consumer has no effect. ' + "You should set it directly on the context with Context.displayName = '%s'.", displayName);
                hasWarnedAboutDisplayNameOnConsumer = true;
              }
            }
          }
        }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty

        context.Consumer = Consumer;
      }
      {
        context._currentRenderer = null;
        context._currentRenderer2 = null;
      }
      return context;
    }

    var Uninitialized = -1;
    var Pending = 0;
    var Resolved = 1;
    var Rejected = 2;

    function lazyInitializer(payload) {
      if (payload._status === Uninitialized) {
        var ctor = payload._result;
        var thenable = ctor(); // Transition to the next state.

        var pending = payload;
        pending._status = Pending;
        pending._result = thenable;
        thenable.then(function (moduleObject) {
          if (payload._status === Pending) {
            var defaultExport = moduleObject.default;
            {
              if (defaultExport === undefined) {
                error('lazy: Expected the result of a dynamic import() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' + // Break up imports to avoid accidentally parsing them as dependencies.
                'const MyComponent = lazy(() => imp' + "ort('./MyComponent'))", moduleObject);
              }
            } // Transition to the next state.

            var resolved = payload;
            resolved._status = Resolved;
            resolved._result = defaultExport;
          }
        }, function (error) {
          if (payload._status === Pending) {
            // Transition to the next state.
            var rejected = payload;
            rejected._status = Rejected;
            rejected._result = error;
          }
        });
      }

      if (payload._status === Resolved) {
        return payload._result;
      } else {
        throw payload._result;
      }
    }

    function lazy(ctor) {
      var payload = {
        // We use these fields to store the result.
        _status: -1,
        _result: ctor
      };
      var lazyType = {
        $$typeof: REACT_LAZY_TYPE,
        _payload: payload,
        _init: lazyInitializer
      };
      {
        // In production, this would just set it on the object.
        var defaultProps;
        var propTypes; // $FlowFixMe

        Object.defineProperties(lazyType, {
          defaultProps: {
            configurable: true,
            get: function () {
              return defaultProps;
            },
            set: function (newDefaultProps) {
              error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');
              defaultProps = newDefaultProps; // Match production behavior more closely:
              // $FlowFixMe

              Object.defineProperty(lazyType, 'defaultProps', {
                enumerable: true
              });
            }
          },
          propTypes: {
            configurable: true,
            get: function () {
              return propTypes;
            },
            set: function (newPropTypes) {
              error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');
              propTypes = newPropTypes; // Match production behavior more closely:
              // $FlowFixMe

              Object.defineProperty(lazyType, 'propTypes', {
                enumerable: true
              });
            }
          }
        });
      }
      return lazyType;
    }

    function forwardRef(render) {
      {
        if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
          error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');
        } else if (typeof render !== 'function') {
          error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);
        } else {
          if (render.length !== 0 && render.length !== 2) {
            error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');
          }
        }

        if (render != null) {
          if (render.defaultProps != null || render.propTypes != null) {
            error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');
          }
        }
      }
      var elementType = {
        $$typeof: REACT_FORWARD_REF_TYPE,
        render: render
      };
      {
        var ownName;
        Object.defineProperty(elementType, 'displayName', {
          enumerable: false,
          configurable: true,
          get: function () {
            return ownName;
          },
          set: function (name) {
            ownName = name;

            if (render.displayName == null) {
              render.displayName = name;
            }
          }
        });
      }
      return elementType;
    } // Filter certain DOM attributes (e.g. src, href) if their values are empty strings.


    var enableScopeAPI = false; // Experimental Create Event Handle API.

    function isValidElementType(type) {
      if (typeof type === 'string' || typeof type === 'function') {
        return true;
      } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).


      if (type === exports.Fragment || type === exports.Profiler || type === REACT_DEBUG_TRACING_MODE_TYPE || type === exports.StrictMode || type === exports.Suspense || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI) {
        return true;
      }

      if (typeof type === 'object' && type !== null) {
        if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {
          return true;
        }
      }

      return false;
    }

    function memo(type, compare) {
      {
        if (!isValidElementType(type)) {
          error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);
        }
      }
      var elementType = {
        $$typeof: REACT_MEMO_TYPE,
        type: type,
        compare: compare === undefined ? null : compare
      };
      {
        var ownName;
        Object.defineProperty(elementType, 'displayName', {
          enumerable: false,
          configurable: true,
          get: function () {
            return ownName;
          },
          set: function (name) {
            ownName = name;

            if (type.displayName == null) {
              type.displayName = name;
            }
          }
        });
      }
      return elementType;
    }

    function resolveDispatcher() {
      var dispatcher = ReactCurrentDispatcher.current;

      if (!(dispatcher !== null)) {
        {
          throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
        }
      }

      return dispatcher;
    }

    function useContext(Context, unstable_observedBits) {
      var dispatcher = resolveDispatcher();
      {
        if (unstable_observedBits !== undefined) {
          error('useContext() second argument is reserved for future ' + 'use in React. Passing it is not supported. ' + 'You passed: %s.%s', unstable_observedBits, typeof unstable_observedBits === 'number' && Array.isArray(arguments[2]) ? '\n\nDid you call array.map(useContext)? ' + 'Calling Hooks inside a loop is not supported. ' + 'Learn more at https://reactjs.org/link/rules-of-hooks' : '');
        } // TODO: add a more generic warning for invalid values.


        if (Context._context !== undefined) {
          var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs
          // and nobody should be using this in existing code.

          if (realContext.Consumer === Context) {
            error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');
          } else if (realContext.Provider === Context) {
            error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');
          }
        }
      }
      return dispatcher.useContext(Context, unstable_observedBits);
    }

    function useState(initialState) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useState(initialState);
    }

    function useReducer(reducer, initialArg, init) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useReducer(reducer, initialArg, init);
    }

    function useRef(initialValue) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useRef(initialValue);
    }

    function useEffect(create, deps) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useEffect(create, deps);
    }

    function useLayoutEffect(create, deps) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useLayoutEffect(create, deps);
    }

    function useCallback(callback, deps) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useCallback(callback, deps);
    }

    function useMemo(create, deps) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useMemo(create, deps);
    }

    function useImperativeHandle(ref, create, deps) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useImperativeHandle(ref, create, deps);
    }

    function useDebugValue(value, formatterFn) {
      {
        var dispatcher = resolveDispatcher();
        return dispatcher.useDebugValue(value, formatterFn);
      }
    } // Helpers to patch console.logs to avoid logging during side-effect free
    // replaying on render function. This currently only patches the object
    // lazily which won't cover if the log function was extracted eagerly.
    // We could also eagerly patch the method.


    var disabledDepth = 0;
    var prevLog;
    var prevInfo;
    var prevWarn;
    var prevError;
    var prevGroup;
    var prevGroupCollapsed;
    var prevGroupEnd;

    function disabledLog() {}

    disabledLog.__reactDisabledLog = true;

    function disableLogs() {
      {
        if (disabledDepth === 0) {
          /* eslint-disable react-internal/no-production-logging */
          prevLog = console.log;
          prevInfo = console.info;
          prevWarn = console.warn;
          prevError = console.error;
          prevGroup = console.group;
          prevGroupCollapsed = console.groupCollapsed;
          prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099

          var props = {
            configurable: true,
            enumerable: true,
            value: disabledLog,
            writable: true
          }; // $FlowFixMe Flow thinks console is immutable.

          Object.defineProperties(console, {
            info: props,
            log: props,
            warn: props,
            error: props,
            group: props,
            groupCollapsed: props,
            groupEnd: props
          });
          /* eslint-enable react-internal/no-production-logging */
        }

        disabledDepth++;
      }
    }

    function reenableLogs() {
      {
        disabledDepth--;

        if (disabledDepth === 0) {
          /* eslint-disable react-internal/no-production-logging */
          var props = {
            configurable: true,
            enumerable: true,
            writable: true
          }; // $FlowFixMe Flow thinks console is immutable.

          Object.defineProperties(console, {
            log: _assign({}, props, {
              value: prevLog
            }),
            info: _assign({}, props, {
              value: prevInfo
            }),
            warn: _assign({}, props, {
              value: prevWarn
            }),
            error: _assign({}, props, {
              value: prevError
            }),
            group: _assign({}, props, {
              value: prevGroup
            }),
            groupCollapsed: _assign({}, props, {
              value: prevGroupCollapsed
            }),
            groupEnd: _assign({}, props, {
              value: prevGroupEnd
            })
          });
          /* eslint-enable react-internal/no-production-logging */
        }

        if (disabledDepth < 0) {
          error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');
        }
      }
    }

    var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
    var prefix;

    function describeBuiltInComponentFrame(name, source, ownerFn) {
      {
        if (prefix === undefined) {
          // Extract the VM specific prefix used by each line.
          try {
            throw Error();
          } catch (x) {
            var match = x.stack.trim().match(/\n( *(at )?)/);
            prefix = match && match[1] || '';
          }
        } // We use the prefix to ensure our stacks line up with native stack frames.


        return '\n' + prefix + name;
      }
    }

    var reentry = false;
    var componentFrameCache;
    {
      var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
      componentFrameCache = new PossiblyWeakMap();
    }

    function describeNativeComponentFrame(fn, construct) {
      // If something asked for a stack inside a fake render, it should get ignored.
      if (!fn || reentry) {
        return '';
      }

      {
        var frame = componentFrameCache.get(fn);

        if (frame !== undefined) {
          return frame;
        }
      }
      var control;
      reentry = true;
      var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.

      Error.prepareStackTrace = undefined;
      var previousDispatcher;
      {
        previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function
        // for warnings.

        ReactCurrentDispatcher$1.current = null;
        disableLogs();
      }

      try {
        // This should throw.
        if (construct) {
          // Something should be setting the props in the constructor.
          var Fake = function () {
            throw Error();
          }; // $FlowFixMe


          Object.defineProperty(Fake.prototype, 'props', {
            set: function () {
              // We use a throwing setter instead of frozen or non-writable props
              // because that won't throw in a non-strict mode function.
              throw Error();
            }
          });

          if (typeof Reflect === 'object' && Reflect.construct) {
            // We construct a different control for this case to include any extra
            // frames added by the construct call.
            try {
              Reflect.construct(Fake, []);
            } catch (x) {
              control = x;
            }

            Reflect.construct(fn, [], Fake);
          } else {
            try {
              Fake.call();
            } catch (x) {
              control = x;
            }

            fn.call(Fake.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (x) {
            control = x;
          }

          fn();
        }
      } catch (sample) {
        // This is inlined manually because closure doesn't do it for us.
        if (sample && control && typeof sample.stack === 'string') {
          // This extracts the first frame from the sample that isn't also in the control.
          // Skipping one frame that we assume is the frame that calls the two.
          var sampleLines = sample.stack.split('\n');
          var controlLines = control.stack.split('\n');
          var s = sampleLines.length - 1;
          var c = controlLines.length - 1;

          while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
            // We expect at least one stack frame to be shared.
            // Typically this will be the root most one. However, stack frames may be
            // cut off due to maximum stack limits. In this case, one maybe cut off
            // earlier than the other. We assume that the sample is longer or the same
            // and there for cut off earlier. So we should find the root most frame in
            // the sample somewhere in the control.
            c--;
          }

          for (; s >= 1 && c >= 0; s--, c--) {
            // Next we find the first one that isn't the same which should be the
            // frame that called our sample function and the control.
            if (sampleLines[s] !== controlLines[c]) {
              // In V8, the first line is describing the message but other VMs don't.
              // If we're about to return the first line, and the control is also on the same
              // line, that's a pretty good indicator that our sample threw at same line as
              // the control. I.e. before we entered the sample frame. So we ignore this result.
              // This can happen if you passed a class to function component, or non-function.
              if (s !== 1 || c !== 1) {
                do {
                  s--;
                  c--; // We may still have similar intermediate frames from the construct call.
                  // The next one that isn't the same should be our match though.

                  if (c < 0 || sampleLines[s] !== controlLines[c]) {
                    // V8 adds a "new" prefix for native classes. Let's remove it to make it prettier.
                    var _frame = '\n' + sampleLines[s].replace(' at new ', ' at ');

                    {
                      if (typeof fn === 'function') {
                        componentFrameCache.set(fn, _frame);
                      }
                    } // Return the line we found.

                    return _frame;
                  }
                } while (s >= 1 && c >= 0);
              }

              break;
            }
          }
        }
      } finally {
        reentry = false;
        {
          ReactCurrentDispatcher$1.current = previousDispatcher;
          reenableLogs();
        }
        Error.prepareStackTrace = previousPrepareStackTrace;
      } // Fallback to just using the name if we couldn't make it throw.


      var name = fn ? fn.displayName || fn.name : '';
      var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';
      {
        if (typeof fn === 'function') {
          componentFrameCache.set(fn, syntheticFrame);
        }
      }
      return syntheticFrame;
    }

    function describeFunctionComponentFrame(fn, source, ownerFn) {
      {
        return describeNativeComponentFrame(fn, false);
      }
    }

    function shouldConstruct(Component) {
      var prototype = Component.prototype;
      return !!(prototype && prototype.isReactComponent);
    }

    function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
      if (type == null) {
        return '';
      }

      if (typeof type === 'function') {
        {
          return describeNativeComponentFrame(type, shouldConstruct(type));
        }
      }

      if (typeof type === 'string') {
        return describeBuiltInComponentFrame(type);
      }

      switch (type) {
        case exports.Suspense:
          return describeBuiltInComponentFrame('Suspense');

        case REACT_SUSPENSE_LIST_TYPE:
          return describeBuiltInComponentFrame('SuspenseList');
      }

      if (typeof type === 'object') {
        switch (type.$$typeof) {
          case REACT_FORWARD_REF_TYPE:
            return describeFunctionComponentFrame(type.render);

          case REACT_MEMO_TYPE:
            // Memo may contain any component type so we recursively resolve it.
            return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);

          case REACT_BLOCK_TYPE:
            return describeFunctionComponentFrame(type._render);

          case REACT_LAZY_TYPE:
            {
              var lazyComponent = type;
              var payload = lazyComponent._payload;
              var init = lazyComponent._init;

              try {
                // Lazy may contain any component type so we recursively resolve it.
                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
              } catch (x) {}
            }
        }
      }

      return '';
    }

    var loggedTypeFailures = {};
    var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;

    function setCurrentlyValidatingElement(element) {
      {
        if (element) {
          var owner = element._owner;
          var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
          ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
        } else {
          ReactDebugCurrentFrame$1.setExtraStackFrame(null);
        }
      }
    }

    function checkPropTypes(typeSpecs, values, location, componentName, element) {
      {
        // $FlowFixMe This is okay but Flow doesn't know it.
        var has = Function.call.bind(Object.prototype.hasOwnProperty);

        for (var typeSpecName in typeSpecs) {
          if (has(typeSpecs, typeSpecName)) {
            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to
            // fail the render phase where it didn't fail before. So we log it.
            // After these have been cleaned up, we'll let them throw.

            try {
              // This is intentionally an invariant that gets caught. It's the same
              // behavior as without this statement except with a better message.
              if (typeof typeSpecs[typeSpecName] !== 'function') {
                var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
                err.name = 'Invariant Violation';
                throw err;
              }

              error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');
            } catch (ex) {
              error$1 = ex;
            }

            if (error$1 && !(error$1 instanceof Error)) {
              setCurrentlyValidatingElement(element);
              error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);
              setCurrentlyValidatingElement(null);
            }

            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
              // Only monitor this failure once because there tends to be a lot of the
              // same error.
              loggedTypeFailures[error$1.message] = true;
              setCurrentlyValidatingElement(element);
              error('Failed %s type: %s', location, error$1.message);
              setCurrentlyValidatingElement(null);
            }
          }
        }
      }
    }

    function setCurrentlyValidatingElement$1(element) {
      {
        if (element) {
          var owner = element._owner;
          var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
          setExtraStackFrame(stack);
        } else {
          setExtraStackFrame(null);
        }
      }
    }

    var propTypesMisspellWarningShown;
    {
      propTypesMisspellWarningShown = false;
    }

    function getDeclarationErrorAddendum() {
      if (ReactCurrentOwner.current) {
        var name = getComponentName(ReactCurrentOwner.current.type);

        if (name) {
          return '\n\nCheck the render method of `' + name + '`.';
        }
      }

      return '';
    }

    function getSourceInfoErrorAddendum(source) {
      if (source !== undefined) {
        var fileName = source.fileName.replace(/^.*[\\\/]/, '');
        var lineNumber = source.lineNumber;
        return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
      }

      return '';
    }

    function getSourceInfoErrorAddendumForProps(elementProps) {
      if (elementProps !== null && elementProps !== undefined) {
        return getSourceInfoErrorAddendum(elementProps.__source);
      }

      return '';
    }
    /**
     * Warn if there's no key explicitly set on dynamic arrays of children or
     * object keys are not valid. This allows us to keep track of children between
     * updates.
     */


    var ownerHasKeyUseWarning = {};

    function getCurrentComponentErrorInfo(parentType) {
      var info = getDeclarationErrorAddendum();

      if (!info) {
        var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;

        if (parentName) {
          info = "\n\nCheck the top-level render call using <" + parentName + ">.";
        }
      }

      return info;
    }
    /**
     * Warn if the element doesn't have an explicit key assigned to it.
     * This element is in an array. The array could grow and shrink or be
     * reordered. All children that haven't already been validated are required to
     * have a "key" property assigned to it. Error statuses are cached so a warning
     * will only be shown once.
     *
     * @internal
     * @param {ReactElement} element Element that requires a key.
     * @param {*} parentType element's parent's type.
     */


    function validateExplicitKey(element, parentType) {
      if (!element._store || element._store.validated || element.key != null) {
        return;
      }

      element._store.validated = true;
      var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);

      if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
        return;
      }

      ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
      // property, it may be the creator of the child that's responsible for
      // assigning it a key.

      var childOwner = '';

      if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
        // Give the component that originally created this child.
        childOwner = " It was passed a child from " + getComponentName(element._owner.type) + ".";
      }

      {
        setCurrentlyValidatingElement$1(element);
        error('Each child in a list should have a unique "key" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
        setCurrentlyValidatingElement$1(null);
      }
    }
    /**
     * Ensure that every element either is passed in a static location, in an
     * array with an explicit keys property defined, or in an object literal
     * with valid key property.
     *
     * @internal
     * @param {ReactNode} node Statically passed child of any type.
     * @param {*} parentType node's parent's type.
     */


    function validateChildKeys(node, parentType) {
      if (typeof node !== 'object') {
        return;
      }

      if (Array.isArray(node)) {
        for (var i = 0; i < node.length; i++) {
          var child = node[i];

          if (isValidElement(child)) {
            validateExplicitKey(child, parentType);
          }
        }
      } else if (isValidElement(node)) {
        // This element was passed in a valid location.
        if (node._store) {
          node._store.validated = true;
        }
      } else if (node) {
        var iteratorFn = getIteratorFn(node);

        if (typeof iteratorFn === 'function') {
          // Entry iterators used to provide implicit keys,
          // but now we print a separate warning for them later.
          if (iteratorFn !== node.entries) {
            var iterator = iteratorFn.call(node);
            var step;

            while (!(step = iterator.next()).done) {
              if (isValidElement(step.value)) {
                validateExplicitKey(step.value, parentType);
              }
            }
          }
        }
      }
    }
    /**
     * Given an element, validate that its props follow the propTypes definition,
     * provided by the type.
     *
     * @param {ReactElement} element
     */


    function validatePropTypes(element) {
      {
        var type = element.type;

        if (type === null || type === undefined || typeof type === 'string') {
          return;
        }

        var propTypes;

        if (typeof type === 'function') {
          propTypes = type.propTypes;
        } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
        // Inner props are checked in the reconciler.
        type.$$typeof === REACT_MEMO_TYPE)) {
          propTypes = type.propTypes;
        } else {
          return;
        }

        if (propTypes) {
          // Intentionally inside to avoid triggering lazy initializers:
          var name = getComponentName(type);
          checkPropTypes(propTypes, element.props, 'prop', name, element);
        } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
          propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:

          var _name = getComponentName(type);

          error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');
        }

        if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {
          error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
        }
      }
    }
    /**
     * Given a fragment, validate that it can only be provided with fragment props
     * @param {ReactElement} fragment
     */


    function validateFragmentProps(fragment) {
      {
        var keys = Object.keys(fragment.props);

        for (var i = 0; i < keys.length; i++) {
          var key = keys[i];

          if (key !== 'children' && key !== 'key') {
            setCurrentlyValidatingElement$1(fragment);
            error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);
            setCurrentlyValidatingElement$1(null);
            break;
          }
        }

        if (fragment.ref !== null) {
          setCurrentlyValidatingElement$1(fragment);
          error('Invalid attribute `ref` supplied to `React.Fragment`.');
          setCurrentlyValidatingElement$1(null);
        }
      }
    }

    function createElementWithValidation(type, props, children) {
      var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
      // succeed and there will likely be errors in render.

      if (!validType) {
        var info = '';

        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
          info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
        }

        var sourceInfo = getSourceInfoErrorAddendumForProps(props);

        if (sourceInfo) {
          info += sourceInfo;
        } else {
          info += getDeclarationErrorAddendum();
        }

        var typeString;

        if (type === null) {
          typeString = 'null';
        } else if (Array.isArray(type)) {
          typeString = 'array';
        } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
          typeString = "<" + (getComponentName(type.type) || 'Unknown') + " />";
          info = ' Did you accidentally export a JSX literal instead of a component?';
        } else {
          typeString = typeof type;
        }

        {
          error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
        }
      }

      var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.
      // TODO: Drop this when these are no longer allowed as the type argument.

      if (element == null) {
        return element;
      } // Skip key warning if the type isn't valid since our key validation logic
      // doesn't expect a non-string/function type and can throw confusing errors.
      // We don't want exception behavior to differ between dev and prod.
      // (Rendering will throw with a helpful message and as soon as the type is
      // fixed, the key warnings will appear.)


      if (validType) {
        for (var i = 2; i < arguments.length; i++) {
          validateChildKeys(arguments[i], type);
        }
      }

      if (type === exports.Fragment) {
        validateFragmentProps(element);
      } else {
        validatePropTypes(element);
      }

      return element;
    }

    var didWarnAboutDeprecatedCreateFactory = false;

    function createFactoryWithValidation(type) {
      var validatedFactory = createElementWithValidation.bind(null, type);
      validatedFactory.type = type;
      {
        if (!didWarnAboutDeprecatedCreateFactory) {
          didWarnAboutDeprecatedCreateFactory = true;
          warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');
        } // Legacy hook: remove it


        Object.defineProperty(validatedFactory, 'type', {
          enumerable: false,
          get: function () {
            warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
            Object.defineProperty(this, 'type', {
              value: type
            });
            return type;
          }
        });
      }
      return validatedFactory;
    }

    function cloneElementWithValidation(element, props, children) {
      var newElement = cloneElement.apply(this, arguments);

      for (var i = 2; i < arguments.length; i++) {
        validateChildKeys(arguments[i], newElement.type);
      }

      validatePropTypes(newElement);
      return newElement;
    }

    {
      try {
        var frozenObject = Object.freeze({});
        /* eslint-disable no-new */

        new Map([[frozenObject, null]]);
        new Set([frozenObject]);
        /* eslint-enable no-new */
      } catch (e) {}
    }
    var createElement$1 = createElementWithValidation;
    var cloneElement$1 = cloneElementWithValidation;
    var createFactory = createFactoryWithValidation;
    var Children = {
      map: mapChildren,
      forEach: forEachChildren,
      count: countChildren,
      toArray: toArray,
      only: onlyChild
    };
    exports.Children = Children;
    exports.Component = Component;
    exports.PureComponent = PureComponent;
    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
    exports.cloneElement = cloneElement$1;
    exports.createContext = createContext;
    exports.createElement = createElement$1;
    exports.createFactory = createFactory;
    exports.createRef = createRef;
    exports.forwardRef = forwardRef;
    exports.isValidElement = isValidElement;
    exports.lazy = lazy;
    exports.memo = memo;
    exports.useCallback = useCallback;
    exports.useContext = useContext;
    exports.useDebugValue = useDebugValue;
    exports.useEffect = useEffect;
    exports.useImperativeHandle = useImperativeHandle;
    exports.useLayoutEffect = useLayoutEffect;
    exports.useMemo = useMemo;
    exports.useReducer = useReducer;
    exports.useRef = useRef;
    exports.useState = useState;
    exports.version = ReactVersion;
  })();
}

/***/ }),

/***/ "./node_modules/react/index.js":
/*!*************************************!*\
  !*** ./node_modules/react/index.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react.development.js */ "./node_modules/react/cjs/react.development.js");
}

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js");
}

/***/ }),

/***/ "./node_modules/scheduler/cjs/scheduler-tracing.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/scheduler/cjs/scheduler-tracing.development.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** @license React v0.20.2
 * scheduler-tracing.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


if (true) {
  (function () {
    'use strict';

    var DEFAULT_THREAD_ID = 0; // Counters used to generate unique IDs.

    var interactionIDCounter = 0;
    var threadIDCounter = 0; // Set of currently traced interactions.
    // Interactions "stack"–
    // Meaning that newly traced interactions are appended to the previously active set.
    // When an interaction goes out of scope, the previous set (if any) is restored.

    exports.__interactionsRef = null; // Listener(s) to notify when interactions begin and end.

    exports.__subscriberRef = null;
    {
      exports.__interactionsRef = {
        current: new Set()
      };
      exports.__subscriberRef = {
        current: null
      };
    }

    function unstable_clear(callback) {
      var prevInteractions = exports.__interactionsRef.current;
      exports.__interactionsRef.current = new Set();

      try {
        return callback();
      } finally {
        exports.__interactionsRef.current = prevInteractions;
      }
    }

    function unstable_getCurrent() {
      {
        return exports.__interactionsRef.current;
      }
    }

    function unstable_getThreadID() {
      return ++threadIDCounter;
    }

    function unstable_trace(name, timestamp, callback) {
      var threadID = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULT_THREAD_ID;
      var interaction = {
        __count: 1,
        id: interactionIDCounter++,
        name: name,
        timestamp: timestamp
      };
      var prevInteractions = exports.__interactionsRef.current; // Traced interactions should stack/accumulate.
      // To do that, clone the current interactions.
      // The previous set will be restored upon completion.

      var interactions = new Set(prevInteractions);
      interactions.add(interaction);
      exports.__interactionsRef.current = interactions;
      var subscriber = exports.__subscriberRef.current;
      var returnValue;

      try {
        if (subscriber !== null) {
          subscriber.onInteractionTraced(interaction);
        }
      } finally {
        try {
          if (subscriber !== null) {
            subscriber.onWorkStarted(interactions, threadID);
          }
        } finally {
          try {
            returnValue = callback();
          } finally {
            exports.__interactionsRef.current = prevInteractions;

            try {
              if (subscriber !== null) {
                subscriber.onWorkStopped(interactions, threadID);
              }
            } finally {
              interaction.__count--; // If no async work was scheduled for this interaction,
              // Notify subscribers that it's completed.

              if (subscriber !== null && interaction.__count === 0) {
                subscriber.onInteractionScheduledWorkCompleted(interaction);
              }
            }
          }
        }
      }

      return returnValue;
    }

    function unstable_wrap(callback) {
      var threadID = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_THREAD_ID;
      var wrappedInteractions = exports.__interactionsRef.current;
      var subscriber = exports.__subscriberRef.current;

      if (subscriber !== null) {
        subscriber.onWorkScheduled(wrappedInteractions, threadID);
      } // Update the pending async work count for the current interactions.
      // Update after calling subscribers in case of error.


      wrappedInteractions.forEach(function (interaction) {
        interaction.__count++;
      });
      var hasRun = false;

      function wrapped() {
        var prevInteractions = exports.__interactionsRef.current;
        exports.__interactionsRef.current = wrappedInteractions;
        subscriber = exports.__subscriberRef.current;

        try {
          var returnValue;

          try {
            if (subscriber !== null) {
              subscriber.onWorkStarted(wrappedInteractions, threadID);
            }
          } finally {
            try {
              returnValue = callback.apply(undefined, arguments);
            } finally {
              exports.__interactionsRef.current = prevInteractions;

              if (subscriber !== null) {
                subscriber.onWorkStopped(wrappedInteractions, threadID);
              }
            }
          }

          return returnValue;
        } finally {
          if (!hasRun) {
            // We only expect a wrapped function to be executed once,
            // But in the event that it's executed more than once–
            // Only decrement the outstanding interaction counts once.
            hasRun = true; // Update pending async counts for all wrapped interactions.
            // If this was the last scheduled async work for any of them,
            // Mark them as completed.

            wrappedInteractions.forEach(function (interaction) {
              interaction.__count--;

              if (subscriber !== null && interaction.__count === 0) {
                subscriber.onInteractionScheduledWorkCompleted(interaction);
              }
            });
          }
        }
      }

      wrapped.cancel = function cancel() {
        subscriber = exports.__subscriberRef.current;

        try {
          if (subscriber !== null) {
            subscriber.onWorkCanceled(wrappedInteractions, threadID);
          }
        } finally {
          // Update pending async counts for all wrapped interactions.
          // If this was the last scheduled async work for any of them,
          // Mark them as completed.
          wrappedInteractions.forEach(function (interaction) {
            interaction.__count--;

            if (subscriber && interaction.__count === 0) {
              subscriber.onInteractionScheduledWorkCompleted(interaction);
            }
          });
        }
      };

      return wrapped;
    }

    var subscribers = null;
    {
      subscribers = new Set();
    }

    function unstable_subscribe(subscriber) {
      {
        subscribers.add(subscriber);

        if (subscribers.size === 1) {
          exports.__subscriberRef.current = {
            onInteractionScheduledWorkCompleted: onInteractionScheduledWorkCompleted,
            onInteractionTraced: onInteractionTraced,
            onWorkCanceled: onWorkCanceled,
            onWorkScheduled: onWorkScheduled,
            onWorkStarted: onWorkStarted,
            onWorkStopped: onWorkStopped
          };
        }
      }
    }

    function unstable_unsubscribe(subscriber) {
      {
        subscribers.delete(subscriber);

        if (subscribers.size === 0) {
          exports.__subscriberRef.current = null;
        }
      }
    }

    function onInteractionTraced(interaction) {
      var didCatchError = false;
      var caughtError = null;
      subscribers.forEach(function (subscriber) {
        try {
          subscriber.onInteractionTraced(interaction);
        } catch (error) {
          if (!didCatchError) {
            didCatchError = true;
            caughtError = error;
          }
        }
      });

      if (didCatchError) {
        throw caughtError;
      }
    }

    function onInteractionScheduledWorkCompleted(interaction) {
      var didCatchError = false;
      var caughtError = null;
      subscribers.forEach(function (subscriber) {
        try {
          subscriber.onInteractionScheduledWorkCompleted(interaction);
        } catch (error) {
          if (!didCatchError) {
            didCatchError = true;
            caughtError = error;
          }
        }
      });

      if (didCatchError) {
        throw caughtError;
      }
    }

    function onWorkScheduled(interactions, threadID) {
      var didCatchError = false;
      var caughtError = null;
      subscribers.forEach(function (subscriber) {
        try {
          subscriber.onWorkScheduled(interactions, threadID);
        } catch (error) {
          if (!didCatchError) {
            didCatchError = true;
            caughtError = error;
          }
        }
      });

      if (didCatchError) {
        throw caughtError;
      }
    }

    function onWorkStarted(interactions, threadID) {
      var didCatchError = false;
      var caughtError = null;
      subscribers.forEach(function (subscriber) {
        try {
          subscriber.onWorkStarted(interactions, threadID);
        } catch (error) {
          if (!didCatchError) {
            didCatchError = true;
            caughtError = error;
          }
        }
      });

      if (didCatchError) {
        throw caughtError;
      }
    }

    function onWorkStopped(interactions, threadID) {
      var didCatchError = false;
      var caughtError = null;
      subscribers.forEach(function (subscriber) {
        try {
          subscriber.onWorkStopped(interactions, threadID);
        } catch (error) {
          if (!didCatchError) {
            didCatchError = true;
            caughtError = error;
          }
        }
      });

      if (didCatchError) {
        throw caughtError;
      }
    }

    function onWorkCanceled(interactions, threadID) {
      var didCatchError = false;
      var caughtError = null;
      subscribers.forEach(function (subscriber) {
        try {
          subscriber.onWorkCanceled(interactions, threadID);
        } catch (error) {
          if (!didCatchError) {
            didCatchError = true;
            caughtError = error;
          }
        }
      });

      if (didCatchError) {
        throw caughtError;
      }
    }

    exports.unstable_clear = unstable_clear;
    exports.unstable_getCurrent = unstable_getCurrent;
    exports.unstable_getThreadID = unstable_getThreadID;
    exports.unstable_subscribe = unstable_subscribe;
    exports.unstable_trace = unstable_trace;
    exports.unstable_unsubscribe = unstable_unsubscribe;
    exports.unstable_wrap = unstable_wrap;
  })();
}

/***/ }),

/***/ "./node_modules/scheduler/cjs/scheduler.development.js":
/*!*************************************************************!*\
  !*** ./node_modules/scheduler/cjs/scheduler.development.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
/** @license React v0.20.2
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


if (true) {
  (function () {
    'use strict';

    var enableSchedulerDebugging = false;
    var enableProfiling = false;
    var requestHostCallback;
    var requestHostTimeout;
    var cancelHostTimeout;
    var requestPaint;
    var hasPerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';

    if (hasPerformanceNow) {
      var localPerformance = performance;

      exports.unstable_now = function () {
        return localPerformance.now();
      };
    } else {
      var localDate = Date;
      var initialTime = localDate.now();

      exports.unstable_now = function () {
        return localDate.now() - initialTime;
      };
    }

    if ( // If Scheduler runs in a non-DOM environment, it falls back to a naive
    // implementation using setTimeout.
    typeof window === 'undefined' || // Check if MessageChannel is supported, too.
    typeof MessageChannel !== 'function') {
      // If this accidentally gets imported in a non-browser environment, e.g. JavaScriptCore,
      // fallback to a naive implementation.
      var _callback = null;
      var _timeoutID = null;

      var _flushCallback = function () {
        if (_callback !== null) {
          try {
            var currentTime = exports.unstable_now();
            var hasRemainingTime = true;

            _callback(hasRemainingTime, currentTime);

            _callback = null;
          } catch (e) {
            setTimeout(_flushCallback, 0);
            throw e;
          }
        }
      };

      requestHostCallback = function (cb) {
        if (_callback !== null) {
          // Protect against re-entrancy.
          setTimeout(requestHostCallback, 0, cb);
        } else {
          _callback = cb;
          setTimeout(_flushCallback, 0);
        }
      };

      requestHostTimeout = function (cb, ms) {
        _timeoutID = setTimeout(cb, ms);
      };

      cancelHostTimeout = function () {
        clearTimeout(_timeoutID);
      };

      exports.unstable_shouldYield = function () {
        return false;
      };

      requestPaint = exports.unstable_forceFrameRate = function () {};
    } else {
      // Capture local references to native APIs, in case a polyfill overrides them.
      var _setTimeout = window.setTimeout;
      var _clearTimeout = window.clearTimeout;

      if (typeof console !== 'undefined') {
        // TODO: Scheduler no longer requires these methods to be polyfilled. But
        // maybe we want to continue warning if they don't exist, to preserve the
        // option to rely on it in the future?
        var requestAnimationFrame = window.requestAnimationFrame;
        var cancelAnimationFrame = window.cancelAnimationFrame;

        if (typeof requestAnimationFrame !== 'function') {
          // Using console['error'] to evade Babel and ESLint
          console['error']("This browser doesn't support requestAnimationFrame. " + 'Make sure that you load a ' + 'polyfill in older browsers. https://reactjs.org/link/react-polyfills');
        }

        if (typeof cancelAnimationFrame !== 'function') {
          // Using console['error'] to evade Babel and ESLint
          console['error']("This browser doesn't support cancelAnimationFrame. " + 'Make sure that you load a ' + 'polyfill in older browsers. https://reactjs.org/link/react-polyfills');
        }
      }

      var isMessageLoopRunning = false;
      var scheduledHostCallback = null;
      var taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main
      // thread, like user events. By default, it yields multiple times per frame.
      // It does not attempt to align with frame boundaries, since most tasks don't
      // need to be frame aligned; for those that do, use requestAnimationFrame.

      var yieldInterval = 5;
      var deadline = 0; // TODO: Make this configurable

      {
        // `isInputPending` is not available. Since we have no way of knowing if
        // there's pending input, always yield at the end of the frame.
        exports.unstable_shouldYield = function () {
          return exports.unstable_now() >= deadline;
        }; // Since we yield every frame regardless, `requestPaint` has no effect.


        requestPaint = function () {};
      }

      exports.unstable_forceFrameRate = function (fps) {
        if (fps < 0 || fps > 125) {
          // Using console['error'] to evade Babel and ESLint
          console['error']('forceFrameRate takes a positive int between 0 and 125, ' + 'forcing frame rates higher than 125 fps is not supported');
          return;
        }

        if (fps > 0) {
          yieldInterval = Math.floor(1000 / fps);
        } else {
          // reset the framerate
          yieldInterval = 5;
        }
      };

      var performWorkUntilDeadline = function () {
        if (scheduledHostCallback !== null) {
          var currentTime = exports.unstable_now(); // Yield after `yieldInterval` ms, regardless of where we are in the vsync
          // cycle. This means there's always time remaining at the beginning of
          // the message event.

          deadline = currentTime + yieldInterval;
          var hasTimeRemaining = true;

          try {
            var hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);

            if (!hasMoreWork) {
              isMessageLoopRunning = false;
              scheduledHostCallback = null;
            } else {
              // If there's more work, schedule the next message event at the end
              // of the preceding one.
              port.postMessage(null);
            }
          } catch (error) {
            // If a scheduler task throws, exit the current browser task so the
            // error can be observed.
            port.postMessage(null);
            throw error;
          }
        } else {
          isMessageLoopRunning = false;
        } // Yielding to the browser will give it a chance to paint, so we can

      };

      var channel = new MessageChannel();
      var port = channel.port2;
      channel.port1.onmessage = performWorkUntilDeadline;

      requestHostCallback = function (callback) {
        scheduledHostCallback = callback;

        if (!isMessageLoopRunning) {
          isMessageLoopRunning = true;
          port.postMessage(null);
        }
      };

      requestHostTimeout = function (callback, ms) {
        taskTimeoutID = _setTimeout(function () {
          callback(exports.unstable_now());
        }, ms);
      };

      cancelHostTimeout = function () {
        _clearTimeout(taskTimeoutID);

        taskTimeoutID = -1;
      };
    }

    function push(heap, node) {
      var index = heap.length;
      heap.push(node);
      siftUp(heap, node, index);
    }

    function peek(heap) {
      var first = heap[0];
      return first === undefined ? null : first;
    }

    function pop(heap) {
      var first = heap[0];

      if (first !== undefined) {
        var last = heap.pop();

        if (last !== first) {
          heap[0] = last;
          siftDown(heap, last, 0);
        }

        return first;
      } else {
        return null;
      }
    }

    function siftUp(heap, node, i) {
      var index = i;

      while (true) {
        var parentIndex = index - 1 >>> 1;
        var parent = heap[parentIndex];

        if (parent !== undefined && compare(parent, node) > 0) {
          // The parent is larger. Swap positions.
          heap[parentIndex] = node;
          heap[index] = parent;
          index = parentIndex;
        } else {
          // The parent is smaller. Exit.
          return;
        }
      }
    }

    function siftDown(heap, node, i) {
      var index = i;
      var length = heap.length;

      while (index < length) {
        var leftIndex = (index + 1) * 2 - 1;
        var left = heap[leftIndex];
        var rightIndex = leftIndex + 1;
        var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.

        if (left !== undefined && compare(left, node) < 0) {
          if (right !== undefined && compare(right, left) < 0) {
            heap[index] = right;
            heap[rightIndex] = node;
            index = rightIndex;
          } else {
            heap[index] = left;
            heap[leftIndex] = node;
            index = leftIndex;
          }
        } else if (right !== undefined && compare(right, node) < 0) {
          heap[index] = right;
          heap[rightIndex] = node;
          index = rightIndex;
        } else {
          // Neither child is smaller. Exit.
          return;
        }
      }
    }

    function compare(a, b) {
      // Compare sort index first, then task id.
      var diff = a.sortIndex - b.sortIndex;
      return diff !== 0 ? diff : a.id - b.id;
    } // TODO: Use symbols?


    var ImmediatePriority = 1;
    var UserBlockingPriority = 2;
    var NormalPriority = 3;
    var LowPriority = 4;
    var IdlePriority = 5;

    function markTaskErrored(task, ms) {}
    /* eslint-disable no-var */
    // Math.pow(2, 30) - 1
    // 0b111111111111111111111111111111


    var maxSigned31BitInt = 1073741823; // Times out immediately

    var IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out

    var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
    var NORMAL_PRIORITY_TIMEOUT = 5000;
    var LOW_PRIORITY_TIMEOUT = 10000; // Never times out

    var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap

    var taskQueue = [];
    var timerQueue = []; // Incrementing id counter. Used to maintain insertion order.

    var taskIdCounter = 1; // Pausing the scheduler is useful for debugging.

    var currentTask = null;
    var currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrancy.

    var isPerformingWork = false;
    var isHostCallbackScheduled = false;
    var isHostTimeoutScheduled = false;

    function advanceTimers(currentTime) {
      // Check for tasks that are no longer delayed and add them to the queue.
      var timer = peek(timerQueue);

      while (timer !== null) {
        if (timer.callback === null) {
          // Timer was cancelled.
          pop(timerQueue);
        } else if (timer.startTime <= currentTime) {
          // Timer fired. Transfer to the task queue.
          pop(timerQueue);
          timer.sortIndex = timer.expirationTime;
          push(taskQueue, timer);
        } else {
          // Remaining timers are pending.
          return;
        }

        timer = peek(timerQueue);
      }
    }

    function handleTimeout(currentTime) {
      isHostTimeoutScheduled = false;
      advanceTimers(currentTime);

      if (!isHostCallbackScheduled) {
        if (peek(taskQueue) !== null) {
          isHostCallbackScheduled = true;
          requestHostCallback(flushWork);
        } else {
          var firstTimer = peek(timerQueue);

          if (firstTimer !== null) {
            requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
          }
        }
      }
    }

    function flushWork(hasTimeRemaining, initialTime) {
      isHostCallbackScheduled = false;

      if (isHostTimeoutScheduled) {
        // We scheduled a timeout but it's no longer needed. Cancel it.
        isHostTimeoutScheduled = false;
        cancelHostTimeout();
      }

      isPerformingWork = true;
      var previousPriorityLevel = currentPriorityLevel;

      try {
        if (enableProfiling) {
          try {
            return workLoop(hasTimeRemaining, initialTime);
          } catch (error) {
            if (currentTask !== null) {
              var currentTime = exports.unstable_now();
              markTaskErrored(currentTask, currentTime);
              currentTask.isQueued = false;
            }

            throw error;
          }
        } else {
          // No catch in prod code path.
          return workLoop(hasTimeRemaining, initialTime);
        }
      } finally {
        currentTask = null;
        currentPriorityLevel = previousPriorityLevel;
        isPerformingWork = false;
      }
    }

    function workLoop(hasTimeRemaining, initialTime) {
      var currentTime = initialTime;
      advanceTimers(currentTime);
      currentTask = peek(taskQueue);

      while (currentTask !== null && !enableSchedulerDebugging) {
        if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || exports.unstable_shouldYield())) {
          // This currentTask hasn't expired, and we've reached the deadline.
          break;
        }

        var callback = currentTask.callback;

        if (typeof callback === 'function') {
          currentTask.callback = null;
          currentPriorityLevel = currentTask.priorityLevel;
          var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
          var continuationCallback = callback(didUserCallbackTimeout);
          currentTime = exports.unstable_now();

          if (typeof continuationCallback === 'function') {
            currentTask.callback = continuationCallback;
          } else {
            if (currentTask === peek(taskQueue)) {
              pop(taskQueue);
            }
          }

          advanceTimers(currentTime);
        } else {
          pop(taskQueue);
        }

        currentTask = peek(taskQueue);
      } // Return whether there's additional work


      if (currentTask !== null) {
        return true;
      } else {
        var firstTimer = peek(timerQueue);

        if (firstTimer !== null) {
          requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
        }

        return false;
      }
    }

    function unstable_runWithPriority(priorityLevel, eventHandler) {
      switch (priorityLevel) {
        case ImmediatePriority:
        case UserBlockingPriority:
        case NormalPriority:
        case LowPriority:
        case IdlePriority:
          break;

        default:
          priorityLevel = NormalPriority;
      }

      var previousPriorityLevel = currentPriorityLevel;
      currentPriorityLevel = priorityLevel;

      try {
        return eventHandler();
      } finally {
        currentPriorityLevel = previousPriorityLevel;
      }
    }

    function unstable_next(eventHandler) {
      var priorityLevel;

      switch (currentPriorityLevel) {
        case ImmediatePriority:
        case UserBlockingPriority:
        case NormalPriority:
          // Shift down to normal priority
          priorityLevel = NormalPriority;
          break;

        default:
          // Anything lower than normal priority should remain at the current level.
          priorityLevel = currentPriorityLevel;
          break;
      }

      var previousPriorityLevel = currentPriorityLevel;
      currentPriorityLevel = priorityLevel;

      try {
        return eventHandler();
      } finally {
        currentPriorityLevel = previousPriorityLevel;
      }
    }

    function unstable_wrapCallback(callback) {
      var parentPriorityLevel = currentPriorityLevel;
      return function () {
        // This is a fork of runWithPriority, inlined for performance.
        var previousPriorityLevel = currentPriorityLevel;
        currentPriorityLevel = parentPriorityLevel;

        try {
          return callback.apply(this, arguments);
        } finally {
          currentPriorityLevel = previousPriorityLevel;
        }
      };
    }

    function unstable_scheduleCallback(priorityLevel, callback, options) {
      var currentTime = exports.unstable_now();
      var startTime;

      if (typeof options === 'object' && options !== null) {
        var delay = options.delay;

        if (typeof delay === 'number' && delay > 0) {
          startTime = currentTime + delay;
        } else {
          startTime = currentTime;
        }
      } else {
        startTime = currentTime;
      }

      var timeout;

      switch (priorityLevel) {
        case ImmediatePriority:
          timeout = IMMEDIATE_PRIORITY_TIMEOUT;
          break;

        case UserBlockingPriority:
          timeout = USER_BLOCKING_PRIORITY_TIMEOUT;
          break;

        case IdlePriority:
          timeout = IDLE_PRIORITY_TIMEOUT;
          break;

        case LowPriority:
          timeout = LOW_PRIORITY_TIMEOUT;
          break;

        case NormalPriority:
        default:
          timeout = NORMAL_PRIORITY_TIMEOUT;
          break;
      }

      var expirationTime = startTime + timeout;
      var newTask = {
        id: taskIdCounter++,
        callback: callback,
        priorityLevel: priorityLevel,
        startTime: startTime,
        expirationTime: expirationTime,
        sortIndex: -1
      };

      if (startTime > currentTime) {
        // This is a delayed task.
        newTask.sortIndex = startTime;
        push(timerQueue, newTask);

        if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
          // All tasks are delayed, and this is the task with the earliest delay.
          if (isHostTimeoutScheduled) {
            // Cancel an existing timeout.
            cancelHostTimeout();
          } else {
            isHostTimeoutScheduled = true;
          } // Schedule a timeout.


          requestHostTimeout(handleTimeout, startTime - currentTime);
        }
      } else {
        newTask.sortIndex = expirationTime;
        push(taskQueue, newTask); // wait until the next time we yield.

        if (!isHostCallbackScheduled && !isPerformingWork) {
          isHostCallbackScheduled = true;
          requestHostCallback(flushWork);
        }
      }

      return newTask;
    }

    function unstable_pauseExecution() {}

    function unstable_continueExecution() {
      if (!isHostCallbackScheduled && !isPerformingWork) {
        isHostCallbackScheduled = true;
        requestHostCallback(flushWork);
      }
    }

    function unstable_getFirstCallbackNode() {
      return peek(taskQueue);
    }

    function unstable_cancelCallback(task) {
      // remove from the queue because you can't remove arbitrary nodes from an
      // array based heap, only the first one.)
      task.callback = null;
    }

    function unstable_getCurrentPriorityLevel() {
      return currentPriorityLevel;
    }

    var unstable_requestPaint = requestPaint;
    var unstable_Profiling = null;
    exports.unstable_IdlePriority = IdlePriority;
    exports.unstable_ImmediatePriority = ImmediatePriority;
    exports.unstable_LowPriority = LowPriority;
    exports.unstable_NormalPriority = NormalPriority;
    exports.unstable_Profiling = unstable_Profiling;
    exports.unstable_UserBlockingPriority = UserBlockingPriority;
    exports.unstable_cancelCallback = unstable_cancelCallback;
    exports.unstable_continueExecution = unstable_continueExecution;
    exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
    exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
    exports.unstable_next = unstable_next;
    exports.unstable_pauseExecution = unstable_pauseExecution;
    exports.unstable_requestPaint = unstable_requestPaint;
    exports.unstable_runWithPriority = unstable_runWithPriority;
    exports.unstable_scheduleCallback = unstable_scheduleCallback;
    exports.unstable_wrapCallback = unstable_wrapCallback;
  })();
}

/***/ }),

/***/ "./node_modules/scheduler/index.js":
/*!*****************************************!*\
  !*** ./node_modules/scheduler/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/scheduler.development.js */ "./node_modules/scheduler/cjs/scheduler.development.js");
}

/***/ }),

/***/ "./node_modules/scheduler/tracing.js":
/*!*******************************************!*\
  !*** ./node_modules/scheduler/tracing.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/scheduler-tracing.development.js */ "./node_modules/scheduler/cjs/scheduler-tracing.development.js");
}

/***/ }),

/***/ "./node_modules/webpack-dev-server/client/clients/WebSocketClient.js":
/*!***************************************************************************!*\
  !*** ./node_modules/webpack-dev-server/client/clients/WebSocketClient.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ WebSocketClient)
/* harmony export */ });
/* harmony import */ var _utils_log_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/log.js */ "./node_modules/webpack-dev-server/client/utils/log.js");
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}



var WebSocketClient = /*#__PURE__*/function () {
  /**
   * @param {string} url
   */
  function WebSocketClient(url) {
    _classCallCheck(this, WebSocketClient);

    this.client = new WebSocket(url);

    this.client.onerror = function (error) {
      _utils_log_js__WEBPACK_IMPORTED_MODULE_0__.log.error(error);
    };
  }
  /**
   * @param {(...args: any[]) => void} f
   */


  _createClass(WebSocketClient, [{
    key: "onOpen",
    value: function onOpen(f) {
      this.client.onopen = f;
    }
    /**
     * @param {(...args: any[]) => void} f
     */

  }, {
    key: "onClose",
    value: function onClose(f) {
      this.client.onclose = f;
    } // call f with the message string as the first argument

    /**
     * @param {(...args: any[]) => void} f
     */

  }, {
    key: "onMessage",
    value: function onMessage(f) {
      this.client.onmessage = function (e) {
        f(e.data);
      };
    }
  }]);

  return WebSocketClient;
}();



/***/ }),

/***/ "./node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=3000&pathname=%2Fws&logging=none&reconnect=10":
/*!********************************************************************************************************************************************!*\
  !*** ./node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=3000&pathname=%2Fws&logging=none&reconnect=10 ***!
  \********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
var __resourceQuery = "?protocol=ws%3A&hostname=0.0.0.0&port=3000&pathname=%2Fws&logging=none&reconnect=10";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var webpack_hot_log_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! webpack/hot/log.js */ "./node_modules/webpack/hot/log.js");
/* harmony import */ var webpack_hot_log_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(webpack_hot_log_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _modules_strip_ansi_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/strip-ansi/index.js */ "./node_modules/webpack-dev-server/client/modules/strip-ansi/index.js");
/* harmony import */ var _modules_strip_ansi_index_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_modules_strip_ansi_index_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _utils_parseURL_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/parseURL.js */ "./node_modules/webpack-dev-server/client/utils/parseURL.js");
/* harmony import */ var _socket_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./socket.js */ "./node_modules/webpack-dev-server/client/socket.js");
/* harmony import */ var _overlay_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./overlay.js */ "./node_modules/webpack-dev-server/client/overlay.js");
/* harmony import */ var _utils_log_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/log.js */ "./node_modules/webpack-dev-server/client/utils/log.js");
/* harmony import */ var _utils_sendMessage_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/sendMessage.js */ "./node_modules/webpack-dev-server/client/utils/sendMessage.js");
/* harmony import */ var _utils_reloadApp_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/reloadApp.js */ "./node_modules/webpack-dev-server/client/utils/reloadApp.js");
/* harmony import */ var _utils_createSocketURL_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/createSocketURL.js */ "./node_modules/webpack-dev-server/client/utils/createSocketURL.js");
/* global __resourceQuery, __webpack_hash__ */
/// <reference types="webpack/module" />









/**
 * @typedef {Object} Options
 * @property {boolean} hot
 * @property {boolean} liveReload
 * @property {boolean} progress
 * @property {boolean | { warnings?: boolean, errors?: boolean }} overlay
 * @property {string} [logging]
 * @property {number} [reconnect]
 */

/**
 * @typedef {Object} Status
 * @property {boolean} isUnloading
 * @property {string} currentHash
 * @property {string} [previousHash]
 */

/**
 * @type {Status}
 */

var status = {
  isUnloading: false,
  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement
  // eslint-disable-next-line camelcase
  currentHash:  true ? __webpack_require__.h() : 0
};
/** @type {Options} */

var options = {
  hot: false,
  liveReload: false,
  progress: false,
  overlay: false
};
var parsedResourceQuery = (0,_utils_parseURL_js__WEBPACK_IMPORTED_MODULE_2__["default"])(__resourceQuery);

if (parsedResourceQuery.hot === "true") {
  options.hot = true;
  _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.info("Hot Module Replacement enabled.");
}

if (parsedResourceQuery["live-reload"] === "true") {
  options.liveReload = true;
  _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.info("Live Reloading enabled.");
}

if (parsedResourceQuery.logging) {
  options.logging = parsedResourceQuery.logging;
}

if (typeof parsedResourceQuery.reconnect !== "undefined") {
  options.reconnect = Number(parsedResourceQuery.reconnect);
}
/**
 * @param {string} level
 */


function setAllLogLevel(level) {
  // This is needed because the HMR logger operate separately from dev server logger
  webpack_hot_log_js__WEBPACK_IMPORTED_MODULE_0___default().setLogLevel(level === "verbose" || level === "log" ? "info" : level);
  (0,_utils_log_js__WEBPACK_IMPORTED_MODULE_5__.setLogLevel)(level);
}

if (options.logging) {
  setAllLogLevel(options.logging);
}

self.addEventListener("beforeunload", function () {
  status.isUnloading = true;
});
var onSocketMessage = {
  hot: function hot() {
    if (parsedResourceQuery.hot === "false") {
      return;
    }

    options.hot = true;
    _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.info("Hot Module Replacement enabled.");
  },
  liveReload: function liveReload() {
    if (parsedResourceQuery["live-reload"] === "false") {
      return;
    }

    options.liveReload = true;
    _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.info("Live Reloading enabled.");
  },
  invalid: function invalid() {
    _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.info("App updated. Recompiling..."); // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.

    if (options.overlay) {
      (0,_overlay_js__WEBPACK_IMPORTED_MODULE_4__.hide)();
    }

    (0,_utils_sendMessage_js__WEBPACK_IMPORTED_MODULE_6__["default"])("Invalid");
  },

  /**
   * @param {string} hash
   */
  hash: function hash(_hash) {
    status.previousHash = status.currentHash;
    status.currentHash = _hash;
  },
  logging: setAllLogLevel,

  /**
   * @param {boolean} value
   */
  overlay: function overlay(value) {
    if (typeof document === "undefined") {
      return;
    }

    options.overlay = value;
  },

  /**
   * @param {number} value
   */
  reconnect: function reconnect(value) {
    if (parsedResourceQuery.reconnect === "false") {
      return;
    }

    options.reconnect = value;
  },

  /**
   * @param {boolean} value
   */
  progress: function progress(value) {
    options.progress = value;
  },

  /**
   * @param {{ pluginName?: string, percent: number, msg: string }} data
   */
  "progress-update": function progressUpdate(data) {
    if (options.progress) {
      _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.info("".concat(data.pluginName ? "[".concat(data.pluginName, "] ") : "").concat(data.percent, "% - ").concat(data.msg, "."));
    }

    (0,_utils_sendMessage_js__WEBPACK_IMPORTED_MODULE_6__["default"])("Progress", data);
  },
  "still-ok": function stillOk() {
    _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.info("Nothing changed.");

    if (options.overlay) {
      (0,_overlay_js__WEBPACK_IMPORTED_MODULE_4__.hide)();
    }

    (0,_utils_sendMessage_js__WEBPACK_IMPORTED_MODULE_6__["default"])("StillOk");
  },
  ok: function ok() {
    (0,_utils_sendMessage_js__WEBPACK_IMPORTED_MODULE_6__["default"])("Ok");

    if (options.overlay) {
      (0,_overlay_js__WEBPACK_IMPORTED_MODULE_4__.hide)();
    }

    (0,_utils_reloadApp_js__WEBPACK_IMPORTED_MODULE_7__["default"])(options, status);
  },
  // TODO: remove in v5 in favor of 'static-changed'

  /**
   * @param {string} file
   */
  "content-changed": function contentChanged(file) {
    _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.info("".concat(file ? "\"".concat(file, "\"") : "Content", " from static directory was changed. Reloading..."));
    self.location.reload();
  },

  /**
   * @param {string} file
   */
  "static-changed": function staticChanged(file) {
    _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.info("".concat(file ? "\"".concat(file, "\"") : "Content", " from static directory was changed. Reloading..."));
    self.location.reload();
  },

  /**
   * @param {Error[]} warnings
   * @param {any} params
   */
  warnings: function warnings(_warnings, params) {
    _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.warn("Warnings while compiling.");

    var printableWarnings = _warnings.map(function (error) {
      var _formatProblem = (0,_overlay_js__WEBPACK_IMPORTED_MODULE_4__.formatProblem)("warning", error),
          header = _formatProblem.header,
          body = _formatProblem.body;

      return "".concat(header, "\n").concat(_modules_strip_ansi_index_js__WEBPACK_IMPORTED_MODULE_1___default()(body));
    });

    (0,_utils_sendMessage_js__WEBPACK_IMPORTED_MODULE_6__["default"])("Warnings", printableWarnings);

    for (var i = 0; i < printableWarnings.length; i++) {
      _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.warn(printableWarnings[i]);
    }

    var needShowOverlayForWarnings = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.warnings;

    if (needShowOverlayForWarnings) {
      (0,_overlay_js__WEBPACK_IMPORTED_MODULE_4__.show)("warning", _warnings);
    }

    if (params && params.preventReloading) {
      return;
    }

    (0,_utils_reloadApp_js__WEBPACK_IMPORTED_MODULE_7__["default"])(options, status);
  },

  /**
   * @param {Error[]} errors
   */
  errors: function errors(_errors) {
    _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.error("Errors while compiling. Reload prevented.");

    var printableErrors = _errors.map(function (error) {
      var _formatProblem2 = (0,_overlay_js__WEBPACK_IMPORTED_MODULE_4__.formatProblem)("error", error),
          header = _formatProblem2.header,
          body = _formatProblem2.body;

      return "".concat(header, "\n").concat(_modules_strip_ansi_index_js__WEBPACK_IMPORTED_MODULE_1___default()(body));
    });

    (0,_utils_sendMessage_js__WEBPACK_IMPORTED_MODULE_6__["default"])("Errors", printableErrors);

    for (var i = 0; i < printableErrors.length; i++) {
      _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.error(printableErrors[i]);
    }

    var needShowOverlayForErrors = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.errors;

    if (needShowOverlayForErrors) {
      (0,_overlay_js__WEBPACK_IMPORTED_MODULE_4__.show)("error", _errors);
    }
  },

  /**
   * @param {Error} error
   */
  error: function error(_error) {
    _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.error(_error);
  },
  close: function close() {
    _utils_log_js__WEBPACK_IMPORTED_MODULE_5__.log.info("Disconnected!");

    if (options.overlay) {
      (0,_overlay_js__WEBPACK_IMPORTED_MODULE_4__.hide)();
    }

    (0,_utils_sendMessage_js__WEBPACK_IMPORTED_MODULE_6__["default"])("Close");
  }
};
var socketURL = (0,_utils_createSocketURL_js__WEBPACK_IMPORTED_MODULE_8__["default"])(parsedResourceQuery);
(0,_socket_js__WEBPACK_IMPORTED_MODULE_3__["default"])(socketURL, onSocketMessage, options.reconnect);

/***/ }),

/***/ "./node_modules/webpack-dev-server/client/modules/logger/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/webpack-dev-server/client/modules/logger/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

/******/
(function () {
  // webpackBootstrap

  /******/
  "use strict";
  /******/

  var __webpack_modules__ = {
    /***/
    "./client-src/modules/logger/SyncBailHookFake.js":
    /*!*******************************************************!*\
      !*** ./client-src/modules/logger/SyncBailHookFake.js ***!
      \*******************************************************/

    /***/
    function (module) {
      /**
       * Client stub for tapable SyncBailHook
       */
      module.exports = function clientTapableSyncBailHook() {
        return {
          call: function call() {}
        };
      };
      /***/

    },

    /***/
    "./node_modules/webpack/lib/logging/Logger.js":
    /*!****************************************************!*\
      !*** ./node_modules/webpack/lib/logging/Logger.js ***!
      \****************************************************/

    /***/
    function (__unused_webpack_module, exports) {
      /*
      	MIT License http://www.opensource.org/licenses/mit-license.php
      	Author Tobias Koppers @sokra
      */
      function _toConsumableArray(arr) {
        return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
      }

      function _nonIterableSpread() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }

      function _unsupportedIterableToArray(o, minLen) {
        if (!o) return;
        if (typeof o === "string") return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        if (n === "Object" && o.constructor) n = o.constructor.name;
        if (n === "Map" || n === "Set") return Array.from(o);
        if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
      }

      function _iterableToArray(iter) {
        if (typeof (typeof Symbol !== "undefined" ? Symbol : function (i) {
          return i;
        }) !== "undefined" && iter[(typeof Symbol !== "undefined" ? Symbol : function (i) {
          return i;
        }).iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
      }

      function _arrayWithoutHoles(arr) {
        if (Array.isArray(arr)) return _arrayLikeToArray(arr);
      }

      function _arrayLikeToArray(arr, len) {
        if (len == null || len > arr.length) len = arr.length;

        for (var i = 0, arr2 = new Array(len); i < len; i++) {
          arr2[i] = arr[i];
        }

        return arr2;
      }

      function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
          throw new TypeError("Cannot call a class as a function");
        }
      }

      function _defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor) descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }

      function _createClass(Constructor, protoProps, staticProps) {
        if (protoProps) _defineProperties(Constructor.prototype, protoProps);
        if (staticProps) _defineProperties(Constructor, staticProps);
        Object.defineProperty(Constructor, "prototype", {
          writable: false
        });
        return Constructor;
      }

      var LogType = Object.freeze({
        error:
        /** @type {"error"} */
        "error",
        // message, c style arguments
        warn:
        /** @type {"warn"} */
        "warn",
        // message, c style arguments
        info:
        /** @type {"info"} */
        "info",
        // message, c style arguments
        log:
        /** @type {"log"} */
        "log",
        // message, c style arguments
        debug:
        /** @type {"debug"} */
        "debug",
        // message, c style arguments
        trace:
        /** @type {"trace"} */
        "trace",
        // no arguments
        group:
        /** @type {"group"} */
        "group",
        // [label]
        groupCollapsed:
        /** @type {"groupCollapsed"} */
        "groupCollapsed",
        // [label]
        groupEnd:
        /** @type {"groupEnd"} */
        "groupEnd",
        // [label]
        profile:
        /** @type {"profile"} */
        "profile",
        // [profileName]
        profileEnd:
        /** @type {"profileEnd"} */
        "profileEnd",
        // [profileName]
        time:
        /** @type {"time"} */
        "time",
        // name, time as [seconds, nanoseconds]
        clear:
        /** @type {"clear"} */
        "clear",
        // no arguments
        status:
        /** @type {"status"} */
        "status" // message, arguments

      });
      exports.LogType = LogType;
      /** @typedef {typeof LogType[keyof typeof LogType]} LogTypeEnum */

      var LOG_SYMBOL = (typeof Symbol !== "undefined" ? Symbol : function (i) {
        return i;
      })("webpack logger raw log method");
      var TIMERS_SYMBOL = (typeof Symbol !== "undefined" ? Symbol : function (i) {
        return i;
      })("webpack logger times");
      var TIMERS_AGGREGATES_SYMBOL = (typeof Symbol !== "undefined" ? Symbol : function (i) {
        return i;
      })("webpack logger aggregated times");

      var WebpackLogger = /*#__PURE__*/function () {
        /**
         * @param {function(LogTypeEnum, any[]=): void} log log function
         * @param {function(string | function(): string): WebpackLogger} getChildLogger function to create child logger
         */
        function WebpackLogger(log, getChildLogger) {
          _classCallCheck(this, WebpackLogger);

          this[LOG_SYMBOL] = log;
          this.getChildLogger = getChildLogger;
        }

        _createClass(WebpackLogger, [{
          key: "error",
          value: function error() {
            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            this[LOG_SYMBOL](LogType.error, args);
          }
        }, {
          key: "warn",
          value: function warn() {
            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
              args[_key2] = arguments[_key2];
            }

            this[LOG_SYMBOL](LogType.warn, args);
          }
        }, {
          key: "info",
          value: function info() {
            for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
              args[_key3] = arguments[_key3];
            }

            this[LOG_SYMBOL](LogType.info, args);
          }
        }, {
          key: "log",
          value: function log() {
            for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
              args[_key4] = arguments[_key4];
            }

            this[LOG_SYMBOL](LogType.log, args);
          }
        }, {
          key: "debug",
          value: function debug() {
            for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
              args[_key5] = arguments[_key5];
            }

            this[LOG_SYMBOL](LogType.debug, args);
          }
        }, {
          key: "assert",
          value: function assert(assertion) {
            if (!assertion) {
              for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {
                args[_key6 - 1] = arguments[_key6];
              }

              this[LOG_SYMBOL](LogType.error, args);
            }
          }
        }, {
          key: "trace",
          value: function trace() {
            this[LOG_SYMBOL](LogType.trace, ["Trace"]);
          }
        }, {
          key: "clear",
          value: function clear() {
            this[LOG_SYMBOL](LogType.clear);
          }
        }, {
          key: "status",
          value: function status() {
            for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
              args[_key7] = arguments[_key7];
            }

            this[LOG_SYMBOL](LogType.status, args);
          }
        }, {
          key: "group",
          value: function group() {
            for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
              args[_key8] = arguments[_key8];
            }

            this[LOG_SYMBOL](LogType.group, args);
          }
        }, {
          key: "groupCollapsed",
          value: function groupCollapsed() {
            for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
              args[_key9] = arguments[_key9];
            }

            this[LOG_SYMBOL](LogType.groupCollapsed, args);
          }
        }, {
          key: "groupEnd",
          value: function groupEnd() {
            for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {
              args[_key10] = arguments[_key10];
            }

            this[LOG_SYMBOL](LogType.groupEnd, args);
          }
        }, {
          key: "profile",
          value: function profile(label) {
            this[LOG_SYMBOL](LogType.profile, [label]);
          }
        }, {
          key: "profileEnd",
          value: function profileEnd(label) {
            this[LOG_SYMBOL](LogType.profileEnd, [label]);
          }
        }, {
          key: "time",
          value: function time(label) {
            this[TIMERS_SYMBOL] = this[TIMERS_SYMBOL] || new Map();
            this[TIMERS_SYMBOL].set(label, process.hrtime());
          }
        }, {
          key: "timeLog",
          value: function timeLog(label) {
            var prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);

            if (!prev) {
              throw new Error("No such label '".concat(label, "' for WebpackLogger.timeLog()"));
            }

            var time = process.hrtime(prev);
            this[LOG_SYMBOL](LogType.time, [label].concat(_toConsumableArray(time)));
          }
        }, {
          key: "timeEnd",
          value: function timeEnd(label) {
            var prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);

            if (!prev) {
              throw new Error("No such label '".concat(label, "' for WebpackLogger.timeEnd()"));
            }

            var time = process.hrtime(prev);
            this[TIMERS_SYMBOL].delete(label);
            this[LOG_SYMBOL](LogType.time, [label].concat(_toConsumableArray(time)));
          }
        }, {
          key: "timeAggregate",
          value: function timeAggregate(label) {
            var prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);

            if (!prev) {
              throw new Error("No such label '".concat(label, "' for WebpackLogger.timeAggregate()"));
            }

            var time = process.hrtime(prev);
            this[TIMERS_SYMBOL].delete(label);
            this[TIMERS_AGGREGATES_SYMBOL] = this[TIMERS_AGGREGATES_SYMBOL] || new Map();
            var current = this[TIMERS_AGGREGATES_SYMBOL].get(label);

            if (current !== undefined) {
              if (time[1] + current[1] > 1e9) {
                time[0] += current[0] + 1;
                time[1] = time[1] - 1e9 + current[1];
              } else {
                time[0] += current[0];
                time[1] += current[1];
              }
            }

            this[TIMERS_AGGREGATES_SYMBOL].set(label, time);
          }
        }, {
          key: "timeAggregateEnd",
          value: function timeAggregateEnd(label) {
            if (this[TIMERS_AGGREGATES_SYMBOL] === undefined) return;
            var time = this[TIMERS_AGGREGATES_SYMBOL].get(label);
            if (time === undefined) return;
            this[TIMERS_AGGREGATES_SYMBOL].delete(label);
            this[LOG_SYMBOL](LogType.time, [label].concat(_toConsumableArray(time)));
          }
        }]);

        return WebpackLogger;
      }();

      exports.Logger = WebpackLogger;
      /***/
    },

    /***/
    "./node_modules/webpack/lib/logging/createConsoleLogger.js":
    /*!*****************************************************************!*\
      !*** ./node_modules/webpack/lib/logging/createConsoleLogger.js ***!
      \*****************************************************************/

    /***/
    function (module, __unused_webpack_exports, __nested_webpack_require_12752__) {
      /*
      	MIT License http://www.opensource.org/licenses/mit-license.php
      	Author Tobias Koppers @sokra
      */
      function _toConsumableArray(arr) {
        return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
      }

      function _nonIterableSpread() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }

      function _unsupportedIterableToArray(o, minLen) {
        if (!o) return;
        if (typeof o === "string") return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        if (n === "Object" && o.constructor) n = o.constructor.name;
        if (n === "Map" || n === "Set") return Array.from(o);
        if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
      }

      function _iterableToArray(iter) {
        if (typeof (typeof Symbol !== "undefined" ? Symbol : function (i) {
          return i;
        }) !== "undefined" && iter[(typeof Symbol !== "undefined" ? Symbol : function (i) {
          return i;
        }).iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
      }

      function _arrayWithoutHoles(arr) {
        if (Array.isArray(arr)) return _arrayLikeToArray(arr);
      }

      function _arrayLikeToArray(arr, len) {
        if (len == null || len > arr.length) len = arr.length;

        for (var i = 0, arr2 = new Array(len); i < len; i++) {
          arr2[i] = arr[i];
        }

        return arr2;
      }

      var _require = __nested_webpack_require_12752__(
      /*! ./Logger */
      "./node_modules/webpack/lib/logging/Logger.js"),
          LogType = _require.LogType;
      /** @typedef {import("../../declarations/WebpackOptions").FilterItemTypes} FilterItemTypes */

      /** @typedef {import("../../declarations/WebpackOptions").FilterTypes} FilterTypes */

      /** @typedef {import("./Logger").LogTypeEnum} LogTypeEnum */

      /** @typedef {function(string): boolean} FilterFunction */

      /**
       * @typedef {Object} LoggerConsole
       * @property {function(): void} clear
       * @property {function(): void} trace
       * @property {(...args: any[]) => void} info
       * @property {(...args: any[]) => void} log
       * @property {(...args: any[]) => void} warn
       * @property {(...args: any[]) => void} error
       * @property {(...args: any[]) => void=} debug
       * @property {(...args: any[]) => void=} group
       * @property {(...args: any[]) => void=} groupCollapsed
       * @property {(...args: any[]) => void=} groupEnd
       * @property {(...args: any[]) => void=} status
       * @property {(...args: any[]) => void=} profile
       * @property {(...args: any[]) => void=} profileEnd
       * @property {(...args: any[]) => void=} logTime
       */

      /**
       * @typedef {Object} LoggerOptions
       * @property {false|true|"none"|"error"|"warn"|"info"|"log"|"verbose"} level loglevel
       * @property {FilterTypes|boolean} debug filter for debug logging
       * @property {LoggerConsole} console the console to log to
       */

      /**
       * @param {FilterItemTypes} item an input item
       * @returns {FilterFunction} filter function
       */


      var filterToFunction = function filterToFunction(item) {
        if (typeof item === "string") {
          var regExp = new RegExp("[\\\\/]".concat(item.replace( // eslint-disable-next-line no-useless-escape
          /[-[\]{}()*+?.\\^$|]/g, "\\$&"), "([\\\\/]|$|!|\\?)"));
          return function (ident) {
            return regExp.test(ident);
          };
        }

        if (item && typeof item === "object" && typeof item.test === "function") {
          return function (ident) {
            return item.test(ident);
          };
        }

        if (typeof item === "function") {
          return item;
        }

        if (typeof item === "boolean") {
          return function () {
            return item;
          };
        }
      };
      /**
       * @enum {number}
       */


      var LogLevel = {
        none: 6,
        false: 6,
        error: 5,
        warn: 4,
        info: 3,
        log: 2,
        true: 2,
        verbose: 1
      };
      /**
       * @param {LoggerOptions} options options object
       * @returns {function(string, LogTypeEnum, any[]): void} logging function
       */

      module.exports = function (_ref) {
        var _ref$level = _ref.level,
            level = _ref$level === void 0 ? "info" : _ref$level,
            _ref$debug = _ref.debug,
            debug = _ref$debug === void 0 ? false : _ref$debug,
            console = _ref.console;
        var debugFilters = typeof debug === "boolean" ? [function () {
          return debug;
        }] :
        /** @type {FilterItemTypes[]} */
        [].concat(debug).map(filterToFunction);
        /** @type {number} */

        var loglevel = LogLevel["".concat(level)] || 0;
        /**
         * @param {string} name name of the logger
         * @param {LogTypeEnum} type type of the log entry
         * @param {any[]} args arguments of the log entry
         * @returns {void}
         */

        var logger = function logger(name, type, args) {
          var labeledArgs = function labeledArgs() {
            if (Array.isArray(args)) {
              if (args.length > 0 && typeof args[0] === "string") {
                return ["[".concat(name, "] ").concat(args[0])].concat(_toConsumableArray(args.slice(1)));
              } else {
                return ["[".concat(name, "]")].concat(_toConsumableArray(args));
              }
            } else {
              return [];
            }
          };

          var debug = debugFilters.some(function (f) {
            return f(name);
          });

          switch (type) {
            case LogType.debug:
              if (!debug) return; // eslint-disable-next-line node/no-unsupported-features/node-builtins

              if (typeof console.debug === "function") {
                // eslint-disable-next-line node/no-unsupported-features/node-builtins
                console.debug.apply(console, _toConsumableArray(labeledArgs()));
              } else {
                console.log.apply(console, _toConsumableArray(labeledArgs()));
              }

              break;

            case LogType.log:
              if (!debug && loglevel > LogLevel.log) return;
              console.log.apply(console, _toConsumableArray(labeledArgs()));
              break;

            case LogType.info:
              if (!debug && loglevel > LogLevel.info) return;
              console.info.apply(console, _toConsumableArray(labeledArgs()));
              break;

            case LogType.warn:
              if (!debug && loglevel > LogLevel.warn) return;
              console.warn.apply(console, _toConsumableArray(labeledArgs()));
              break;

            case LogType.error:
              if (!debug && loglevel > LogLevel.error) return;
              console.error.apply(console, _toConsumableArray(labeledArgs()));
              break;

            case LogType.trace:
              if (!debug) return;
              console.trace();
              break;

            case LogType.groupCollapsed:
              if (!debug && loglevel > LogLevel.log) return;

              if (!debug && loglevel > LogLevel.verbose) {
                // eslint-disable-next-line node/no-unsupported-features/node-builtins
                if (typeof console.groupCollapsed === "function") {
                  // eslint-disable-next-line node/no-unsupported-features/node-builtins
                  console.groupCollapsed.apply(console, _toConsumableArray(labeledArgs()));
                } else {
                  console.log.apply(console, _toConsumableArray(labeledArgs()));
                }

                break;
              }

            // falls through

            case LogType.group:
              if (!debug && loglevel > LogLevel.log) return; // eslint-disable-next-line node/no-unsupported-features/node-builtins

              if (typeof console.group === "function") {
                // eslint-disable-next-line node/no-unsupported-features/node-builtins
                console.group.apply(console, _toConsumableArray(labeledArgs()));
              } else {
                console.log.apply(console, _toConsumableArray(labeledArgs()));
              }

              break;

            case LogType.groupEnd:
              if (!debug && loglevel > LogLevel.log) return; // eslint-disable-next-line node/no-unsupported-features/node-builtins

              if (typeof console.groupEnd === "function") {
                // eslint-disable-next-line node/no-unsupported-features/node-builtins
                console.groupEnd();
              }

              break;

            case LogType.time:
              {
                if (!debug && loglevel > LogLevel.log) return;
                var ms = args[1] * 1000 + args[2] / 1000000;
                var msg = "[".concat(name, "] ").concat(args[0], ": ").concat(ms, " ms");

                if (typeof console.logTime === "function") {
                  console.logTime(msg);
                } else {
                  console.log(msg);
                }

                break;
              }

            case LogType.profile:
              // eslint-disable-next-line node/no-unsupported-features/node-builtins
              if (typeof console.profile === "function") {
                // eslint-disable-next-line node/no-unsupported-features/node-builtins
                console.profile.apply(console, _toConsumableArray(labeledArgs()));
              }

              break;

            case LogType.profileEnd:
              // eslint-disable-next-line node/no-unsupported-features/node-builtins
              if (typeof console.profileEnd === "function") {
                // eslint-disable-next-line node/no-unsupported-features/node-builtins
                console.profileEnd.apply(console, _toConsumableArray(labeledArgs()));
              }

              break;

            case LogType.clear:
              if (!debug && loglevel > LogLevel.log) return; // eslint-disable-next-line node/no-unsupported-features/node-builtins

              if (typeof console.clear === "function") {
                // eslint-disable-next-line node/no-unsupported-features/node-builtins
                console.clear();
              }

              break;

            case LogType.status:
              if (!debug && loglevel > LogLevel.info) return;

              if (typeof console.status === "function") {
                if (args.length === 0) {
                  console.status();
                } else {
                  console.status.apply(console, _toConsumableArray(labeledArgs()));
                }
              } else {
                if (args.length !== 0) {
                  console.info.apply(console, _toConsumableArray(labeledArgs()));
                }
              }

              break;

            default:
              throw new Error("Unexpected LogType ".concat(type));
          }
        };

        return logger;
      };
      /***/

    },

    /***/
    "./node_modules/webpack/lib/logging/runtime.js":
    /*!*****************************************************!*\
      !*** ./node_modules/webpack/lib/logging/runtime.js ***!
      \*****************************************************/

    /***/
    function (__unused_webpack_module, exports, __nested_webpack_require_24417__) {
      /*
      	MIT License http://www.opensource.org/licenses/mit-license.php
      	Author Tobias Koppers @sokra
      */
      function _extends() {
        _extends = Object.assign || function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        };

        return _extends.apply(this, arguments);
      }

      var SyncBailHook = __nested_webpack_require_24417__(
      /*! tapable/lib/SyncBailHook */
      "./client-src/modules/logger/SyncBailHookFake.js");

      var _require = __nested_webpack_require_24417__(
      /*! ./Logger */
      "./node_modules/webpack/lib/logging/Logger.js"),
          Logger = _require.Logger;

      var createConsoleLogger = __nested_webpack_require_24417__(
      /*! ./createConsoleLogger */
      "./node_modules/webpack/lib/logging/createConsoleLogger.js");
      /** @type {createConsoleLogger.LoggerOptions} */


      var currentDefaultLoggerOptions = {
        level: "info",
        debug: false,
        console: console
      };
      var currentDefaultLogger = createConsoleLogger(currentDefaultLoggerOptions);
      /**
       * @param {string} name name of the logger
       * @returns {Logger} a logger
       */

      exports.getLogger = function (name) {
        return new Logger(function (type, args) {
          if (exports.hooks.log.call(name, type, args) === undefined) {
            currentDefaultLogger(name, type, args);
          }
        }, function (childName) {
          return exports.getLogger("".concat(name, "/").concat(childName));
        });
      };
      /**
       * @param {createConsoleLogger.LoggerOptions} options new options, merge with old options
       * @returns {void}
       */


      exports.configureDefaultLogger = function (options) {
        _extends(currentDefaultLoggerOptions, options);

        currentDefaultLogger = createConsoleLogger(currentDefaultLoggerOptions);
      };

      exports.hooks = {
        log: new SyncBailHook(["origin", "type", "args"])
      };
      /***/
    }
    /******/

  };
  /************************************************************************/

  /******/
  // The module cache

  /******/

  var __webpack_module_cache__ = {};
  /******/

  /******/
  // The require function

  /******/

  function __nested_webpack_require_26919__(moduleId) {
    /******/
    // Check if module is in cache

    /******/
    var cachedModule = __webpack_module_cache__[moduleId];
    /******/

    if (cachedModule !== undefined) {
      /******/
      return cachedModule.exports;
      /******/
    }
    /******/
    // Create a new module (and put it into the cache)

    /******/


    var module = __webpack_module_cache__[moduleId] = {
      /******/
      // no module.id needed

      /******/
      // no module.loaded needed

      /******/
      exports: {}
      /******/

    };
    /******/

    /******/
    // Execute the module function

    /******/

    __webpack_modules__[moduleId](module, module.exports, __nested_webpack_require_26919__);
    /******/

    /******/
    // Return the exports of the module

    /******/


    return module.exports;
    /******/
  }
  /******/

  /************************************************************************/

  /******/

  /* webpack/runtime/define property getters */

  /******/


  !function () {
    /******/
    // define getter functions for harmony exports

    /******/
    __nested_webpack_require_26919__.d = function (exports, definition) {
      /******/
      for (var key in definition) {
        /******/
        if (__nested_webpack_require_26919__.o(definition, key) && !__nested_webpack_require_26919__.o(exports, key)) {
          /******/
          Object.defineProperty(exports, key, {
            enumerable: true,
            get: definition[key]
          });
          /******/
        }
        /******/

      }
      /******/

    };
    /******/

  }();
  /******/

  /******/

  /* webpack/runtime/hasOwnProperty shorthand */

  /******/

  !function () {
    /******/
    __nested_webpack_require_26919__.o = function (obj, prop) {
      return Object.prototype.hasOwnProperty.call(obj, prop);
    };
    /******/

  }();
  /******/

  /******/

  /* webpack/runtime/make namespace object */

  /******/

  !function () {
    /******/
    // define __esModule on exports

    /******/
    __nested_webpack_require_26919__.r = function (exports) {
      /******/
      if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {
        /******/
        Object.defineProperty(exports, Symbol.toStringTag, {
          value: 'Module'
        });
        /******/
      }
      /******/


      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      /******/
    };
    /******/

  }();
  /******/

  /************************************************************************/

  var __webpack_exports__ = {}; // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.

  !function () {
    /*!********************************************!*\
      !*** ./client-src/modules/logger/index.js ***!
      \********************************************/
    __nested_webpack_require_26919__.r(__webpack_exports__);
    /* harmony export */


    __nested_webpack_require_26919__.d(__webpack_exports__, {
      /* harmony export */
      "default": function () {
        return (
          /* reexport default export from named module */
          webpack_lib_logging_runtime_js__WEBPACK_IMPORTED_MODULE_0__
        );
      }
      /* harmony export */

    });
    /* harmony import */


    var webpack_lib_logging_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_26919__(
    /*! webpack/lib/logging/runtime.js */
    "./node_modules/webpack/lib/logging/runtime.js");
  }();
  var __webpack_export_target__ = exports;

  for (var i in __webpack_exports__) __webpack_export_target__[i] = __webpack_exports__[i];

  if (__webpack_exports__.__esModule) Object.defineProperty(__webpack_export_target__, "__esModule", {
    value: true
  });
  /******/
})();

/***/ }),

/***/ "./node_modules/webpack-dev-server/client/modules/strip-ansi/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/webpack-dev-server/client/modules/strip-ansi/index.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

/******/
(function () {
  // webpackBootstrap

  /******/
  "use strict";
  /******/

  var __webpack_modules__ = {
    /***/
    "./node_modules/strip-ansi/index.js":
    /*!******************************************!*\
      !*** ./node_modules/strip-ansi/index.js ***!
      \******************************************/

    /***/
    function (__unused_webpack___webpack_module__, __webpack_exports__, __nested_webpack_require_406__) {
      __nested_webpack_require_406__.r(__webpack_exports__);
      /* harmony export */


      __nested_webpack_require_406__.d(__webpack_exports__, {
        /* harmony export */
        "default": function () {
          return (
            /* binding */
            stripAnsi
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var ansi_regex__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_406__(
      /*! ansi-regex */
      "./node_modules/strip-ansi/node_modules/ansi-regex/index.js");

      function stripAnsi(string) {
        if (typeof string !== 'string') {
          throw new TypeError("Expected a `string`, got `".concat(typeof string, "`"));
        }

        return string.replace((0, ansi_regex__WEBPACK_IMPORTED_MODULE_0__["default"])(), '');
      }
      /***/

    },

    /***/
    "./node_modules/strip-ansi/node_modules/ansi-regex/index.js":
    /*!******************************************************************!*\
      !*** ./node_modules/strip-ansi/node_modules/ansi-regex/index.js ***!
      \******************************************************************/

    /***/
    function (__unused_webpack___webpack_module__, __webpack_exports__, __nested_webpack_require_1632__) {
      __nested_webpack_require_1632__.r(__webpack_exports__);
      /* harmony export */


      __nested_webpack_require_1632__.d(__webpack_exports__, {
        /* harmony export */
        "default": function () {
          return (
            /* binding */
            ansiRegex
          );
        }
        /* harmony export */

      });

      function ansiRegex() {
        var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
            _ref$onlyFirst = _ref.onlyFirst,
            onlyFirst = _ref$onlyFirst === void 0 ? false : _ref$onlyFirst;

        var pattern = ["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)", '(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))'].join('|');
        return new RegExp(pattern, onlyFirst ? undefined : 'g');
      }
      /***/

    }
    /******/

  };
  /************************************************************************/

  /******/
  // The module cache

  /******/

  var __webpack_module_cache__ = {};
  /******/

  /******/
  // The require function

  /******/

  function __nested_webpack_require_2778__(moduleId) {
    /******/
    // Check if module is in cache

    /******/
    var cachedModule = __webpack_module_cache__[moduleId];
    /******/

    if (cachedModule !== undefined) {
      /******/
      return cachedModule.exports;
      /******/
    }
    /******/
    // Create a new module (and put it into the cache)

    /******/


    var module = __webpack_module_cache__[moduleId] = {
      /******/
      // no module.id needed

      /******/
      // no module.loaded needed

      /******/
      exports: {}
      /******/

    };
    /******/

    /******/
    // Execute the module function

    /******/

    __webpack_modules__[moduleId](module, module.exports, __nested_webpack_require_2778__);
    /******/

    /******/
    // Return the exports of the module

    /******/


    return module.exports;
    /******/
  }
  /******/

  /************************************************************************/

  /******/

  /* webpack/runtime/define property getters */

  /******/


  !function () {
    /******/
    // define getter functions for harmony exports

    /******/
    __nested_webpack_require_2778__.d = function (exports, definition) {
      /******/
      for (var key in definition) {
        /******/
        if (__nested_webpack_require_2778__.o(definition, key) && !__nested_webpack_require_2778__.o(exports, key)) {
          /******/
          Object.defineProperty(exports, key, {
            enumerable: true,
            get: definition[key]
          });
          /******/
        }
        /******/

      }
      /******/

    };
    /******/

  }();
  /******/

  /******/

  /* webpack/runtime/hasOwnProperty shorthand */

  /******/

  !function () {
    /******/
    __nested_webpack_require_2778__.o = function (obj, prop) {
      return Object.prototype.hasOwnProperty.call(obj, prop);
    };
    /******/

  }();
  /******/

  /******/

  /* webpack/runtime/make namespace object */

  /******/

  !function () {
    /******/
    // define __esModule on exports

    /******/
    __nested_webpack_require_2778__.r = function (exports) {
      /******/
      if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {
        /******/
        Object.defineProperty(exports, Symbol.toStringTag, {
          value: 'Module'
        });
        /******/
      }
      /******/


      Object.defineProperty(exports, '__esModule', {
        value: true
      });
      /******/
    };
    /******/

  }();
  /******/

  /************************************************************************/

  var __webpack_exports__ = {}; // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.

  !function () {
    /*!************************************************!*\
      !*** ./client-src/modules/strip-ansi/index.js ***!
      \************************************************/
    __nested_webpack_require_2778__.r(__webpack_exports__);
    /* harmony import */


    var strip_ansi__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_2778__(
    /*! strip-ansi */
    "./node_modules/strip-ansi/index.js");
    /* harmony default export */


    __webpack_exports__["default"] = strip_ansi__WEBPACK_IMPORTED_MODULE_0__["default"];
  }();
  var __webpack_export_target__ = exports;

  for (var i in __webpack_exports__) __webpack_export_target__[i] = __webpack_exports__[i];

  if (__webpack_exports__.__esModule) Object.defineProperty(__webpack_export_target__, "__esModule", {
    value: true
  });
  /******/
})();

/***/ }),

/***/ "./node_modules/webpack-dev-server/client/overlay.js":
/*!***********************************************************!*\
  !*** ./node_modules/webpack-dev-server/client/overlay.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "formatProblem": () => (/* binding */ formatProblem),
/* harmony export */   "show": () => (/* binding */ show),
/* harmony export */   "hide": () => (/* binding */ hide)
/* harmony export */ });
/* harmony import */ var ansi_html_community__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ansi-html-community */ "./node_modules/ansi-html-community/index.js");
/* harmony import */ var ansi_html_community__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ansi_html_community__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var html_entities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! html-entities */ "./node_modules/html-entities/lib/index.js");
/* harmony import */ var html_entities__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(html_entities__WEBPACK_IMPORTED_MODULE_1__);
// The error overlay is inspired (and mostly copied) from Create React App (https://github.com/facebookincubator/create-react-app)
// They, in turn, got inspired by webpack-hot-middleware (https://github.com/glenjamin/webpack-hot-middleware).


var colors = {
  reset: ["transparent", "transparent"],
  black: "181818",
  red: "E36049",
  green: "B3CB74",
  yellow: "FFD080",
  blue: "7CAFC2",
  magenta: "7FACCA",
  cyan: "C3C2EF",
  lightgrey: "EBE7E3",
  darkgrey: "6D7891"
};
/** @type {HTMLIFrameElement | null | undefined} */

var iframeContainerElement;
/** @type {HTMLDivElement | null | undefined} */

var containerElement;
/** @type {Array<(element: HTMLDivElement) => void>} */

var onLoadQueue = [];
ansi_html_community__WEBPACK_IMPORTED_MODULE_0___default().setColors(colors);

function createContainer() {
  iframeContainerElement = document.createElement("iframe");
  iframeContainerElement.id = "webpack-dev-server-client-overlay";
  iframeContainerElement.src = "about:blank";
  iframeContainerElement.style.position = "fixed";
  iframeContainerElement.style.left = 0;
  iframeContainerElement.style.top = 0;
  iframeContainerElement.style.right = 0;
  iframeContainerElement.style.bottom = 0;
  iframeContainerElement.style.width = "100vw";
  iframeContainerElement.style.height = "100vh";
  iframeContainerElement.style.border = "none";
  iframeContainerElement.style.zIndex = 9999999999;

  iframeContainerElement.onload = function () {
    containerElement =
    /** @type {Document} */

    /** @type {HTMLIFrameElement} */
    iframeContainerElement.contentDocument.createElement("div");
    containerElement.id = "webpack-dev-server-client-overlay-div";
    containerElement.style.position = "fixed";
    containerElement.style.boxSizing = "border-box";
    containerElement.style.left = 0;
    containerElement.style.top = 0;
    containerElement.style.right = 0;
    containerElement.style.bottom = 0;
    containerElement.style.width = "100vw";
    containerElement.style.height = "100vh";
    containerElement.style.backgroundColor = "rgba(0, 0, 0, 0.85)";
    containerElement.style.color = "#E8E8E8";
    containerElement.style.fontFamily = "Menlo, Consolas, monospace";
    containerElement.style.fontSize = "large";
    containerElement.style.padding = "2rem";
    containerElement.style.lineHeight = "1.2";
    containerElement.style.whiteSpace = "pre-wrap";
    containerElement.style.overflow = "auto";
    var headerElement = document.createElement("span");
    headerElement.innerText = "Compiled with problems:";
    var closeButtonElement = document.createElement("button");
    closeButtonElement.innerText = "X";
    closeButtonElement.style.background = "transparent";
    closeButtonElement.style.border = "none";
    closeButtonElement.style.fontSize = "20px";
    closeButtonElement.style.fontWeight = "bold";
    closeButtonElement.style.color = "white";
    closeButtonElement.style.cursor = "pointer";
    closeButtonElement.style.cssFloat = "right"; // @ts-ignore

    closeButtonElement.style.styleFloat = "right";
    closeButtonElement.addEventListener("click", function () {
      hide();
    });
    containerElement.appendChild(headerElement);
    containerElement.appendChild(closeButtonElement);
    containerElement.appendChild(document.createElement("br"));
    containerElement.appendChild(document.createElement("br"));
    /** @type {Document} */

    /** @type {HTMLIFrameElement} */

    iframeContainerElement.contentDocument.body.appendChild(containerElement);
    onLoadQueue.forEach(function (onLoad) {
      onLoad(
      /** @type {HTMLDivElement} */
      containerElement);
    });
    onLoadQueue = [];
    /** @type {HTMLIFrameElement} */

    iframeContainerElement.onload = null;
  };

  document.body.appendChild(iframeContainerElement);
}
/**
 * @param {(element: HTMLDivElement) => void} callback
 */


function ensureOverlayExists(callback) {
  if (containerElement) {
    // Everything is ready, call the callback right away.
    callback(containerElement);
    return;
  }

  onLoadQueue.push(callback);

  if (iframeContainerElement) {
    return;
  }

  createContainer();
} // Successful compilation.


function hide() {
  if (!iframeContainerElement) {
    return;
  } // Clean up and reset internal state.


  document.body.removeChild(iframeContainerElement);
  iframeContainerElement = null;
  containerElement = null;
}
/**
 * @param {string} type
 * @param {string  | { file?: string, moduleName?: string, loc?: string, message?: string }} item
 * @returns {{ header: string, body: string }}
 */


function formatProblem(type, item) {
  var header = type === "warning" ? "WARNING" : "ERROR";
  var body = "";

  if (typeof item === "string") {
    body += item;
  } else {
    var file = item.file || ""; // eslint-disable-next-line no-nested-ternary

    var moduleName = item.moduleName ? item.moduleName.indexOf("!") !== -1 ? "".concat(item.moduleName.replace(/^(\s|\S)*!/, ""), " (").concat(item.moduleName, ")") : "".concat(item.moduleName) : "";
    var loc = item.loc;
    header += "".concat(moduleName || file ? " in ".concat(moduleName ? "".concat(moduleName).concat(file ? " (".concat(file, ")") : "") : file).concat(loc ? " ".concat(loc) : "") : "");
    body += item.message || "";
  }

  return {
    header: header,
    body: body
  };
} // Compilation with errors (e.g. syntax error or missing modules).

/**
 * @param {string} type
 * @param {Array<string  | { file?: string, moduleName?: string, loc?: string, message?: string }>} messages
 */


function show(type, messages) {
  ensureOverlayExists(function () {
    messages.forEach(function (message) {
      var entryElement = document.createElement("div");
      var typeElement = document.createElement("span");

      var _formatProblem = formatProblem(type, message),
          header = _formatProblem.header,
          body = _formatProblem.body;

      typeElement.innerText = header;
      typeElement.style.color = "#".concat(colors.red); // Make it look similar to our terminal.

      var text = ansi_html_community__WEBPACK_IMPORTED_MODULE_0___default()((0,html_entities__WEBPACK_IMPORTED_MODULE_1__.encode)(body));
      var messageTextNode = document.createElement("div");
      messageTextNode.innerHTML = text;
      entryElement.appendChild(typeElement);
      entryElement.appendChild(document.createElement("br"));
      entryElement.appendChild(document.createElement("br"));
      entryElement.appendChild(messageTextNode);
      entryElement.appendChild(document.createElement("br"));
      entryElement.appendChild(document.createElement("br"));
      /** @type {HTMLDivElement} */

      containerElement.appendChild(entryElement);
    });
  });
}



/***/ }),

/***/ "./node_modules/webpack-dev-server/client/socket.js":
/*!**********************************************************!*\
  !*** ./node_modules/webpack-dev-server/client/socket.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _clients_WebSocketClient_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clients/WebSocketClient.js */ "./node_modules/webpack-dev-server/client/clients/WebSocketClient.js");
/* harmony import */ var _utils_log_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/log.js */ "./node_modules/webpack-dev-server/client/utils/log.js");
/* provided dependency */ var __webpack_dev_server_client__ = __webpack_require__(/*! ./node_modules/webpack-dev-server/client/clients/WebSocketClient.js */ "./node_modules/webpack-dev-server/client/clients/WebSocketClient.js");
/* global __webpack_dev_server_client__ */

 // this WebsocketClient is here as a default fallback, in case the client is not injected

/* eslint-disable camelcase */

var Client = // eslint-disable-next-line no-nested-ternary
typeof __webpack_dev_server_client__ !== "undefined" ? typeof __webpack_dev_server_client__.default !== "undefined" ? __webpack_dev_server_client__.default : __webpack_dev_server_client__ : _clients_WebSocketClient_js__WEBPACK_IMPORTED_MODULE_0__["default"];
/* eslint-enable camelcase */

var retries = 0;
var maxRetries = 10;
var client = null;
/**
 * @param {string} url
 * @param {{ [handler: string]: (data?: any, params?: any) => any }} handlers
 * @param {number} [reconnect]
 */

var socket = function initSocket(url, handlers, reconnect) {
  client = new Client(url);
  client.onOpen(function () {
    retries = 0;

    if (typeof reconnect !== "undefined") {
      maxRetries = reconnect;
    }
  });
  client.onClose(function () {
    if (retries === 0) {
      handlers.close();
    } // Try to reconnect.


    client = null; // After 10 retries stop trying, to prevent logspam.

    if (retries < maxRetries) {
      // Exponentially increase timeout to reconnect.
      // Respectfully copied from the package `got`.
      // eslint-disable-next-line no-restricted-properties
      var retryInMs = 1000 * Math.pow(2, retries) + Math.random() * 100;
      retries += 1;
      _utils_log_js__WEBPACK_IMPORTED_MODULE_1__.log.info("Trying to reconnect...");
      setTimeout(function () {
        socket(url, handlers, reconnect);
      }, retryInMs);
    }
  });
  client.onMessage(
  /**
   * @param {any} data
   */
  function (data) {
    var message = JSON.parse(data);

    if (handlers[message.type]) {
      handlers[message.type](message.data, message.params);
    }
  });
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (socket);

/***/ }),

/***/ "./node_modules/webpack-dev-server/client/utils/createSocketURL.js":
/*!*************************************************************************!*\
  !*** ./node_modules/webpack-dev-server/client/utils/createSocketURL.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @param {{ protocol?: string, auth?: string, hostname?: string, port?: string, pathname?: string, search?: string, hash?: string, slashes?: boolean }} objURL
 * @returns {string}
 */
function format(objURL) {
  var protocol = objURL.protocol || "";

  if (protocol && protocol.substr(-1) !== ":") {
    protocol += ":";
  }

  var auth = objURL.auth || "";

  if (auth) {
    auth = encodeURIComponent(auth);
    auth = auth.replace(/%3A/i, ":");
    auth += "@";
  }

  var host = "";

  if (objURL.hostname) {
    host = auth + (objURL.hostname.indexOf(":") === -1 ? objURL.hostname : "[".concat(objURL.hostname, "]"));

    if (objURL.port) {
      host += ":".concat(objURL.port);
    }
  }

  var pathname = objURL.pathname || "";

  if (objURL.slashes) {
    host = "//".concat(host || "");

    if (pathname && pathname.charAt(0) !== "/") {
      pathname = "/".concat(pathname);
    }
  } else if (!host) {
    host = "";
  }

  var search = objURL.search || "";

  if (search && search.charAt(0) !== "?") {
    search = "?".concat(search);
  }

  var hash = objURL.hash || "";

  if (hash && hash.charAt(0) !== "#") {
    hash = "#".concat(hash);
  }

  pathname = pathname.replace(/[?#]/g,
  /**
   * @param {string} match
   * @returns {string}
   */
  function (match) {
    return encodeURIComponent(match);
  });
  search = search.replace("#", "%23");
  return "".concat(protocol).concat(host).concat(pathname).concat(search).concat(hash);
}
/**
 * @param {URL & { fromCurrentScript?: boolean }} parsedURL
 * @returns {string}
 */


function createSocketURL(parsedURL) {
  var hostname = parsedURL.hostname; // Node.js module parses it as `::`
  // `new URL(urlString, [baseURLString])` parses it as '[::]'

  var isInAddrAny = hostname === "0.0.0.0" || hostname === "::" || hostname === "[::]"; // why do we need this check?
  // hostname n/a for file protocol (example, when using electron, ionic)
  // see: https://github.com/webpack/webpack-dev-server/pull/384

  if (isInAddrAny && self.location.hostname && self.location.protocol.indexOf("http") === 0) {
    hostname = self.location.hostname;
  }

  var socketURLProtocol = parsedURL.protocol || self.location.protocol; // When https is used in the app, secure web sockets are always necessary because the browser doesn't accept non-secure web sockets.

  if (socketURLProtocol === "auto:" || hostname && isInAddrAny && self.location.protocol === "https:") {
    socketURLProtocol = self.location.protocol;
  }

  socketURLProtocol = socketURLProtocol.replace(/^(?:http|.+-extension|file)/i, "ws");
  var socketURLAuth = ""; // `new URL(urlString, [baseURLstring])` doesn't have `auth` property
  // Parse authentication credentials in case we need them

  if (parsedURL.username) {
    socketURLAuth = parsedURL.username; // Since HTTP basic authentication does not allow empty username,
    // we only include password if the username is not empty.

    if (parsedURL.password) {
      // Result: <username>:<password>
      socketURLAuth = socketURLAuth.concat(":", parsedURL.password);
    }
  } // In case the host is a raw IPv6 address, it can be enclosed in
  // the brackets as the brackets are needed in the final URL string.
  // Need to remove those as url.format blindly adds its own set of brackets
  // if the host string contains colons. That would lead to non-working
  // double brackets (e.g. [[::]]) host
  //
  // All of these web socket url params are optionally passed in through resourceQuery,
  // so we need to fall back to the default if they are not provided


  var socketURLHostname = (hostname || self.location.hostname || "localhost").replace(/^\[(.*)\]$/, "$1");
  var socketURLPort = parsedURL.port;

  if (!socketURLPort || socketURLPort === "0") {
    socketURLPort = self.location.port;
  } // If path is provided it'll be passed in via the resourceQuery as a
  // query param so it has to be parsed out of the querystring in order for the
  // client to open the socket to the correct location.


  var socketURLPathname = "/ws";

  if (parsedURL.pathname && !parsedURL.fromCurrentScript) {
    socketURLPathname = parsedURL.pathname;
  }

  return format({
    protocol: socketURLProtocol,
    auth: socketURLAuth,
    hostname: socketURLHostname,
    port: socketURLPort,
    pathname: socketURLPathname,
    slashes: true
  });
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (createSocketURL);

/***/ }),

/***/ "./node_modules/webpack-dev-server/client/utils/getCurrentScriptSource.js":
/*!********************************************************************************!*\
  !*** ./node_modules/webpack-dev-server/client/utils/getCurrentScriptSource.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * @returns {string}
 */
function getCurrentScriptSource() {
  // `document.currentScript` is the most accurate way to find the current script,
  // but is not supported in all browsers.
  if (document.currentScript) {
    return document.currentScript.getAttribute("src");
  } // Fallback to getting all scripts running in the document.


  var scriptElements = document.scripts || [];
  var scriptElementsWithSrc = Array.prototype.filter.call(scriptElements, function (element) {
    return element.getAttribute("src");
  });

  if (scriptElementsWithSrc.length > 0) {
    var currentScript = scriptElementsWithSrc[scriptElementsWithSrc.length - 1];
    return currentScript.getAttribute("src");
  } // Fail as there was no script to use.


  throw new Error("[webpack-dev-server] Failed to get current script source.");
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getCurrentScriptSource);

/***/ }),

/***/ "./node_modules/webpack-dev-server/client/utils/log.js":
/*!*************************************************************!*\
  !*** ./node_modules/webpack-dev-server/client/utils/log.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "log": () => (/* binding */ log),
/* harmony export */   "setLogLevel": () => (/* binding */ setLogLevel)
/* harmony export */ });
/* harmony import */ var _modules_logger_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modules/logger/index.js */ "./node_modules/webpack-dev-server/client/modules/logger/index.js");
/* harmony import */ var _modules_logger_index_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_modules_logger_index_js__WEBPACK_IMPORTED_MODULE_0__);

var name = "webpack-dev-server"; // default level is set on the client side, so it does not need
// to be set by the CLI or API

var defaultLevel = "info"; // options new options, merge with old options

/**
 * @param {false | true | "none" | "error" | "warn" | "info" | "log" | "verbose"} level
 * @returns {void}
 */

function setLogLevel(level) {
  _modules_logger_index_js__WEBPACK_IMPORTED_MODULE_0___default().configureDefaultLogger({
    level: level
  });
}

setLogLevel(defaultLevel);
var log = _modules_logger_index_js__WEBPACK_IMPORTED_MODULE_0___default().getLogger(name);


/***/ }),

/***/ "./node_modules/webpack-dev-server/client/utils/parseURL.js":
/*!******************************************************************!*\
  !*** ./node_modules/webpack-dev-server/client/utils/parseURL.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _getCurrentScriptSource_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getCurrentScriptSource.js */ "./node_modules/webpack-dev-server/client/utils/getCurrentScriptSource.js");

/**
 * @param {string} resourceQuery
 * @returns {{ [key: string]: string | boolean }}
 */

function parseURL(resourceQuery) {
  /** @type {{ [key: string]: string }} */
  var options = {};

  if (typeof resourceQuery === "string" && resourceQuery !== "") {
    var searchParams = resourceQuery.substr(1).split("&");

    for (var i = 0; i < searchParams.length; i++) {
      var pair = searchParams[i].split("=");
      options[pair[0]] = decodeURIComponent(pair[1]);
    }
  } else {
    // Else, get the url from the <script> this file was called with.
    var scriptSource = (0,_getCurrentScriptSource_js__WEBPACK_IMPORTED_MODULE_0__["default"])();
    var scriptSourceURL;

    try {
      // The placeholder `baseURL` with `window.location.href`,
      // is to allow parsing of path-relative or protocol-relative URLs,
      // and will have no effect if `scriptSource` is a fully valid URL.
      scriptSourceURL = new URL(scriptSource, self.location.href);
    } catch (error) {// URL parsing failed, do nothing.
      // We will still proceed to see if we can recover using `resourceQuery`
    }

    if (scriptSourceURL) {
      options = scriptSourceURL;
      options.fromCurrentScript = true;
    }
  }

  return options;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (parseURL);

/***/ }),

/***/ "./node_modules/webpack-dev-server/client/utils/reloadApp.js":
/*!*******************************************************************!*\
  !*** ./node_modules/webpack-dev-server/client/utils/reloadApp.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var webpack_hot_emitter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! webpack/hot/emitter.js */ "./node_modules/webpack/hot/emitter.js");
/* harmony import */ var webpack_hot_emitter_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(webpack_hot_emitter_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./log.js */ "./node_modules/webpack-dev-server/client/utils/log.js");


/** @typedef {import("../index").Options} Options
/** @typedef {import("../index").Status} Status

/**
 * @param {Options} options
 * @param {Status} status
 */

function reloadApp(_ref, status) {
  var hot = _ref.hot,
      liveReload = _ref.liveReload;

  if (status.isUnloading) {
    return;
  }

  var currentHash = status.currentHash,
      previousHash = status.previousHash;
  var isInitial = currentHash.indexOf(
  /** @type {string} */
  previousHash) >= 0;

  if (isInitial) {
    return;
  }
  /**
   * @param {Window} rootWindow
   * @param {number} intervalId
   */


  function applyReload(rootWindow, intervalId) {
    clearInterval(intervalId);
    _log_js__WEBPACK_IMPORTED_MODULE_1__.log.info("App updated. Reloading...");
    rootWindow.location.reload();
  }

  var search = self.location.search.toLowerCase();
  var allowToHot = search.indexOf("webpack-dev-server-hot=false") === -1;
  var allowToLiveReload = search.indexOf("webpack-dev-server-live-reload=false") === -1;

  if (hot && allowToHot) {
    _log_js__WEBPACK_IMPORTED_MODULE_1__.log.info("App hot update...");
    webpack_hot_emitter_js__WEBPACK_IMPORTED_MODULE_0___default().emit("webpackHotUpdate", status.currentHash);

    if (typeof self !== "undefined" && self.window) {
      // broadcast update to window
      self.postMessage("webpackHotUpdate".concat(status.currentHash), "*");
    }
  } // allow refreshing the page only if liveReload isn't disabled
  else if (liveReload && allowToLiveReload) {
    var rootWindow = self; // use parent window for reload (in case we're in an iframe with no valid src)

    var intervalId = self.setInterval(function () {
      if (rootWindow.location.protocol !== "about:") {
        // reload immediately if protocol is valid
        applyReload(rootWindow, intervalId);
      } else {
        rootWindow = rootWindow.parent;

        if (rootWindow.parent === rootWindow) {
          // if parent equals current window we've reached the root which would continue forever, so trigger a reload anyways
          applyReload(rootWindow, intervalId);
        }
      }
    });
  }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (reloadApp);

/***/ }),

/***/ "./node_modules/webpack-dev-server/client/utils/sendMessage.js":
/*!*********************************************************************!*\
  !*** ./node_modules/webpack-dev-server/client/utils/sendMessage.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* global __resourceQuery WorkerGlobalScope */
// Send messages to the outside, so plugins can consume it.

/**
 * @param {string} type
 * @param {any} [data]
 */
function sendMsg(type, data) {
  if (typeof self !== "undefined" && (typeof WorkerGlobalScope === "undefined" || !(self instanceof WorkerGlobalScope))) {
    self.postMessage({
      type: "webpack".concat(type),
      data: data
    }, "*");
  }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (sendMsg);

/***/ }),

/***/ "./node_modules/webpack/hot/dev-server.js":
/*!************************************************!*\
  !*** ./node_modules/webpack/hot/dev-server.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

/* globals __webpack_hash__ */
if (true) {
  var lastHash;

  var upToDate = function upToDate() {
    return lastHash.indexOf(__webpack_require__.h()) >= 0;
  };

  var log = __webpack_require__(/*! ./log */ "./node_modules/webpack/hot/log.js");

  var check = function check() {
    module.hot.check(true).then(function (updatedModules) {
      if (!updatedModules) {
        log("warning", "[HMR] Cannot find update. Need to do a full reload!");
        log("warning", "[HMR] (Probably because of restarting the webpack-dev-server)");
        window.location.reload();
        return;
      }

      if (!upToDate()) {
        check();
      }

      __webpack_require__(/*! ./log-apply-result */ "./node_modules/webpack/hot/log-apply-result.js")(updatedModules, updatedModules);

      if (upToDate()) {
        log("info", "[HMR] App is up to date.");
      }
    }).catch(function (err) {
      var status = module.hot.status();

      if (["abort", "fail"].indexOf(status) >= 0) {
        log("warning", "[HMR] Cannot apply update. Need to do a full reload!");
        log("warning", "[HMR] " + log.formatError(err));
        window.location.reload();
      } else {
        log("warning", "[HMR] Update failed: " + log.formatError(err));
      }
    });
  };

  var hotEmitter = __webpack_require__(/*! ./emitter */ "./node_modules/webpack/hot/emitter.js");

  hotEmitter.on("webpackHotUpdate", function (currentHash) {
    lastHash = currentHash;

    if (!upToDate() && module.hot.status() === "idle") {
      log("info", "[HMR] Checking for updates on the server...");
      check();
    }
  });
  log("info", "[HMR] Waiting for update signal from WDS...");
} else {}

/***/ }),

/***/ "./node_modules/webpack/hot/emitter.js":
/*!*********************************************!*\
  !*** ./node_modules/webpack/hot/emitter.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var EventEmitter = __webpack_require__(/*! events */ "./node_modules/events/events.js");

module.exports = new EventEmitter();

/***/ }),

/***/ "./node_modules/webpack/hot/log-apply-result.js":
/*!******************************************************!*\
  !*** ./node_modules/webpack/hot/log-apply-result.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
module.exports = function (updatedModules, renewedModules) {
  var unacceptedModules = updatedModules.filter(function (moduleId) {
    return renewedModules && renewedModules.indexOf(moduleId) < 0;
  });

  var log = __webpack_require__(/*! ./log */ "./node_modules/webpack/hot/log.js");

  if (unacceptedModules.length > 0) {
    log("warning", "[HMR] The following modules couldn't be hot updated: (They would need a full reload!)");
    unacceptedModules.forEach(function (moduleId) {
      log("warning", "[HMR]  - " + moduleId);
    });
  }

  if (!renewedModules || renewedModules.length === 0) {
    log("info", "[HMR] Nothing hot updated.");
  } else {
    log("info", "[HMR] Updated modules:");
    renewedModules.forEach(function (moduleId) {
      if (typeof moduleId === "string" && moduleId.indexOf("!") !== -1) {
        var parts = moduleId.split("!");
        log.groupCollapsed("info", "[HMR]  - " + parts.pop());
        log("info", "[HMR]  - " + moduleId);
        log.groupEnd("info");
      } else {
        log("info", "[HMR]  - " + moduleId);
      }
    });
    var numberIds = renewedModules.every(function (moduleId) {
      return typeof moduleId === "number";
    });
    if (numberIds) log("info", '[HMR] Consider using the optimization.moduleIds: "named" for module names.');
  }
};

/***/ }),

/***/ "./node_modules/webpack/hot/log.js":
/*!*****************************************!*\
  !*** ./node_modules/webpack/hot/log.js ***!
  \*****************************************/
/***/ ((module) => {

var logLevel = "info";

function dummy() {}

function shouldLog(level) {
  var shouldLog = logLevel === "info" && level === "info" || ["info", "warning"].indexOf(logLevel) >= 0 && level === "warning" || ["info", "warning", "error"].indexOf(logLevel) >= 0 && level === "error";
  return shouldLog;
}

function logGroup(logFn) {
  return function (level, msg) {
    if (shouldLog(level)) {
      logFn(msg);
    }
  };
}

module.exports = function (level, msg) {
  if (shouldLog(level)) {
    if (level === "info") {
      console.log(msg);
    } else if (level === "warning") {
      console.warn(msg);
    } else if (level === "error") {
      console.error(msg);
    }
  }
};
/* eslint-disable node/no-unsupported-features/node-builtins */


var group = console.group || dummy;
var groupCollapsed = console.groupCollapsed || dummy;
var groupEnd = console.groupEnd || dummy;
/* eslint-enable node/no-unsupported-features/node-builtins */

module.exports.group = logGroup(group);
module.exports.groupCollapsed = logGroup(groupCollapsed);
module.exports.groupEnd = logGroup(groupEnd);

module.exports.setLogLevel = function (level) {
  logLevel = level;
};

module.exports.formatError = function (err) {
  var message = err.message;
  var stack = err.stack;

  if (!stack) {
    return message;
  } else if (stack.indexOf(message) < 0) {
    return message + "\n" + stack;
  } else {
    return stack;
  }
};

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[5].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[5].use[2]!./node_modules/source-map-loader/dist/cjs.js!./node_modules/@fortawesome/fontawesome-free/css/all.min.css":
/*!***************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[5].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[5].use[2]!./node_modules/source-map-loader/dist/cjs.js!./node_modules/@fortawesome/fontawesome-free/css/all.min.css ***!
  \***************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/getUrl.js */ "./node_modules/css-loader/dist/runtime/getUrl.js");
/* harmony import */ var _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);
// Imports



var ___CSS_LOADER_URL_IMPORT_0___ = new URL(/* asset import */ __webpack_require__(/*! ../webfonts/fa-brands-400.eot */ "./node_modules/@fortawesome/fontawesome-free/webfonts/fa-brands-400.eot"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_1___ = new URL(/* asset import */ __webpack_require__(/*! ../webfonts/fa-brands-400.woff2 */ "./node_modules/@fortawesome/fontawesome-free/webfonts/fa-brands-400.woff2"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_2___ = new URL(/* asset import */ __webpack_require__(/*! ../webfonts/fa-brands-400.woff */ "./node_modules/@fortawesome/fontawesome-free/webfonts/fa-brands-400.woff"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_3___ = new URL(/* asset import */ __webpack_require__(/*! ../webfonts/fa-brands-400.ttf */ "./node_modules/@fortawesome/fontawesome-free/webfonts/fa-brands-400.ttf"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_4___ = new URL(/* asset import */ __webpack_require__(/*! ../webfonts/fa-brands-400.svg */ "./node_modules/@fortawesome/fontawesome-free/webfonts/fa-brands-400.svg"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_5___ = new URL(/* asset import */ __webpack_require__(/*! ../webfonts/fa-regular-400.eot */ "./node_modules/@fortawesome/fontawesome-free/webfonts/fa-regular-400.eot"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_6___ = new URL(/* asset import */ __webpack_require__(/*! ../webfonts/fa-regular-400.woff2 */ "./node_modules/@fortawesome/fontawesome-free/webfonts/fa-regular-400.woff2"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_7___ = new URL(/* asset import */ __webpack_require__(/*! ../webfonts/fa-regular-400.woff */ "./node_modules/@fortawesome/fontawesome-free/webfonts/fa-regular-400.woff"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_8___ = new URL(/* asset import */ __webpack_require__(/*! ../webfonts/fa-regular-400.ttf */ "./node_modules/@fortawesome/fontawesome-free/webfonts/fa-regular-400.ttf"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_9___ = new URL(/* asset import */ __webpack_require__(/*! ../webfonts/fa-regular-400.svg */ "./node_modules/@fortawesome/fontawesome-free/webfonts/fa-regular-400.svg"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_10___ = new URL(/* asset import */ __webpack_require__(/*! ../webfonts/fa-solid-900.eot */ "./node_modules/@fortawesome/fontawesome-free/webfonts/fa-solid-900.eot"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_11___ = new URL(/* asset import */ __webpack_require__(/*! ../webfonts/fa-solid-900.woff2 */ "./node_modules/@fortawesome/fontawesome-free/webfonts/fa-solid-900.woff2"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_12___ = new URL(/* asset import */ __webpack_require__(/*! ../webfonts/fa-solid-900.woff */ "./node_modules/@fortawesome/fontawesome-free/webfonts/fa-solid-900.woff"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_13___ = new URL(/* asset import */ __webpack_require__(/*! ../webfonts/fa-solid-900.ttf */ "./node_modules/@fortawesome/fontawesome-free/webfonts/fa-solid-900.ttf"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_14___ = new URL(/* asset import */ __webpack_require__(/*! ../webfonts/fa-solid-900.svg */ "./node_modules/@fortawesome/fontawesome-free/webfonts/fa-solid-900.svg"), __webpack_require__.b);
var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
var ___CSS_LOADER_URL_REPLACEMENT_0___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_0___);
var ___CSS_LOADER_URL_REPLACEMENT_1___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_0___, { hash: "?#iefix" });
var ___CSS_LOADER_URL_REPLACEMENT_2___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_1___);
var ___CSS_LOADER_URL_REPLACEMENT_3___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_2___);
var ___CSS_LOADER_URL_REPLACEMENT_4___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_3___);
var ___CSS_LOADER_URL_REPLACEMENT_5___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_4___, { hash: "#fontawesome" });
var ___CSS_LOADER_URL_REPLACEMENT_6___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_5___);
var ___CSS_LOADER_URL_REPLACEMENT_7___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_5___, { hash: "?#iefix" });
var ___CSS_LOADER_URL_REPLACEMENT_8___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_6___);
var ___CSS_LOADER_URL_REPLACEMENT_9___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_7___);
var ___CSS_LOADER_URL_REPLACEMENT_10___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_8___);
var ___CSS_LOADER_URL_REPLACEMENT_11___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_9___, { hash: "#fontawesome" });
var ___CSS_LOADER_URL_REPLACEMENT_12___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_10___);
var ___CSS_LOADER_URL_REPLACEMENT_13___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_10___, { hash: "?#iefix" });
var ___CSS_LOADER_URL_REPLACEMENT_14___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_11___);
var ___CSS_LOADER_URL_REPLACEMENT_15___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_12___);
var ___CSS_LOADER_URL_REPLACEMENT_16___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_13___);
var ___CSS_LOADER_URL_REPLACEMENT_17___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_14___, { hash: "#fontawesome" });
// Module
___CSS_LOADER_EXPORT___.push([module.id, "/*!\n * Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com\n * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)\n */\n.fa,.fab,.fad,.fal,.far,.fas{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:inline-block;font-style:normal;font-feature-settings:normal;font-variant:normal;text-rendering:auto;line-height:1}.fa-lg{font-size:1.33333em;line-height:.75em;vertical-align:-.0667em}.fa-xs{font-size:.75em}.fa-sm{font-size:.875em}.fa-1x{font-size:1em}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-6x{font-size:6em}.fa-7x{font-size:7em}.fa-8x{font-size:8em}.fa-9x{font-size:9em}.fa-10x{font-size:10em}.fa-fw{text-align:center;width:1.25em}.fa-ul{list-style-type:none;margin-left:2.5em;padding-left:0}.fa-ul>li{position:relative}.fa-li{left:-2em;position:absolute;text-align:center;width:2em;line-height:inherit}.fa-border{border:.08em solid #eee;border-radius:.1em;padding:.2em .25em .15em}.fa-pull-left{float:left}.fa-pull-right{float:right}.fa.fa-pull-left,.fab.fa-pull-left,.fal.fa-pull-left,.far.fa-pull-left,.fas.fa-pull-left{margin-right:.3em}.fa.fa-pull-right,.fab.fa-pull-right,.fal.fa-pull-right,.far.fa-pull-right,.fas.fa-pull-right{margin-left:.3em}.fa-spin{animation:fa-spin 2s linear infinite}.fa-pulse{animation:fa-spin 1s steps(8) infinite}@keyframes fa-spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}.fa-rotate-90{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=1)\";transform:rotate(90deg)}.fa-rotate-180{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2)\";transform:rotate(180deg)}.fa-rotate-270{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=3)\";transform:rotate(270deg)}.fa-flip-horizontal{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)\";transform:scaleX(-1)}.fa-flip-vertical{transform:scaleY(-1)}.fa-flip-both,.fa-flip-horizontal.fa-flip-vertical,.fa-flip-vertical{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)\"}.fa-flip-both,.fa-flip-horizontal.fa-flip-vertical{transform:scale(-1)}:root .fa-flip-both,:root .fa-flip-horizontal,:root .fa-flip-vertical,:root .fa-rotate-90,:root .fa-rotate-180,:root .fa-rotate-270{filter:none}.fa-stack{display:inline-block;height:2em;line-height:2em;position:relative;vertical-align:middle;width:2.5em}.fa-stack-1x,.fa-stack-2x{left:0;position:absolute;text-align:center;width:100%}.fa-stack-1x{line-height:inherit}.fa-stack-2x{font-size:2em}.fa-inverse{color:#fff}.fa-500px:before{content:\"\\f26e\"}.fa-accessible-icon:before{content:\"\\f368\"}.fa-accusoft:before{content:\"\\f369\"}.fa-acquisitions-incorporated:before{content:\"\\f6af\"}.fa-ad:before{content:\"\\f641\"}.fa-address-book:before{content:\"\\f2b9\"}.fa-address-card:before{content:\"\\f2bb\"}.fa-adjust:before{content:\"\\f042\"}.fa-adn:before{content:\"\\f170\"}.fa-adversal:before{content:\"\\f36a\"}.fa-affiliatetheme:before{content:\"\\f36b\"}.fa-air-freshener:before{content:\"\\f5d0\"}.fa-airbnb:before{content:\"\\f834\"}.fa-algolia:before{content:\"\\f36c\"}.fa-align-center:before{content:\"\\f037\"}.fa-align-justify:before{content:\"\\f039\"}.fa-align-left:before{content:\"\\f036\"}.fa-align-right:before{content:\"\\f038\"}.fa-alipay:before{content:\"\\f642\"}.fa-allergies:before{content:\"\\f461\"}.fa-amazon:before{content:\"\\f270\"}.fa-amazon-pay:before{content:\"\\f42c\"}.fa-ambulance:before{content:\"\\f0f9\"}.fa-american-sign-language-interpreting:before{content:\"\\f2a3\"}.fa-amilia:before{content:\"\\f36d\"}.fa-anchor:before{content:\"\\f13d\"}.fa-android:before{content:\"\\f17b\"}.fa-angellist:before{content:\"\\f209\"}.fa-angle-double-down:before{content:\"\\f103\"}.fa-angle-double-left:before{content:\"\\f100\"}.fa-angle-double-right:before{content:\"\\f101\"}.fa-angle-double-up:before{content:\"\\f102\"}.fa-angle-down:before{content:\"\\f107\"}.fa-angle-left:before{content:\"\\f104\"}.fa-angle-right:before{content:\"\\f105\"}.fa-angle-up:before{content:\"\\f106\"}.fa-angry:before{content:\"\\f556\"}.fa-angrycreative:before{content:\"\\f36e\"}.fa-angular:before{content:\"\\f420\"}.fa-ankh:before{content:\"\\f644\"}.fa-app-store:before{content:\"\\f36f\"}.fa-app-store-ios:before{content:\"\\f370\"}.fa-apper:before{content:\"\\f371\"}.fa-apple:before{content:\"\\f179\"}.fa-apple-alt:before{content:\"\\f5d1\"}.fa-apple-pay:before{content:\"\\f415\"}.fa-archive:before{content:\"\\f187\"}.fa-archway:before{content:\"\\f557\"}.fa-arrow-alt-circle-down:before{content:\"\\f358\"}.fa-arrow-alt-circle-left:before{content:\"\\f359\"}.fa-arrow-alt-circle-right:before{content:\"\\f35a\"}.fa-arrow-alt-circle-up:before{content:\"\\f35b\"}.fa-arrow-circle-down:before{content:\"\\f0ab\"}.fa-arrow-circle-left:before{content:\"\\f0a8\"}.fa-arrow-circle-right:before{content:\"\\f0a9\"}.fa-arrow-circle-up:before{content:\"\\f0aa\"}.fa-arrow-down:before{content:\"\\f063\"}.fa-arrow-left:before{content:\"\\f060\"}.fa-arrow-right:before{content:\"\\f061\"}.fa-arrow-up:before{content:\"\\f062\"}.fa-arrows-alt:before{content:\"\\f0b2\"}.fa-arrows-alt-h:before{content:\"\\f337\"}.fa-arrows-alt-v:before{content:\"\\f338\"}.fa-artstation:before{content:\"\\f77a\"}.fa-assistive-listening-systems:before{content:\"\\f2a2\"}.fa-asterisk:before{content:\"\\f069\"}.fa-asymmetrik:before{content:\"\\f372\"}.fa-at:before{content:\"\\f1fa\"}.fa-atlas:before{content:\"\\f558\"}.fa-atlassian:before{content:\"\\f77b\"}.fa-atom:before{content:\"\\f5d2\"}.fa-audible:before{content:\"\\f373\"}.fa-audio-description:before{content:\"\\f29e\"}.fa-autoprefixer:before{content:\"\\f41c\"}.fa-avianex:before{content:\"\\f374\"}.fa-aviato:before{content:\"\\f421\"}.fa-award:before{content:\"\\f559\"}.fa-aws:before{content:\"\\f375\"}.fa-baby:before{content:\"\\f77c\"}.fa-baby-carriage:before{content:\"\\f77d\"}.fa-backspace:before{content:\"\\f55a\"}.fa-backward:before{content:\"\\f04a\"}.fa-bacon:before{content:\"\\f7e5\"}.fa-bacteria:before{content:\"\\e059\"}.fa-bacterium:before{content:\"\\e05a\"}.fa-bahai:before{content:\"\\f666\"}.fa-balance-scale:before{content:\"\\f24e\"}.fa-balance-scale-left:before{content:\"\\f515\"}.fa-balance-scale-right:before{content:\"\\f516\"}.fa-ban:before{content:\"\\f05e\"}.fa-band-aid:before{content:\"\\f462\"}.fa-bandcamp:before{content:\"\\f2d5\"}.fa-barcode:before{content:\"\\f02a\"}.fa-bars:before{content:\"\\f0c9\"}.fa-baseball-ball:before{content:\"\\f433\"}.fa-basketball-ball:before{content:\"\\f434\"}.fa-bath:before{content:\"\\f2cd\"}.fa-battery-empty:before{content:\"\\f244\"}.fa-battery-full:before{content:\"\\f240\"}.fa-battery-half:before{content:\"\\f242\"}.fa-battery-quarter:before{content:\"\\f243\"}.fa-battery-three-quarters:before{content:\"\\f241\"}.fa-battle-net:before{content:\"\\f835\"}.fa-bed:before{content:\"\\f236\"}.fa-beer:before{content:\"\\f0fc\"}.fa-behance:before{content:\"\\f1b4\"}.fa-behance-square:before{content:\"\\f1b5\"}.fa-bell:before{content:\"\\f0f3\"}.fa-bell-slash:before{content:\"\\f1f6\"}.fa-bezier-curve:before{content:\"\\f55b\"}.fa-bible:before{content:\"\\f647\"}.fa-bicycle:before{content:\"\\f206\"}.fa-biking:before{content:\"\\f84a\"}.fa-bimobject:before{content:\"\\f378\"}.fa-binoculars:before{content:\"\\f1e5\"}.fa-biohazard:before{content:\"\\f780\"}.fa-birthday-cake:before{content:\"\\f1fd\"}.fa-bitbucket:before{content:\"\\f171\"}.fa-bitcoin:before{content:\"\\f379\"}.fa-bity:before{content:\"\\f37a\"}.fa-black-tie:before{content:\"\\f27e\"}.fa-blackberry:before{content:\"\\f37b\"}.fa-blender:before{content:\"\\f517\"}.fa-blender-phone:before{content:\"\\f6b6\"}.fa-blind:before{content:\"\\f29d\"}.fa-blog:before{content:\"\\f781\"}.fa-blogger:before{content:\"\\f37c\"}.fa-blogger-b:before{content:\"\\f37d\"}.fa-bluetooth:before{content:\"\\f293\"}.fa-bluetooth-b:before{content:\"\\f294\"}.fa-bold:before{content:\"\\f032\"}.fa-bolt:before{content:\"\\f0e7\"}.fa-bomb:before{content:\"\\f1e2\"}.fa-bone:before{content:\"\\f5d7\"}.fa-bong:before{content:\"\\f55c\"}.fa-book:before{content:\"\\f02d\"}.fa-book-dead:before{content:\"\\f6b7\"}.fa-book-medical:before{content:\"\\f7e6\"}.fa-book-open:before{content:\"\\f518\"}.fa-book-reader:before{content:\"\\f5da\"}.fa-bookmark:before{content:\"\\f02e\"}.fa-bootstrap:before{content:\"\\f836\"}.fa-border-all:before{content:\"\\f84c\"}.fa-border-none:before{content:\"\\f850\"}.fa-border-style:before{content:\"\\f853\"}.fa-bowling-ball:before{content:\"\\f436\"}.fa-box:before{content:\"\\f466\"}.fa-box-open:before{content:\"\\f49e\"}.fa-box-tissue:before{content:\"\\e05b\"}.fa-boxes:before{content:\"\\f468\"}.fa-braille:before{content:\"\\f2a1\"}.fa-brain:before{content:\"\\f5dc\"}.fa-bread-slice:before{content:\"\\f7ec\"}.fa-briefcase:before{content:\"\\f0b1\"}.fa-briefcase-medical:before{content:\"\\f469\"}.fa-broadcast-tower:before{content:\"\\f519\"}.fa-broom:before{content:\"\\f51a\"}.fa-brush:before{content:\"\\f55d\"}.fa-btc:before{content:\"\\f15a\"}.fa-buffer:before{content:\"\\f837\"}.fa-bug:before{content:\"\\f188\"}.fa-building:before{content:\"\\f1ad\"}.fa-bullhorn:before{content:\"\\f0a1\"}.fa-bullseye:before{content:\"\\f140\"}.fa-burn:before{content:\"\\f46a\"}.fa-buromobelexperte:before{content:\"\\f37f\"}.fa-bus:before{content:\"\\f207\"}.fa-bus-alt:before{content:\"\\f55e\"}.fa-business-time:before{content:\"\\f64a\"}.fa-buy-n-large:before{content:\"\\f8a6\"}.fa-buysellads:before{content:\"\\f20d\"}.fa-calculator:before{content:\"\\f1ec\"}.fa-calendar:before{content:\"\\f133\"}.fa-calendar-alt:before{content:\"\\f073\"}.fa-calendar-check:before{content:\"\\f274\"}.fa-calendar-day:before{content:\"\\f783\"}.fa-calendar-minus:before{content:\"\\f272\"}.fa-calendar-plus:before{content:\"\\f271\"}.fa-calendar-times:before{content:\"\\f273\"}.fa-calendar-week:before{content:\"\\f784\"}.fa-camera:before{content:\"\\f030\"}.fa-camera-retro:before{content:\"\\f083\"}.fa-campground:before{content:\"\\f6bb\"}.fa-canadian-maple-leaf:before{content:\"\\f785\"}.fa-candy-cane:before{content:\"\\f786\"}.fa-cannabis:before{content:\"\\f55f\"}.fa-capsules:before{content:\"\\f46b\"}.fa-car:before{content:\"\\f1b9\"}.fa-car-alt:before{content:\"\\f5de\"}.fa-car-battery:before{content:\"\\f5df\"}.fa-car-crash:before{content:\"\\f5e1\"}.fa-car-side:before{content:\"\\f5e4\"}.fa-caravan:before{content:\"\\f8ff\"}.fa-caret-down:before{content:\"\\f0d7\"}.fa-caret-left:before{content:\"\\f0d9\"}.fa-caret-right:before{content:\"\\f0da\"}.fa-caret-square-down:before{content:\"\\f150\"}.fa-caret-square-left:before{content:\"\\f191\"}.fa-caret-square-right:before{content:\"\\f152\"}.fa-caret-square-up:before{content:\"\\f151\"}.fa-caret-up:before{content:\"\\f0d8\"}.fa-carrot:before{content:\"\\f787\"}.fa-cart-arrow-down:before{content:\"\\f218\"}.fa-cart-plus:before{content:\"\\f217\"}.fa-cash-register:before{content:\"\\f788\"}.fa-cat:before{content:\"\\f6be\"}.fa-cc-amazon-pay:before{content:\"\\f42d\"}.fa-cc-amex:before{content:\"\\f1f3\"}.fa-cc-apple-pay:before{content:\"\\f416\"}.fa-cc-diners-club:before{content:\"\\f24c\"}.fa-cc-discover:before{content:\"\\f1f2\"}.fa-cc-jcb:before{content:\"\\f24b\"}.fa-cc-mastercard:before{content:\"\\f1f1\"}.fa-cc-paypal:before{content:\"\\f1f4\"}.fa-cc-stripe:before{content:\"\\f1f5\"}.fa-cc-visa:before{content:\"\\f1f0\"}.fa-centercode:before{content:\"\\f380\"}.fa-centos:before{content:\"\\f789\"}.fa-certificate:before{content:\"\\f0a3\"}.fa-chair:before{content:\"\\f6c0\"}.fa-chalkboard:before{content:\"\\f51b\"}.fa-chalkboard-teacher:before{content:\"\\f51c\"}.fa-charging-station:before{content:\"\\f5e7\"}.fa-chart-area:before{content:\"\\f1fe\"}.fa-chart-bar:before{content:\"\\f080\"}.fa-chart-line:before{content:\"\\f201\"}.fa-chart-pie:before{content:\"\\f200\"}.fa-check:before{content:\"\\f00c\"}.fa-check-circle:before{content:\"\\f058\"}.fa-check-double:before{content:\"\\f560\"}.fa-check-square:before{content:\"\\f14a\"}.fa-cheese:before{content:\"\\f7ef\"}.fa-chess:before{content:\"\\f439\"}.fa-chess-bishop:before{content:\"\\f43a\"}.fa-chess-board:before{content:\"\\f43c\"}.fa-chess-king:before{content:\"\\f43f\"}.fa-chess-knight:before{content:\"\\f441\"}.fa-chess-pawn:before{content:\"\\f443\"}.fa-chess-queen:before{content:\"\\f445\"}.fa-chess-rook:before{content:\"\\f447\"}.fa-chevron-circle-down:before{content:\"\\f13a\"}.fa-chevron-circle-left:before{content:\"\\f137\"}.fa-chevron-circle-right:before{content:\"\\f138\"}.fa-chevron-circle-up:before{content:\"\\f139\"}.fa-chevron-down:before{content:\"\\f078\"}.fa-chevron-left:before{content:\"\\f053\"}.fa-chevron-right:before{content:\"\\f054\"}.fa-chevron-up:before{content:\"\\f077\"}.fa-child:before{content:\"\\f1ae\"}.fa-chrome:before{content:\"\\f268\"}.fa-chromecast:before{content:\"\\f838\"}.fa-church:before{content:\"\\f51d\"}.fa-circle:before{content:\"\\f111\"}.fa-circle-notch:before{content:\"\\f1ce\"}.fa-city:before{content:\"\\f64f\"}.fa-clinic-medical:before{content:\"\\f7f2\"}.fa-clipboard:before{content:\"\\f328\"}.fa-clipboard-check:before{content:\"\\f46c\"}.fa-clipboard-list:before{content:\"\\f46d\"}.fa-clock:before{content:\"\\f017\"}.fa-clone:before{content:\"\\f24d\"}.fa-closed-captioning:before{content:\"\\f20a\"}.fa-cloud:before{content:\"\\f0c2\"}.fa-cloud-download-alt:before{content:\"\\f381\"}.fa-cloud-meatball:before{content:\"\\f73b\"}.fa-cloud-moon:before{content:\"\\f6c3\"}.fa-cloud-moon-rain:before{content:\"\\f73c\"}.fa-cloud-rain:before{content:\"\\f73d\"}.fa-cloud-showers-heavy:before{content:\"\\f740\"}.fa-cloud-sun:before{content:\"\\f6c4\"}.fa-cloud-sun-rain:before{content:\"\\f743\"}.fa-cloud-upload-alt:before{content:\"\\f382\"}.fa-cloudflare:before{content:\"\\e07d\"}.fa-cloudscale:before{content:\"\\f383\"}.fa-cloudsmith:before{content:\"\\f384\"}.fa-cloudversify:before{content:\"\\f385\"}.fa-cocktail:before{content:\"\\f561\"}.fa-code:before{content:\"\\f121\"}.fa-code-branch:before{content:\"\\f126\"}.fa-codepen:before{content:\"\\f1cb\"}.fa-codiepie:before{content:\"\\f284\"}.fa-coffee:before{content:\"\\f0f4\"}.fa-cog:before{content:\"\\f013\"}.fa-cogs:before{content:\"\\f085\"}.fa-coins:before{content:\"\\f51e\"}.fa-columns:before{content:\"\\f0db\"}.fa-comment:before{content:\"\\f075\"}.fa-comment-alt:before{content:\"\\f27a\"}.fa-comment-dollar:before{content:\"\\f651\"}.fa-comment-dots:before{content:\"\\f4ad\"}.fa-comment-medical:before{content:\"\\f7f5\"}.fa-comment-slash:before{content:\"\\f4b3\"}.fa-comments:before{content:\"\\f086\"}.fa-comments-dollar:before{content:\"\\f653\"}.fa-compact-disc:before{content:\"\\f51f\"}.fa-compass:before{content:\"\\f14e\"}.fa-compress:before{content:\"\\f066\"}.fa-compress-alt:before{content:\"\\f422\"}.fa-compress-arrows-alt:before{content:\"\\f78c\"}.fa-concierge-bell:before{content:\"\\f562\"}.fa-confluence:before{content:\"\\f78d\"}.fa-connectdevelop:before{content:\"\\f20e\"}.fa-contao:before{content:\"\\f26d\"}.fa-cookie:before{content:\"\\f563\"}.fa-cookie-bite:before{content:\"\\f564\"}.fa-copy:before{content:\"\\f0c5\"}.fa-copyright:before{content:\"\\f1f9\"}.fa-cotton-bureau:before{content:\"\\f89e\"}.fa-couch:before{content:\"\\f4b8\"}.fa-cpanel:before{content:\"\\f388\"}.fa-creative-commons:before{content:\"\\f25e\"}.fa-creative-commons-by:before{content:\"\\f4e7\"}.fa-creative-commons-nc:before{content:\"\\f4e8\"}.fa-creative-commons-nc-eu:before{content:\"\\f4e9\"}.fa-creative-commons-nc-jp:before{content:\"\\f4ea\"}.fa-creative-commons-nd:before{content:\"\\f4eb\"}.fa-creative-commons-pd:before{content:\"\\f4ec\"}.fa-creative-commons-pd-alt:before{content:\"\\f4ed\"}.fa-creative-commons-remix:before{content:\"\\f4ee\"}.fa-creative-commons-sa:before{content:\"\\f4ef\"}.fa-creative-commons-sampling:before{content:\"\\f4f0\"}.fa-creative-commons-sampling-plus:before{content:\"\\f4f1\"}.fa-creative-commons-share:before{content:\"\\f4f2\"}.fa-creative-commons-zero:before{content:\"\\f4f3\"}.fa-credit-card:before{content:\"\\f09d\"}.fa-critical-role:before{content:\"\\f6c9\"}.fa-crop:before{content:\"\\f125\"}.fa-crop-alt:before{content:\"\\f565\"}.fa-cross:before{content:\"\\f654\"}.fa-crosshairs:before{content:\"\\f05b\"}.fa-crow:before{content:\"\\f520\"}.fa-crown:before{content:\"\\f521\"}.fa-crutch:before{content:\"\\f7f7\"}.fa-css3:before{content:\"\\f13c\"}.fa-css3-alt:before{content:\"\\f38b\"}.fa-cube:before{content:\"\\f1b2\"}.fa-cubes:before{content:\"\\f1b3\"}.fa-cut:before{content:\"\\f0c4\"}.fa-cuttlefish:before{content:\"\\f38c\"}.fa-d-and-d:before{content:\"\\f38d\"}.fa-d-and-d-beyond:before{content:\"\\f6ca\"}.fa-dailymotion:before{content:\"\\e052\"}.fa-dashcube:before{content:\"\\f210\"}.fa-database:before{content:\"\\f1c0\"}.fa-deaf:before{content:\"\\f2a4\"}.fa-deezer:before{content:\"\\e077\"}.fa-delicious:before{content:\"\\f1a5\"}.fa-democrat:before{content:\"\\f747\"}.fa-deploydog:before{content:\"\\f38e\"}.fa-deskpro:before{content:\"\\f38f\"}.fa-desktop:before{content:\"\\f108\"}.fa-dev:before{content:\"\\f6cc\"}.fa-deviantart:before{content:\"\\f1bd\"}.fa-dharmachakra:before{content:\"\\f655\"}.fa-dhl:before{content:\"\\f790\"}.fa-diagnoses:before{content:\"\\f470\"}.fa-diaspora:before{content:\"\\f791\"}.fa-dice:before{content:\"\\f522\"}.fa-dice-d20:before{content:\"\\f6cf\"}.fa-dice-d6:before{content:\"\\f6d1\"}.fa-dice-five:before{content:\"\\f523\"}.fa-dice-four:before{content:\"\\f524\"}.fa-dice-one:before{content:\"\\f525\"}.fa-dice-six:before{content:\"\\f526\"}.fa-dice-three:before{content:\"\\f527\"}.fa-dice-two:before{content:\"\\f528\"}.fa-digg:before{content:\"\\f1a6\"}.fa-digital-ocean:before{content:\"\\f391\"}.fa-digital-tachograph:before{content:\"\\f566\"}.fa-directions:before{content:\"\\f5eb\"}.fa-discord:before{content:\"\\f392\"}.fa-discourse:before{content:\"\\f393\"}.fa-disease:before{content:\"\\f7fa\"}.fa-divide:before{content:\"\\f529\"}.fa-dizzy:before{content:\"\\f567\"}.fa-dna:before{content:\"\\f471\"}.fa-dochub:before{content:\"\\f394\"}.fa-docker:before{content:\"\\f395\"}.fa-dog:before{content:\"\\f6d3\"}.fa-dollar-sign:before{content:\"\\f155\"}.fa-dolly:before{content:\"\\f472\"}.fa-dolly-flatbed:before{content:\"\\f474\"}.fa-donate:before{content:\"\\f4b9\"}.fa-door-closed:before{content:\"\\f52a\"}.fa-door-open:before{content:\"\\f52b\"}.fa-dot-circle:before{content:\"\\f192\"}.fa-dove:before{content:\"\\f4ba\"}.fa-download:before{content:\"\\f019\"}.fa-draft2digital:before{content:\"\\f396\"}.fa-drafting-compass:before{content:\"\\f568\"}.fa-dragon:before{content:\"\\f6d5\"}.fa-draw-polygon:before{content:\"\\f5ee\"}.fa-dribbble:before{content:\"\\f17d\"}.fa-dribbble-square:before{content:\"\\f397\"}.fa-dropbox:before{content:\"\\f16b\"}.fa-drum:before{content:\"\\f569\"}.fa-drum-steelpan:before{content:\"\\f56a\"}.fa-drumstick-bite:before{content:\"\\f6d7\"}.fa-drupal:before{content:\"\\f1a9\"}.fa-dumbbell:before{content:\"\\f44b\"}.fa-dumpster:before{content:\"\\f793\"}.fa-dumpster-fire:before{content:\"\\f794\"}.fa-dungeon:before{content:\"\\f6d9\"}.fa-dyalog:before{content:\"\\f399\"}.fa-earlybirds:before{content:\"\\f39a\"}.fa-ebay:before{content:\"\\f4f4\"}.fa-edge:before{content:\"\\f282\"}.fa-edge-legacy:before{content:\"\\e078\"}.fa-edit:before{content:\"\\f044\"}.fa-egg:before{content:\"\\f7fb\"}.fa-eject:before{content:\"\\f052\"}.fa-elementor:before{content:\"\\f430\"}.fa-ellipsis-h:before{content:\"\\f141\"}.fa-ellipsis-v:before{content:\"\\f142\"}.fa-ello:before{content:\"\\f5f1\"}.fa-ember:before{content:\"\\f423\"}.fa-empire:before{content:\"\\f1d1\"}.fa-envelope:before{content:\"\\f0e0\"}.fa-envelope-open:before{content:\"\\f2b6\"}.fa-envelope-open-text:before{content:\"\\f658\"}.fa-envelope-square:before{content:\"\\f199\"}.fa-envira:before{content:\"\\f299\"}.fa-equals:before{content:\"\\f52c\"}.fa-eraser:before{content:\"\\f12d\"}.fa-erlang:before{content:\"\\f39d\"}.fa-ethereum:before{content:\"\\f42e\"}.fa-ethernet:before{content:\"\\f796\"}.fa-etsy:before{content:\"\\f2d7\"}.fa-euro-sign:before{content:\"\\f153\"}.fa-evernote:before{content:\"\\f839\"}.fa-exchange-alt:before{content:\"\\f362\"}.fa-exclamation:before{content:\"\\f12a\"}.fa-exclamation-circle:before{content:\"\\f06a\"}.fa-exclamation-triangle:before{content:\"\\f071\"}.fa-expand:before{content:\"\\f065\"}.fa-expand-alt:before{content:\"\\f424\"}.fa-expand-arrows-alt:before{content:\"\\f31e\"}.fa-expeditedssl:before{content:\"\\f23e\"}.fa-external-link-alt:before{content:\"\\f35d\"}.fa-external-link-square-alt:before{content:\"\\f360\"}.fa-eye:before{content:\"\\f06e\"}.fa-eye-dropper:before{content:\"\\f1fb\"}.fa-eye-slash:before{content:\"\\f070\"}.fa-facebook:before{content:\"\\f09a\"}.fa-facebook-f:before{content:\"\\f39e\"}.fa-facebook-messenger:before{content:\"\\f39f\"}.fa-facebook-square:before{content:\"\\f082\"}.fa-fan:before{content:\"\\f863\"}.fa-fantasy-flight-games:before{content:\"\\f6dc\"}.fa-fast-backward:before{content:\"\\f049\"}.fa-fast-forward:before{content:\"\\f050\"}.fa-faucet:before{content:\"\\e005\"}.fa-fax:before{content:\"\\f1ac\"}.fa-feather:before{content:\"\\f52d\"}.fa-feather-alt:before{content:\"\\f56b\"}.fa-fedex:before{content:\"\\f797\"}.fa-fedora:before{content:\"\\f798\"}.fa-female:before{content:\"\\f182\"}.fa-fighter-jet:before{content:\"\\f0fb\"}.fa-figma:before{content:\"\\f799\"}.fa-file:before{content:\"\\f15b\"}.fa-file-alt:before{content:\"\\f15c\"}.fa-file-archive:before{content:\"\\f1c6\"}.fa-file-audio:before{content:\"\\f1c7\"}.fa-file-code:before{content:\"\\f1c9\"}.fa-file-contract:before{content:\"\\f56c\"}.fa-file-csv:before{content:\"\\f6dd\"}.fa-file-download:before{content:\"\\f56d\"}.fa-file-excel:before{content:\"\\f1c3\"}.fa-file-export:before{content:\"\\f56e\"}.fa-file-image:before{content:\"\\f1c5\"}.fa-file-import:before{content:\"\\f56f\"}.fa-file-invoice:before{content:\"\\f570\"}.fa-file-invoice-dollar:before{content:\"\\f571\"}.fa-file-medical:before{content:\"\\f477\"}.fa-file-medical-alt:before{content:\"\\f478\"}.fa-file-pdf:before{content:\"\\f1c1\"}.fa-file-powerpoint:before{content:\"\\f1c4\"}.fa-file-prescription:before{content:\"\\f572\"}.fa-file-signature:before{content:\"\\f573\"}.fa-file-upload:before{content:\"\\f574\"}.fa-file-video:before{content:\"\\f1c8\"}.fa-file-word:before{content:\"\\f1c2\"}.fa-fill:before{content:\"\\f575\"}.fa-fill-drip:before{content:\"\\f576\"}.fa-film:before{content:\"\\f008\"}.fa-filter:before{content:\"\\f0b0\"}.fa-fingerprint:before{content:\"\\f577\"}.fa-fire:before{content:\"\\f06d\"}.fa-fire-alt:before{content:\"\\f7e4\"}.fa-fire-extinguisher:before{content:\"\\f134\"}.fa-firefox:before{content:\"\\f269\"}.fa-firefox-browser:before{content:\"\\e007\"}.fa-first-aid:before{content:\"\\f479\"}.fa-first-order:before{content:\"\\f2b0\"}.fa-first-order-alt:before{content:\"\\f50a\"}.fa-firstdraft:before{content:\"\\f3a1\"}.fa-fish:before{content:\"\\f578\"}.fa-fist-raised:before{content:\"\\f6de\"}.fa-flag:before{content:\"\\f024\"}.fa-flag-checkered:before{content:\"\\f11e\"}.fa-flag-usa:before{content:\"\\f74d\"}.fa-flask:before{content:\"\\f0c3\"}.fa-flickr:before{content:\"\\f16e\"}.fa-flipboard:before{content:\"\\f44d\"}.fa-flushed:before{content:\"\\f579\"}.fa-fly:before{content:\"\\f417\"}.fa-folder:before{content:\"\\f07b\"}.fa-folder-minus:before{content:\"\\f65d\"}.fa-folder-open:before{content:\"\\f07c\"}.fa-folder-plus:before{content:\"\\f65e\"}.fa-font:before{content:\"\\f031\"}.fa-font-awesome:before{content:\"\\f2b4\"}.fa-font-awesome-alt:before{content:\"\\f35c\"}.fa-font-awesome-flag:before{content:\"\\f425\"}.fa-font-awesome-logo-full:before{content:\"\\f4e6\"}.fa-fonticons:before{content:\"\\f280\"}.fa-fonticons-fi:before{content:\"\\f3a2\"}.fa-football-ball:before{content:\"\\f44e\"}.fa-fort-awesome:before{content:\"\\f286\"}.fa-fort-awesome-alt:before{content:\"\\f3a3\"}.fa-forumbee:before{content:\"\\f211\"}.fa-forward:before{content:\"\\f04e\"}.fa-foursquare:before{content:\"\\f180\"}.fa-free-code-camp:before{content:\"\\f2c5\"}.fa-freebsd:before{content:\"\\f3a4\"}.fa-frog:before{content:\"\\f52e\"}.fa-frown:before{content:\"\\f119\"}.fa-frown-open:before{content:\"\\f57a\"}.fa-fulcrum:before{content:\"\\f50b\"}.fa-funnel-dollar:before{content:\"\\f662\"}.fa-futbol:before{content:\"\\f1e3\"}.fa-galactic-republic:before{content:\"\\f50c\"}.fa-galactic-senate:before{content:\"\\f50d\"}.fa-gamepad:before{content:\"\\f11b\"}.fa-gas-pump:before{content:\"\\f52f\"}.fa-gavel:before{content:\"\\f0e3\"}.fa-gem:before{content:\"\\f3a5\"}.fa-genderless:before{content:\"\\f22d\"}.fa-get-pocket:before{content:\"\\f265\"}.fa-gg:before{content:\"\\f260\"}.fa-gg-circle:before{content:\"\\f261\"}.fa-ghost:before{content:\"\\f6e2\"}.fa-gift:before{content:\"\\f06b\"}.fa-gifts:before{content:\"\\f79c\"}.fa-git:before{content:\"\\f1d3\"}.fa-git-alt:before{content:\"\\f841\"}.fa-git-square:before{content:\"\\f1d2\"}.fa-github:before{content:\"\\f09b\"}.fa-github-alt:before{content:\"\\f113\"}.fa-github-square:before{content:\"\\f092\"}.fa-gitkraken:before{content:\"\\f3a6\"}.fa-gitlab:before{content:\"\\f296\"}.fa-gitter:before{content:\"\\f426\"}.fa-glass-cheers:before{content:\"\\f79f\"}.fa-glass-martini:before{content:\"\\f000\"}.fa-glass-martini-alt:before{content:\"\\f57b\"}.fa-glass-whiskey:before{content:\"\\f7a0\"}.fa-glasses:before{content:\"\\f530\"}.fa-glide:before{content:\"\\f2a5\"}.fa-glide-g:before{content:\"\\f2a6\"}.fa-globe:before{content:\"\\f0ac\"}.fa-globe-africa:before{content:\"\\f57c\"}.fa-globe-americas:before{content:\"\\f57d\"}.fa-globe-asia:before{content:\"\\f57e\"}.fa-globe-europe:before{content:\"\\f7a2\"}.fa-gofore:before{content:\"\\f3a7\"}.fa-golf-ball:before{content:\"\\f450\"}.fa-goodreads:before{content:\"\\f3a8\"}.fa-goodreads-g:before{content:\"\\f3a9\"}.fa-google:before{content:\"\\f1a0\"}.fa-google-drive:before{content:\"\\f3aa\"}.fa-google-pay:before{content:\"\\e079\"}.fa-google-play:before{content:\"\\f3ab\"}.fa-google-plus:before{content:\"\\f2b3\"}.fa-google-plus-g:before{content:\"\\f0d5\"}.fa-google-plus-square:before{content:\"\\f0d4\"}.fa-google-wallet:before{content:\"\\f1ee\"}.fa-gopuram:before{content:\"\\f664\"}.fa-graduation-cap:before{content:\"\\f19d\"}.fa-gratipay:before{content:\"\\f184\"}.fa-grav:before{content:\"\\f2d6\"}.fa-greater-than:before{content:\"\\f531\"}.fa-greater-than-equal:before{content:\"\\f532\"}.fa-grimace:before{content:\"\\f57f\"}.fa-grin:before{content:\"\\f580\"}.fa-grin-alt:before{content:\"\\f581\"}.fa-grin-beam:before{content:\"\\f582\"}.fa-grin-beam-sweat:before{content:\"\\f583\"}.fa-grin-hearts:before{content:\"\\f584\"}.fa-grin-squint:before{content:\"\\f585\"}.fa-grin-squint-tears:before{content:\"\\f586\"}.fa-grin-stars:before{content:\"\\f587\"}.fa-grin-tears:before{content:\"\\f588\"}.fa-grin-tongue:before{content:\"\\f589\"}.fa-grin-tongue-squint:before{content:\"\\f58a\"}.fa-grin-tongue-wink:before{content:\"\\f58b\"}.fa-grin-wink:before{content:\"\\f58c\"}.fa-grip-horizontal:before{content:\"\\f58d\"}.fa-grip-lines:before{content:\"\\f7a4\"}.fa-grip-lines-vertical:before{content:\"\\f7a5\"}.fa-grip-vertical:before{content:\"\\f58e\"}.fa-gripfire:before{content:\"\\f3ac\"}.fa-grunt:before{content:\"\\f3ad\"}.fa-guilded:before{content:\"\\e07e\"}.fa-guitar:before{content:\"\\f7a6\"}.fa-gulp:before{content:\"\\f3ae\"}.fa-h-square:before{content:\"\\f0fd\"}.fa-hacker-news:before{content:\"\\f1d4\"}.fa-hacker-news-square:before{content:\"\\f3af\"}.fa-hackerrank:before{content:\"\\f5f7\"}.fa-hamburger:before{content:\"\\f805\"}.fa-hammer:before{content:\"\\f6e3\"}.fa-hamsa:before{content:\"\\f665\"}.fa-hand-holding:before{content:\"\\f4bd\"}.fa-hand-holding-heart:before{content:\"\\f4be\"}.fa-hand-holding-medical:before{content:\"\\e05c\"}.fa-hand-holding-usd:before{content:\"\\f4c0\"}.fa-hand-holding-water:before{content:\"\\f4c1\"}.fa-hand-lizard:before{content:\"\\f258\"}.fa-hand-middle-finger:before{content:\"\\f806\"}.fa-hand-paper:before{content:\"\\f256\"}.fa-hand-peace:before{content:\"\\f25b\"}.fa-hand-point-down:before{content:\"\\f0a7\"}.fa-hand-point-left:before{content:\"\\f0a5\"}.fa-hand-point-right:before{content:\"\\f0a4\"}.fa-hand-point-up:before{content:\"\\f0a6\"}.fa-hand-pointer:before{content:\"\\f25a\"}.fa-hand-rock:before{content:\"\\f255\"}.fa-hand-scissors:before{content:\"\\f257\"}.fa-hand-sparkles:before{content:\"\\e05d\"}.fa-hand-spock:before{content:\"\\f259\"}.fa-hands:before{content:\"\\f4c2\"}.fa-hands-helping:before{content:\"\\f4c4\"}.fa-hands-wash:before{content:\"\\e05e\"}.fa-handshake:before{content:\"\\f2b5\"}.fa-handshake-alt-slash:before{content:\"\\e05f\"}.fa-handshake-slash:before{content:\"\\e060\"}.fa-hanukiah:before{content:\"\\f6e6\"}.fa-hard-hat:before{content:\"\\f807\"}.fa-hashtag:before{content:\"\\f292\"}.fa-hat-cowboy:before{content:\"\\f8c0\"}.fa-hat-cowboy-side:before{content:\"\\f8c1\"}.fa-hat-wizard:before{content:\"\\f6e8\"}.fa-hdd:before{content:\"\\f0a0\"}.fa-head-side-cough:before{content:\"\\e061\"}.fa-head-side-cough-slash:before{content:\"\\e062\"}.fa-head-side-mask:before{content:\"\\e063\"}.fa-head-side-virus:before{content:\"\\e064\"}.fa-heading:before{content:\"\\f1dc\"}.fa-headphones:before{content:\"\\f025\"}.fa-headphones-alt:before{content:\"\\f58f\"}.fa-headset:before{content:\"\\f590\"}.fa-heart:before{content:\"\\f004\"}.fa-heart-broken:before{content:\"\\f7a9\"}.fa-heartbeat:before{content:\"\\f21e\"}.fa-helicopter:before{content:\"\\f533\"}.fa-highlighter:before{content:\"\\f591\"}.fa-hiking:before{content:\"\\f6ec\"}.fa-hippo:before{content:\"\\f6ed\"}.fa-hips:before{content:\"\\f452\"}.fa-hire-a-helper:before{content:\"\\f3b0\"}.fa-history:before{content:\"\\f1da\"}.fa-hive:before{content:\"\\e07f\"}.fa-hockey-puck:before{content:\"\\f453\"}.fa-holly-berry:before{content:\"\\f7aa\"}.fa-home:before{content:\"\\f015\"}.fa-hooli:before{content:\"\\f427\"}.fa-hornbill:before{content:\"\\f592\"}.fa-horse:before{content:\"\\f6f0\"}.fa-horse-head:before{content:\"\\f7ab\"}.fa-hospital:before{content:\"\\f0f8\"}.fa-hospital-alt:before{content:\"\\f47d\"}.fa-hospital-symbol:before{content:\"\\f47e\"}.fa-hospital-user:before{content:\"\\f80d\"}.fa-hot-tub:before{content:\"\\f593\"}.fa-hotdog:before{content:\"\\f80f\"}.fa-hotel:before{content:\"\\f594\"}.fa-hotjar:before{content:\"\\f3b1\"}.fa-hourglass:before{content:\"\\f254\"}.fa-hourglass-end:before{content:\"\\f253\"}.fa-hourglass-half:before{content:\"\\f252\"}.fa-hourglass-start:before{content:\"\\f251\"}.fa-house-damage:before{content:\"\\f6f1\"}.fa-house-user:before{content:\"\\e065\"}.fa-houzz:before{content:\"\\f27c\"}.fa-hryvnia:before{content:\"\\f6f2\"}.fa-html5:before{content:\"\\f13b\"}.fa-hubspot:before{content:\"\\f3b2\"}.fa-i-cursor:before{content:\"\\f246\"}.fa-ice-cream:before{content:\"\\f810\"}.fa-icicles:before{content:\"\\f7ad\"}.fa-icons:before{content:\"\\f86d\"}.fa-id-badge:before{content:\"\\f2c1\"}.fa-id-card:before{content:\"\\f2c2\"}.fa-id-card-alt:before{content:\"\\f47f\"}.fa-ideal:before{content:\"\\e013\"}.fa-igloo:before{content:\"\\f7ae\"}.fa-image:before{content:\"\\f03e\"}.fa-images:before{content:\"\\f302\"}.fa-imdb:before{content:\"\\f2d8\"}.fa-inbox:before{content:\"\\f01c\"}.fa-indent:before{content:\"\\f03c\"}.fa-industry:before{content:\"\\f275\"}.fa-infinity:before{content:\"\\f534\"}.fa-info:before{content:\"\\f129\"}.fa-info-circle:before{content:\"\\f05a\"}.fa-innosoft:before{content:\"\\e080\"}.fa-instagram:before{content:\"\\f16d\"}.fa-instagram-square:before{content:\"\\e055\"}.fa-instalod:before{content:\"\\e081\"}.fa-intercom:before{content:\"\\f7af\"}.fa-internet-explorer:before{content:\"\\f26b\"}.fa-invision:before{content:\"\\f7b0\"}.fa-ioxhost:before{content:\"\\f208\"}.fa-italic:before{content:\"\\f033\"}.fa-itch-io:before{content:\"\\f83a\"}.fa-itunes:before{content:\"\\f3b4\"}.fa-itunes-note:before{content:\"\\f3b5\"}.fa-java:before{content:\"\\f4e4\"}.fa-jedi:before{content:\"\\f669\"}.fa-jedi-order:before{content:\"\\f50e\"}.fa-jenkins:before{content:\"\\f3b6\"}.fa-jira:before{content:\"\\f7b1\"}.fa-joget:before{content:\"\\f3b7\"}.fa-joint:before{content:\"\\f595\"}.fa-joomla:before{content:\"\\f1aa\"}.fa-journal-whills:before{content:\"\\f66a\"}.fa-js:before{content:\"\\f3b8\"}.fa-js-square:before{content:\"\\f3b9\"}.fa-jsfiddle:before{content:\"\\f1cc\"}.fa-kaaba:before{content:\"\\f66b\"}.fa-kaggle:before{content:\"\\f5fa\"}.fa-key:before{content:\"\\f084\"}.fa-keybase:before{content:\"\\f4f5\"}.fa-keyboard:before{content:\"\\f11c\"}.fa-keycdn:before{content:\"\\f3ba\"}.fa-khanda:before{content:\"\\f66d\"}.fa-kickstarter:before{content:\"\\f3bb\"}.fa-kickstarter-k:before{content:\"\\f3bc\"}.fa-kiss:before{content:\"\\f596\"}.fa-kiss-beam:before{content:\"\\f597\"}.fa-kiss-wink-heart:before{content:\"\\f598\"}.fa-kiwi-bird:before{content:\"\\f535\"}.fa-korvue:before{content:\"\\f42f\"}.fa-landmark:before{content:\"\\f66f\"}.fa-language:before{content:\"\\f1ab\"}.fa-laptop:before{content:\"\\f109\"}.fa-laptop-code:before{content:\"\\f5fc\"}.fa-laptop-house:before{content:\"\\e066\"}.fa-laptop-medical:before{content:\"\\f812\"}.fa-laravel:before{content:\"\\f3bd\"}.fa-lastfm:before{content:\"\\f202\"}.fa-lastfm-square:before{content:\"\\f203\"}.fa-laugh:before{content:\"\\f599\"}.fa-laugh-beam:before{content:\"\\f59a\"}.fa-laugh-squint:before{content:\"\\f59b\"}.fa-laugh-wink:before{content:\"\\f59c\"}.fa-layer-group:before{content:\"\\f5fd\"}.fa-leaf:before{content:\"\\f06c\"}.fa-leanpub:before{content:\"\\f212\"}.fa-lemon:before{content:\"\\f094\"}.fa-less:before{content:\"\\f41d\"}.fa-less-than:before{content:\"\\f536\"}.fa-less-than-equal:before{content:\"\\f537\"}.fa-level-down-alt:before{content:\"\\f3be\"}.fa-level-up-alt:before{content:\"\\f3bf\"}.fa-life-ring:before{content:\"\\f1cd\"}.fa-lightbulb:before{content:\"\\f0eb\"}.fa-line:before{content:\"\\f3c0\"}.fa-link:before{content:\"\\f0c1\"}.fa-linkedin:before{content:\"\\f08c\"}.fa-linkedin-in:before{content:\"\\f0e1\"}.fa-linode:before{content:\"\\f2b8\"}.fa-linux:before{content:\"\\f17c\"}.fa-lira-sign:before{content:\"\\f195\"}.fa-list:before{content:\"\\f03a\"}.fa-list-alt:before{content:\"\\f022\"}.fa-list-ol:before{content:\"\\f0cb\"}.fa-list-ul:before{content:\"\\f0ca\"}.fa-location-arrow:before{content:\"\\f124\"}.fa-lock:before{content:\"\\f023\"}.fa-lock-open:before{content:\"\\f3c1\"}.fa-long-arrow-alt-down:before{content:\"\\f309\"}.fa-long-arrow-alt-left:before{content:\"\\f30a\"}.fa-long-arrow-alt-right:before{content:\"\\f30b\"}.fa-long-arrow-alt-up:before{content:\"\\f30c\"}.fa-low-vision:before{content:\"\\f2a8\"}.fa-luggage-cart:before{content:\"\\f59d\"}.fa-lungs:before{content:\"\\f604\"}.fa-lungs-virus:before{content:\"\\e067\"}.fa-lyft:before{content:\"\\f3c3\"}.fa-magento:before{content:\"\\f3c4\"}.fa-magic:before{content:\"\\f0d0\"}.fa-magnet:before{content:\"\\f076\"}.fa-mail-bulk:before{content:\"\\f674\"}.fa-mailchimp:before{content:\"\\f59e\"}.fa-male:before{content:\"\\f183\"}.fa-mandalorian:before{content:\"\\f50f\"}.fa-map:before{content:\"\\f279\"}.fa-map-marked:before{content:\"\\f59f\"}.fa-map-marked-alt:before{content:\"\\f5a0\"}.fa-map-marker:before{content:\"\\f041\"}.fa-map-marker-alt:before{content:\"\\f3c5\"}.fa-map-pin:before{content:\"\\f276\"}.fa-map-signs:before{content:\"\\f277\"}.fa-markdown:before{content:\"\\f60f\"}.fa-marker:before{content:\"\\f5a1\"}.fa-mars:before{content:\"\\f222\"}.fa-mars-double:before{content:\"\\f227\"}.fa-mars-stroke:before{content:\"\\f229\"}.fa-mars-stroke-h:before{content:\"\\f22b\"}.fa-mars-stroke-v:before{content:\"\\f22a\"}.fa-mask:before{content:\"\\f6fa\"}.fa-mastodon:before{content:\"\\f4f6\"}.fa-maxcdn:before{content:\"\\f136\"}.fa-mdb:before{content:\"\\f8ca\"}.fa-medal:before{content:\"\\f5a2\"}.fa-medapps:before{content:\"\\f3c6\"}.fa-medium:before{content:\"\\f23a\"}.fa-medium-m:before{content:\"\\f3c7\"}.fa-medkit:before{content:\"\\f0fa\"}.fa-medrt:before{content:\"\\f3c8\"}.fa-meetup:before{content:\"\\f2e0\"}.fa-megaport:before{content:\"\\f5a3\"}.fa-meh:before{content:\"\\f11a\"}.fa-meh-blank:before{content:\"\\f5a4\"}.fa-meh-rolling-eyes:before{content:\"\\f5a5\"}.fa-memory:before{content:\"\\f538\"}.fa-mendeley:before{content:\"\\f7b3\"}.fa-menorah:before{content:\"\\f676\"}.fa-mercury:before{content:\"\\f223\"}.fa-meteor:before{content:\"\\f753\"}.fa-microblog:before{content:\"\\e01a\"}.fa-microchip:before{content:\"\\f2db\"}.fa-microphone:before{content:\"\\f130\"}.fa-microphone-alt:before{content:\"\\f3c9\"}.fa-microphone-alt-slash:before{content:\"\\f539\"}.fa-microphone-slash:before{content:\"\\f131\"}.fa-microscope:before{content:\"\\f610\"}.fa-microsoft:before{content:\"\\f3ca\"}.fa-minus:before{content:\"\\f068\"}.fa-minus-circle:before{content:\"\\f056\"}.fa-minus-square:before{content:\"\\f146\"}.fa-mitten:before{content:\"\\f7b5\"}.fa-mix:before{content:\"\\f3cb\"}.fa-mixcloud:before{content:\"\\f289\"}.fa-mixer:before{content:\"\\e056\"}.fa-mizuni:before{content:\"\\f3cc\"}.fa-mobile:before{content:\"\\f10b\"}.fa-mobile-alt:before{content:\"\\f3cd\"}.fa-modx:before{content:\"\\f285\"}.fa-monero:before{content:\"\\f3d0\"}.fa-money-bill:before{content:\"\\f0d6\"}.fa-money-bill-alt:before{content:\"\\f3d1\"}.fa-money-bill-wave:before{content:\"\\f53a\"}.fa-money-bill-wave-alt:before{content:\"\\f53b\"}.fa-money-check:before{content:\"\\f53c\"}.fa-money-check-alt:before{content:\"\\f53d\"}.fa-monument:before{content:\"\\f5a6\"}.fa-moon:before{content:\"\\f186\"}.fa-mortar-pestle:before{content:\"\\f5a7\"}.fa-mosque:before{content:\"\\f678\"}.fa-motorcycle:before{content:\"\\f21c\"}.fa-mountain:before{content:\"\\f6fc\"}.fa-mouse:before{content:\"\\f8cc\"}.fa-mouse-pointer:before{content:\"\\f245\"}.fa-mug-hot:before{content:\"\\f7b6\"}.fa-music:before{content:\"\\f001\"}.fa-napster:before{content:\"\\f3d2\"}.fa-neos:before{content:\"\\f612\"}.fa-network-wired:before{content:\"\\f6ff\"}.fa-neuter:before{content:\"\\f22c\"}.fa-newspaper:before{content:\"\\f1ea\"}.fa-nimblr:before{content:\"\\f5a8\"}.fa-node:before{content:\"\\f419\"}.fa-node-js:before{content:\"\\f3d3\"}.fa-not-equal:before{content:\"\\f53e\"}.fa-notes-medical:before{content:\"\\f481\"}.fa-npm:before{content:\"\\f3d4\"}.fa-ns8:before{content:\"\\f3d5\"}.fa-nutritionix:before{content:\"\\f3d6\"}.fa-object-group:before{content:\"\\f247\"}.fa-object-ungroup:before{content:\"\\f248\"}.fa-octopus-deploy:before{content:\"\\e082\"}.fa-odnoklassniki:before{content:\"\\f263\"}.fa-odnoklassniki-square:before{content:\"\\f264\"}.fa-oil-can:before{content:\"\\f613\"}.fa-old-republic:before{content:\"\\f510\"}.fa-om:before{content:\"\\f679\"}.fa-opencart:before{content:\"\\f23d\"}.fa-openid:before{content:\"\\f19b\"}.fa-opera:before{content:\"\\f26a\"}.fa-optin-monster:before{content:\"\\f23c\"}.fa-orcid:before{content:\"\\f8d2\"}.fa-osi:before{content:\"\\f41a\"}.fa-otter:before{content:\"\\f700\"}.fa-outdent:before{content:\"\\f03b\"}.fa-page4:before{content:\"\\f3d7\"}.fa-pagelines:before{content:\"\\f18c\"}.fa-pager:before{content:\"\\f815\"}.fa-paint-brush:before{content:\"\\f1fc\"}.fa-paint-roller:before{content:\"\\f5aa\"}.fa-palette:before{content:\"\\f53f\"}.fa-palfed:before{content:\"\\f3d8\"}.fa-pallet:before{content:\"\\f482\"}.fa-paper-plane:before{content:\"\\f1d8\"}.fa-paperclip:before{content:\"\\f0c6\"}.fa-parachute-box:before{content:\"\\f4cd\"}.fa-paragraph:before{content:\"\\f1dd\"}.fa-parking:before{content:\"\\f540\"}.fa-passport:before{content:\"\\f5ab\"}.fa-pastafarianism:before{content:\"\\f67b\"}.fa-paste:before{content:\"\\f0ea\"}.fa-patreon:before{content:\"\\f3d9\"}.fa-pause:before{content:\"\\f04c\"}.fa-pause-circle:before{content:\"\\f28b\"}.fa-paw:before{content:\"\\f1b0\"}.fa-paypal:before{content:\"\\f1ed\"}.fa-peace:before{content:\"\\f67c\"}.fa-pen:before{content:\"\\f304\"}.fa-pen-alt:before{content:\"\\f305\"}.fa-pen-fancy:before{content:\"\\f5ac\"}.fa-pen-nib:before{content:\"\\f5ad\"}.fa-pen-square:before{content:\"\\f14b\"}.fa-pencil-alt:before{content:\"\\f303\"}.fa-pencil-ruler:before{content:\"\\f5ae\"}.fa-penny-arcade:before{content:\"\\f704\"}.fa-people-arrows:before{content:\"\\e068\"}.fa-people-carry:before{content:\"\\f4ce\"}.fa-pepper-hot:before{content:\"\\f816\"}.fa-perbyte:before{content:\"\\e083\"}.fa-percent:before{content:\"\\f295\"}.fa-percentage:before{content:\"\\f541\"}.fa-periscope:before{content:\"\\f3da\"}.fa-person-booth:before{content:\"\\f756\"}.fa-phabricator:before{content:\"\\f3db\"}.fa-phoenix-framework:before{content:\"\\f3dc\"}.fa-phoenix-squadron:before{content:\"\\f511\"}.fa-phone:before{content:\"\\f095\"}.fa-phone-alt:before{content:\"\\f879\"}.fa-phone-slash:before{content:\"\\f3dd\"}.fa-phone-square:before{content:\"\\f098\"}.fa-phone-square-alt:before{content:\"\\f87b\"}.fa-phone-volume:before{content:\"\\f2a0\"}.fa-photo-video:before{content:\"\\f87c\"}.fa-php:before{content:\"\\f457\"}.fa-pied-piper:before{content:\"\\f2ae\"}.fa-pied-piper-alt:before{content:\"\\f1a8\"}.fa-pied-piper-hat:before{content:\"\\f4e5\"}.fa-pied-piper-pp:before{content:\"\\f1a7\"}.fa-pied-piper-square:before{content:\"\\e01e\"}.fa-piggy-bank:before{content:\"\\f4d3\"}.fa-pills:before{content:\"\\f484\"}.fa-pinterest:before{content:\"\\f0d2\"}.fa-pinterest-p:before{content:\"\\f231\"}.fa-pinterest-square:before{content:\"\\f0d3\"}.fa-pizza-slice:before{content:\"\\f818\"}.fa-place-of-worship:before{content:\"\\f67f\"}.fa-plane:before{content:\"\\f072\"}.fa-plane-arrival:before{content:\"\\f5af\"}.fa-plane-departure:before{content:\"\\f5b0\"}.fa-plane-slash:before{content:\"\\e069\"}.fa-play:before{content:\"\\f04b\"}.fa-play-circle:before{content:\"\\f144\"}.fa-playstation:before{content:\"\\f3df\"}.fa-plug:before{content:\"\\f1e6\"}.fa-plus:before{content:\"\\f067\"}.fa-plus-circle:before{content:\"\\f055\"}.fa-plus-square:before{content:\"\\f0fe\"}.fa-podcast:before{content:\"\\f2ce\"}.fa-poll:before{content:\"\\f681\"}.fa-poll-h:before{content:\"\\f682\"}.fa-poo:before{content:\"\\f2fe\"}.fa-poo-storm:before{content:\"\\f75a\"}.fa-poop:before{content:\"\\f619\"}.fa-portrait:before{content:\"\\f3e0\"}.fa-pound-sign:before{content:\"\\f154\"}.fa-power-off:before{content:\"\\f011\"}.fa-pray:before{content:\"\\f683\"}.fa-praying-hands:before{content:\"\\f684\"}.fa-prescription:before{content:\"\\f5b1\"}.fa-prescription-bottle:before{content:\"\\f485\"}.fa-prescription-bottle-alt:before{content:\"\\f486\"}.fa-print:before{content:\"\\f02f\"}.fa-procedures:before{content:\"\\f487\"}.fa-product-hunt:before{content:\"\\f288\"}.fa-project-diagram:before{content:\"\\f542\"}.fa-pump-medical:before{content:\"\\e06a\"}.fa-pump-soap:before{content:\"\\e06b\"}.fa-pushed:before{content:\"\\f3e1\"}.fa-puzzle-piece:before{content:\"\\f12e\"}.fa-python:before{content:\"\\f3e2\"}.fa-qq:before{content:\"\\f1d6\"}.fa-qrcode:before{content:\"\\f029\"}.fa-question:before{content:\"\\f128\"}.fa-question-circle:before{content:\"\\f059\"}.fa-quidditch:before{content:\"\\f458\"}.fa-quinscape:before{content:\"\\f459\"}.fa-quora:before{content:\"\\f2c4\"}.fa-quote-left:before{content:\"\\f10d\"}.fa-quote-right:before{content:\"\\f10e\"}.fa-quran:before{content:\"\\f687\"}.fa-r-project:before{content:\"\\f4f7\"}.fa-radiation:before{content:\"\\f7b9\"}.fa-radiation-alt:before{content:\"\\f7ba\"}.fa-rainbow:before{content:\"\\f75b\"}.fa-random:before{content:\"\\f074\"}.fa-raspberry-pi:before{content:\"\\f7bb\"}.fa-ravelry:before{content:\"\\f2d9\"}.fa-react:before{content:\"\\f41b\"}.fa-reacteurope:before{content:\"\\f75d\"}.fa-readme:before{content:\"\\f4d5\"}.fa-rebel:before{content:\"\\f1d0\"}.fa-receipt:before{content:\"\\f543\"}.fa-record-vinyl:before{content:\"\\f8d9\"}.fa-recycle:before{content:\"\\f1b8\"}.fa-red-river:before{content:\"\\f3e3\"}.fa-reddit:before{content:\"\\f1a1\"}.fa-reddit-alien:before{content:\"\\f281\"}.fa-reddit-square:before{content:\"\\f1a2\"}.fa-redhat:before{content:\"\\f7bc\"}.fa-redo:before{content:\"\\f01e\"}.fa-redo-alt:before{content:\"\\f2f9\"}.fa-registered:before{content:\"\\f25d\"}.fa-remove-format:before{content:\"\\f87d\"}.fa-renren:before{content:\"\\f18b\"}.fa-reply:before{content:\"\\f3e5\"}.fa-reply-all:before{content:\"\\f122\"}.fa-replyd:before{content:\"\\f3e6\"}.fa-republican:before{content:\"\\f75e\"}.fa-researchgate:before{content:\"\\f4f8\"}.fa-resolving:before{content:\"\\f3e7\"}.fa-restroom:before{content:\"\\f7bd\"}.fa-retweet:before{content:\"\\f079\"}.fa-rev:before{content:\"\\f5b2\"}.fa-ribbon:before{content:\"\\f4d6\"}.fa-ring:before{content:\"\\f70b\"}.fa-road:before{content:\"\\f018\"}.fa-robot:before{content:\"\\f544\"}.fa-rocket:before{content:\"\\f135\"}.fa-rocketchat:before{content:\"\\f3e8\"}.fa-rockrms:before{content:\"\\f3e9\"}.fa-route:before{content:\"\\f4d7\"}.fa-rss:before{content:\"\\f09e\"}.fa-rss-square:before{content:\"\\f143\"}.fa-ruble-sign:before{content:\"\\f158\"}.fa-ruler:before{content:\"\\f545\"}.fa-ruler-combined:before{content:\"\\f546\"}.fa-ruler-horizontal:before{content:\"\\f547\"}.fa-ruler-vertical:before{content:\"\\f548\"}.fa-running:before{content:\"\\f70c\"}.fa-rupee-sign:before{content:\"\\f156\"}.fa-rust:before{content:\"\\e07a\"}.fa-sad-cry:before{content:\"\\f5b3\"}.fa-sad-tear:before{content:\"\\f5b4\"}.fa-safari:before{content:\"\\f267\"}.fa-salesforce:before{content:\"\\f83b\"}.fa-sass:before{content:\"\\f41e\"}.fa-satellite:before{content:\"\\f7bf\"}.fa-satellite-dish:before{content:\"\\f7c0\"}.fa-save:before{content:\"\\f0c7\"}.fa-schlix:before{content:\"\\f3ea\"}.fa-school:before{content:\"\\f549\"}.fa-screwdriver:before{content:\"\\f54a\"}.fa-scribd:before{content:\"\\f28a\"}.fa-scroll:before{content:\"\\f70e\"}.fa-sd-card:before{content:\"\\f7c2\"}.fa-search:before{content:\"\\f002\"}.fa-search-dollar:before{content:\"\\f688\"}.fa-search-location:before{content:\"\\f689\"}.fa-search-minus:before{content:\"\\f010\"}.fa-search-plus:before{content:\"\\f00e\"}.fa-searchengin:before{content:\"\\f3eb\"}.fa-seedling:before{content:\"\\f4d8\"}.fa-sellcast:before{content:\"\\f2da\"}.fa-sellsy:before{content:\"\\f213\"}.fa-server:before{content:\"\\f233\"}.fa-servicestack:before{content:\"\\f3ec\"}.fa-shapes:before{content:\"\\f61f\"}.fa-share:before{content:\"\\f064\"}.fa-share-alt:before{content:\"\\f1e0\"}.fa-share-alt-square:before{content:\"\\f1e1\"}.fa-share-square:before{content:\"\\f14d\"}.fa-shekel-sign:before{content:\"\\f20b\"}.fa-shield-alt:before{content:\"\\f3ed\"}.fa-shield-virus:before{content:\"\\e06c\"}.fa-ship:before{content:\"\\f21a\"}.fa-shipping-fast:before{content:\"\\f48b\"}.fa-shirtsinbulk:before{content:\"\\f214\"}.fa-shoe-prints:before{content:\"\\f54b\"}.fa-shopify:before{content:\"\\e057\"}.fa-shopping-bag:before{content:\"\\f290\"}.fa-shopping-basket:before{content:\"\\f291\"}.fa-shopping-cart:before{content:\"\\f07a\"}.fa-shopware:before{content:\"\\f5b5\"}.fa-shower:before{content:\"\\f2cc\"}.fa-shuttle-van:before{content:\"\\f5b6\"}.fa-sign:before{content:\"\\f4d9\"}.fa-sign-in-alt:before{content:\"\\f2f6\"}.fa-sign-language:before{content:\"\\f2a7\"}.fa-sign-out-alt:before{content:\"\\f2f5\"}.fa-signal:before{content:\"\\f012\"}.fa-signature:before{content:\"\\f5b7\"}.fa-sim-card:before{content:\"\\f7c4\"}.fa-simplybuilt:before{content:\"\\f215\"}.fa-sink:before{content:\"\\e06d\"}.fa-sistrix:before{content:\"\\f3ee\"}.fa-sitemap:before{content:\"\\f0e8\"}.fa-sith:before{content:\"\\f512\"}.fa-skating:before{content:\"\\f7c5\"}.fa-sketch:before{content:\"\\f7c6\"}.fa-skiing:before{content:\"\\f7c9\"}.fa-skiing-nordic:before{content:\"\\f7ca\"}.fa-skull:before{content:\"\\f54c\"}.fa-skull-crossbones:before{content:\"\\f714\"}.fa-skyatlas:before{content:\"\\f216\"}.fa-skype:before{content:\"\\f17e\"}.fa-slack:before{content:\"\\f198\"}.fa-slack-hash:before{content:\"\\f3ef\"}.fa-slash:before{content:\"\\f715\"}.fa-sleigh:before{content:\"\\f7cc\"}.fa-sliders-h:before{content:\"\\f1de\"}.fa-slideshare:before{content:\"\\f1e7\"}.fa-smile:before{content:\"\\f118\"}.fa-smile-beam:before{content:\"\\f5b8\"}.fa-smile-wink:before{content:\"\\f4da\"}.fa-smog:before{content:\"\\f75f\"}.fa-smoking:before{content:\"\\f48d\"}.fa-smoking-ban:before{content:\"\\f54d\"}.fa-sms:before{content:\"\\f7cd\"}.fa-snapchat:before{content:\"\\f2ab\"}.fa-snapchat-ghost:before{content:\"\\f2ac\"}.fa-snapchat-square:before{content:\"\\f2ad\"}.fa-snowboarding:before{content:\"\\f7ce\"}.fa-snowflake:before{content:\"\\f2dc\"}.fa-snowman:before{content:\"\\f7d0\"}.fa-snowplow:before{content:\"\\f7d2\"}.fa-soap:before{content:\"\\e06e\"}.fa-socks:before{content:\"\\f696\"}.fa-solar-panel:before{content:\"\\f5ba\"}.fa-sort:before{content:\"\\f0dc\"}.fa-sort-alpha-down:before{content:\"\\f15d\"}.fa-sort-alpha-down-alt:before{content:\"\\f881\"}.fa-sort-alpha-up:before{content:\"\\f15e\"}.fa-sort-alpha-up-alt:before{content:\"\\f882\"}.fa-sort-amount-down:before{content:\"\\f160\"}.fa-sort-amount-down-alt:before{content:\"\\f884\"}.fa-sort-amount-up:before{content:\"\\f161\"}.fa-sort-amount-up-alt:before{content:\"\\f885\"}.fa-sort-down:before{content:\"\\f0dd\"}.fa-sort-numeric-down:before{content:\"\\f162\"}.fa-sort-numeric-down-alt:before{content:\"\\f886\"}.fa-sort-numeric-up:before{content:\"\\f163\"}.fa-sort-numeric-up-alt:before{content:\"\\f887\"}.fa-sort-up:before{content:\"\\f0de\"}.fa-soundcloud:before{content:\"\\f1be\"}.fa-sourcetree:before{content:\"\\f7d3\"}.fa-spa:before{content:\"\\f5bb\"}.fa-space-shuttle:before{content:\"\\f197\"}.fa-speakap:before{content:\"\\f3f3\"}.fa-speaker-deck:before{content:\"\\f83c\"}.fa-spell-check:before{content:\"\\f891\"}.fa-spider:before{content:\"\\f717\"}.fa-spinner:before{content:\"\\f110\"}.fa-splotch:before{content:\"\\f5bc\"}.fa-spotify:before{content:\"\\f1bc\"}.fa-spray-can:before{content:\"\\f5bd\"}.fa-square:before{content:\"\\f0c8\"}.fa-square-full:before{content:\"\\f45c\"}.fa-square-root-alt:before{content:\"\\f698\"}.fa-squarespace:before{content:\"\\f5be\"}.fa-stack-exchange:before{content:\"\\f18d\"}.fa-stack-overflow:before{content:\"\\f16c\"}.fa-stackpath:before{content:\"\\f842\"}.fa-stamp:before{content:\"\\f5bf\"}.fa-star:before{content:\"\\f005\"}.fa-star-and-crescent:before{content:\"\\f699\"}.fa-star-half:before{content:\"\\f089\"}.fa-star-half-alt:before{content:\"\\f5c0\"}.fa-star-of-david:before{content:\"\\f69a\"}.fa-star-of-life:before{content:\"\\f621\"}.fa-staylinked:before{content:\"\\f3f5\"}.fa-steam:before{content:\"\\f1b6\"}.fa-steam-square:before{content:\"\\f1b7\"}.fa-steam-symbol:before{content:\"\\f3f6\"}.fa-step-backward:before{content:\"\\f048\"}.fa-step-forward:before{content:\"\\f051\"}.fa-stethoscope:before{content:\"\\f0f1\"}.fa-sticker-mule:before{content:\"\\f3f7\"}.fa-sticky-note:before{content:\"\\f249\"}.fa-stop:before{content:\"\\f04d\"}.fa-stop-circle:before{content:\"\\f28d\"}.fa-stopwatch:before{content:\"\\f2f2\"}.fa-stopwatch-20:before{content:\"\\e06f\"}.fa-store:before{content:\"\\f54e\"}.fa-store-alt:before{content:\"\\f54f\"}.fa-store-alt-slash:before{content:\"\\e070\"}.fa-store-slash:before{content:\"\\e071\"}.fa-strava:before{content:\"\\f428\"}.fa-stream:before{content:\"\\f550\"}.fa-street-view:before{content:\"\\f21d\"}.fa-strikethrough:before{content:\"\\f0cc\"}.fa-stripe:before{content:\"\\f429\"}.fa-stripe-s:before{content:\"\\f42a\"}.fa-stroopwafel:before{content:\"\\f551\"}.fa-studiovinari:before{content:\"\\f3f8\"}.fa-stumbleupon:before{content:\"\\f1a4\"}.fa-stumbleupon-circle:before{content:\"\\f1a3\"}.fa-subscript:before{content:\"\\f12c\"}.fa-subway:before{content:\"\\f239\"}.fa-suitcase:before{content:\"\\f0f2\"}.fa-suitcase-rolling:before{content:\"\\f5c1\"}.fa-sun:before{content:\"\\f185\"}.fa-superpowers:before{content:\"\\f2dd\"}.fa-superscript:before{content:\"\\f12b\"}.fa-supple:before{content:\"\\f3f9\"}.fa-surprise:before{content:\"\\f5c2\"}.fa-suse:before{content:\"\\f7d6\"}.fa-swatchbook:before{content:\"\\f5c3\"}.fa-swift:before{content:\"\\f8e1\"}.fa-swimmer:before{content:\"\\f5c4\"}.fa-swimming-pool:before{content:\"\\f5c5\"}.fa-symfony:before{content:\"\\f83d\"}.fa-synagogue:before{content:\"\\f69b\"}.fa-sync:before{content:\"\\f021\"}.fa-sync-alt:before{content:\"\\f2f1\"}.fa-syringe:before{content:\"\\f48e\"}.fa-table:before{content:\"\\f0ce\"}.fa-table-tennis:before{content:\"\\f45d\"}.fa-tablet:before{content:\"\\f10a\"}.fa-tablet-alt:before{content:\"\\f3fa\"}.fa-tablets:before{content:\"\\f490\"}.fa-tachometer-alt:before{content:\"\\f3fd\"}.fa-tag:before{content:\"\\f02b\"}.fa-tags:before{content:\"\\f02c\"}.fa-tape:before{content:\"\\f4db\"}.fa-tasks:before{content:\"\\f0ae\"}.fa-taxi:before{content:\"\\f1ba\"}.fa-teamspeak:before{content:\"\\f4f9\"}.fa-teeth:before{content:\"\\f62e\"}.fa-teeth-open:before{content:\"\\f62f\"}.fa-telegram:before{content:\"\\f2c6\"}.fa-telegram-plane:before{content:\"\\f3fe\"}.fa-temperature-high:before{content:\"\\f769\"}.fa-temperature-low:before{content:\"\\f76b\"}.fa-tencent-weibo:before{content:\"\\f1d5\"}.fa-tenge:before{content:\"\\f7d7\"}.fa-terminal:before{content:\"\\f120\"}.fa-text-height:before{content:\"\\f034\"}.fa-text-width:before{content:\"\\f035\"}.fa-th:before{content:\"\\f00a\"}.fa-th-large:before{content:\"\\f009\"}.fa-th-list:before{content:\"\\f00b\"}.fa-the-red-yeti:before{content:\"\\f69d\"}.fa-theater-masks:before{content:\"\\f630\"}.fa-themeco:before{content:\"\\f5c6\"}.fa-themeisle:before{content:\"\\f2b2\"}.fa-thermometer:before{content:\"\\f491\"}.fa-thermometer-empty:before{content:\"\\f2cb\"}.fa-thermometer-full:before{content:\"\\f2c7\"}.fa-thermometer-half:before{content:\"\\f2c9\"}.fa-thermometer-quarter:before{content:\"\\f2ca\"}.fa-thermometer-three-quarters:before{content:\"\\f2c8\"}.fa-think-peaks:before{content:\"\\f731\"}.fa-thumbs-down:before{content:\"\\f165\"}.fa-thumbs-up:before{content:\"\\f164\"}.fa-thumbtack:before{content:\"\\f08d\"}.fa-ticket-alt:before{content:\"\\f3ff\"}.fa-tiktok:before{content:\"\\e07b\"}.fa-times:before{content:\"\\f00d\"}.fa-times-circle:before{content:\"\\f057\"}.fa-tint:before{content:\"\\f043\"}.fa-tint-slash:before{content:\"\\f5c7\"}.fa-tired:before{content:\"\\f5c8\"}.fa-toggle-off:before{content:\"\\f204\"}.fa-toggle-on:before{content:\"\\f205\"}.fa-toilet:before{content:\"\\f7d8\"}.fa-toilet-paper:before{content:\"\\f71e\"}.fa-toilet-paper-slash:before{content:\"\\e072\"}.fa-toolbox:before{content:\"\\f552\"}.fa-tools:before{content:\"\\f7d9\"}.fa-tooth:before{content:\"\\f5c9\"}.fa-torah:before{content:\"\\f6a0\"}.fa-torii-gate:before{content:\"\\f6a1\"}.fa-tractor:before{content:\"\\f722\"}.fa-trade-federation:before{content:\"\\f513\"}.fa-trademark:before{content:\"\\f25c\"}.fa-traffic-light:before{content:\"\\f637\"}.fa-trailer:before{content:\"\\e041\"}.fa-train:before{content:\"\\f238\"}.fa-tram:before{content:\"\\f7da\"}.fa-transgender:before{content:\"\\f224\"}.fa-transgender-alt:before{content:\"\\f225\"}.fa-trash:before{content:\"\\f1f8\"}.fa-trash-alt:before{content:\"\\f2ed\"}.fa-trash-restore:before{content:\"\\f829\"}.fa-trash-restore-alt:before{content:\"\\f82a\"}.fa-tree:before{content:\"\\f1bb\"}.fa-trello:before{content:\"\\f181\"}.fa-trophy:before{content:\"\\f091\"}.fa-truck:before{content:\"\\f0d1\"}.fa-truck-loading:before{content:\"\\f4de\"}.fa-truck-monster:before{content:\"\\f63b\"}.fa-truck-moving:before{content:\"\\f4df\"}.fa-truck-pickup:before{content:\"\\f63c\"}.fa-tshirt:before{content:\"\\f553\"}.fa-tty:before{content:\"\\f1e4\"}.fa-tumblr:before{content:\"\\f173\"}.fa-tumblr-square:before{content:\"\\f174\"}.fa-tv:before{content:\"\\f26c\"}.fa-twitch:before{content:\"\\f1e8\"}.fa-twitter:before{content:\"\\f099\"}.fa-twitter-square:before{content:\"\\f081\"}.fa-typo3:before{content:\"\\f42b\"}.fa-uber:before{content:\"\\f402\"}.fa-ubuntu:before{content:\"\\f7df\"}.fa-uikit:before{content:\"\\f403\"}.fa-umbraco:before{content:\"\\f8e8\"}.fa-umbrella:before{content:\"\\f0e9\"}.fa-umbrella-beach:before{content:\"\\f5ca\"}.fa-uncharted:before{content:\"\\e084\"}.fa-underline:before{content:\"\\f0cd\"}.fa-undo:before{content:\"\\f0e2\"}.fa-undo-alt:before{content:\"\\f2ea\"}.fa-uniregistry:before{content:\"\\f404\"}.fa-unity:before{content:\"\\e049\"}.fa-universal-access:before{content:\"\\f29a\"}.fa-university:before{content:\"\\f19c\"}.fa-unlink:before{content:\"\\f127\"}.fa-unlock:before{content:\"\\f09c\"}.fa-unlock-alt:before{content:\"\\f13e\"}.fa-unsplash:before{content:\"\\e07c\"}.fa-untappd:before{content:\"\\f405\"}.fa-upload:before{content:\"\\f093\"}.fa-ups:before{content:\"\\f7e0\"}.fa-usb:before{content:\"\\f287\"}.fa-user:before{content:\"\\f007\"}.fa-user-alt:before{content:\"\\f406\"}.fa-user-alt-slash:before{content:\"\\f4fa\"}.fa-user-astronaut:before{content:\"\\f4fb\"}.fa-user-check:before{content:\"\\f4fc\"}.fa-user-circle:before{content:\"\\f2bd\"}.fa-user-clock:before{content:\"\\f4fd\"}.fa-user-cog:before{content:\"\\f4fe\"}.fa-user-edit:before{content:\"\\f4ff\"}.fa-user-friends:before{content:\"\\f500\"}.fa-user-graduate:before{content:\"\\f501\"}.fa-user-injured:before{content:\"\\f728\"}.fa-user-lock:before{content:\"\\f502\"}.fa-user-md:before{content:\"\\f0f0\"}.fa-user-minus:before{content:\"\\f503\"}.fa-user-ninja:before{content:\"\\f504\"}.fa-user-nurse:before{content:\"\\f82f\"}.fa-user-plus:before{content:\"\\f234\"}.fa-user-secret:before{content:\"\\f21b\"}.fa-user-shield:before{content:\"\\f505\"}.fa-user-slash:before{content:\"\\f506\"}.fa-user-tag:before{content:\"\\f507\"}.fa-user-tie:before{content:\"\\f508\"}.fa-user-times:before{content:\"\\f235\"}.fa-users:before{content:\"\\f0c0\"}.fa-users-cog:before{content:\"\\f509\"}.fa-users-slash:before{content:\"\\e073\"}.fa-usps:before{content:\"\\f7e1\"}.fa-ussunnah:before{content:\"\\f407\"}.fa-utensil-spoon:before{content:\"\\f2e5\"}.fa-utensils:before{content:\"\\f2e7\"}.fa-vaadin:before{content:\"\\f408\"}.fa-vector-square:before{content:\"\\f5cb\"}.fa-venus:before{content:\"\\f221\"}.fa-venus-double:before{content:\"\\f226\"}.fa-venus-mars:before{content:\"\\f228\"}.fa-vest:before{content:\"\\e085\"}.fa-vest-patches:before{content:\"\\e086\"}.fa-viacoin:before{content:\"\\f237\"}.fa-viadeo:before{content:\"\\f2a9\"}.fa-viadeo-square:before{content:\"\\f2aa\"}.fa-vial:before{content:\"\\f492\"}.fa-vials:before{content:\"\\f493\"}.fa-viber:before{content:\"\\f409\"}.fa-video:before{content:\"\\f03d\"}.fa-video-slash:before{content:\"\\f4e2\"}.fa-vihara:before{content:\"\\f6a7\"}.fa-vimeo:before{content:\"\\f40a\"}.fa-vimeo-square:before{content:\"\\f194\"}.fa-vimeo-v:before{content:\"\\f27d\"}.fa-vine:before{content:\"\\f1ca\"}.fa-virus:before{content:\"\\e074\"}.fa-virus-slash:before{content:\"\\e075\"}.fa-viruses:before{content:\"\\e076\"}.fa-vk:before{content:\"\\f189\"}.fa-vnv:before{content:\"\\f40b\"}.fa-voicemail:before{content:\"\\f897\"}.fa-volleyball-ball:before{content:\"\\f45f\"}.fa-volume-down:before{content:\"\\f027\"}.fa-volume-mute:before{content:\"\\f6a9\"}.fa-volume-off:before{content:\"\\f026\"}.fa-volume-up:before{content:\"\\f028\"}.fa-vote-yea:before{content:\"\\f772\"}.fa-vr-cardboard:before{content:\"\\f729\"}.fa-vuejs:before{content:\"\\f41f\"}.fa-walking:before{content:\"\\f554\"}.fa-wallet:before{content:\"\\f555\"}.fa-warehouse:before{content:\"\\f494\"}.fa-watchman-monitoring:before{content:\"\\e087\"}.fa-water:before{content:\"\\f773\"}.fa-wave-square:before{content:\"\\f83e\"}.fa-waze:before{content:\"\\f83f\"}.fa-weebly:before{content:\"\\f5cc\"}.fa-weibo:before{content:\"\\f18a\"}.fa-weight:before{content:\"\\f496\"}.fa-weight-hanging:before{content:\"\\f5cd\"}.fa-weixin:before{content:\"\\f1d7\"}.fa-whatsapp:before{content:\"\\f232\"}.fa-whatsapp-square:before{content:\"\\f40c\"}.fa-wheelchair:before{content:\"\\f193\"}.fa-whmcs:before{content:\"\\f40d\"}.fa-wifi:before{content:\"\\f1eb\"}.fa-wikipedia-w:before{content:\"\\f266\"}.fa-wind:before{content:\"\\f72e\"}.fa-window-close:before{content:\"\\f410\"}.fa-window-maximize:before{content:\"\\f2d0\"}.fa-window-minimize:before{content:\"\\f2d1\"}.fa-window-restore:before{content:\"\\f2d2\"}.fa-windows:before{content:\"\\f17a\"}.fa-wine-bottle:before{content:\"\\f72f\"}.fa-wine-glass:before{content:\"\\f4e3\"}.fa-wine-glass-alt:before{content:\"\\f5ce\"}.fa-wix:before{content:\"\\f5cf\"}.fa-wizards-of-the-coast:before{content:\"\\f730\"}.fa-wodu:before{content:\"\\e088\"}.fa-wolf-pack-battalion:before{content:\"\\f514\"}.fa-won-sign:before{content:\"\\f159\"}.fa-wordpress:before{content:\"\\f19a\"}.fa-wordpress-simple:before{content:\"\\f411\"}.fa-wpbeginner:before{content:\"\\f297\"}.fa-wpexplorer:before{content:\"\\f2de\"}.fa-wpforms:before{content:\"\\f298\"}.fa-wpressr:before{content:\"\\f3e4\"}.fa-wrench:before{content:\"\\f0ad\"}.fa-x-ray:before{content:\"\\f497\"}.fa-xbox:before{content:\"\\f412\"}.fa-xing:before{content:\"\\f168\"}.fa-xing-square:before{content:\"\\f169\"}.fa-y-combinator:before{content:\"\\f23b\"}.fa-yahoo:before{content:\"\\f19e\"}.fa-yammer:before{content:\"\\f840\"}.fa-yandex:before{content:\"\\f413\"}.fa-yandex-international:before{content:\"\\f414\"}.fa-yarn:before{content:\"\\f7e3\"}.fa-yelp:before{content:\"\\f1e9\"}.fa-yen-sign:before{content:\"\\f157\"}.fa-yin-yang:before{content:\"\\f6ad\"}.fa-yoast:before{content:\"\\f2b1\"}.fa-youtube:before{content:\"\\f167\"}.fa-youtube-square:before{content:\"\\f431\"}.fa-zhihu:before{content:\"\\f63f\"}.sr-only{border:0;clip:rect(0,0,0,0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.sr-only-focusable:active,.sr-only-focusable:focus{clip:auto;height:auto;margin:0;overflow:visible;position:static;width:auto}@font-face{font-family:\"Font Awesome 5 Brands\";font-style:normal;font-weight:400;font-display:block;src:url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + ");src:url(" + ___CSS_LOADER_URL_REPLACEMENT_1___ + ") format(\"embedded-opentype\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_2___ + ") format(\"woff2\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_3___ + ") format(\"woff\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_4___ + ") format(\"truetype\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_5___ + ") format(\"svg\")}.fab{font-family:\"Font Awesome 5 Brands\"}@font-face{font-family:\"Font Awesome 5 Free\";font-style:normal;font-weight:400;font-display:block;src:url(" + ___CSS_LOADER_URL_REPLACEMENT_6___ + ");src:url(" + ___CSS_LOADER_URL_REPLACEMENT_7___ + ") format(\"embedded-opentype\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_8___ + ") format(\"woff2\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_9___ + ") format(\"woff\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_10___ + ") format(\"truetype\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_11___ + ") format(\"svg\")}.fab,.far{font-weight:400}@font-face{font-family:\"Font Awesome 5 Free\";font-style:normal;font-weight:900;font-display:block;src:url(" + ___CSS_LOADER_URL_REPLACEMENT_12___ + ");src:url(" + ___CSS_LOADER_URL_REPLACEMENT_13___ + ") format(\"embedded-opentype\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_14___ + ") format(\"woff2\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_15___ + ") format(\"woff\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_16___ + ") format(\"truetype\"),url(" + ___CSS_LOADER_URL_REPLACEMENT_17___ + ") format(\"svg\")}.fa,.far,.fas{font-family:\"Font Awesome 5 Free\"}.fa,.fas{font-weight:900}", "",{"version":3,"sources":["webpack://./node_modules/@fortawesome/fontawesome-free/css/all.min.css"],"names":[],"mappings":"AAAA;;;EAGE;AACF,6BAA6B,iCAAiC,CAAC,kCAAkC,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,4BAAmB,CAAnB,mBAAmB,CAAC,mBAAmB,CAAC,aAAa,CAAC,OAAO,mBAAmB,CAAC,iBAAiB,CAAC,uBAAuB,CAAC,OAAO,eAAe,CAAC,OAAO,gBAAgB,CAAC,OAAO,aAAa,CAAC,OAAO,aAAa,CAAC,OAAO,aAAa,CAAC,OAAO,aAAa,CAAC,OAAO,aAAa,CAAC,OAAO,aAAa,CAAC,OAAO,aAAa,CAAC,OAAO,aAAa,CAAC,OAAO,aAAa,CAAC,QAAQ,cAAc,CAAC,OAAO,iBAAiB,CAAC,YAAY,CAAC,OAAO,oBAAoB,CAAC,iBAAiB,CAAC,cAAc,CAAC,UAAU,iBAAiB,CAAC,OAAO,SAAS,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,SAAS,CAAC,mBAAmB,CAAC,WAAW,uBAAuB,CAAC,kBAAkB,CAAC,wBAAwB,CAAC,cAAc,UAAU,CAAC,eAAe,WAAW,CAAC,yFAAyF,iBAAiB,CAAC,8FAA8F,gBAAgB,CAAC,SAAsD,oCAAoC,CAAC,UAAyD,sCAAsC,CAAiJ,mBAAmB,GAAkC,sBAAsB,CAAC,GAAmC,uBAAuB,CAAC,CAAC,cAAc,qEAAqE,CAAiC,uBAAuB,CAAC,eAAe,qEAAqE,CAAkC,wBAAwB,CAAC,eAAe,qEAAqE,CAAkC,wBAAwB,CAAC,oBAAoB,+EAA+E,CAA8B,oBAAoB,CAAC,kBAA+C,oBAAoB,CAAC,qEAAqE,+EAA+E,CAAC,mDAA+E,mBAAmB,CAAC,oIAAwJ,WAAW,CAAC,UAAU,oBAAoB,CAAC,UAAU,CAAC,eAAe,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,WAAW,CAAC,0BAA0B,MAAM,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,UAAU,CAAC,aAAa,mBAAmB,CAAC,aAAa,aAAa,CAAC,YAAY,UAAU,CAAC,iBAAiB,eAAe,CAAC,2BAA2B,eAAe,CAAC,oBAAoB,eAAe,CAAC,qCAAqC,eAAe,CAAC,cAAc,eAAe,CAAC,wBAAwB,eAAe,CAAC,wBAAwB,eAAe,CAAC,kBAAkB,eAAe,CAAC,eAAe,eAAe,CAAC,oBAAoB,eAAe,CAAC,0BAA0B,eAAe,CAAC,yBAAyB,eAAe,CAAC,kBAAkB,eAAe,CAAC,mBAAmB,eAAe,CAAC,wBAAwB,eAAe,CAAC,yBAAyB,eAAe,CAAC,sBAAsB,eAAe,CAAC,uBAAuB,eAAe,CAAC,kBAAkB,eAAe,CAAC,qBAAqB,eAAe,CAAC,kBAAkB,eAAe,CAAC,sBAAsB,eAAe,CAAC,qBAAqB,eAAe,CAAC,+CAA+C,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,mBAAmB,eAAe,CAAC,qBAAqB,eAAe,CAAC,6BAA6B,eAAe,CAAC,6BAA6B,eAAe,CAAC,8BAA8B,eAAe,CAAC,2BAA2B,eAAe,CAAC,sBAAsB,eAAe,CAAC,sBAAsB,eAAe,CAAC,uBAAuB,eAAe,CAAC,oBAAoB,eAAe,CAAC,iBAAiB,eAAe,CAAC,yBAAyB,eAAe,CAAC,mBAAmB,eAAe,CAAC,gBAAgB,eAAe,CAAC,qBAAqB,eAAe,CAAC,yBAAyB,eAAe,CAAC,iBAAiB,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iCAAiC,eAAe,CAAC,iCAAiC,eAAe,CAAC,kCAAkC,eAAe,CAAC,+BAA+B,eAAe,CAAC,6BAA6B,eAAe,CAAC,6BAA6B,eAAe,CAAC,8BAA8B,eAAe,CAAC,2BAA2B,eAAe,CAAC,sBAAsB,eAAe,CAAC,sBAAsB,eAAe,CAAC,uBAAuB,eAAe,CAAC,oBAAoB,eAAe,CAAC,sBAAsB,eAAe,CAAC,wBAAwB,eAAe,CAAC,wBAAwB,eAAe,CAAC,sBAAsB,eAAe,CAAC,uCAAuC,eAAe,CAAC,oBAAoB,eAAe,CAAC,sBAAsB,eAAe,CAAC,cAAc,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,gBAAgB,eAAe,CAAC,mBAAmB,eAAe,CAAC,6BAA6B,eAAe,CAAC,wBAAwB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,eAAe,eAAe,CAAC,gBAAgB,eAAe,CAAC,yBAAyB,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,iBAAiB,eAAe,CAAC,oBAAoB,eAAe,CAAC,qBAAqB,eAAe,CAAC,iBAAiB,eAAe,CAAC,yBAAyB,eAAe,CAAC,8BAA8B,eAAe,CAAC,+BAA+B,eAAe,CAAC,eAAe,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,gBAAgB,eAAe,CAAC,yBAAyB,eAAe,CAAC,2BAA2B,eAAe,CAAC,gBAAgB,eAAe,CAAC,yBAAyB,eAAe,CAAC,wBAAwB,eAAe,CAAC,wBAAwB,eAAe,CAAC,2BAA2B,eAAe,CAAC,kCAAkC,eAAe,CAAC,sBAAsB,eAAe,CAAC,eAAe,eAAe,CAAC,gBAAgB,eAAe,CAAC,mBAAmB,eAAe,CAAC,0BAA0B,eAAe,CAAC,gBAAgB,eAAe,CAAC,sBAAsB,eAAe,CAAC,wBAAwB,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,qBAAqB,eAAe,CAAC,sBAAsB,eAAe,CAAC,qBAAqB,eAAe,CAAC,yBAAyB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,gBAAgB,eAAe,CAAC,qBAAqB,eAAe,CAAC,sBAAsB,eAAe,CAAC,mBAAmB,eAAe,CAAC,yBAAyB,eAAe,CAAC,iBAAiB,eAAe,CAAC,gBAAgB,eAAe,CAAC,mBAAmB,eAAe,CAAC,qBAAqB,eAAe,CAAC,qBAAqB,eAAe,CAAC,uBAAuB,eAAe,CAAC,gBAAgB,eAAe,CAAC,gBAAgB,eAAe,CAAC,gBAAgB,eAAe,CAAC,gBAAgB,eAAe,CAAC,gBAAgB,eAAe,CAAC,gBAAgB,eAAe,CAAC,qBAAqB,eAAe,CAAC,wBAAwB,eAAe,CAAC,qBAAqB,eAAe,CAAC,uBAAuB,eAAe,CAAC,oBAAoB,eAAe,CAAC,qBAAqB,eAAe,CAAC,sBAAsB,eAAe,CAAC,uBAAuB,eAAe,CAAC,wBAAwB,eAAe,CAAC,wBAAwB,eAAe,CAAC,eAAe,eAAe,CAAC,oBAAoB,eAAe,CAAC,sBAAsB,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,uBAAuB,eAAe,CAAC,qBAAqB,eAAe,CAAC,6BAA6B,eAAe,CAAC,2BAA2B,eAAe,CAAC,iBAAiB,eAAe,CAAC,iBAAiB,eAAe,CAAC,eAAe,eAAe,CAAC,kBAAkB,eAAe,CAAC,eAAe,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,gBAAgB,eAAe,CAAC,4BAA4B,eAAe,CAAC,eAAe,eAAe,CAAC,mBAAmB,eAAe,CAAC,yBAAyB,eAAe,CAAC,uBAAuB,eAAe,CAAC,sBAAsB,eAAe,CAAC,sBAAsB,eAAe,CAAC,oBAAoB,eAAe,CAAC,wBAAwB,eAAe,CAAC,0BAA0B,eAAe,CAAC,wBAAwB,eAAe,CAAC,0BAA0B,eAAe,CAAC,yBAAyB,eAAe,CAAC,0BAA0B,eAAe,CAAC,yBAAyB,eAAe,CAAC,kBAAkB,eAAe,CAAC,wBAAwB,eAAe,CAAC,sBAAsB,eAAe,CAAC,+BAA+B,eAAe,CAAC,sBAAsB,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,eAAe,eAAe,CAAC,mBAAmB,eAAe,CAAC,uBAAuB,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,sBAAsB,eAAe,CAAC,sBAAsB,eAAe,CAAC,uBAAuB,eAAe,CAAC,6BAA6B,eAAe,CAAC,6BAA6B,eAAe,CAAC,8BAA8B,eAAe,CAAC,2BAA2B,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,2BAA2B,eAAe,CAAC,qBAAqB,eAAe,CAAC,yBAAyB,eAAe,CAAC,eAAe,eAAe,CAAC,yBAAyB,eAAe,CAAC,mBAAmB,eAAe,CAAC,wBAAwB,eAAe,CAAC,0BAA0B,eAAe,CAAC,uBAAuB,eAAe,CAAC,kBAAkB,eAAe,CAAC,yBAAyB,eAAe,CAAC,qBAAqB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,sBAAsB,eAAe,CAAC,kBAAkB,eAAe,CAAC,uBAAuB,eAAe,CAAC,iBAAiB,eAAe,CAAC,sBAAsB,eAAe,CAAC,8BAA8B,eAAe,CAAC,4BAA4B,eAAe,CAAC,sBAAsB,eAAe,CAAC,qBAAqB,eAAe,CAAC,sBAAsB,eAAe,CAAC,qBAAqB,eAAe,CAAC,iBAAiB,eAAe,CAAC,wBAAwB,eAAe,CAAC,wBAAwB,eAAe,CAAC,wBAAwB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,wBAAwB,eAAe,CAAC,uBAAuB,eAAe,CAAC,sBAAsB,eAAe,CAAC,wBAAwB,eAAe,CAAC,sBAAsB,eAAe,CAAC,uBAAuB,eAAe,CAAC,sBAAsB,eAAe,CAAC,+BAA+B,eAAe,CAAC,+BAA+B,eAAe,CAAC,gCAAgC,eAAe,CAAC,6BAA6B,eAAe,CAAC,wBAAwB,eAAe,CAAC,wBAAwB,eAAe,CAAC,yBAAyB,eAAe,CAAC,sBAAsB,eAAe,CAAC,iBAAiB,eAAe,CAAC,kBAAkB,eAAe,CAAC,sBAAsB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,wBAAwB,eAAe,CAAC,gBAAgB,eAAe,CAAC,0BAA0B,eAAe,CAAC,qBAAqB,eAAe,CAAC,2BAA2B,eAAe,CAAC,0BAA0B,eAAe,CAAC,iBAAiB,eAAe,CAAC,iBAAiB,eAAe,CAAC,6BAA6B,eAAe,CAAC,iBAAiB,eAAe,CAAC,8BAA8B,eAAe,CAAC,0BAA0B,eAAe,CAAC,sBAAsB,eAAe,CAAC,2BAA2B,eAAe,CAAC,sBAAsB,eAAe,CAAC,+BAA+B,eAAe,CAAC,qBAAqB,eAAe,CAAC,0BAA0B,eAAe,CAAC,4BAA4B,eAAe,CAAC,sBAAsB,eAAe,CAAC,sBAAsB,eAAe,CAAC,sBAAsB,eAAe,CAAC,wBAAwB,eAAe,CAAC,oBAAoB,eAAe,CAAC,gBAAgB,eAAe,CAAC,uBAAuB,eAAe,CAAC,mBAAmB,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,eAAe,eAAe,CAAC,gBAAgB,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,uBAAuB,eAAe,CAAC,0BAA0B,eAAe,CAAC,wBAAwB,eAAe,CAAC,2BAA2B,eAAe,CAAC,yBAAyB,eAAe,CAAC,oBAAoB,eAAe,CAAC,2BAA2B,eAAe,CAAC,wBAAwB,eAAe,CAAC,mBAAmB,eAAe,CAAC,oBAAoB,eAAe,CAAC,wBAAwB,eAAe,CAAC,+BAA+B,eAAe,CAAC,0BAA0B,eAAe,CAAC,sBAAsB,eAAe,CAAC,0BAA0B,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,uBAAuB,eAAe,CAAC,gBAAgB,eAAe,CAAC,qBAAqB,eAAe,CAAC,yBAAyB,eAAe,CAAC,iBAAiB,eAAe,CAAC,kBAAkB,eAAe,CAAC,4BAA4B,eAAe,CAAC,+BAA+B,eAAe,CAAC,+BAA+B,eAAe,CAAC,kCAAkC,eAAe,CAAC,kCAAkC,eAAe,CAAC,+BAA+B,eAAe,CAAC,+BAA+B,eAAe,CAAC,mCAAmC,eAAe,CAAC,kCAAkC,eAAe,CAAC,+BAA+B,eAAe,CAAC,qCAAqC,eAAe,CAAC,0CAA0C,eAAe,CAAC,kCAAkC,eAAe,CAAC,iCAAiC,eAAe,CAAC,uBAAuB,eAAe,CAAC,yBAAyB,eAAe,CAAC,gBAAgB,eAAe,CAAC,oBAAoB,eAAe,CAAC,iBAAiB,eAAe,CAAC,sBAAsB,eAAe,CAAC,gBAAgB,eAAe,CAAC,iBAAiB,eAAe,CAAC,kBAAkB,eAAe,CAAC,gBAAgB,eAAe,CAAC,oBAAoB,eAAe,CAAC,gBAAgB,eAAe,CAAC,iBAAiB,eAAe,CAAC,eAAe,eAAe,CAAC,sBAAsB,eAAe,CAAC,mBAAmB,eAAe,CAAC,0BAA0B,eAAe,CAAC,uBAAuB,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,gBAAgB,eAAe,CAAC,kBAAkB,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,eAAe,eAAe,CAAC,sBAAsB,eAAe,CAAC,wBAAwB,eAAe,CAAC,eAAe,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,gBAAgB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,qBAAqB,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,sBAAsB,eAAe,CAAC,oBAAoB,eAAe,CAAC,gBAAgB,eAAe,CAAC,yBAAyB,eAAe,CAAC,8BAA8B,eAAe,CAAC,sBAAsB,eAAe,CAAC,mBAAmB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,eAAe,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,eAAe,eAAe,CAAC,uBAAuB,eAAe,CAAC,iBAAiB,eAAe,CAAC,yBAAyB,eAAe,CAAC,kBAAkB,eAAe,CAAC,uBAAuB,eAAe,CAAC,qBAAqB,eAAe,CAAC,sBAAsB,eAAe,CAAC,gBAAgB,eAAe,CAAC,oBAAoB,eAAe,CAAC,yBAAyB,eAAe,CAAC,4BAA4B,eAAe,CAAC,kBAAkB,eAAe,CAAC,wBAAwB,eAAe,CAAC,oBAAoB,eAAe,CAAC,2BAA2B,eAAe,CAAC,mBAAmB,eAAe,CAAC,gBAAgB,eAAe,CAAC,yBAAyB,eAAe,CAAC,0BAA0B,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,yBAAyB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,sBAAsB,eAAe,CAAC,gBAAgB,eAAe,CAAC,gBAAgB,eAAe,CAAC,uBAAuB,eAAe,CAAC,gBAAgB,eAAe,CAAC,eAAe,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,sBAAsB,eAAe,CAAC,sBAAsB,eAAe,CAAC,gBAAgB,eAAe,CAAC,iBAAiB,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,yBAAyB,eAAe,CAAC,8BAA8B,eAAe,CAAC,2BAA2B,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,gBAAgB,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,wBAAwB,eAAe,CAAC,uBAAuB,eAAe,CAAC,8BAA8B,eAAe,CAAC,gCAAgC,eAAe,CAAC,kBAAkB,eAAe,CAAC,sBAAsB,eAAe,CAAC,6BAA6B,eAAe,CAAC,wBAAwB,eAAe,CAAC,6BAA6B,eAAe,CAAC,oCAAoC,eAAe,CAAC,eAAe,eAAe,CAAC,uBAAuB,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,sBAAsB,eAAe,CAAC,8BAA8B,eAAe,CAAC,2BAA2B,eAAe,CAAC,eAAe,eAAe,CAAC,gCAAgC,eAAe,CAAC,yBAAyB,eAAe,CAAC,wBAAwB,eAAe,CAAC,kBAAkB,eAAe,CAAC,eAAe,eAAe,CAAC,mBAAmB,eAAe,CAAC,uBAAuB,eAAe,CAAC,iBAAiB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,uBAAuB,eAAe,CAAC,iBAAiB,eAAe,CAAC,gBAAgB,eAAe,CAAC,oBAAoB,eAAe,CAAC,wBAAwB,eAAe,CAAC,sBAAsB,eAAe,CAAC,qBAAqB,eAAe,CAAC,yBAAyB,eAAe,CAAC,oBAAoB,eAAe,CAAC,yBAAyB,eAAe,CAAC,sBAAsB,eAAe,CAAC,uBAAuB,eAAe,CAAC,sBAAsB,eAAe,CAAC,uBAAuB,eAAe,CAAC,wBAAwB,eAAe,CAAC,+BAA+B,eAAe,CAAC,wBAAwB,eAAe,CAAC,4BAA4B,eAAe,CAAC,oBAAoB,eAAe,CAAC,2BAA2B,eAAe,CAAC,6BAA6B,eAAe,CAAC,0BAA0B,eAAe,CAAC,uBAAuB,eAAe,CAAC,sBAAsB,eAAe,CAAC,qBAAqB,eAAe,CAAC,gBAAgB,eAAe,CAAC,qBAAqB,eAAe,CAAC,gBAAgB,eAAe,CAAC,kBAAkB,eAAe,CAAC,uBAAuB,eAAe,CAAC,gBAAgB,eAAe,CAAC,oBAAoB,eAAe,CAAC,6BAA6B,eAAe,CAAC,mBAAmB,eAAe,CAAC,2BAA2B,eAAe,CAAC,qBAAqB,eAAe,CAAC,uBAAuB,eAAe,CAAC,2BAA2B,eAAe,CAAC,sBAAsB,eAAe,CAAC,gBAAgB,eAAe,CAAC,uBAAuB,eAAe,CAAC,gBAAgB,eAAe,CAAC,0BAA0B,eAAe,CAAC,oBAAoB,eAAe,CAAC,iBAAiB,eAAe,CAAC,kBAAkB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,eAAe,eAAe,CAAC,kBAAkB,eAAe,CAAC,wBAAwB,eAAe,CAAC,uBAAuB,eAAe,CAAC,uBAAuB,eAAe,CAAC,gBAAgB,eAAe,CAAC,wBAAwB,eAAe,CAAC,4BAA4B,eAAe,CAAC,6BAA6B,eAAe,CAAC,kCAAkC,eAAe,CAAC,qBAAqB,eAAe,CAAC,wBAAwB,eAAe,CAAC,yBAAyB,eAAe,CAAC,wBAAwB,eAAe,CAAC,4BAA4B,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,sBAAsB,eAAe,CAAC,0BAA0B,eAAe,CAAC,mBAAmB,eAAe,CAAC,gBAAgB,eAAe,CAAC,iBAAiB,eAAe,CAAC,sBAAsB,eAAe,CAAC,mBAAmB,eAAe,CAAC,yBAAyB,eAAe,CAAC,kBAAkB,eAAe,CAAC,6BAA6B,eAAe,CAAC,2BAA2B,eAAe,CAAC,mBAAmB,eAAe,CAAC,oBAAoB,eAAe,CAAC,iBAAiB,eAAe,CAAC,eAAe,eAAe,CAAC,sBAAsB,eAAe,CAAC,sBAAsB,eAAe,CAAC,cAAc,eAAe,CAAC,qBAAqB,eAAe,CAAC,iBAAiB,eAAe,CAAC,gBAAgB,eAAe,CAAC,iBAAiB,eAAe,CAAC,eAAe,eAAe,CAAC,mBAAmB,eAAe,CAAC,sBAAsB,eAAe,CAAC,kBAAkB,eAAe,CAAC,sBAAsB,eAAe,CAAC,yBAAyB,eAAe,CAAC,qBAAqB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,wBAAwB,eAAe,CAAC,yBAAyB,eAAe,CAAC,6BAA6B,eAAe,CAAC,yBAAyB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,wBAAwB,eAAe,CAAC,0BAA0B,eAAe,CAAC,sBAAsB,eAAe,CAAC,wBAAwB,eAAe,CAAC,kBAAkB,eAAe,CAAC,qBAAqB,eAAe,CAAC,qBAAqB,eAAe,CAAC,uBAAuB,eAAe,CAAC,kBAAkB,eAAe,CAAC,wBAAwB,eAAe,CAAC,sBAAsB,eAAe,CAAC,uBAAuB,eAAe,CAAC,uBAAuB,eAAe,CAAC,yBAAyB,eAAe,CAAC,8BAA8B,eAAe,CAAC,yBAAyB,eAAe,CAAC,mBAAmB,eAAe,CAAC,0BAA0B,eAAe,CAAC,oBAAoB,eAAe,CAAC,gBAAgB,eAAe,CAAC,wBAAwB,eAAe,CAAC,8BAA8B,eAAe,CAAC,mBAAmB,eAAe,CAAC,gBAAgB,eAAe,CAAC,oBAAoB,eAAe,CAAC,qBAAqB,eAAe,CAAC,2BAA2B,eAAe,CAAC,uBAAuB,eAAe,CAAC,uBAAuB,eAAe,CAAC,6BAA6B,eAAe,CAAC,sBAAsB,eAAe,CAAC,sBAAsB,eAAe,CAAC,uBAAuB,eAAe,CAAC,8BAA8B,eAAe,CAAC,4BAA4B,eAAe,CAAC,qBAAqB,eAAe,CAAC,2BAA2B,eAAe,CAAC,sBAAsB,eAAe,CAAC,+BAA+B,eAAe,CAAC,yBAAyB,eAAe,CAAC,oBAAoB,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,gBAAgB,eAAe,CAAC,oBAAoB,eAAe,CAAC,uBAAuB,eAAe,CAAC,8BAA8B,eAAe,CAAC,sBAAsB,eAAe,CAAC,qBAAqB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,wBAAwB,eAAe,CAAC,8BAA8B,eAAe,CAAC,gCAAgC,eAAe,CAAC,4BAA4B,eAAe,CAAC,8BAA8B,eAAe,CAAC,uBAAuB,eAAe,CAAC,8BAA8B,eAAe,CAAC,sBAAsB,eAAe,CAAC,sBAAsB,eAAe,CAAC,2BAA2B,eAAe,CAAC,2BAA2B,eAAe,CAAC,4BAA4B,eAAe,CAAC,yBAAyB,eAAe,CAAC,wBAAwB,eAAe,CAAC,qBAAqB,eAAe,CAAC,yBAAyB,eAAe,CAAC,yBAAyB,eAAe,CAAC,sBAAsB,eAAe,CAAC,iBAAiB,eAAe,CAAC,yBAAyB,eAAe,CAAC,sBAAsB,eAAe,CAAC,qBAAqB,eAAe,CAAC,+BAA+B,eAAe,CAAC,2BAA2B,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,sBAAsB,eAAe,CAAC,2BAA2B,eAAe,CAAC,sBAAsB,eAAe,CAAC,eAAe,eAAe,CAAC,2BAA2B,eAAe,CAAC,iCAAiC,eAAe,CAAC,0BAA0B,eAAe,CAAC,2BAA2B,eAAe,CAAC,mBAAmB,eAAe,CAAC,sBAAsB,eAAe,CAAC,0BAA0B,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,wBAAwB,eAAe,CAAC,qBAAqB,eAAe,CAAC,sBAAsB,eAAe,CAAC,uBAAuB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,gBAAgB,eAAe,CAAC,yBAAyB,eAAe,CAAC,mBAAmB,eAAe,CAAC,gBAAgB,eAAe,CAAC,uBAAuB,eAAe,CAAC,uBAAuB,eAAe,CAAC,gBAAgB,eAAe,CAAC,iBAAiB,eAAe,CAAC,oBAAoB,eAAe,CAAC,iBAAiB,eAAe,CAAC,sBAAsB,eAAe,CAAC,oBAAoB,eAAe,CAAC,wBAAwB,eAAe,CAAC,2BAA2B,eAAe,CAAC,yBAAyB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,kBAAkB,eAAe,CAAC,qBAAqB,eAAe,CAAC,yBAAyB,eAAe,CAAC,0BAA0B,eAAe,CAAC,2BAA2B,eAAe,CAAC,wBAAwB,eAAe,CAAC,sBAAsB,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,oBAAoB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,uBAAuB,eAAe,CAAC,iBAAiB,eAAe,CAAC,iBAAiB,eAAe,CAAC,iBAAiB,eAAe,CAAC,kBAAkB,eAAe,CAAC,gBAAgB,eAAe,CAAC,iBAAiB,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,gBAAgB,eAAe,CAAC,uBAAuB,eAAe,CAAC,oBAAoB,eAAe,CAAC,qBAAqB,eAAe,CAAC,4BAA4B,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,6BAA6B,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,uBAAuB,eAAe,CAAC,gBAAgB,eAAe,CAAC,gBAAgB,eAAe,CAAC,sBAAsB,eAAe,CAAC,mBAAmB,eAAe,CAAC,gBAAgB,eAAe,CAAC,iBAAiB,eAAe,CAAC,iBAAiB,eAAe,CAAC,kBAAkB,eAAe,CAAC,0BAA0B,eAAe,CAAC,cAAc,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,iBAAiB,eAAe,CAAC,kBAAkB,eAAe,CAAC,eAAe,eAAe,CAAC,mBAAmB,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,uBAAuB,eAAe,CAAC,yBAAyB,eAAe,CAAC,gBAAgB,eAAe,CAAC,qBAAqB,eAAe,CAAC,2BAA2B,eAAe,CAAC,qBAAqB,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,uBAAuB,eAAe,CAAC,wBAAwB,eAAe,CAAC,0BAA0B,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,yBAAyB,eAAe,CAAC,iBAAiB,eAAe,CAAC,sBAAsB,eAAe,CAAC,wBAAwB,eAAe,CAAC,sBAAsB,eAAe,CAAC,uBAAuB,eAAe,CAAC,gBAAgB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,gBAAgB,eAAe,CAAC,qBAAqB,eAAe,CAAC,2BAA2B,eAAe,CAAC,0BAA0B,eAAe,CAAC,wBAAwB,eAAe,CAAC,qBAAqB,eAAe,CAAC,qBAAqB,eAAe,CAAC,gBAAgB,eAAe,CAAC,gBAAgB,eAAe,CAAC,oBAAoB,eAAe,CAAC,uBAAuB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,gBAAgB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,0BAA0B,eAAe,CAAC,gBAAgB,eAAe,CAAC,qBAAqB,eAAe,CAAC,+BAA+B,eAAe,CAAC,+BAA+B,eAAe,CAAC,gCAAgC,eAAe,CAAC,6BAA6B,eAAe,CAAC,sBAAsB,eAAe,CAAC,wBAAwB,eAAe,CAAC,iBAAiB,eAAe,CAAC,uBAAuB,eAAe,CAAC,gBAAgB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,kBAAkB,eAAe,CAAC,qBAAqB,eAAe,CAAC,qBAAqB,eAAe,CAAC,gBAAgB,eAAe,CAAC,uBAAuB,eAAe,CAAC,eAAe,eAAe,CAAC,sBAAsB,eAAe,CAAC,0BAA0B,eAAe,CAAC,sBAAsB,eAAe,CAAC,0BAA0B,eAAe,CAAC,mBAAmB,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,gBAAgB,eAAe,CAAC,uBAAuB,eAAe,CAAC,uBAAuB,eAAe,CAAC,yBAAyB,eAAe,CAAC,yBAAyB,eAAe,CAAC,gBAAgB,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,eAAe,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,eAAe,eAAe,CAAC,qBAAqB,eAAe,CAAC,4BAA4B,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,qBAAqB,eAAe,CAAC,qBAAqB,eAAe,CAAC,sBAAsB,eAAe,CAAC,0BAA0B,eAAe,CAAC,gCAAgC,eAAe,CAAC,4BAA4B,eAAe,CAAC,sBAAsB,eAAe,CAAC,qBAAqB,eAAe,CAAC,iBAAiB,eAAe,CAAC,wBAAwB,eAAe,CAAC,wBAAwB,eAAe,CAAC,kBAAkB,eAAe,CAAC,eAAe,eAAe,CAAC,oBAAoB,eAAe,CAAC,iBAAiB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,sBAAsB,eAAe,CAAC,gBAAgB,eAAe,CAAC,kBAAkB,eAAe,CAAC,sBAAsB,eAAe,CAAC,0BAA0B,eAAe,CAAC,2BAA2B,eAAe,CAAC,+BAA+B,eAAe,CAAC,uBAAuB,eAAe,CAAC,2BAA2B,eAAe,CAAC,oBAAoB,eAAe,CAAC,gBAAgB,eAAe,CAAC,yBAAyB,eAAe,CAAC,kBAAkB,eAAe,CAAC,sBAAsB,eAAe,CAAC,oBAAoB,eAAe,CAAC,iBAAiB,eAAe,CAAC,yBAAyB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,gBAAgB,eAAe,CAAC,yBAAyB,eAAe,CAAC,kBAAkB,eAAe,CAAC,qBAAqB,eAAe,CAAC,kBAAkB,eAAe,CAAC,gBAAgB,eAAe,CAAC,mBAAmB,eAAe,CAAC,qBAAqB,eAAe,CAAC,yBAAyB,eAAe,CAAC,eAAe,eAAe,CAAC,eAAe,eAAe,CAAC,uBAAuB,eAAe,CAAC,wBAAwB,eAAe,CAAC,0BAA0B,eAAe,CAAC,0BAA0B,eAAe,CAAC,yBAAyB,eAAe,CAAC,gCAAgC,eAAe,CAAC,mBAAmB,eAAe,CAAC,wBAAwB,eAAe,CAAC,cAAc,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,yBAAyB,eAAe,CAAC,iBAAiB,eAAe,CAAC,eAAe,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,iBAAiB,eAAe,CAAC,uBAAuB,eAAe,CAAC,wBAAwB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,uBAAuB,eAAe,CAAC,qBAAqB,eAAe,CAAC,yBAAyB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,oBAAoB,eAAe,CAAC,0BAA0B,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,wBAAwB,eAAe,CAAC,eAAe,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,eAAe,eAAe,CAAC,mBAAmB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,sBAAsB,eAAe,CAAC,sBAAsB,eAAe,CAAC,wBAAwB,eAAe,CAAC,wBAAwB,eAAe,CAAC,yBAAyB,eAAe,CAAC,wBAAwB,eAAe,CAAC,sBAAsB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,sBAAsB,eAAe,CAAC,qBAAqB,eAAe,CAAC,wBAAwB,eAAe,CAAC,uBAAuB,eAAe,CAAC,6BAA6B,eAAe,CAAC,4BAA4B,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,uBAAuB,eAAe,CAAC,wBAAwB,eAAe,CAAC,4BAA4B,eAAe,CAAC,wBAAwB,eAAe,CAAC,uBAAuB,eAAe,CAAC,eAAe,eAAe,CAAC,sBAAsB,eAAe,CAAC,0BAA0B,eAAe,CAAC,0BAA0B,eAAe,CAAC,yBAAyB,eAAe,CAAC,6BAA6B,eAAe,CAAC,sBAAsB,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,uBAAuB,eAAe,CAAC,4BAA4B,eAAe,CAAC,uBAAuB,eAAe,CAAC,4BAA4B,eAAe,CAAC,iBAAiB,eAAe,CAAC,yBAAyB,eAAe,CAAC,2BAA2B,eAAe,CAAC,uBAAuB,eAAe,CAAC,gBAAgB,eAAe,CAAC,uBAAuB,eAAe,CAAC,uBAAuB,eAAe,CAAC,gBAAgB,eAAe,CAAC,gBAAgB,eAAe,CAAC,uBAAuB,eAAe,CAAC,uBAAuB,eAAe,CAAC,mBAAmB,eAAe,CAAC,gBAAgB,eAAe,CAAC,kBAAkB,eAAe,CAAC,eAAe,eAAe,CAAC,qBAAqB,eAAe,CAAC,gBAAgB,eAAe,CAAC,oBAAoB,eAAe,CAAC,sBAAsB,eAAe,CAAC,qBAAqB,eAAe,CAAC,gBAAgB,eAAe,CAAC,yBAAyB,eAAe,CAAC,wBAAwB,eAAe,CAAC,+BAA+B,eAAe,CAAC,mCAAmC,eAAe,CAAC,iBAAiB,eAAe,CAAC,sBAAsB,eAAe,CAAC,wBAAwB,eAAe,CAAC,2BAA2B,eAAe,CAAC,wBAAwB,eAAe,CAAC,qBAAqB,eAAe,CAAC,kBAAkB,eAAe,CAAC,wBAAwB,eAAe,CAAC,kBAAkB,eAAe,CAAC,cAAc,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,2BAA2B,eAAe,CAAC,qBAAqB,eAAe,CAAC,qBAAqB,eAAe,CAAC,iBAAiB,eAAe,CAAC,sBAAsB,eAAe,CAAC,uBAAuB,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,qBAAqB,eAAe,CAAC,yBAAyB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,wBAAwB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,uBAAuB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,wBAAwB,eAAe,CAAC,mBAAmB,eAAe,CAAC,qBAAqB,eAAe,CAAC,kBAAkB,eAAe,CAAC,wBAAwB,eAAe,CAAC,yBAAyB,eAAe,CAAC,kBAAkB,eAAe,CAAC,gBAAgB,eAAe,CAAC,oBAAoB,eAAe,CAAC,sBAAsB,eAAe,CAAC,yBAAyB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,kBAAkB,eAAe,CAAC,sBAAsB,eAAe,CAAC,wBAAwB,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,eAAe,eAAe,CAAC,kBAAkB,eAAe,CAAC,gBAAgB,eAAe,CAAC,gBAAgB,eAAe,CAAC,iBAAiB,eAAe,CAAC,kBAAkB,eAAe,CAAC,sBAAsB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,eAAe,eAAe,CAAC,sBAAsB,eAAe,CAAC,sBAAsB,eAAe,CAAC,iBAAiB,eAAe,CAAC,0BAA0B,eAAe,CAAC,4BAA4B,eAAe,CAAC,0BAA0B,eAAe,CAAC,mBAAmB,eAAe,CAAC,sBAAsB,eAAe,CAAC,gBAAgB,eAAe,CAAC,mBAAmB,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,sBAAsB,eAAe,CAAC,gBAAgB,eAAe,CAAC,qBAAqB,eAAe,CAAC,0BAA0B,eAAe,CAAC,gBAAgB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,uBAAuB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,yBAAyB,eAAe,CAAC,2BAA2B,eAAe,CAAC,wBAAwB,eAAe,CAAC,uBAAuB,eAAe,CAAC,uBAAuB,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,wBAAwB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,4BAA4B,eAAe,CAAC,wBAAwB,eAAe,CAAC,uBAAuB,eAAe,CAAC,sBAAsB,eAAe,CAAC,wBAAwB,eAAe,CAAC,gBAAgB,eAAe,CAAC,yBAAyB,eAAe,CAAC,wBAAwB,eAAe,CAAC,uBAAuB,eAAe,CAAC,mBAAmB,eAAe,CAAC,wBAAwB,eAAe,CAAC,2BAA2B,eAAe,CAAC,yBAAyB,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,uBAAuB,eAAe,CAAC,gBAAgB,eAAe,CAAC,uBAAuB,eAAe,CAAC,yBAAyB,eAAe,CAAC,wBAAwB,eAAe,CAAC,kBAAkB,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,uBAAuB,eAAe,CAAC,gBAAgB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,gBAAgB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,yBAAyB,eAAe,CAAC,iBAAiB,eAAe,CAAC,4BAA4B,eAAe,CAAC,oBAAoB,eAAe,CAAC,iBAAiB,eAAe,CAAC,iBAAiB,eAAe,CAAC,sBAAsB,eAAe,CAAC,iBAAiB,eAAe,CAAC,kBAAkB,eAAe,CAAC,qBAAqB,eAAe,CAAC,sBAAsB,eAAe,CAAC,iBAAiB,eAAe,CAAC,sBAAsB,eAAe,CAAC,sBAAsB,eAAe,CAAC,gBAAgB,eAAe,CAAC,mBAAmB,eAAe,CAAC,uBAAuB,eAAe,CAAC,eAAe,eAAe,CAAC,oBAAoB,eAAe,CAAC,0BAA0B,eAAe,CAAC,2BAA2B,eAAe,CAAC,wBAAwB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,oBAAoB,eAAe,CAAC,gBAAgB,eAAe,CAAC,iBAAiB,eAAe,CAAC,uBAAuB,eAAe,CAAC,gBAAgB,eAAe,CAAC,2BAA2B,eAAe,CAAC,+BAA+B,eAAe,CAAC,yBAAyB,eAAe,CAAC,6BAA6B,eAAe,CAAC,4BAA4B,eAAe,CAAC,gCAAgC,eAAe,CAAC,0BAA0B,eAAe,CAAC,8BAA8B,eAAe,CAAC,qBAAqB,eAAe,CAAC,6BAA6B,eAAe,CAAC,iCAAiC,eAAe,CAAC,2BAA2B,eAAe,CAAC,+BAA+B,eAAe,CAAC,mBAAmB,eAAe,CAAC,sBAAsB,eAAe,CAAC,sBAAsB,eAAe,CAAC,eAAe,eAAe,CAAC,yBAAyB,eAAe,CAAC,mBAAmB,eAAe,CAAC,wBAAwB,eAAe,CAAC,uBAAuB,eAAe,CAAC,kBAAkB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,qBAAqB,eAAe,CAAC,kBAAkB,eAAe,CAAC,uBAAuB,eAAe,CAAC,2BAA2B,eAAe,CAAC,uBAAuB,eAAe,CAAC,0BAA0B,eAAe,CAAC,0BAA0B,eAAe,CAAC,qBAAqB,eAAe,CAAC,iBAAiB,eAAe,CAAC,gBAAgB,eAAe,CAAC,6BAA6B,eAAe,CAAC,qBAAqB,eAAe,CAAC,yBAAyB,eAAe,CAAC,yBAAyB,eAAe,CAAC,wBAAwB,eAAe,CAAC,sBAAsB,eAAe,CAAC,iBAAiB,eAAe,CAAC,wBAAwB,eAAe,CAAC,wBAAwB,eAAe,CAAC,yBAAyB,eAAe,CAAC,wBAAwB,eAAe,CAAC,uBAAuB,eAAe,CAAC,wBAAwB,eAAe,CAAC,uBAAuB,eAAe,CAAC,gBAAgB,eAAe,CAAC,uBAAuB,eAAe,CAAC,qBAAqB,eAAe,CAAC,wBAAwB,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,2BAA2B,eAAe,CAAC,uBAAuB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,uBAAuB,eAAe,CAAC,yBAAyB,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,uBAAuB,eAAe,CAAC,wBAAwB,eAAe,CAAC,uBAAuB,eAAe,CAAC,8BAA8B,eAAe,CAAC,qBAAqB,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,4BAA4B,eAAe,CAAC,eAAe,eAAe,CAAC,uBAAuB,eAAe,CAAC,uBAAuB,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,gBAAgB,eAAe,CAAC,sBAAsB,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,yBAAyB,eAAe,CAAC,mBAAmB,eAAe,CAAC,qBAAqB,eAAe,CAAC,gBAAgB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,wBAAwB,eAAe,CAAC,kBAAkB,eAAe,CAAC,sBAAsB,eAAe,CAAC,mBAAmB,eAAe,CAAC,0BAA0B,eAAe,CAAC,eAAe,eAAe,CAAC,gBAAgB,eAAe,CAAC,gBAAgB,eAAe,CAAC,iBAAiB,eAAe,CAAC,gBAAgB,eAAe,CAAC,qBAAqB,eAAe,CAAC,iBAAiB,eAAe,CAAC,sBAAsB,eAAe,CAAC,oBAAoB,eAAe,CAAC,0BAA0B,eAAe,CAAC,4BAA4B,eAAe,CAAC,2BAA2B,eAAe,CAAC,yBAAyB,eAAe,CAAC,iBAAiB,eAAe,CAAC,oBAAoB,eAAe,CAAC,uBAAuB,eAAe,CAAC,sBAAsB,eAAe,CAAC,cAAc,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,wBAAwB,eAAe,CAAC,yBAAyB,eAAe,CAAC,mBAAmB,eAAe,CAAC,qBAAqB,eAAe,CAAC,uBAAuB,eAAe,CAAC,6BAA6B,eAAe,CAAC,4BAA4B,eAAe,CAAC,4BAA4B,eAAe,CAAC,+BAA+B,eAAe,CAAC,sCAAsC,eAAe,CAAC,uBAAuB,eAAe,CAAC,uBAAuB,eAAe,CAAC,qBAAqB,eAAe,CAAC,qBAAqB,eAAe,CAAC,sBAAsB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,wBAAwB,eAAe,CAAC,gBAAgB,eAAe,CAAC,sBAAsB,eAAe,CAAC,iBAAiB,eAAe,CAAC,sBAAsB,eAAe,CAAC,qBAAqB,eAAe,CAAC,kBAAkB,eAAe,CAAC,wBAAwB,eAAe,CAAC,8BAA8B,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,iBAAiB,eAAe,CAAC,iBAAiB,eAAe,CAAC,sBAAsB,eAAe,CAAC,mBAAmB,eAAe,CAAC,4BAA4B,eAAe,CAAC,qBAAqB,eAAe,CAAC,yBAAyB,eAAe,CAAC,mBAAmB,eAAe,CAAC,iBAAiB,eAAe,CAAC,gBAAgB,eAAe,CAAC,uBAAuB,eAAe,CAAC,2BAA2B,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,yBAAyB,eAAe,CAAC,6BAA6B,eAAe,CAAC,gBAAgB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,yBAAyB,eAAe,CAAC,yBAAyB,eAAe,CAAC,wBAAwB,eAAe,CAAC,wBAAwB,eAAe,CAAC,kBAAkB,eAAe,CAAC,eAAe,eAAe,CAAC,kBAAkB,eAAe,CAAC,yBAAyB,eAAe,CAAC,cAAc,eAAe,CAAC,kBAAkB,eAAe,CAAC,mBAAmB,eAAe,CAAC,0BAA0B,eAAe,CAAC,iBAAiB,eAAe,CAAC,gBAAgB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,oBAAoB,eAAe,CAAC,0BAA0B,eAAe,CAAC,qBAAqB,eAAe,CAAC,qBAAqB,eAAe,CAAC,gBAAgB,eAAe,CAAC,oBAAoB,eAAe,CAAC,uBAAuB,eAAe,CAAC,iBAAiB,eAAe,CAAC,4BAA4B,eAAe,CAAC,sBAAsB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,sBAAsB,eAAe,CAAC,oBAAoB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,eAAe,eAAe,CAAC,eAAe,eAAe,CAAC,gBAAgB,eAAe,CAAC,oBAAoB,eAAe,CAAC,0BAA0B,eAAe,CAAC,0BAA0B,eAAe,CAAC,sBAAsB,eAAe,CAAC,uBAAuB,eAAe,CAAC,sBAAsB,eAAe,CAAC,oBAAoB,eAAe,CAAC,qBAAqB,eAAe,CAAC,wBAAwB,eAAe,CAAC,yBAAyB,eAAe,CAAC,wBAAwB,eAAe,CAAC,qBAAqB,eAAe,CAAC,mBAAmB,eAAe,CAAC,sBAAsB,eAAe,CAAC,sBAAsB,eAAe,CAAC,sBAAsB,eAAe,CAAC,qBAAqB,eAAe,CAAC,uBAAuB,eAAe,CAAC,uBAAuB,eAAe,CAAC,sBAAsB,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,sBAAsB,eAAe,CAAC,iBAAiB,eAAe,CAAC,qBAAqB,eAAe,CAAC,uBAAuB,eAAe,CAAC,gBAAgB,eAAe,CAAC,oBAAoB,eAAe,CAAC,yBAAyB,eAAe,CAAC,oBAAoB,eAAe,CAAC,kBAAkB,eAAe,CAAC,yBAAyB,eAAe,CAAC,iBAAiB,eAAe,CAAC,wBAAwB,eAAe,CAAC,sBAAsB,eAAe,CAAC,gBAAgB,eAAe,CAAC,wBAAwB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,yBAAyB,eAAe,CAAC,gBAAgB,eAAe,CAAC,iBAAiB,eAAe,CAAC,iBAAiB,eAAe,CAAC,iBAAiB,eAAe,CAAC,uBAAuB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,wBAAwB,eAAe,CAAC,mBAAmB,eAAe,CAAC,gBAAgB,eAAe,CAAC,iBAAiB,eAAe,CAAC,uBAAuB,eAAe,CAAC,mBAAmB,eAAe,CAAC,cAAc,eAAe,CAAC,eAAe,eAAe,CAAC,qBAAqB,eAAe,CAAC,2BAA2B,eAAe,CAAC,uBAAuB,eAAe,CAAC,uBAAuB,eAAe,CAAC,sBAAsB,eAAe,CAAC,qBAAqB,eAAe,CAAC,oBAAoB,eAAe,CAAC,wBAAwB,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,qBAAqB,eAAe,CAAC,+BAA+B,eAAe,CAAC,iBAAiB,eAAe,CAAC,uBAAuB,eAAe,CAAC,gBAAgB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,kBAAkB,eAAe,CAAC,0BAA0B,eAAe,CAAC,kBAAkB,eAAe,CAAC,oBAAoB,eAAe,CAAC,2BAA2B,eAAe,CAAC,sBAAsB,eAAe,CAAC,iBAAiB,eAAe,CAAC,gBAAgB,eAAe,CAAC,uBAAuB,eAAe,CAAC,gBAAgB,eAAe,CAAC,wBAAwB,eAAe,CAAC,2BAA2B,eAAe,CAAC,2BAA2B,eAAe,CAAC,0BAA0B,eAAe,CAAC,mBAAmB,eAAe,CAAC,uBAAuB,eAAe,CAAC,sBAAsB,eAAe,CAAC,0BAA0B,eAAe,CAAC,eAAe,eAAe,CAAC,gCAAgC,eAAe,CAAC,gBAAgB,eAAe,CAAC,+BAA+B,eAAe,CAAC,oBAAoB,eAAe,CAAC,qBAAqB,eAAe,CAAC,4BAA4B,eAAe,CAAC,sBAAsB,eAAe,CAAC,sBAAsB,eAAe,CAAC,mBAAmB,eAAe,CAAC,mBAAmB,eAAe,CAAC,kBAAkB,eAAe,CAAC,iBAAiB,eAAe,CAAC,gBAAgB,eAAe,CAAC,gBAAgB,eAAe,CAAC,uBAAuB,eAAe,CAAC,wBAAwB,eAAe,CAAC,iBAAiB,eAAe,CAAC,kBAAkB,eAAe,CAAC,kBAAkB,eAAe,CAAC,gCAAgC,eAAe,CAAC,gBAAgB,eAAe,CAAC,gBAAgB,eAAe,CAAC,oBAAoB,eAAe,CAAC,oBAAoB,eAAe,CAAC,iBAAiB,eAAe,CAAC,mBAAmB,eAAe,CAAC,0BAA0B,eAAe,CAAC,iBAAiB,eAAe,CAAC,SAAS,QAAQ,CAAC,kBAAkB,CAAC,UAAU,CAAC,WAAW,CAAC,eAAe,CAAC,SAAS,CAAC,iBAAiB,CAAC,SAAS,CAAC,mDAAmD,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,gBAAgB,CAAC,eAAe,CAAC,UAAU,CAAC,WAAW,mCAAmC,CAAC,iBAAiB,CAAC,eAAe,CAAC,kBAAkB,CAAC,2CAAsC,CAAC,uSAAoS,CAAC,KAAK,mCAAmC,CAAC,WAAW,iCAAiC,CAAC,iBAAiB,CAAC,eAAe,CAAC,kBAAkB,CAAC,2CAAuC,CAAC,ySAAyS,CAAC,UAAU,eAAe,CAAC,WAAW,iCAAiC,CAAC,iBAAiB,CAAC,eAAe,CAAC,kBAAkB,CAAC,4CAAqC,CAAC,4SAA+R,CAAC,cAAc,iCAAiC,CAAC,SAAS,eAAe","sourcesContent":["/*!\n * Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com\n * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)\n */\n.fa,.fab,.fad,.fal,.far,.fas{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:inline-block;font-style:normal;font-variant:normal;text-rendering:auto;line-height:1}.fa-lg{font-size:1.33333em;line-height:.75em;vertical-align:-.0667em}.fa-xs{font-size:.75em}.fa-sm{font-size:.875em}.fa-1x{font-size:1em}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-6x{font-size:6em}.fa-7x{font-size:7em}.fa-8x{font-size:8em}.fa-9x{font-size:9em}.fa-10x{font-size:10em}.fa-fw{text-align:center;width:1.25em}.fa-ul{list-style-type:none;margin-left:2.5em;padding-left:0}.fa-ul>li{position:relative}.fa-li{left:-2em;position:absolute;text-align:center;width:2em;line-height:inherit}.fa-border{border:.08em solid #eee;border-radius:.1em;padding:.2em .25em .15em}.fa-pull-left{float:left}.fa-pull-right{float:right}.fa.fa-pull-left,.fab.fa-pull-left,.fal.fa-pull-left,.far.fa-pull-left,.fas.fa-pull-left{margin-right:.3em}.fa.fa-pull-right,.fab.fa-pull-right,.fal.fa-pull-right,.far.fa-pull-right,.fas.fa-pull-right{margin-left:.3em}.fa-spin{-webkit-animation:fa-spin 2s linear infinite;animation:fa-spin 2s linear infinite}.fa-pulse{-webkit-animation:fa-spin 1s steps(8) infinite;animation:fa-spin 1s steps(8) infinite}@-webkit-keyframes fa-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@keyframes fa-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}.fa-rotate-90{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=1)\";-webkit-transform:rotate(90deg);transform:rotate(90deg)}.fa-rotate-180{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2)\";-webkit-transform:rotate(180deg);transform:rotate(180deg)}.fa-rotate-270{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=3)\";-webkit-transform:rotate(270deg);transform:rotate(270deg)}.fa-flip-horizontal{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)\";-webkit-transform:scaleX(-1);transform:scaleX(-1)}.fa-flip-vertical{-webkit-transform:scaleY(-1);transform:scaleY(-1)}.fa-flip-both,.fa-flip-horizontal.fa-flip-vertical,.fa-flip-vertical{-ms-filter:\"progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)\"}.fa-flip-both,.fa-flip-horizontal.fa-flip-vertical{-webkit-transform:scale(-1);transform:scale(-1)}:root .fa-flip-both,:root .fa-flip-horizontal,:root .fa-flip-vertical,:root .fa-rotate-90,:root .fa-rotate-180,:root .fa-rotate-270{-webkit-filter:none;filter:none}.fa-stack{display:inline-block;height:2em;line-height:2em;position:relative;vertical-align:middle;width:2.5em}.fa-stack-1x,.fa-stack-2x{left:0;position:absolute;text-align:center;width:100%}.fa-stack-1x{line-height:inherit}.fa-stack-2x{font-size:2em}.fa-inverse{color:#fff}.fa-500px:before{content:\"\\f26e\"}.fa-accessible-icon:before{content:\"\\f368\"}.fa-accusoft:before{content:\"\\f369\"}.fa-acquisitions-incorporated:before{content:\"\\f6af\"}.fa-ad:before{content:\"\\f641\"}.fa-address-book:before{content:\"\\f2b9\"}.fa-address-card:before{content:\"\\f2bb\"}.fa-adjust:before{content:\"\\f042\"}.fa-adn:before{content:\"\\f170\"}.fa-adversal:before{content:\"\\f36a\"}.fa-affiliatetheme:before{content:\"\\f36b\"}.fa-air-freshener:before{content:\"\\f5d0\"}.fa-airbnb:before{content:\"\\f834\"}.fa-algolia:before{content:\"\\f36c\"}.fa-align-center:before{content:\"\\f037\"}.fa-align-justify:before{content:\"\\f039\"}.fa-align-left:before{content:\"\\f036\"}.fa-align-right:before{content:\"\\f038\"}.fa-alipay:before{content:\"\\f642\"}.fa-allergies:before{content:\"\\f461\"}.fa-amazon:before{content:\"\\f270\"}.fa-amazon-pay:before{content:\"\\f42c\"}.fa-ambulance:before{content:\"\\f0f9\"}.fa-american-sign-language-interpreting:before{content:\"\\f2a3\"}.fa-amilia:before{content:\"\\f36d\"}.fa-anchor:before{content:\"\\f13d\"}.fa-android:before{content:\"\\f17b\"}.fa-angellist:before{content:\"\\f209\"}.fa-angle-double-down:before{content:\"\\f103\"}.fa-angle-double-left:before{content:\"\\f100\"}.fa-angle-double-right:before{content:\"\\f101\"}.fa-angle-double-up:before{content:\"\\f102\"}.fa-angle-down:before{content:\"\\f107\"}.fa-angle-left:before{content:\"\\f104\"}.fa-angle-right:before{content:\"\\f105\"}.fa-angle-up:before{content:\"\\f106\"}.fa-angry:before{content:\"\\f556\"}.fa-angrycreative:before{content:\"\\f36e\"}.fa-angular:before{content:\"\\f420\"}.fa-ankh:before{content:\"\\f644\"}.fa-app-store:before{content:\"\\f36f\"}.fa-app-store-ios:before{content:\"\\f370\"}.fa-apper:before{content:\"\\f371\"}.fa-apple:before{content:\"\\f179\"}.fa-apple-alt:before{content:\"\\f5d1\"}.fa-apple-pay:before{content:\"\\f415\"}.fa-archive:before{content:\"\\f187\"}.fa-archway:before{content:\"\\f557\"}.fa-arrow-alt-circle-down:before{content:\"\\f358\"}.fa-arrow-alt-circle-left:before{content:\"\\f359\"}.fa-arrow-alt-circle-right:before{content:\"\\f35a\"}.fa-arrow-alt-circle-up:before{content:\"\\f35b\"}.fa-arrow-circle-down:before{content:\"\\f0ab\"}.fa-arrow-circle-left:before{content:\"\\f0a8\"}.fa-arrow-circle-right:before{content:\"\\f0a9\"}.fa-arrow-circle-up:before{content:\"\\f0aa\"}.fa-arrow-down:before{content:\"\\f063\"}.fa-arrow-left:before{content:\"\\f060\"}.fa-arrow-right:before{content:\"\\f061\"}.fa-arrow-up:before{content:\"\\f062\"}.fa-arrows-alt:before{content:\"\\f0b2\"}.fa-arrows-alt-h:before{content:\"\\f337\"}.fa-arrows-alt-v:before{content:\"\\f338\"}.fa-artstation:before{content:\"\\f77a\"}.fa-assistive-listening-systems:before{content:\"\\f2a2\"}.fa-asterisk:before{content:\"\\f069\"}.fa-asymmetrik:before{content:\"\\f372\"}.fa-at:before{content:\"\\f1fa\"}.fa-atlas:before{content:\"\\f558\"}.fa-atlassian:before{content:\"\\f77b\"}.fa-atom:before{content:\"\\f5d2\"}.fa-audible:before{content:\"\\f373\"}.fa-audio-description:before{content:\"\\f29e\"}.fa-autoprefixer:before{content:\"\\f41c\"}.fa-avianex:before{content:\"\\f374\"}.fa-aviato:before{content:\"\\f421\"}.fa-award:before{content:\"\\f559\"}.fa-aws:before{content:\"\\f375\"}.fa-baby:before{content:\"\\f77c\"}.fa-baby-carriage:before{content:\"\\f77d\"}.fa-backspace:before{content:\"\\f55a\"}.fa-backward:before{content:\"\\f04a\"}.fa-bacon:before{content:\"\\f7e5\"}.fa-bacteria:before{content:\"\\e059\"}.fa-bacterium:before{content:\"\\e05a\"}.fa-bahai:before{content:\"\\f666\"}.fa-balance-scale:before{content:\"\\f24e\"}.fa-balance-scale-left:before{content:\"\\f515\"}.fa-balance-scale-right:before{content:\"\\f516\"}.fa-ban:before{content:\"\\f05e\"}.fa-band-aid:before{content:\"\\f462\"}.fa-bandcamp:before{content:\"\\f2d5\"}.fa-barcode:before{content:\"\\f02a\"}.fa-bars:before{content:\"\\f0c9\"}.fa-baseball-ball:before{content:\"\\f433\"}.fa-basketball-ball:before{content:\"\\f434\"}.fa-bath:before{content:\"\\f2cd\"}.fa-battery-empty:before{content:\"\\f244\"}.fa-battery-full:before{content:\"\\f240\"}.fa-battery-half:before{content:\"\\f242\"}.fa-battery-quarter:before{content:\"\\f243\"}.fa-battery-three-quarters:before{content:\"\\f241\"}.fa-battle-net:before{content:\"\\f835\"}.fa-bed:before{content:\"\\f236\"}.fa-beer:before{content:\"\\f0fc\"}.fa-behance:before{content:\"\\f1b4\"}.fa-behance-square:before{content:\"\\f1b5\"}.fa-bell:before{content:\"\\f0f3\"}.fa-bell-slash:before{content:\"\\f1f6\"}.fa-bezier-curve:before{content:\"\\f55b\"}.fa-bible:before{content:\"\\f647\"}.fa-bicycle:before{content:\"\\f206\"}.fa-biking:before{content:\"\\f84a\"}.fa-bimobject:before{content:\"\\f378\"}.fa-binoculars:before{content:\"\\f1e5\"}.fa-biohazard:before{content:\"\\f780\"}.fa-birthday-cake:before{content:\"\\f1fd\"}.fa-bitbucket:before{content:\"\\f171\"}.fa-bitcoin:before{content:\"\\f379\"}.fa-bity:before{content:\"\\f37a\"}.fa-black-tie:before{content:\"\\f27e\"}.fa-blackberry:before{content:\"\\f37b\"}.fa-blender:before{content:\"\\f517\"}.fa-blender-phone:before{content:\"\\f6b6\"}.fa-blind:before{content:\"\\f29d\"}.fa-blog:before{content:\"\\f781\"}.fa-blogger:before{content:\"\\f37c\"}.fa-blogger-b:before{content:\"\\f37d\"}.fa-bluetooth:before{content:\"\\f293\"}.fa-bluetooth-b:before{content:\"\\f294\"}.fa-bold:before{content:\"\\f032\"}.fa-bolt:before{content:\"\\f0e7\"}.fa-bomb:before{content:\"\\f1e2\"}.fa-bone:before{content:\"\\f5d7\"}.fa-bong:before{content:\"\\f55c\"}.fa-book:before{content:\"\\f02d\"}.fa-book-dead:before{content:\"\\f6b7\"}.fa-book-medical:before{content:\"\\f7e6\"}.fa-book-open:before{content:\"\\f518\"}.fa-book-reader:before{content:\"\\f5da\"}.fa-bookmark:before{content:\"\\f02e\"}.fa-bootstrap:before{content:\"\\f836\"}.fa-border-all:before{content:\"\\f84c\"}.fa-border-none:before{content:\"\\f850\"}.fa-border-style:before{content:\"\\f853\"}.fa-bowling-ball:before{content:\"\\f436\"}.fa-box:before{content:\"\\f466\"}.fa-box-open:before{content:\"\\f49e\"}.fa-box-tissue:before{content:\"\\e05b\"}.fa-boxes:before{content:\"\\f468\"}.fa-braille:before{content:\"\\f2a1\"}.fa-brain:before{content:\"\\f5dc\"}.fa-bread-slice:before{content:\"\\f7ec\"}.fa-briefcase:before{content:\"\\f0b1\"}.fa-briefcase-medical:before{content:\"\\f469\"}.fa-broadcast-tower:before{content:\"\\f519\"}.fa-broom:before{content:\"\\f51a\"}.fa-brush:before{content:\"\\f55d\"}.fa-btc:before{content:\"\\f15a\"}.fa-buffer:before{content:\"\\f837\"}.fa-bug:before{content:\"\\f188\"}.fa-building:before{content:\"\\f1ad\"}.fa-bullhorn:before{content:\"\\f0a1\"}.fa-bullseye:before{content:\"\\f140\"}.fa-burn:before{content:\"\\f46a\"}.fa-buromobelexperte:before{content:\"\\f37f\"}.fa-bus:before{content:\"\\f207\"}.fa-bus-alt:before{content:\"\\f55e\"}.fa-business-time:before{content:\"\\f64a\"}.fa-buy-n-large:before{content:\"\\f8a6\"}.fa-buysellads:before{content:\"\\f20d\"}.fa-calculator:before{content:\"\\f1ec\"}.fa-calendar:before{content:\"\\f133\"}.fa-calendar-alt:before{content:\"\\f073\"}.fa-calendar-check:before{content:\"\\f274\"}.fa-calendar-day:before{content:\"\\f783\"}.fa-calendar-minus:before{content:\"\\f272\"}.fa-calendar-plus:before{content:\"\\f271\"}.fa-calendar-times:before{content:\"\\f273\"}.fa-calendar-week:before{content:\"\\f784\"}.fa-camera:before{content:\"\\f030\"}.fa-camera-retro:before{content:\"\\f083\"}.fa-campground:before{content:\"\\f6bb\"}.fa-canadian-maple-leaf:before{content:\"\\f785\"}.fa-candy-cane:before{content:\"\\f786\"}.fa-cannabis:before{content:\"\\f55f\"}.fa-capsules:before{content:\"\\f46b\"}.fa-car:before{content:\"\\f1b9\"}.fa-car-alt:before{content:\"\\f5de\"}.fa-car-battery:before{content:\"\\f5df\"}.fa-car-crash:before{content:\"\\f5e1\"}.fa-car-side:before{content:\"\\f5e4\"}.fa-caravan:before{content:\"\\f8ff\"}.fa-caret-down:before{content:\"\\f0d7\"}.fa-caret-left:before{content:\"\\f0d9\"}.fa-caret-right:before{content:\"\\f0da\"}.fa-caret-square-down:before{content:\"\\f150\"}.fa-caret-square-left:before{content:\"\\f191\"}.fa-caret-square-right:before{content:\"\\f152\"}.fa-caret-square-up:before{content:\"\\f151\"}.fa-caret-up:before{content:\"\\f0d8\"}.fa-carrot:before{content:\"\\f787\"}.fa-cart-arrow-down:before{content:\"\\f218\"}.fa-cart-plus:before{content:\"\\f217\"}.fa-cash-register:before{content:\"\\f788\"}.fa-cat:before{content:\"\\f6be\"}.fa-cc-amazon-pay:before{content:\"\\f42d\"}.fa-cc-amex:before{content:\"\\f1f3\"}.fa-cc-apple-pay:before{content:\"\\f416\"}.fa-cc-diners-club:before{content:\"\\f24c\"}.fa-cc-discover:before{content:\"\\f1f2\"}.fa-cc-jcb:before{content:\"\\f24b\"}.fa-cc-mastercard:before{content:\"\\f1f1\"}.fa-cc-paypal:before{content:\"\\f1f4\"}.fa-cc-stripe:before{content:\"\\f1f5\"}.fa-cc-visa:before{content:\"\\f1f0\"}.fa-centercode:before{content:\"\\f380\"}.fa-centos:before{content:\"\\f789\"}.fa-certificate:before{content:\"\\f0a3\"}.fa-chair:before{content:\"\\f6c0\"}.fa-chalkboard:before{content:\"\\f51b\"}.fa-chalkboard-teacher:before{content:\"\\f51c\"}.fa-charging-station:before{content:\"\\f5e7\"}.fa-chart-area:before{content:\"\\f1fe\"}.fa-chart-bar:before{content:\"\\f080\"}.fa-chart-line:before{content:\"\\f201\"}.fa-chart-pie:before{content:\"\\f200\"}.fa-check:before{content:\"\\f00c\"}.fa-check-circle:before{content:\"\\f058\"}.fa-check-double:before{content:\"\\f560\"}.fa-check-square:before{content:\"\\f14a\"}.fa-cheese:before{content:\"\\f7ef\"}.fa-chess:before{content:\"\\f439\"}.fa-chess-bishop:before{content:\"\\f43a\"}.fa-chess-board:before{content:\"\\f43c\"}.fa-chess-king:before{content:\"\\f43f\"}.fa-chess-knight:before{content:\"\\f441\"}.fa-chess-pawn:before{content:\"\\f443\"}.fa-chess-queen:before{content:\"\\f445\"}.fa-chess-rook:before{content:\"\\f447\"}.fa-chevron-circle-down:before{content:\"\\f13a\"}.fa-chevron-circle-left:before{content:\"\\f137\"}.fa-chevron-circle-right:before{content:\"\\f138\"}.fa-chevron-circle-up:before{content:\"\\f139\"}.fa-chevron-down:before{content:\"\\f078\"}.fa-chevron-left:before{content:\"\\f053\"}.fa-chevron-right:before{content:\"\\f054\"}.fa-chevron-up:before{content:\"\\f077\"}.fa-child:before{content:\"\\f1ae\"}.fa-chrome:before{content:\"\\f268\"}.fa-chromecast:before{content:\"\\f838\"}.fa-church:before{content:\"\\f51d\"}.fa-circle:before{content:\"\\f111\"}.fa-circle-notch:before{content:\"\\f1ce\"}.fa-city:before{content:\"\\f64f\"}.fa-clinic-medical:before{content:\"\\f7f2\"}.fa-clipboard:before{content:\"\\f328\"}.fa-clipboard-check:before{content:\"\\f46c\"}.fa-clipboard-list:before{content:\"\\f46d\"}.fa-clock:before{content:\"\\f017\"}.fa-clone:before{content:\"\\f24d\"}.fa-closed-captioning:before{content:\"\\f20a\"}.fa-cloud:before{content:\"\\f0c2\"}.fa-cloud-download-alt:before{content:\"\\f381\"}.fa-cloud-meatball:before{content:\"\\f73b\"}.fa-cloud-moon:before{content:\"\\f6c3\"}.fa-cloud-moon-rain:before{content:\"\\f73c\"}.fa-cloud-rain:before{content:\"\\f73d\"}.fa-cloud-showers-heavy:before{content:\"\\f740\"}.fa-cloud-sun:before{content:\"\\f6c4\"}.fa-cloud-sun-rain:before{content:\"\\f743\"}.fa-cloud-upload-alt:before{content:\"\\f382\"}.fa-cloudflare:before{content:\"\\e07d\"}.fa-cloudscale:before{content:\"\\f383\"}.fa-cloudsmith:before{content:\"\\f384\"}.fa-cloudversify:before{content:\"\\f385\"}.fa-cocktail:before{content:\"\\f561\"}.fa-code:before{content:\"\\f121\"}.fa-code-branch:before{content:\"\\f126\"}.fa-codepen:before{content:\"\\f1cb\"}.fa-codiepie:before{content:\"\\f284\"}.fa-coffee:before{content:\"\\f0f4\"}.fa-cog:before{content:\"\\f013\"}.fa-cogs:before{content:\"\\f085\"}.fa-coins:before{content:\"\\f51e\"}.fa-columns:before{content:\"\\f0db\"}.fa-comment:before{content:\"\\f075\"}.fa-comment-alt:before{content:\"\\f27a\"}.fa-comment-dollar:before{content:\"\\f651\"}.fa-comment-dots:before{content:\"\\f4ad\"}.fa-comment-medical:before{content:\"\\f7f5\"}.fa-comment-slash:before{content:\"\\f4b3\"}.fa-comments:before{content:\"\\f086\"}.fa-comments-dollar:before{content:\"\\f653\"}.fa-compact-disc:before{content:\"\\f51f\"}.fa-compass:before{content:\"\\f14e\"}.fa-compress:before{content:\"\\f066\"}.fa-compress-alt:before{content:\"\\f422\"}.fa-compress-arrows-alt:before{content:\"\\f78c\"}.fa-concierge-bell:before{content:\"\\f562\"}.fa-confluence:before{content:\"\\f78d\"}.fa-connectdevelop:before{content:\"\\f20e\"}.fa-contao:before{content:\"\\f26d\"}.fa-cookie:before{content:\"\\f563\"}.fa-cookie-bite:before{content:\"\\f564\"}.fa-copy:before{content:\"\\f0c5\"}.fa-copyright:before{content:\"\\f1f9\"}.fa-cotton-bureau:before{content:\"\\f89e\"}.fa-couch:before{content:\"\\f4b8\"}.fa-cpanel:before{content:\"\\f388\"}.fa-creative-commons:before{content:\"\\f25e\"}.fa-creative-commons-by:before{content:\"\\f4e7\"}.fa-creative-commons-nc:before{content:\"\\f4e8\"}.fa-creative-commons-nc-eu:before{content:\"\\f4e9\"}.fa-creative-commons-nc-jp:before{content:\"\\f4ea\"}.fa-creative-commons-nd:before{content:\"\\f4eb\"}.fa-creative-commons-pd:before{content:\"\\f4ec\"}.fa-creative-commons-pd-alt:before{content:\"\\f4ed\"}.fa-creative-commons-remix:before{content:\"\\f4ee\"}.fa-creative-commons-sa:before{content:\"\\f4ef\"}.fa-creative-commons-sampling:before{content:\"\\f4f0\"}.fa-creative-commons-sampling-plus:before{content:\"\\f4f1\"}.fa-creative-commons-share:before{content:\"\\f4f2\"}.fa-creative-commons-zero:before{content:\"\\f4f3\"}.fa-credit-card:before{content:\"\\f09d\"}.fa-critical-role:before{content:\"\\f6c9\"}.fa-crop:before{content:\"\\f125\"}.fa-crop-alt:before{content:\"\\f565\"}.fa-cross:before{content:\"\\f654\"}.fa-crosshairs:before{content:\"\\f05b\"}.fa-crow:before{content:\"\\f520\"}.fa-crown:before{content:\"\\f521\"}.fa-crutch:before{content:\"\\f7f7\"}.fa-css3:before{content:\"\\f13c\"}.fa-css3-alt:before{content:\"\\f38b\"}.fa-cube:before{content:\"\\f1b2\"}.fa-cubes:before{content:\"\\f1b3\"}.fa-cut:before{content:\"\\f0c4\"}.fa-cuttlefish:before{content:\"\\f38c\"}.fa-d-and-d:before{content:\"\\f38d\"}.fa-d-and-d-beyond:before{content:\"\\f6ca\"}.fa-dailymotion:before{content:\"\\e052\"}.fa-dashcube:before{content:\"\\f210\"}.fa-database:before{content:\"\\f1c0\"}.fa-deaf:before{content:\"\\f2a4\"}.fa-deezer:before{content:\"\\e077\"}.fa-delicious:before{content:\"\\f1a5\"}.fa-democrat:before{content:\"\\f747\"}.fa-deploydog:before{content:\"\\f38e\"}.fa-deskpro:before{content:\"\\f38f\"}.fa-desktop:before{content:\"\\f108\"}.fa-dev:before{content:\"\\f6cc\"}.fa-deviantart:before{content:\"\\f1bd\"}.fa-dharmachakra:before{content:\"\\f655\"}.fa-dhl:before{content:\"\\f790\"}.fa-diagnoses:before{content:\"\\f470\"}.fa-diaspora:before{content:\"\\f791\"}.fa-dice:before{content:\"\\f522\"}.fa-dice-d20:before{content:\"\\f6cf\"}.fa-dice-d6:before{content:\"\\f6d1\"}.fa-dice-five:before{content:\"\\f523\"}.fa-dice-four:before{content:\"\\f524\"}.fa-dice-one:before{content:\"\\f525\"}.fa-dice-six:before{content:\"\\f526\"}.fa-dice-three:before{content:\"\\f527\"}.fa-dice-two:before{content:\"\\f528\"}.fa-digg:before{content:\"\\f1a6\"}.fa-digital-ocean:before{content:\"\\f391\"}.fa-digital-tachograph:before{content:\"\\f566\"}.fa-directions:before{content:\"\\f5eb\"}.fa-discord:before{content:\"\\f392\"}.fa-discourse:before{content:\"\\f393\"}.fa-disease:before{content:\"\\f7fa\"}.fa-divide:before{content:\"\\f529\"}.fa-dizzy:before{content:\"\\f567\"}.fa-dna:before{content:\"\\f471\"}.fa-dochub:before{content:\"\\f394\"}.fa-docker:before{content:\"\\f395\"}.fa-dog:before{content:\"\\f6d3\"}.fa-dollar-sign:before{content:\"\\f155\"}.fa-dolly:before{content:\"\\f472\"}.fa-dolly-flatbed:before{content:\"\\f474\"}.fa-donate:before{content:\"\\f4b9\"}.fa-door-closed:before{content:\"\\f52a\"}.fa-door-open:before{content:\"\\f52b\"}.fa-dot-circle:before{content:\"\\f192\"}.fa-dove:before{content:\"\\f4ba\"}.fa-download:before{content:\"\\f019\"}.fa-draft2digital:before{content:\"\\f396\"}.fa-drafting-compass:before{content:\"\\f568\"}.fa-dragon:before{content:\"\\f6d5\"}.fa-draw-polygon:before{content:\"\\f5ee\"}.fa-dribbble:before{content:\"\\f17d\"}.fa-dribbble-square:before{content:\"\\f397\"}.fa-dropbox:before{content:\"\\f16b\"}.fa-drum:before{content:\"\\f569\"}.fa-drum-steelpan:before{content:\"\\f56a\"}.fa-drumstick-bite:before{content:\"\\f6d7\"}.fa-drupal:before{content:\"\\f1a9\"}.fa-dumbbell:before{content:\"\\f44b\"}.fa-dumpster:before{content:\"\\f793\"}.fa-dumpster-fire:before{content:\"\\f794\"}.fa-dungeon:before{content:\"\\f6d9\"}.fa-dyalog:before{content:\"\\f399\"}.fa-earlybirds:before{content:\"\\f39a\"}.fa-ebay:before{content:\"\\f4f4\"}.fa-edge:before{content:\"\\f282\"}.fa-edge-legacy:before{content:\"\\e078\"}.fa-edit:before{content:\"\\f044\"}.fa-egg:before{content:\"\\f7fb\"}.fa-eject:before{content:\"\\f052\"}.fa-elementor:before{content:\"\\f430\"}.fa-ellipsis-h:before{content:\"\\f141\"}.fa-ellipsis-v:before{content:\"\\f142\"}.fa-ello:before{content:\"\\f5f1\"}.fa-ember:before{content:\"\\f423\"}.fa-empire:before{content:\"\\f1d1\"}.fa-envelope:before{content:\"\\f0e0\"}.fa-envelope-open:before{content:\"\\f2b6\"}.fa-envelope-open-text:before{content:\"\\f658\"}.fa-envelope-square:before{content:\"\\f199\"}.fa-envira:before{content:\"\\f299\"}.fa-equals:before{content:\"\\f52c\"}.fa-eraser:before{content:\"\\f12d\"}.fa-erlang:before{content:\"\\f39d\"}.fa-ethereum:before{content:\"\\f42e\"}.fa-ethernet:before{content:\"\\f796\"}.fa-etsy:before{content:\"\\f2d7\"}.fa-euro-sign:before{content:\"\\f153\"}.fa-evernote:before{content:\"\\f839\"}.fa-exchange-alt:before{content:\"\\f362\"}.fa-exclamation:before{content:\"\\f12a\"}.fa-exclamation-circle:before{content:\"\\f06a\"}.fa-exclamation-triangle:before{content:\"\\f071\"}.fa-expand:before{content:\"\\f065\"}.fa-expand-alt:before{content:\"\\f424\"}.fa-expand-arrows-alt:before{content:\"\\f31e\"}.fa-expeditedssl:before{content:\"\\f23e\"}.fa-external-link-alt:before{content:\"\\f35d\"}.fa-external-link-square-alt:before{content:\"\\f360\"}.fa-eye:before{content:\"\\f06e\"}.fa-eye-dropper:before{content:\"\\f1fb\"}.fa-eye-slash:before{content:\"\\f070\"}.fa-facebook:before{content:\"\\f09a\"}.fa-facebook-f:before{content:\"\\f39e\"}.fa-facebook-messenger:before{content:\"\\f39f\"}.fa-facebook-square:before{content:\"\\f082\"}.fa-fan:before{content:\"\\f863\"}.fa-fantasy-flight-games:before{content:\"\\f6dc\"}.fa-fast-backward:before{content:\"\\f049\"}.fa-fast-forward:before{content:\"\\f050\"}.fa-faucet:before{content:\"\\e005\"}.fa-fax:before{content:\"\\f1ac\"}.fa-feather:before{content:\"\\f52d\"}.fa-feather-alt:before{content:\"\\f56b\"}.fa-fedex:before{content:\"\\f797\"}.fa-fedora:before{content:\"\\f798\"}.fa-female:before{content:\"\\f182\"}.fa-fighter-jet:before{content:\"\\f0fb\"}.fa-figma:before{content:\"\\f799\"}.fa-file:before{content:\"\\f15b\"}.fa-file-alt:before{content:\"\\f15c\"}.fa-file-archive:before{content:\"\\f1c6\"}.fa-file-audio:before{content:\"\\f1c7\"}.fa-file-code:before{content:\"\\f1c9\"}.fa-file-contract:before{content:\"\\f56c\"}.fa-file-csv:before{content:\"\\f6dd\"}.fa-file-download:before{content:\"\\f56d\"}.fa-file-excel:before{content:\"\\f1c3\"}.fa-file-export:before{content:\"\\f56e\"}.fa-file-image:before{content:\"\\f1c5\"}.fa-file-import:before{content:\"\\f56f\"}.fa-file-invoice:before{content:\"\\f570\"}.fa-file-invoice-dollar:before{content:\"\\f571\"}.fa-file-medical:before{content:\"\\f477\"}.fa-file-medical-alt:before{content:\"\\f478\"}.fa-file-pdf:before{content:\"\\f1c1\"}.fa-file-powerpoint:before{content:\"\\f1c4\"}.fa-file-prescription:before{content:\"\\f572\"}.fa-file-signature:before{content:\"\\f573\"}.fa-file-upload:before{content:\"\\f574\"}.fa-file-video:before{content:\"\\f1c8\"}.fa-file-word:before{content:\"\\f1c2\"}.fa-fill:before{content:\"\\f575\"}.fa-fill-drip:before{content:\"\\f576\"}.fa-film:before{content:\"\\f008\"}.fa-filter:before{content:\"\\f0b0\"}.fa-fingerprint:before{content:\"\\f577\"}.fa-fire:before{content:\"\\f06d\"}.fa-fire-alt:before{content:\"\\f7e4\"}.fa-fire-extinguisher:before{content:\"\\f134\"}.fa-firefox:before{content:\"\\f269\"}.fa-firefox-browser:before{content:\"\\e007\"}.fa-first-aid:before{content:\"\\f479\"}.fa-first-order:before{content:\"\\f2b0\"}.fa-first-order-alt:before{content:\"\\f50a\"}.fa-firstdraft:before{content:\"\\f3a1\"}.fa-fish:before{content:\"\\f578\"}.fa-fist-raised:before{content:\"\\f6de\"}.fa-flag:before{content:\"\\f024\"}.fa-flag-checkered:before{content:\"\\f11e\"}.fa-flag-usa:before{content:\"\\f74d\"}.fa-flask:before{content:\"\\f0c3\"}.fa-flickr:before{content:\"\\f16e\"}.fa-flipboard:before{content:\"\\f44d\"}.fa-flushed:before{content:\"\\f579\"}.fa-fly:before{content:\"\\f417\"}.fa-folder:before{content:\"\\f07b\"}.fa-folder-minus:before{content:\"\\f65d\"}.fa-folder-open:before{content:\"\\f07c\"}.fa-folder-plus:before{content:\"\\f65e\"}.fa-font:before{content:\"\\f031\"}.fa-font-awesome:before{content:\"\\f2b4\"}.fa-font-awesome-alt:before{content:\"\\f35c\"}.fa-font-awesome-flag:before{content:\"\\f425\"}.fa-font-awesome-logo-full:before{content:\"\\f4e6\"}.fa-fonticons:before{content:\"\\f280\"}.fa-fonticons-fi:before{content:\"\\f3a2\"}.fa-football-ball:before{content:\"\\f44e\"}.fa-fort-awesome:before{content:\"\\f286\"}.fa-fort-awesome-alt:before{content:\"\\f3a3\"}.fa-forumbee:before{content:\"\\f211\"}.fa-forward:before{content:\"\\f04e\"}.fa-foursquare:before{content:\"\\f180\"}.fa-free-code-camp:before{content:\"\\f2c5\"}.fa-freebsd:before{content:\"\\f3a4\"}.fa-frog:before{content:\"\\f52e\"}.fa-frown:before{content:\"\\f119\"}.fa-frown-open:before{content:\"\\f57a\"}.fa-fulcrum:before{content:\"\\f50b\"}.fa-funnel-dollar:before{content:\"\\f662\"}.fa-futbol:before{content:\"\\f1e3\"}.fa-galactic-republic:before{content:\"\\f50c\"}.fa-galactic-senate:before{content:\"\\f50d\"}.fa-gamepad:before{content:\"\\f11b\"}.fa-gas-pump:before{content:\"\\f52f\"}.fa-gavel:before{content:\"\\f0e3\"}.fa-gem:before{content:\"\\f3a5\"}.fa-genderless:before{content:\"\\f22d\"}.fa-get-pocket:before{content:\"\\f265\"}.fa-gg:before{content:\"\\f260\"}.fa-gg-circle:before{content:\"\\f261\"}.fa-ghost:before{content:\"\\f6e2\"}.fa-gift:before{content:\"\\f06b\"}.fa-gifts:before{content:\"\\f79c\"}.fa-git:before{content:\"\\f1d3\"}.fa-git-alt:before{content:\"\\f841\"}.fa-git-square:before{content:\"\\f1d2\"}.fa-github:before{content:\"\\f09b\"}.fa-github-alt:before{content:\"\\f113\"}.fa-github-square:before{content:\"\\f092\"}.fa-gitkraken:before{content:\"\\f3a6\"}.fa-gitlab:before{content:\"\\f296\"}.fa-gitter:before{content:\"\\f426\"}.fa-glass-cheers:before{content:\"\\f79f\"}.fa-glass-martini:before{content:\"\\f000\"}.fa-glass-martini-alt:before{content:\"\\f57b\"}.fa-glass-whiskey:before{content:\"\\f7a0\"}.fa-glasses:before{content:\"\\f530\"}.fa-glide:before{content:\"\\f2a5\"}.fa-glide-g:before{content:\"\\f2a6\"}.fa-globe:before{content:\"\\f0ac\"}.fa-globe-africa:before{content:\"\\f57c\"}.fa-globe-americas:before{content:\"\\f57d\"}.fa-globe-asia:before{content:\"\\f57e\"}.fa-globe-europe:before{content:\"\\f7a2\"}.fa-gofore:before{content:\"\\f3a7\"}.fa-golf-ball:before{content:\"\\f450\"}.fa-goodreads:before{content:\"\\f3a8\"}.fa-goodreads-g:before{content:\"\\f3a9\"}.fa-google:before{content:\"\\f1a0\"}.fa-google-drive:before{content:\"\\f3aa\"}.fa-google-pay:before{content:\"\\e079\"}.fa-google-play:before{content:\"\\f3ab\"}.fa-google-plus:before{content:\"\\f2b3\"}.fa-google-plus-g:before{content:\"\\f0d5\"}.fa-google-plus-square:before{content:\"\\f0d4\"}.fa-google-wallet:before{content:\"\\f1ee\"}.fa-gopuram:before{content:\"\\f664\"}.fa-graduation-cap:before{content:\"\\f19d\"}.fa-gratipay:before{content:\"\\f184\"}.fa-grav:before{content:\"\\f2d6\"}.fa-greater-than:before{content:\"\\f531\"}.fa-greater-than-equal:before{content:\"\\f532\"}.fa-grimace:before{content:\"\\f57f\"}.fa-grin:before{content:\"\\f580\"}.fa-grin-alt:before{content:\"\\f581\"}.fa-grin-beam:before{content:\"\\f582\"}.fa-grin-beam-sweat:before{content:\"\\f583\"}.fa-grin-hearts:before{content:\"\\f584\"}.fa-grin-squint:before{content:\"\\f585\"}.fa-grin-squint-tears:before{content:\"\\f586\"}.fa-grin-stars:before{content:\"\\f587\"}.fa-grin-tears:before{content:\"\\f588\"}.fa-grin-tongue:before{content:\"\\f589\"}.fa-grin-tongue-squint:before{content:\"\\f58a\"}.fa-grin-tongue-wink:before{content:\"\\f58b\"}.fa-grin-wink:before{content:\"\\f58c\"}.fa-grip-horizontal:before{content:\"\\f58d\"}.fa-grip-lines:before{content:\"\\f7a4\"}.fa-grip-lines-vertical:before{content:\"\\f7a5\"}.fa-grip-vertical:before{content:\"\\f58e\"}.fa-gripfire:before{content:\"\\f3ac\"}.fa-grunt:before{content:\"\\f3ad\"}.fa-guilded:before{content:\"\\e07e\"}.fa-guitar:before{content:\"\\f7a6\"}.fa-gulp:before{content:\"\\f3ae\"}.fa-h-square:before{content:\"\\f0fd\"}.fa-hacker-news:before{content:\"\\f1d4\"}.fa-hacker-news-square:before{content:\"\\f3af\"}.fa-hackerrank:before{content:\"\\f5f7\"}.fa-hamburger:before{content:\"\\f805\"}.fa-hammer:before{content:\"\\f6e3\"}.fa-hamsa:before{content:\"\\f665\"}.fa-hand-holding:before{content:\"\\f4bd\"}.fa-hand-holding-heart:before{content:\"\\f4be\"}.fa-hand-holding-medical:before{content:\"\\e05c\"}.fa-hand-holding-usd:before{content:\"\\f4c0\"}.fa-hand-holding-water:before{content:\"\\f4c1\"}.fa-hand-lizard:before{content:\"\\f258\"}.fa-hand-middle-finger:before{content:\"\\f806\"}.fa-hand-paper:before{content:\"\\f256\"}.fa-hand-peace:before{content:\"\\f25b\"}.fa-hand-point-down:before{content:\"\\f0a7\"}.fa-hand-point-left:before{content:\"\\f0a5\"}.fa-hand-point-right:before{content:\"\\f0a4\"}.fa-hand-point-up:before{content:\"\\f0a6\"}.fa-hand-pointer:before{content:\"\\f25a\"}.fa-hand-rock:before{content:\"\\f255\"}.fa-hand-scissors:before{content:\"\\f257\"}.fa-hand-sparkles:before{content:\"\\e05d\"}.fa-hand-spock:before{content:\"\\f259\"}.fa-hands:before{content:\"\\f4c2\"}.fa-hands-helping:before{content:\"\\f4c4\"}.fa-hands-wash:before{content:\"\\e05e\"}.fa-handshake:before{content:\"\\f2b5\"}.fa-handshake-alt-slash:before{content:\"\\e05f\"}.fa-handshake-slash:before{content:\"\\e060\"}.fa-hanukiah:before{content:\"\\f6e6\"}.fa-hard-hat:before{content:\"\\f807\"}.fa-hashtag:before{content:\"\\f292\"}.fa-hat-cowboy:before{content:\"\\f8c0\"}.fa-hat-cowboy-side:before{content:\"\\f8c1\"}.fa-hat-wizard:before{content:\"\\f6e8\"}.fa-hdd:before{content:\"\\f0a0\"}.fa-head-side-cough:before{content:\"\\e061\"}.fa-head-side-cough-slash:before{content:\"\\e062\"}.fa-head-side-mask:before{content:\"\\e063\"}.fa-head-side-virus:before{content:\"\\e064\"}.fa-heading:before{content:\"\\f1dc\"}.fa-headphones:before{content:\"\\f025\"}.fa-headphones-alt:before{content:\"\\f58f\"}.fa-headset:before{content:\"\\f590\"}.fa-heart:before{content:\"\\f004\"}.fa-heart-broken:before{content:\"\\f7a9\"}.fa-heartbeat:before{content:\"\\f21e\"}.fa-helicopter:before{content:\"\\f533\"}.fa-highlighter:before{content:\"\\f591\"}.fa-hiking:before{content:\"\\f6ec\"}.fa-hippo:before{content:\"\\f6ed\"}.fa-hips:before{content:\"\\f452\"}.fa-hire-a-helper:before{content:\"\\f3b0\"}.fa-history:before{content:\"\\f1da\"}.fa-hive:before{content:\"\\e07f\"}.fa-hockey-puck:before{content:\"\\f453\"}.fa-holly-berry:before{content:\"\\f7aa\"}.fa-home:before{content:\"\\f015\"}.fa-hooli:before{content:\"\\f427\"}.fa-hornbill:before{content:\"\\f592\"}.fa-horse:before{content:\"\\f6f0\"}.fa-horse-head:before{content:\"\\f7ab\"}.fa-hospital:before{content:\"\\f0f8\"}.fa-hospital-alt:before{content:\"\\f47d\"}.fa-hospital-symbol:before{content:\"\\f47e\"}.fa-hospital-user:before{content:\"\\f80d\"}.fa-hot-tub:before{content:\"\\f593\"}.fa-hotdog:before{content:\"\\f80f\"}.fa-hotel:before{content:\"\\f594\"}.fa-hotjar:before{content:\"\\f3b1\"}.fa-hourglass:before{content:\"\\f254\"}.fa-hourglass-end:before{content:\"\\f253\"}.fa-hourglass-half:before{content:\"\\f252\"}.fa-hourglass-start:before{content:\"\\f251\"}.fa-house-damage:before{content:\"\\f6f1\"}.fa-house-user:before{content:\"\\e065\"}.fa-houzz:before{content:\"\\f27c\"}.fa-hryvnia:before{content:\"\\f6f2\"}.fa-html5:before{content:\"\\f13b\"}.fa-hubspot:before{content:\"\\f3b2\"}.fa-i-cursor:before{content:\"\\f246\"}.fa-ice-cream:before{content:\"\\f810\"}.fa-icicles:before{content:\"\\f7ad\"}.fa-icons:before{content:\"\\f86d\"}.fa-id-badge:before{content:\"\\f2c1\"}.fa-id-card:before{content:\"\\f2c2\"}.fa-id-card-alt:before{content:\"\\f47f\"}.fa-ideal:before{content:\"\\e013\"}.fa-igloo:before{content:\"\\f7ae\"}.fa-image:before{content:\"\\f03e\"}.fa-images:before{content:\"\\f302\"}.fa-imdb:before{content:\"\\f2d8\"}.fa-inbox:before{content:\"\\f01c\"}.fa-indent:before{content:\"\\f03c\"}.fa-industry:before{content:\"\\f275\"}.fa-infinity:before{content:\"\\f534\"}.fa-info:before{content:\"\\f129\"}.fa-info-circle:before{content:\"\\f05a\"}.fa-innosoft:before{content:\"\\e080\"}.fa-instagram:before{content:\"\\f16d\"}.fa-instagram-square:before{content:\"\\e055\"}.fa-instalod:before{content:\"\\e081\"}.fa-intercom:before{content:\"\\f7af\"}.fa-internet-explorer:before{content:\"\\f26b\"}.fa-invision:before{content:\"\\f7b0\"}.fa-ioxhost:before{content:\"\\f208\"}.fa-italic:before{content:\"\\f033\"}.fa-itch-io:before{content:\"\\f83a\"}.fa-itunes:before{content:\"\\f3b4\"}.fa-itunes-note:before{content:\"\\f3b5\"}.fa-java:before{content:\"\\f4e4\"}.fa-jedi:before{content:\"\\f669\"}.fa-jedi-order:before{content:\"\\f50e\"}.fa-jenkins:before{content:\"\\f3b6\"}.fa-jira:before{content:\"\\f7b1\"}.fa-joget:before{content:\"\\f3b7\"}.fa-joint:before{content:\"\\f595\"}.fa-joomla:before{content:\"\\f1aa\"}.fa-journal-whills:before{content:\"\\f66a\"}.fa-js:before{content:\"\\f3b8\"}.fa-js-square:before{content:\"\\f3b9\"}.fa-jsfiddle:before{content:\"\\f1cc\"}.fa-kaaba:before{content:\"\\f66b\"}.fa-kaggle:before{content:\"\\f5fa\"}.fa-key:before{content:\"\\f084\"}.fa-keybase:before{content:\"\\f4f5\"}.fa-keyboard:before{content:\"\\f11c\"}.fa-keycdn:before{content:\"\\f3ba\"}.fa-khanda:before{content:\"\\f66d\"}.fa-kickstarter:before{content:\"\\f3bb\"}.fa-kickstarter-k:before{content:\"\\f3bc\"}.fa-kiss:before{content:\"\\f596\"}.fa-kiss-beam:before{content:\"\\f597\"}.fa-kiss-wink-heart:before{content:\"\\f598\"}.fa-kiwi-bird:before{content:\"\\f535\"}.fa-korvue:before{content:\"\\f42f\"}.fa-landmark:before{content:\"\\f66f\"}.fa-language:before{content:\"\\f1ab\"}.fa-laptop:before{content:\"\\f109\"}.fa-laptop-code:before{content:\"\\f5fc\"}.fa-laptop-house:before{content:\"\\e066\"}.fa-laptop-medical:before{content:\"\\f812\"}.fa-laravel:before{content:\"\\f3bd\"}.fa-lastfm:before{content:\"\\f202\"}.fa-lastfm-square:before{content:\"\\f203\"}.fa-laugh:before{content:\"\\f599\"}.fa-laugh-beam:before{content:\"\\f59a\"}.fa-laugh-squint:before{content:\"\\f59b\"}.fa-laugh-wink:before{content:\"\\f59c\"}.fa-layer-group:before{content:\"\\f5fd\"}.fa-leaf:before{content:\"\\f06c\"}.fa-leanpub:before{content:\"\\f212\"}.fa-lemon:before{content:\"\\f094\"}.fa-less:before{content:\"\\f41d\"}.fa-less-than:before{content:\"\\f536\"}.fa-less-than-equal:before{content:\"\\f537\"}.fa-level-down-alt:before{content:\"\\f3be\"}.fa-level-up-alt:before{content:\"\\f3bf\"}.fa-life-ring:before{content:\"\\f1cd\"}.fa-lightbulb:before{content:\"\\f0eb\"}.fa-line:before{content:\"\\f3c0\"}.fa-link:before{content:\"\\f0c1\"}.fa-linkedin:before{content:\"\\f08c\"}.fa-linkedin-in:before{content:\"\\f0e1\"}.fa-linode:before{content:\"\\f2b8\"}.fa-linux:before{content:\"\\f17c\"}.fa-lira-sign:before{content:\"\\f195\"}.fa-list:before{content:\"\\f03a\"}.fa-list-alt:before{content:\"\\f022\"}.fa-list-ol:before{content:\"\\f0cb\"}.fa-list-ul:before{content:\"\\f0ca\"}.fa-location-arrow:before{content:\"\\f124\"}.fa-lock:before{content:\"\\f023\"}.fa-lock-open:before{content:\"\\f3c1\"}.fa-long-arrow-alt-down:before{content:\"\\f309\"}.fa-long-arrow-alt-left:before{content:\"\\f30a\"}.fa-long-arrow-alt-right:before{content:\"\\f30b\"}.fa-long-arrow-alt-up:before{content:\"\\f30c\"}.fa-low-vision:before{content:\"\\f2a8\"}.fa-luggage-cart:before{content:\"\\f59d\"}.fa-lungs:before{content:\"\\f604\"}.fa-lungs-virus:before{content:\"\\e067\"}.fa-lyft:before{content:\"\\f3c3\"}.fa-magento:before{content:\"\\f3c4\"}.fa-magic:before{content:\"\\f0d0\"}.fa-magnet:before{content:\"\\f076\"}.fa-mail-bulk:before{content:\"\\f674\"}.fa-mailchimp:before{content:\"\\f59e\"}.fa-male:before{content:\"\\f183\"}.fa-mandalorian:before{content:\"\\f50f\"}.fa-map:before{content:\"\\f279\"}.fa-map-marked:before{content:\"\\f59f\"}.fa-map-marked-alt:before{content:\"\\f5a0\"}.fa-map-marker:before{content:\"\\f041\"}.fa-map-marker-alt:before{content:\"\\f3c5\"}.fa-map-pin:before{content:\"\\f276\"}.fa-map-signs:before{content:\"\\f277\"}.fa-markdown:before{content:\"\\f60f\"}.fa-marker:before{content:\"\\f5a1\"}.fa-mars:before{content:\"\\f222\"}.fa-mars-double:before{content:\"\\f227\"}.fa-mars-stroke:before{content:\"\\f229\"}.fa-mars-stroke-h:before{content:\"\\f22b\"}.fa-mars-stroke-v:before{content:\"\\f22a\"}.fa-mask:before{content:\"\\f6fa\"}.fa-mastodon:before{content:\"\\f4f6\"}.fa-maxcdn:before{content:\"\\f136\"}.fa-mdb:before{content:\"\\f8ca\"}.fa-medal:before{content:\"\\f5a2\"}.fa-medapps:before{content:\"\\f3c6\"}.fa-medium:before{content:\"\\f23a\"}.fa-medium-m:before{content:\"\\f3c7\"}.fa-medkit:before{content:\"\\f0fa\"}.fa-medrt:before{content:\"\\f3c8\"}.fa-meetup:before{content:\"\\f2e0\"}.fa-megaport:before{content:\"\\f5a3\"}.fa-meh:before{content:\"\\f11a\"}.fa-meh-blank:before{content:\"\\f5a4\"}.fa-meh-rolling-eyes:before{content:\"\\f5a5\"}.fa-memory:before{content:\"\\f538\"}.fa-mendeley:before{content:\"\\f7b3\"}.fa-menorah:before{content:\"\\f676\"}.fa-mercury:before{content:\"\\f223\"}.fa-meteor:before{content:\"\\f753\"}.fa-microblog:before{content:\"\\e01a\"}.fa-microchip:before{content:\"\\f2db\"}.fa-microphone:before{content:\"\\f130\"}.fa-microphone-alt:before{content:\"\\f3c9\"}.fa-microphone-alt-slash:before{content:\"\\f539\"}.fa-microphone-slash:before{content:\"\\f131\"}.fa-microscope:before{content:\"\\f610\"}.fa-microsoft:before{content:\"\\f3ca\"}.fa-minus:before{content:\"\\f068\"}.fa-minus-circle:before{content:\"\\f056\"}.fa-minus-square:before{content:\"\\f146\"}.fa-mitten:before{content:\"\\f7b5\"}.fa-mix:before{content:\"\\f3cb\"}.fa-mixcloud:before{content:\"\\f289\"}.fa-mixer:before{content:\"\\e056\"}.fa-mizuni:before{content:\"\\f3cc\"}.fa-mobile:before{content:\"\\f10b\"}.fa-mobile-alt:before{content:\"\\f3cd\"}.fa-modx:before{content:\"\\f285\"}.fa-monero:before{content:\"\\f3d0\"}.fa-money-bill:before{content:\"\\f0d6\"}.fa-money-bill-alt:before{content:\"\\f3d1\"}.fa-money-bill-wave:before{content:\"\\f53a\"}.fa-money-bill-wave-alt:before{content:\"\\f53b\"}.fa-money-check:before{content:\"\\f53c\"}.fa-money-check-alt:before{content:\"\\f53d\"}.fa-monument:before{content:\"\\f5a6\"}.fa-moon:before{content:\"\\f186\"}.fa-mortar-pestle:before{content:\"\\f5a7\"}.fa-mosque:before{content:\"\\f678\"}.fa-motorcycle:before{content:\"\\f21c\"}.fa-mountain:before{content:\"\\f6fc\"}.fa-mouse:before{content:\"\\f8cc\"}.fa-mouse-pointer:before{content:\"\\f245\"}.fa-mug-hot:before{content:\"\\f7b6\"}.fa-music:before{content:\"\\f001\"}.fa-napster:before{content:\"\\f3d2\"}.fa-neos:before{content:\"\\f612\"}.fa-network-wired:before{content:\"\\f6ff\"}.fa-neuter:before{content:\"\\f22c\"}.fa-newspaper:before{content:\"\\f1ea\"}.fa-nimblr:before{content:\"\\f5a8\"}.fa-node:before{content:\"\\f419\"}.fa-node-js:before{content:\"\\f3d3\"}.fa-not-equal:before{content:\"\\f53e\"}.fa-notes-medical:before{content:\"\\f481\"}.fa-npm:before{content:\"\\f3d4\"}.fa-ns8:before{content:\"\\f3d5\"}.fa-nutritionix:before{content:\"\\f3d6\"}.fa-object-group:before{content:\"\\f247\"}.fa-object-ungroup:before{content:\"\\f248\"}.fa-octopus-deploy:before{content:\"\\e082\"}.fa-odnoklassniki:before{content:\"\\f263\"}.fa-odnoklassniki-square:before{content:\"\\f264\"}.fa-oil-can:before{content:\"\\f613\"}.fa-old-republic:before{content:\"\\f510\"}.fa-om:before{content:\"\\f679\"}.fa-opencart:before{content:\"\\f23d\"}.fa-openid:before{content:\"\\f19b\"}.fa-opera:before{content:\"\\f26a\"}.fa-optin-monster:before{content:\"\\f23c\"}.fa-orcid:before{content:\"\\f8d2\"}.fa-osi:before{content:\"\\f41a\"}.fa-otter:before{content:\"\\f700\"}.fa-outdent:before{content:\"\\f03b\"}.fa-page4:before{content:\"\\f3d7\"}.fa-pagelines:before{content:\"\\f18c\"}.fa-pager:before{content:\"\\f815\"}.fa-paint-brush:before{content:\"\\f1fc\"}.fa-paint-roller:before{content:\"\\f5aa\"}.fa-palette:before{content:\"\\f53f\"}.fa-palfed:before{content:\"\\f3d8\"}.fa-pallet:before{content:\"\\f482\"}.fa-paper-plane:before{content:\"\\f1d8\"}.fa-paperclip:before{content:\"\\f0c6\"}.fa-parachute-box:before{content:\"\\f4cd\"}.fa-paragraph:before{content:\"\\f1dd\"}.fa-parking:before{content:\"\\f540\"}.fa-passport:before{content:\"\\f5ab\"}.fa-pastafarianism:before{content:\"\\f67b\"}.fa-paste:before{content:\"\\f0ea\"}.fa-patreon:before{content:\"\\f3d9\"}.fa-pause:before{content:\"\\f04c\"}.fa-pause-circle:before{content:\"\\f28b\"}.fa-paw:before{content:\"\\f1b0\"}.fa-paypal:before{content:\"\\f1ed\"}.fa-peace:before{content:\"\\f67c\"}.fa-pen:before{content:\"\\f304\"}.fa-pen-alt:before{content:\"\\f305\"}.fa-pen-fancy:before{content:\"\\f5ac\"}.fa-pen-nib:before{content:\"\\f5ad\"}.fa-pen-square:before{content:\"\\f14b\"}.fa-pencil-alt:before{content:\"\\f303\"}.fa-pencil-ruler:before{content:\"\\f5ae\"}.fa-penny-arcade:before{content:\"\\f704\"}.fa-people-arrows:before{content:\"\\e068\"}.fa-people-carry:before{content:\"\\f4ce\"}.fa-pepper-hot:before{content:\"\\f816\"}.fa-perbyte:before{content:\"\\e083\"}.fa-percent:before{content:\"\\f295\"}.fa-percentage:before{content:\"\\f541\"}.fa-periscope:before{content:\"\\f3da\"}.fa-person-booth:before{content:\"\\f756\"}.fa-phabricator:before{content:\"\\f3db\"}.fa-phoenix-framework:before{content:\"\\f3dc\"}.fa-phoenix-squadron:before{content:\"\\f511\"}.fa-phone:before{content:\"\\f095\"}.fa-phone-alt:before{content:\"\\f879\"}.fa-phone-slash:before{content:\"\\f3dd\"}.fa-phone-square:before{content:\"\\f098\"}.fa-phone-square-alt:before{content:\"\\f87b\"}.fa-phone-volume:before{content:\"\\f2a0\"}.fa-photo-video:before{content:\"\\f87c\"}.fa-php:before{content:\"\\f457\"}.fa-pied-piper:before{content:\"\\f2ae\"}.fa-pied-piper-alt:before{content:\"\\f1a8\"}.fa-pied-piper-hat:before{content:\"\\f4e5\"}.fa-pied-piper-pp:before{content:\"\\f1a7\"}.fa-pied-piper-square:before{content:\"\\e01e\"}.fa-piggy-bank:before{content:\"\\f4d3\"}.fa-pills:before{content:\"\\f484\"}.fa-pinterest:before{content:\"\\f0d2\"}.fa-pinterest-p:before{content:\"\\f231\"}.fa-pinterest-square:before{content:\"\\f0d3\"}.fa-pizza-slice:before{content:\"\\f818\"}.fa-place-of-worship:before{content:\"\\f67f\"}.fa-plane:before{content:\"\\f072\"}.fa-plane-arrival:before{content:\"\\f5af\"}.fa-plane-departure:before{content:\"\\f5b0\"}.fa-plane-slash:before{content:\"\\e069\"}.fa-play:before{content:\"\\f04b\"}.fa-play-circle:before{content:\"\\f144\"}.fa-playstation:before{content:\"\\f3df\"}.fa-plug:before{content:\"\\f1e6\"}.fa-plus:before{content:\"\\f067\"}.fa-plus-circle:before{content:\"\\f055\"}.fa-plus-square:before{content:\"\\f0fe\"}.fa-podcast:before{content:\"\\f2ce\"}.fa-poll:before{content:\"\\f681\"}.fa-poll-h:before{content:\"\\f682\"}.fa-poo:before{content:\"\\f2fe\"}.fa-poo-storm:before{content:\"\\f75a\"}.fa-poop:before{content:\"\\f619\"}.fa-portrait:before{content:\"\\f3e0\"}.fa-pound-sign:before{content:\"\\f154\"}.fa-power-off:before{content:\"\\f011\"}.fa-pray:before{content:\"\\f683\"}.fa-praying-hands:before{content:\"\\f684\"}.fa-prescription:before{content:\"\\f5b1\"}.fa-prescription-bottle:before{content:\"\\f485\"}.fa-prescription-bottle-alt:before{content:\"\\f486\"}.fa-print:before{content:\"\\f02f\"}.fa-procedures:before{content:\"\\f487\"}.fa-product-hunt:before{content:\"\\f288\"}.fa-project-diagram:before{content:\"\\f542\"}.fa-pump-medical:before{content:\"\\e06a\"}.fa-pump-soap:before{content:\"\\e06b\"}.fa-pushed:before{content:\"\\f3e1\"}.fa-puzzle-piece:before{content:\"\\f12e\"}.fa-python:before{content:\"\\f3e2\"}.fa-qq:before{content:\"\\f1d6\"}.fa-qrcode:before{content:\"\\f029\"}.fa-question:before{content:\"\\f128\"}.fa-question-circle:before{content:\"\\f059\"}.fa-quidditch:before{content:\"\\f458\"}.fa-quinscape:before{content:\"\\f459\"}.fa-quora:before{content:\"\\f2c4\"}.fa-quote-left:before{content:\"\\f10d\"}.fa-quote-right:before{content:\"\\f10e\"}.fa-quran:before{content:\"\\f687\"}.fa-r-project:before{content:\"\\f4f7\"}.fa-radiation:before{content:\"\\f7b9\"}.fa-radiation-alt:before{content:\"\\f7ba\"}.fa-rainbow:before{content:\"\\f75b\"}.fa-random:before{content:\"\\f074\"}.fa-raspberry-pi:before{content:\"\\f7bb\"}.fa-ravelry:before{content:\"\\f2d9\"}.fa-react:before{content:\"\\f41b\"}.fa-reacteurope:before{content:\"\\f75d\"}.fa-readme:before{content:\"\\f4d5\"}.fa-rebel:before{content:\"\\f1d0\"}.fa-receipt:before{content:\"\\f543\"}.fa-record-vinyl:before{content:\"\\f8d9\"}.fa-recycle:before{content:\"\\f1b8\"}.fa-red-river:before{content:\"\\f3e3\"}.fa-reddit:before{content:\"\\f1a1\"}.fa-reddit-alien:before{content:\"\\f281\"}.fa-reddit-square:before{content:\"\\f1a2\"}.fa-redhat:before{content:\"\\f7bc\"}.fa-redo:before{content:\"\\f01e\"}.fa-redo-alt:before{content:\"\\f2f9\"}.fa-registered:before{content:\"\\f25d\"}.fa-remove-format:before{content:\"\\f87d\"}.fa-renren:before{content:\"\\f18b\"}.fa-reply:before{content:\"\\f3e5\"}.fa-reply-all:before{content:\"\\f122\"}.fa-replyd:before{content:\"\\f3e6\"}.fa-republican:before{content:\"\\f75e\"}.fa-researchgate:before{content:\"\\f4f8\"}.fa-resolving:before{content:\"\\f3e7\"}.fa-restroom:before{content:\"\\f7bd\"}.fa-retweet:before{content:\"\\f079\"}.fa-rev:before{content:\"\\f5b2\"}.fa-ribbon:before{content:\"\\f4d6\"}.fa-ring:before{content:\"\\f70b\"}.fa-road:before{content:\"\\f018\"}.fa-robot:before{content:\"\\f544\"}.fa-rocket:before{content:\"\\f135\"}.fa-rocketchat:before{content:\"\\f3e8\"}.fa-rockrms:before{content:\"\\f3e9\"}.fa-route:before{content:\"\\f4d7\"}.fa-rss:before{content:\"\\f09e\"}.fa-rss-square:before{content:\"\\f143\"}.fa-ruble-sign:before{content:\"\\f158\"}.fa-ruler:before{content:\"\\f545\"}.fa-ruler-combined:before{content:\"\\f546\"}.fa-ruler-horizontal:before{content:\"\\f547\"}.fa-ruler-vertical:before{content:\"\\f548\"}.fa-running:before{content:\"\\f70c\"}.fa-rupee-sign:before{content:\"\\f156\"}.fa-rust:before{content:\"\\e07a\"}.fa-sad-cry:before{content:\"\\f5b3\"}.fa-sad-tear:before{content:\"\\f5b4\"}.fa-safari:before{content:\"\\f267\"}.fa-salesforce:before{content:\"\\f83b\"}.fa-sass:before{content:\"\\f41e\"}.fa-satellite:before{content:\"\\f7bf\"}.fa-satellite-dish:before{content:\"\\f7c0\"}.fa-save:before{content:\"\\f0c7\"}.fa-schlix:before{content:\"\\f3ea\"}.fa-school:before{content:\"\\f549\"}.fa-screwdriver:before{content:\"\\f54a\"}.fa-scribd:before{content:\"\\f28a\"}.fa-scroll:before{content:\"\\f70e\"}.fa-sd-card:before{content:\"\\f7c2\"}.fa-search:before{content:\"\\f002\"}.fa-search-dollar:before{content:\"\\f688\"}.fa-search-location:before{content:\"\\f689\"}.fa-search-minus:before{content:\"\\f010\"}.fa-search-plus:before{content:\"\\f00e\"}.fa-searchengin:before{content:\"\\f3eb\"}.fa-seedling:before{content:\"\\f4d8\"}.fa-sellcast:before{content:\"\\f2da\"}.fa-sellsy:before{content:\"\\f213\"}.fa-server:before{content:\"\\f233\"}.fa-servicestack:before{content:\"\\f3ec\"}.fa-shapes:before{content:\"\\f61f\"}.fa-share:before{content:\"\\f064\"}.fa-share-alt:before{content:\"\\f1e0\"}.fa-share-alt-square:before{content:\"\\f1e1\"}.fa-share-square:before{content:\"\\f14d\"}.fa-shekel-sign:before{content:\"\\f20b\"}.fa-shield-alt:before{content:\"\\f3ed\"}.fa-shield-virus:before{content:\"\\e06c\"}.fa-ship:before{content:\"\\f21a\"}.fa-shipping-fast:before{content:\"\\f48b\"}.fa-shirtsinbulk:before{content:\"\\f214\"}.fa-shoe-prints:before{content:\"\\f54b\"}.fa-shopify:before{content:\"\\e057\"}.fa-shopping-bag:before{content:\"\\f290\"}.fa-shopping-basket:before{content:\"\\f291\"}.fa-shopping-cart:before{content:\"\\f07a\"}.fa-shopware:before{content:\"\\f5b5\"}.fa-shower:before{content:\"\\f2cc\"}.fa-shuttle-van:before{content:\"\\f5b6\"}.fa-sign:before{content:\"\\f4d9\"}.fa-sign-in-alt:before{content:\"\\f2f6\"}.fa-sign-language:before{content:\"\\f2a7\"}.fa-sign-out-alt:before{content:\"\\f2f5\"}.fa-signal:before{content:\"\\f012\"}.fa-signature:before{content:\"\\f5b7\"}.fa-sim-card:before{content:\"\\f7c4\"}.fa-simplybuilt:before{content:\"\\f215\"}.fa-sink:before{content:\"\\e06d\"}.fa-sistrix:before{content:\"\\f3ee\"}.fa-sitemap:before{content:\"\\f0e8\"}.fa-sith:before{content:\"\\f512\"}.fa-skating:before{content:\"\\f7c5\"}.fa-sketch:before{content:\"\\f7c6\"}.fa-skiing:before{content:\"\\f7c9\"}.fa-skiing-nordic:before{content:\"\\f7ca\"}.fa-skull:before{content:\"\\f54c\"}.fa-skull-crossbones:before{content:\"\\f714\"}.fa-skyatlas:before{content:\"\\f216\"}.fa-skype:before{content:\"\\f17e\"}.fa-slack:before{content:\"\\f198\"}.fa-slack-hash:before{content:\"\\f3ef\"}.fa-slash:before{content:\"\\f715\"}.fa-sleigh:before{content:\"\\f7cc\"}.fa-sliders-h:before{content:\"\\f1de\"}.fa-slideshare:before{content:\"\\f1e7\"}.fa-smile:before{content:\"\\f118\"}.fa-smile-beam:before{content:\"\\f5b8\"}.fa-smile-wink:before{content:\"\\f4da\"}.fa-smog:before{content:\"\\f75f\"}.fa-smoking:before{content:\"\\f48d\"}.fa-smoking-ban:before{content:\"\\f54d\"}.fa-sms:before{content:\"\\f7cd\"}.fa-snapchat:before{content:\"\\f2ab\"}.fa-snapchat-ghost:before{content:\"\\f2ac\"}.fa-snapchat-square:before{content:\"\\f2ad\"}.fa-snowboarding:before{content:\"\\f7ce\"}.fa-snowflake:before{content:\"\\f2dc\"}.fa-snowman:before{content:\"\\f7d0\"}.fa-snowplow:before{content:\"\\f7d2\"}.fa-soap:before{content:\"\\e06e\"}.fa-socks:before{content:\"\\f696\"}.fa-solar-panel:before{content:\"\\f5ba\"}.fa-sort:before{content:\"\\f0dc\"}.fa-sort-alpha-down:before{content:\"\\f15d\"}.fa-sort-alpha-down-alt:before{content:\"\\f881\"}.fa-sort-alpha-up:before{content:\"\\f15e\"}.fa-sort-alpha-up-alt:before{content:\"\\f882\"}.fa-sort-amount-down:before{content:\"\\f160\"}.fa-sort-amount-down-alt:before{content:\"\\f884\"}.fa-sort-amount-up:before{content:\"\\f161\"}.fa-sort-amount-up-alt:before{content:\"\\f885\"}.fa-sort-down:before{content:\"\\f0dd\"}.fa-sort-numeric-down:before{content:\"\\f162\"}.fa-sort-numeric-down-alt:before{content:\"\\f886\"}.fa-sort-numeric-up:before{content:\"\\f163\"}.fa-sort-numeric-up-alt:before{content:\"\\f887\"}.fa-sort-up:before{content:\"\\f0de\"}.fa-soundcloud:before{content:\"\\f1be\"}.fa-sourcetree:before{content:\"\\f7d3\"}.fa-spa:before{content:\"\\f5bb\"}.fa-space-shuttle:before{content:\"\\f197\"}.fa-speakap:before{content:\"\\f3f3\"}.fa-speaker-deck:before{content:\"\\f83c\"}.fa-spell-check:before{content:\"\\f891\"}.fa-spider:before{content:\"\\f717\"}.fa-spinner:before{content:\"\\f110\"}.fa-splotch:before{content:\"\\f5bc\"}.fa-spotify:before{content:\"\\f1bc\"}.fa-spray-can:before{content:\"\\f5bd\"}.fa-square:before{content:\"\\f0c8\"}.fa-square-full:before{content:\"\\f45c\"}.fa-square-root-alt:before{content:\"\\f698\"}.fa-squarespace:before{content:\"\\f5be\"}.fa-stack-exchange:before{content:\"\\f18d\"}.fa-stack-overflow:before{content:\"\\f16c\"}.fa-stackpath:before{content:\"\\f842\"}.fa-stamp:before{content:\"\\f5bf\"}.fa-star:before{content:\"\\f005\"}.fa-star-and-crescent:before{content:\"\\f699\"}.fa-star-half:before{content:\"\\f089\"}.fa-star-half-alt:before{content:\"\\f5c0\"}.fa-star-of-david:before{content:\"\\f69a\"}.fa-star-of-life:before{content:\"\\f621\"}.fa-staylinked:before{content:\"\\f3f5\"}.fa-steam:before{content:\"\\f1b6\"}.fa-steam-square:before{content:\"\\f1b7\"}.fa-steam-symbol:before{content:\"\\f3f6\"}.fa-step-backward:before{content:\"\\f048\"}.fa-step-forward:before{content:\"\\f051\"}.fa-stethoscope:before{content:\"\\f0f1\"}.fa-sticker-mule:before{content:\"\\f3f7\"}.fa-sticky-note:before{content:\"\\f249\"}.fa-stop:before{content:\"\\f04d\"}.fa-stop-circle:before{content:\"\\f28d\"}.fa-stopwatch:before{content:\"\\f2f2\"}.fa-stopwatch-20:before{content:\"\\e06f\"}.fa-store:before{content:\"\\f54e\"}.fa-store-alt:before{content:\"\\f54f\"}.fa-store-alt-slash:before{content:\"\\e070\"}.fa-store-slash:before{content:\"\\e071\"}.fa-strava:before{content:\"\\f428\"}.fa-stream:before{content:\"\\f550\"}.fa-street-view:before{content:\"\\f21d\"}.fa-strikethrough:before{content:\"\\f0cc\"}.fa-stripe:before{content:\"\\f429\"}.fa-stripe-s:before{content:\"\\f42a\"}.fa-stroopwafel:before{content:\"\\f551\"}.fa-studiovinari:before{content:\"\\f3f8\"}.fa-stumbleupon:before{content:\"\\f1a4\"}.fa-stumbleupon-circle:before{content:\"\\f1a3\"}.fa-subscript:before{content:\"\\f12c\"}.fa-subway:before{content:\"\\f239\"}.fa-suitcase:before{content:\"\\f0f2\"}.fa-suitcase-rolling:before{content:\"\\f5c1\"}.fa-sun:before{content:\"\\f185\"}.fa-superpowers:before{content:\"\\f2dd\"}.fa-superscript:before{content:\"\\f12b\"}.fa-supple:before{content:\"\\f3f9\"}.fa-surprise:before{content:\"\\f5c2\"}.fa-suse:before{content:\"\\f7d6\"}.fa-swatchbook:before{content:\"\\f5c3\"}.fa-swift:before{content:\"\\f8e1\"}.fa-swimmer:before{content:\"\\f5c4\"}.fa-swimming-pool:before{content:\"\\f5c5\"}.fa-symfony:before{content:\"\\f83d\"}.fa-synagogue:before{content:\"\\f69b\"}.fa-sync:before{content:\"\\f021\"}.fa-sync-alt:before{content:\"\\f2f1\"}.fa-syringe:before{content:\"\\f48e\"}.fa-table:before{content:\"\\f0ce\"}.fa-table-tennis:before{content:\"\\f45d\"}.fa-tablet:before{content:\"\\f10a\"}.fa-tablet-alt:before{content:\"\\f3fa\"}.fa-tablets:before{content:\"\\f490\"}.fa-tachometer-alt:before{content:\"\\f3fd\"}.fa-tag:before{content:\"\\f02b\"}.fa-tags:before{content:\"\\f02c\"}.fa-tape:before{content:\"\\f4db\"}.fa-tasks:before{content:\"\\f0ae\"}.fa-taxi:before{content:\"\\f1ba\"}.fa-teamspeak:before{content:\"\\f4f9\"}.fa-teeth:before{content:\"\\f62e\"}.fa-teeth-open:before{content:\"\\f62f\"}.fa-telegram:before{content:\"\\f2c6\"}.fa-telegram-plane:before{content:\"\\f3fe\"}.fa-temperature-high:before{content:\"\\f769\"}.fa-temperature-low:before{content:\"\\f76b\"}.fa-tencent-weibo:before{content:\"\\f1d5\"}.fa-tenge:before{content:\"\\f7d7\"}.fa-terminal:before{content:\"\\f120\"}.fa-text-height:before{content:\"\\f034\"}.fa-text-width:before{content:\"\\f035\"}.fa-th:before{content:\"\\f00a\"}.fa-th-large:before{content:\"\\f009\"}.fa-th-list:before{content:\"\\f00b\"}.fa-the-red-yeti:before{content:\"\\f69d\"}.fa-theater-masks:before{content:\"\\f630\"}.fa-themeco:before{content:\"\\f5c6\"}.fa-themeisle:before{content:\"\\f2b2\"}.fa-thermometer:before{content:\"\\f491\"}.fa-thermometer-empty:before{content:\"\\f2cb\"}.fa-thermometer-full:before{content:\"\\f2c7\"}.fa-thermometer-half:before{content:\"\\f2c9\"}.fa-thermometer-quarter:before{content:\"\\f2ca\"}.fa-thermometer-three-quarters:before{content:\"\\f2c8\"}.fa-think-peaks:before{content:\"\\f731\"}.fa-thumbs-down:before{content:\"\\f165\"}.fa-thumbs-up:before{content:\"\\f164\"}.fa-thumbtack:before{content:\"\\f08d\"}.fa-ticket-alt:before{content:\"\\f3ff\"}.fa-tiktok:before{content:\"\\e07b\"}.fa-times:before{content:\"\\f00d\"}.fa-times-circle:before{content:\"\\f057\"}.fa-tint:before{content:\"\\f043\"}.fa-tint-slash:before{content:\"\\f5c7\"}.fa-tired:before{content:\"\\f5c8\"}.fa-toggle-off:before{content:\"\\f204\"}.fa-toggle-on:before{content:\"\\f205\"}.fa-toilet:before{content:\"\\f7d8\"}.fa-toilet-paper:before{content:\"\\f71e\"}.fa-toilet-paper-slash:before{content:\"\\e072\"}.fa-toolbox:before{content:\"\\f552\"}.fa-tools:before{content:\"\\f7d9\"}.fa-tooth:before{content:\"\\f5c9\"}.fa-torah:before{content:\"\\f6a0\"}.fa-torii-gate:before{content:\"\\f6a1\"}.fa-tractor:before{content:\"\\f722\"}.fa-trade-federation:before{content:\"\\f513\"}.fa-trademark:before{content:\"\\f25c\"}.fa-traffic-light:before{content:\"\\f637\"}.fa-trailer:before{content:\"\\e041\"}.fa-train:before{content:\"\\f238\"}.fa-tram:before{content:\"\\f7da\"}.fa-transgender:before{content:\"\\f224\"}.fa-transgender-alt:before{content:\"\\f225\"}.fa-trash:before{content:\"\\f1f8\"}.fa-trash-alt:before{content:\"\\f2ed\"}.fa-trash-restore:before{content:\"\\f829\"}.fa-trash-restore-alt:before{content:\"\\f82a\"}.fa-tree:before{content:\"\\f1bb\"}.fa-trello:before{content:\"\\f181\"}.fa-trophy:before{content:\"\\f091\"}.fa-truck:before{content:\"\\f0d1\"}.fa-truck-loading:before{content:\"\\f4de\"}.fa-truck-monster:before{content:\"\\f63b\"}.fa-truck-moving:before{content:\"\\f4df\"}.fa-truck-pickup:before{content:\"\\f63c\"}.fa-tshirt:before{content:\"\\f553\"}.fa-tty:before{content:\"\\f1e4\"}.fa-tumblr:before{content:\"\\f173\"}.fa-tumblr-square:before{content:\"\\f174\"}.fa-tv:before{content:\"\\f26c\"}.fa-twitch:before{content:\"\\f1e8\"}.fa-twitter:before{content:\"\\f099\"}.fa-twitter-square:before{content:\"\\f081\"}.fa-typo3:before{content:\"\\f42b\"}.fa-uber:before{content:\"\\f402\"}.fa-ubuntu:before{content:\"\\f7df\"}.fa-uikit:before{content:\"\\f403\"}.fa-umbraco:before{content:\"\\f8e8\"}.fa-umbrella:before{content:\"\\f0e9\"}.fa-umbrella-beach:before{content:\"\\f5ca\"}.fa-uncharted:before{content:\"\\e084\"}.fa-underline:before{content:\"\\f0cd\"}.fa-undo:before{content:\"\\f0e2\"}.fa-undo-alt:before{content:\"\\f2ea\"}.fa-uniregistry:before{content:\"\\f404\"}.fa-unity:before{content:\"\\e049\"}.fa-universal-access:before{content:\"\\f29a\"}.fa-university:before{content:\"\\f19c\"}.fa-unlink:before{content:\"\\f127\"}.fa-unlock:before{content:\"\\f09c\"}.fa-unlock-alt:before{content:\"\\f13e\"}.fa-unsplash:before{content:\"\\e07c\"}.fa-untappd:before{content:\"\\f405\"}.fa-upload:before{content:\"\\f093\"}.fa-ups:before{content:\"\\f7e0\"}.fa-usb:before{content:\"\\f287\"}.fa-user:before{content:\"\\f007\"}.fa-user-alt:before{content:\"\\f406\"}.fa-user-alt-slash:before{content:\"\\f4fa\"}.fa-user-astronaut:before{content:\"\\f4fb\"}.fa-user-check:before{content:\"\\f4fc\"}.fa-user-circle:before{content:\"\\f2bd\"}.fa-user-clock:before{content:\"\\f4fd\"}.fa-user-cog:before{content:\"\\f4fe\"}.fa-user-edit:before{content:\"\\f4ff\"}.fa-user-friends:before{content:\"\\f500\"}.fa-user-graduate:before{content:\"\\f501\"}.fa-user-injured:before{content:\"\\f728\"}.fa-user-lock:before{content:\"\\f502\"}.fa-user-md:before{content:\"\\f0f0\"}.fa-user-minus:before{content:\"\\f503\"}.fa-user-ninja:before{content:\"\\f504\"}.fa-user-nurse:before{content:\"\\f82f\"}.fa-user-plus:before{content:\"\\f234\"}.fa-user-secret:before{content:\"\\f21b\"}.fa-user-shield:before{content:\"\\f505\"}.fa-user-slash:before{content:\"\\f506\"}.fa-user-tag:before{content:\"\\f507\"}.fa-user-tie:before{content:\"\\f508\"}.fa-user-times:before{content:\"\\f235\"}.fa-users:before{content:\"\\f0c0\"}.fa-users-cog:before{content:\"\\f509\"}.fa-users-slash:before{content:\"\\e073\"}.fa-usps:before{content:\"\\f7e1\"}.fa-ussunnah:before{content:\"\\f407\"}.fa-utensil-spoon:before{content:\"\\f2e5\"}.fa-utensils:before{content:\"\\f2e7\"}.fa-vaadin:before{content:\"\\f408\"}.fa-vector-square:before{content:\"\\f5cb\"}.fa-venus:before{content:\"\\f221\"}.fa-venus-double:before{content:\"\\f226\"}.fa-venus-mars:before{content:\"\\f228\"}.fa-vest:before{content:\"\\e085\"}.fa-vest-patches:before{content:\"\\e086\"}.fa-viacoin:before{content:\"\\f237\"}.fa-viadeo:before{content:\"\\f2a9\"}.fa-viadeo-square:before{content:\"\\f2aa\"}.fa-vial:before{content:\"\\f492\"}.fa-vials:before{content:\"\\f493\"}.fa-viber:before{content:\"\\f409\"}.fa-video:before{content:\"\\f03d\"}.fa-video-slash:before{content:\"\\f4e2\"}.fa-vihara:before{content:\"\\f6a7\"}.fa-vimeo:before{content:\"\\f40a\"}.fa-vimeo-square:before{content:\"\\f194\"}.fa-vimeo-v:before{content:\"\\f27d\"}.fa-vine:before{content:\"\\f1ca\"}.fa-virus:before{content:\"\\e074\"}.fa-virus-slash:before{content:\"\\e075\"}.fa-viruses:before{content:\"\\e076\"}.fa-vk:before{content:\"\\f189\"}.fa-vnv:before{content:\"\\f40b\"}.fa-voicemail:before{content:\"\\f897\"}.fa-volleyball-ball:before{content:\"\\f45f\"}.fa-volume-down:before{content:\"\\f027\"}.fa-volume-mute:before{content:\"\\f6a9\"}.fa-volume-off:before{content:\"\\f026\"}.fa-volume-up:before{content:\"\\f028\"}.fa-vote-yea:before{content:\"\\f772\"}.fa-vr-cardboard:before{content:\"\\f729\"}.fa-vuejs:before{content:\"\\f41f\"}.fa-walking:before{content:\"\\f554\"}.fa-wallet:before{content:\"\\f555\"}.fa-warehouse:before{content:\"\\f494\"}.fa-watchman-monitoring:before{content:\"\\e087\"}.fa-water:before{content:\"\\f773\"}.fa-wave-square:before{content:\"\\f83e\"}.fa-waze:before{content:\"\\f83f\"}.fa-weebly:before{content:\"\\f5cc\"}.fa-weibo:before{content:\"\\f18a\"}.fa-weight:before{content:\"\\f496\"}.fa-weight-hanging:before{content:\"\\f5cd\"}.fa-weixin:before{content:\"\\f1d7\"}.fa-whatsapp:before{content:\"\\f232\"}.fa-whatsapp-square:before{content:\"\\f40c\"}.fa-wheelchair:before{content:\"\\f193\"}.fa-whmcs:before{content:\"\\f40d\"}.fa-wifi:before{content:\"\\f1eb\"}.fa-wikipedia-w:before{content:\"\\f266\"}.fa-wind:before{content:\"\\f72e\"}.fa-window-close:before{content:\"\\f410\"}.fa-window-maximize:before{content:\"\\f2d0\"}.fa-window-minimize:before{content:\"\\f2d1\"}.fa-window-restore:before{content:\"\\f2d2\"}.fa-windows:before{content:\"\\f17a\"}.fa-wine-bottle:before{content:\"\\f72f\"}.fa-wine-glass:before{content:\"\\f4e3\"}.fa-wine-glass-alt:before{content:\"\\f5ce\"}.fa-wix:before{content:\"\\f5cf\"}.fa-wizards-of-the-coast:before{content:\"\\f730\"}.fa-wodu:before{content:\"\\e088\"}.fa-wolf-pack-battalion:before{content:\"\\f514\"}.fa-won-sign:before{content:\"\\f159\"}.fa-wordpress:before{content:\"\\f19a\"}.fa-wordpress-simple:before{content:\"\\f411\"}.fa-wpbeginner:before{content:\"\\f297\"}.fa-wpexplorer:before{content:\"\\f2de\"}.fa-wpforms:before{content:\"\\f298\"}.fa-wpressr:before{content:\"\\f3e4\"}.fa-wrench:before{content:\"\\f0ad\"}.fa-x-ray:before{content:\"\\f497\"}.fa-xbox:before{content:\"\\f412\"}.fa-xing:before{content:\"\\f168\"}.fa-xing-square:before{content:\"\\f169\"}.fa-y-combinator:before{content:\"\\f23b\"}.fa-yahoo:before{content:\"\\f19e\"}.fa-yammer:before{content:\"\\f840\"}.fa-yandex:before{content:\"\\f413\"}.fa-yandex-international:before{content:\"\\f414\"}.fa-yarn:before{content:\"\\f7e3\"}.fa-yelp:before{content:\"\\f1e9\"}.fa-yen-sign:before{content:\"\\f157\"}.fa-yin-yang:before{content:\"\\f6ad\"}.fa-yoast:before{content:\"\\f2b1\"}.fa-youtube:before{content:\"\\f167\"}.fa-youtube-square:before{content:\"\\f431\"}.fa-zhihu:before{content:\"\\f63f\"}.sr-only{border:0;clip:rect(0,0,0,0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.sr-only-focusable:active,.sr-only-focusable:focus{clip:auto;height:auto;margin:0;overflow:visible;position:static;width:auto}@font-face{font-family:\"Font Awesome 5 Brands\";font-style:normal;font-weight:400;font-display:block;src:url(../webfonts/fa-brands-400.eot);src:url(../webfonts/fa-brands-400.eot?#iefix) format(\"embedded-opentype\"),url(../webfonts/fa-brands-400.woff2) format(\"woff2\"),url(../webfonts/fa-brands-400.woff) format(\"woff\"),url(../webfonts/fa-brands-400.ttf) format(\"truetype\"),url(../webfonts/fa-brands-400.svg#fontawesome) format(\"svg\")}.fab{font-family:\"Font Awesome 5 Brands\"}@font-face{font-family:\"Font Awesome 5 Free\";font-style:normal;font-weight:400;font-display:block;src:url(../webfonts/fa-regular-400.eot);src:url(../webfonts/fa-regular-400.eot?#iefix) format(\"embedded-opentype\"),url(../webfonts/fa-regular-400.woff2) format(\"woff2\"),url(../webfonts/fa-regular-400.woff) format(\"woff\"),url(../webfonts/fa-regular-400.ttf) format(\"truetype\"),url(../webfonts/fa-regular-400.svg#fontawesome) format(\"svg\")}.fab,.far{font-weight:400}@font-face{font-family:\"Font Awesome 5 Free\";font-style:normal;font-weight:900;font-display:block;src:url(../webfonts/fa-solid-900.eot);src:url(../webfonts/fa-solid-900.eot?#iefix) format(\"embedded-opentype\"),url(../webfonts/fa-solid-900.woff2) format(\"woff2\"),url(../webfonts/fa-solid-900.woff) format(\"woff\"),url(../webfonts/fa-solid-900.ttf) format(\"truetype\"),url(../webfonts/fa-solid-900.svg#fontawesome) format(\"svg\")}.fa,.far,.fas{font-family:\"Font Awesome 5 Free\"}.fa,.fas{font-weight:900}"],"sourceRoot":""}]);
// Exports
___CSS_LOADER_EXPORT___.locals = {};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[7].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[7].use[2]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].oneOf[7].use[3]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[7].use[4]!./src/sass/main.scss":
/*!**************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[7].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[7].use[2]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].oneOf[7].use[3]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[7].use[4]!./src/sass/main.scss ***!
  \**************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
___CSS_LOADER_EXPORT___.push([module.id, "@import url(https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&family=The+Nautigal&display=swap);"]);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "@charset \"UTF-8\";\n*,\n*:before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: inherit; }\n\nbody {\n  overscroll-behavior-y: none; }\n\nhtml {\n  box-sizing: border-box;\n  font-size: 62.5%;\n  font-family: \"Inter\", sans-serif;\n  background: #0f2027;\n  /* fallback for old browsers */\n  /* Chrome 10-25, Safari 5.1-6 */\n  background: linear-gradient(to right, #2c5364, #203a43, #0f2027); }\n  @media only screen and (min-width: 112.5em) {\n    html {\n      font-size: 75%; } }\n  @media only screen and (max-width: 74.375em) {\n    html {\n      font-size: 50%; } }\n  @media only screen and (max-width: 37.5em) {\n    html {\n      font-size: 37.5%; } }\n\n.wrapper {\n  padding: 2rem 4rem;\n  min-height: 80vh; }\n  @media only screen and (max-width: 25em) {\n    .wrapper {\n      padding: 2rem 2rem; } }\n\n::selection {\n  background-color: #96d4c6;\n  color: #17303a; }\n\n.fade-enter {\n  opacity: 0;\n  z-index: 1; }\n\n.fade-enter.fade-enter-active {\n  opacity: 1;\n  transition: opacity 250ms ease-in; }\n\n.heading-1, .heading-2, .heading-3, .heading-4, .heading-back {\n  letter-spacing: 0.3rem;\n  font-family: \"Inter\", sans-serif;\n  font-weight: 400; }\n\n.heading-1 {\n  font-size: 4.5rem;\n  color: #f9f7f6;\n  line-height: 1; }\n  .heading-1--bold {\n    font-weight: 600; }\n\n.heading-2 {\n  font-size: 4rem;\n  line-height: 1; }\n  .heading-2--light {\n    color: #f9f7f6; }\n  .heading-2--dark {\n    color: #54483a; }\n\n.heading-3 {\n  font-size: 1.6rem;\n  text-transform: uppercase; }\n  .heading-3--light {\n    color: #f9f7f6; }\n  .heading-3--dark {\n    color: #54483a; }\n  @media only screen and (max-width: 37.5em) {\n    .heading-3 {\n      font-size: 2rem; } }\n\n.heading-4 {\n  font-size: 1.9rem; }\n  .heading-4--light {\n    color: #f9f7f6; }\n  .heading-4--dark {\n    color: #54483a; }\n\n.heading-back {\n  position: absolute;\n  top: -6rem;\n  left: 0rem;\n  opacity: 0.15;\n  font-size: 4rem; }\n\n.app {\n  position: relative;\n  width: 100%;\n  min-height: 100vh;\n  color: #f9f7f6; }\n\n.grid-points {\n  display: flex; }\n\n.container-grid-points {\n  background: #c31432;\n  /* fallback for old browsers */\n  /* Chrome 10-25, Safari 5.1-6 */\n  background: linear-gradient(to right, #240b36, #c31432);\n  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */ }\n\n.grid-points-contact {\n  position: relative;\n  display: flex; }\n  .grid-points-contact__picture {\n    position: absolute;\n    bottom: 50%;\n    right: 50%;\n    transform: translate(50%, 50%); }\n    @media only screen and (max-width: 62.5em) {\n      .grid-points-contact__picture {\n        bottom: 2rem;\n        right: 2rem;\n        transform: none; } }\n    @media only screen and (max-width: 50em) {\n      .grid-points-contact__picture {\n        bottom: 0rem;\n        right: 0rem; } }\n  .grid-points-contact__message {\n    padding: 2rem 2rem 0;\n    width: 75%;\n    height: 47%;\n    left: -15rem;\n    top: -6rem;\n    position: absolute;\n    -webkit-clip-path: polygon(0% 0%, 100% 0%, 100% 75%, 75% 75%, 75% 100%, 50% 75%, 0% 75%);\n            clip-path: polygon(0% 0%, 100% 0%, 100% 75%, 75% 75%, 75% 100%, 50% 75%, 0% 75%);\n    background-color: rgba(150, 212, 198, 0.6); }\n    @media only screen and (max-width: 62.5em) {\n      .grid-points-contact__message {\n        left: -1rem;\n        top: -1rem; } }\n    @media only screen and (max-width: 50em) {\n      .grid-points-contact__message {\n        left: 0.4rem;\n        top: 0.4rem; } }\n    .grid-points-contact__message--box {\n      border-radius: 0.6rem;\n      padding: 1rem 1.4rem;\n      background-color: rgba(23, 48, 58, 0.85);\n      line-height: 1.5;\n      letter-spacing: 0.08rem;\n      color: #96d4c6;\n      box-shadow: rgba(0, 0, 0, 0.3) 0px 19px 38px, rgba(0, 0, 0, 0.22) 0px 15px 12px; }\n\n.blured-screen {\n  width: 100%;\n  height: 100vh;\n  position: fixed;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 10000;\n  justify-content: center;\n  align-items: center;\n  transition: all 0.3s; }\n  @supports ((-webkit-backdrop-filter: blur(10px)) or (backdrop-filter: blur(10px))) {\n    .blured-screen {\n      -webkit-backdrop-filter: blur(10px);\n      backdrop-filter: blur(10px);\n      background-color: rgba(0, 0, 0, 0.3); } }\n  .blured-screen__content {\n    width: 80%;\n    box-shadow: 0 2rem 4rem rgba(0, 0, 0, 0.2);\n    border-radius: 3px;\n    animation-name: grow-box;\n    animation-duration: 0.4s;\n    animation-timing-function: ease-in-out; }\n    .blured-screen__content:hover {\n      cursor: pointer; }\n    .blured-screen__content img {\n      width: 100%;\n      height: 100%;\n      border-radius: 3px; }\n      @media only screen and (max-width: 56.25em) {\n        .blured-screen__content img {\n          width: 100%;\n          height: 50vh;\n          transform: rotate(90deg); } }\n  @media only screen and (max-width: 56.25em) and (orientation: landscape) {\n    .blured-screen__content img {\n      transform: rotate(0deg); } }\n\n@keyframes grow-box {\n  0% {\n    opacity: 0.2; }\n  25% {\n    opacity: 0.4; }\n  50% {\n    opacity: 0.6; }\n  75% {\n    opacity: 0.8; }\n  100% {\n    opacity: 0.9; } }\n\n.back-screen {\n  width: 100%;\n  min-height: 80vh; }\n\n.home {\n  width: 100%;\n  height: 80vh;\n  display: flex; }\n\n@media only screen and (max-width: 56.25em) and (orientation: landscape) {\n  .home {\n    margin: 4rem 0 0; } }\n  @media only screen and (max-width: 37.5em) {\n    .home {\n      position: relative;\n      display: block; } }\n  @media only screen and (max-width: 37.5em) and (orientation: landscape) {\n    .home {\n      margin: 1.5rem 0; } }\n  .home__box {\n    width: 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column; }\n    @media only screen and (max-width: 37.5em) {\n      .home__box {\n        flex-direction: row;\n        justify-content: space-between;\n        align-items: flex-end; } }\n    .home__box--headings > :not(:last-child) {\n      margin-bottom: 5rem; }\n      @media only screen and (max-width: 37.5em) {\n        .home__box--headings > :not(:last-child) {\n          margin-bottom: 3rem; } }\n    .home__box--headings div > :not(:last-child) {\n      margin-bottom: 1.8rem; }\n    @media only screen and (max-width: 37.5em) {\n      .home__box--headings div {\n        padding-left: 3rem; } }\n    @media only screen and (max-width: 37.5em) {\n      .home__box--headings {\n        background: rgba(30, 66, 80, 0.85);\n        height: 30%;\n        padding-right: 1rem;\n        position: absolute;\n        bottom: 0;\n        -webkit-clip-path: polygon(0 40%, 100% 0%, 100% 100%, 0 100%);\n                clip-path: polygon(0 40%, 100% 0%, 100% 100%, 0 100%);\n        z-index: 500; } }\n    @media only screen and (max-width: 37.5em) {\n      .home__box--image {\n        height: 100%; } }\n    @media only screen and (max-width: 37.5em) {\n      .home__box {\n        width: 100%; } }\n  .home__points-container {\n    position: relative; }\n    @media only screen and (max-width: 37.5em) {\n      .home__points-container {\n        height: 100%; } }\n  .home__points {\n    position: absolute;\n    top: -20%;\n    right: 9%;\n    z-index: -1; }\n    @media only screen and (max-width: 50em) {\n      .home__points {\n        top: -25%;\n        right: 6%; } }\n    @media only screen and (max-width: 37.5em) {\n      .home__points {\n        display: none; } }\n  .home__figure {\n    -webkit-clip-path: polygon(0 0, 100% 0%, 100% 100%, 0 85%);\n            clip-path: polygon(0 0, 100% 0%, 100% 100%, 0 85%);\n    width: 80%;\n    transform: rotateY(11deg); }\n    @media only screen and (max-width: 37.5em) {\n      .home__figure {\n        -webkit-clip-path: none;\n                clip-path: none;\n        transform: rotateY(0deg);\n        height: 100%;\n        width: 100%; } }\n    .home__figure img {\n      filter: grayscale(50%);\n      width: 100%; }\n      @media only screen and (max-width: 37.5em) {\n        .home__figure img {\n          object-fit: cover;\n          object-position: 15% 50%;\n          height: 100%; } }\n  .home__icons {\n    list-style: none;\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n    width: 25%; }\n    @media only screen and (max-width: 62.5em) {\n      .home__icons {\n        width: 30%; } }\n    @media only screen and (max-width: 50em) {\n      .home__icons {\n        width: 40%; } }\n    @media only screen and (max-width: 37.5em) {\n      .home__icons {\n        width: unset;\n        height: 80%;\n        display: flex;\n        flex-direction: column;\n        padding-bottom: 1.5rem;\n        text-align: end;\n        padding-right: 2.5rem; } }\n    .home__icons li a:link,\n    .home__icons li a:visited {\n      text-decoration: none; }\n\n.navigation {\n  min-height: 10vh;\n  padding-top: 0.5rem;\n  display: flex;\n  align-items: center; }\n  .navigation__list {\n    width: 50%;\n    display: flex;\n    align-items: center; }\n    @media only screen and (max-width: 56.25em) {\n      .navigation__list {\n        width: 70%; } }\n    @media only screen and (max-width: 43.75em) {\n      .navigation__list {\n        width: 85%; } }\n    @media only screen and (max-width: 37.5em) {\n      .navigation__list {\n        width: 100%;\n        margin-left: 0; } }\n  .navigation__item {\n    list-style: none;\n    width: 25%;\n    display: flex;\n    justify-content: center; }\n    .navigation__item a {\n      font-size: 1.6rem;\n      transition: all 0.2s; }\n      @media only screen and (max-width: 74.375em) {\n        .navigation__item a {\n          font-size: 2rem; } }\n    .navigation__item a:hover {\n      font-weight: bold;\n      color: rgba(255, 255, 255, 0.8);\n      text-decoration: underline; }\n    .navigation__item a:active {\n      font-weight: bold;\n      transform: translateY(3px); }\n\n.inactive {\n  font-weight: 500;\n  text-decoration: none;\n  transform: translateY(0);\n  color: rgba(255, 255, 255, 0.6); }\n\n.active {\n  font-weight: bold;\n  transform: translateY(-3px);\n  color: rgba(255, 255, 255, 0.8);\n  text-decoration: underline; }\n\n.my-logo {\n  width: 6rem;\n  height: 6rem;\n  border-radius: 0.6rem;\n  background: #96d4c6;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #2e2929;\n  font-weight: 400;\n  font-size: 4rem;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  user-select: none;\n  -moz-user-select: none;\n  -webkit-user-select: none;\n  -ms-user-select: none;\n  transition: all 0.2s; }\n  .my-logo:hover {\n    cursor: pointer;\n    background: #17303a;\n    color: #96d4c6; }\n    .my-logo:hover i {\n      transition: all 0.2s; }\n\n.contact {\n  display: flex;\n  min-height: 60vh; }\n  @media only screen and (max-width: 50em) {\n    .contact {\n      flex-direction: column-reverse;\n      align-items: center;\n      justify-content: space-evenly; }\n      .contact > div {\n        margin-top: 3rem;\n        width: 100%; } }\n  .contact__profile {\n    width: 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center; }\n  .contact__box--1 {\n    width: 50%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center; }\n  .contact__form-container {\n    padding: 2rem;\n    width: 100%;\n    min-height: 75%;\n    display: flex;\n    justify-content: center;\n    align-items: center; }\n    @media only screen and (max-width: 25em) {\n      .contact__form-container {\n        padding: 2rem 0; } }\n  .contact__heading {\n    width: -moz-fit-content;\n    width: fit-content;\n    position: relative; }\n    .contact__heading--back {\n      opacity: 0.05;\n      font-size: 6.8rem; }\n      @media only screen and (max-width: 74.375em) {\n        .contact__heading--back {\n          font-size: 7rem; } }\n    .contact__heading--front {\n      position: absolute;\n      top: 30%;\n      left: 10%;\n      letter-spacing: 0.3rem;\n      font-size: 3rem; }\n      @media only screen and (max-width: 74.375em) {\n        .contact__heading--front {\n          font-size: 4rem; } }\n\n.avatar {\n  width: 25rem;\n  height: 25rem;\n  border-radius: 50%;\n  border: 25px solid rgba(255, 255, 255, 0.1);\n  box-shadow: 0 0 0 25px rgba(255, 255, 255, 0.05); }\n  .avatar img {\n    width: 100%;\n    height: 100%;\n    filter: grayscale(50%);\n    border-radius: 50%;\n    object-fit: cover;\n    object-position: 50% 0;\n    transform: scaleX(-1); }\n\n.form {\n  width: 60%; }\n  @media only screen and (max-width: 74.375em) {\n    .form {\n      width: 80%; } }\n  @media only screen and (max-width: 50em) {\n    .form {\n      width: 100%; } }\n  .form__group:not(:last-child) {\n    margin-bottom: 2rem; }\n  .form__input {\n    width: 100%;\n    font-size: 1.5rem;\n    font-family: inherit;\n    color: inherit;\n    padding: 1.5rem 2rem;\n    background-color: rgba(150, 212, 198, 0.3);\n    border: none;\n    border-radius: 0.6rem;\n    border-bottom: 3px solid transparent;\n    display: block;\n    transition: all 0.3s; }\n    .form__input:focus {\n      outline: none;\n      box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.1);\n      border-bottom: 3px solid #96d4c6; }\n    .form__input:focus:invalid {\n      border-bottom: 3px solid #ff7730; }\n    .form__input::-webkit-input-placeholder {\n      color: #96d4c6; }\n  .form__label {\n    font-size: 1.2rem;\n    font-weight: 700;\n    margin-left: 2rem;\n    margin-top: 0.7rem;\n    display: block;\n    transition: all 0.3s; }\n  .form__input:placeholder-shown + .form__label {\n    opacity: 0;\n    visibility: hidden;\n    transform: translateY(-4rem); }\n\ntextarea {\n  height: 10rem; }\n\n.btn {\n  border-radius: 0.6rem;\n  padding: 1rem;\n  border: 0;\n  font-weight: bold;\n  color: #17303a;\n  font-size: 1.6rem;\n  transition: all 0.2s; }\n  .btn--green {\n    background: #96d4c6; }\n    .btn--green:hover {\n      cursor: pointer;\n      background: #17303a;\n      color: #96d4c6;\n      transform: translateY(-0.3rem);\n      box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }\n    .btn--green:active, .btn--green:focus {\n      outline: none;\n      transform: translateY(-0.1rem);\n      box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }\n\n.grid-points-about {\n  position: relative;\n  display: flex; }\n  .grid-points-about__picture {\n    position: absolute;\n    bottom: 1%;\n    left: 1%; }\n  .grid-points-about__message {\n    position: absolute;\n    padding: 2rem 2rem 0;\n    width: 50%;\n    height: 50%;\n    right: 1%;\n    top: 1%;\n    -webkit-clip-path: polygon(0 0, 100% 0, 100% 75%, 50% 75%, 25% 100%, 25% 75%, 0% 75%);\n            clip-path: polygon(0 0, 100% 0, 100% 75%, 50% 75%, 25% 100%, 25% 75%, 0% 75%);\n    background-color: rgba(150, 212, 198, 0.6); }\n\n.about-me {\n  min-height: 60vh;\n  display: flex;\n  justify-content: space-around; }\n  @media only screen and (max-width: 56.25em) {\n    .about-me {\n      justify-content: space-between; } }\n  @media only screen and (max-width: 50em) {\n    .about-me {\n      flex-direction: column;\n      align-items: center; } }\n  .about-me__picture {\n    margin-top: 3.5rem; }\n    @media only screen and (max-width: 50em) {\n      .about-me__picture {\n        margin-left: auto;\n        margin-right: auto; } }\n  .about-me__points {\n    top: 10%;\n    position: sticky; }\n  .about-me__story {\n    width: 50%;\n    padding: 2rem 0; }\n    @media only screen and (max-width: 56.25em) {\n      .about-me__story {\n        width: unset;\n        padding-left: 1rem; } }\n    @media only screen and (max-width: 50em) {\n      .about-me__story {\n        width: 80%;\n        padding-left: 0;\n        margin-top: 5rem; } }\n    @media only screen and (max-width: 37.5em) {\n      .about-me__story {\n        width: 95%; } }\n    .about-me__story > :not(:last-child) {\n      margin-bottom: 5rem; }\n  .about-me__text {\n    color: #96d4c6;\n    font-size: 1.6rem;\n    line-height: 1.5;\n    letter-spacing: 0.1rem;\n    text-align: justify; }\n    .about-me__text > :not(:last-child) {\n      margin-bottom: 2rem; }\n    .about-me__text p {\n      padding: 0 2.5rem; }\n      @media only screen and (min-width: 112.5em) {\n        .about-me__text p {\n          padding: 0 7rem; } }\n      @media only screen and (max-width: 74.375em) {\n        .about-me__text p {\n          padding: 0 0; } }\n    @media only screen and (max-width: 74.375em) {\n      .about-me__text {\n        font-size: 1.8rem; } }\n    @media only screen and (max-width: 37.5em) {\n      .about-me__text {\n        font-size: 2.5rem; } }\n    .about-me__text h1 {\n      font-size: 3rem; }\n  .about-me__footer {\n    display: flex;\n    justify-content: flex-end; }\n\n.skills {\n  color: #96d4c6;\n  font-size: 1.6rem; }\n  .skills h1 {\n    font-size: 3rem; }\n  .skills > :not(:last-child) {\n    margin-bottom: 3rem; }\n  .skills__logos-container {\n    display: flex;\n    flex-wrap: wrap; }\n  .skills__row {\n    width: 25%;\n    margin-bottom: 3rem;\n    display: flex;\n    justify-content: center;\n    align-items: center; }\n    @media only screen and (max-width: 74.375em) {\n      .skills__row {\n        width: 33.3333%; } }\n    @media only screen and (max-width: 25em) {\n      .skills__row {\n        width: 50%; } }\n  .skills__card {\n    padding: 1rem;\n    margin: 0 auto;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center; }\n  .skills__figure {\n    margin: 0 auto;\n    margin-bottom: 1rem;\n    width: 25%; }\n  .skills__image {\n    width: 100%; }\n\n.projects {\n  display: flex; }\n  @media only screen and (max-width: 56.25em) {\n    .projects {\n      flex-direction: column; } }\n  .projects__names {\n    margin-top: 3.5rem; }\n    .projects__names--points {\n      top: 3%;\n      position: sticky; }\n      @media only screen and (max-width: 56.25em) {\n        .projects__names--points {\n          display: flex;\n          justify-content: center;\n          align-items: center; } }\n  .projects__description {\n    width: 100%;\n    padding: 2rem 5rem; }\n    @media only screen and (max-width: 56.25em) {\n      .projects__description {\n        padding: 2rem 0;\n        min-height: 30vh;\n        display: flex;\n        justify-content: center;\n        align-items: center; } }\n  .projects__index {\n    height: 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center; }\n\n.grid-points-projects {\n  position: relative;\n  display: flex; }\n  .grid-points-projects__back {\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 100%;\n    height: 100%; }\n  .grid-points-projects__list {\n    width: 90%;\n    list-style: none; }\n    .grid-points-projects__list > :not(:last-child) {\n      margin-bottom: 3.5rem; }\n  .grid-points-projects__item {\n    display: flex;\n    align-items: center; }\n    .grid-points-projects__item a {\n      color: inherit;\n      text-decoration: none;\n      transition: all 0.27s; }\n      .grid-points-projects__item a h3 {\n        font-size: 2rem; }\n        @media only screen and (max-width: 74.375em) {\n          .grid-points-projects__item a h3 {\n            font-size: 2.5rem; } }\n        @media only screen and (max-width: 37.5em) {\n          .grid-points-projects__item a h3 {\n            font-size: 2.7rem; } }\n    .grid-points-projects__item a:hover {\n      transform: scale(1.1); }\n      .grid-points-projects__item a:hover h3,\n      .grid-points-projects__item a:hover h4 {\n        color: #96d4c6; }\n    .grid-points-projects__item a:active {\n      transform: scale(1); }\n  .grid-points-projects__item::before {\n    content: \"•\";\n    padding-bottom: 0.9rem;\n    font-size: 2rem;\n    margin-right: 3rem; }\n  .grid-points-projects__sentence {\n    font-size: 1.2rem;\n    color: #f9f7f6; }\n    @media only screen and (max-width: 74.375em) {\n      .grid-points-projects__sentence {\n        font-size: 1.5rem; } }\n    @media only screen and (max-width: 74.375em) {\n      .grid-points-projects__sentence {\n        font-size: 1.6rem; } }\n\n.active-project {\n  transform: scale(1.1); }\n  .active-project h3,\n  .active-project h4 {\n    color: #96d4c6; }\n\n.project-single > :not(:first-child) {\n  margin-top: 12rem; }\n\n.project-single__head {\n  padding: 1.5rem 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center; }\n  .project-single__head--subheading {\n    position: absolute;\n    left: 10%;\n    font-size: 1.6rem;\n    font-weight: 500; }\n\n.project-single__list {\n  list-style: none;\n  display: flex; }\n  .project-single__list > :not(:last-child) {\n    margin-right: 0.7rem; }\n\n.project-single__item a {\n  text-decoration: none; }\n\n.project-single__body {\n  position: relative; }\n  .project-single__body > :not(:first-child) {\n    margin-top: 3rem; }\n\n.project-single__card {\n  width: 100%;\n  display: flex; }\n  @media only screen and (max-width: 62.5em) {\n    .project-single__card {\n      flex-direction: column;\n      align-items: center; } }\n  .project-single__card figure {\n    border-radius: 2rem;\n    width: 35rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative; }\n    .project-single__card figure:hover {\n      cursor: pointer; }\n    .project-single__card figure:hover .project-single__caption {\n      opacity: 1;\n      transform: translate(-50%, -50%); }\n    .project-single__card figure:hover .project-single__img {\n      transform: scale(1);\n      filter: blur(3px) brightness(80%); }\n    .project-single__card figure img {\n      border-radius: 2rem;\n      width: 100%;\n      height: 20rem;\n      object-fit: cover;\n      box-shadow: rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px; }\n  .project-single__card:nth-of-type(odd) figure {\n    order: 2; }\n    @media only screen and (max-width: 62.5em) {\n      .project-single__card:nth-of-type(odd) figure {\n        order: unset; } }\n  .project-single__card:nth-of-type(odd) .project-single__text {\n    padding: 2rem 5rem 2rem 0; }\n    @media only screen and (max-width: 62.5em) {\n      .project-single__card:nth-of-type(odd) .project-single__text {\n        padding: 4rem 0 6rem; } }\n\n.project-single__caption {\n  color: #f9f7f6;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  text-transform: uppercase;\n  font-size: 1.8rem;\n  font-weight: 700;\n  text-align: center;\n  opacity: 0;\n  transition: all 0.5s; }\n\n.project-single__text {\n  padding: 2rem 0 2rem 5rem;\n  line-height: 1.5;\n  font-size: 1.6rem;\n  letter-spacing: 0.1rem;\n  width: 100%;\n  color: #96d4c6;\n  text-align: justify;\n  display: flex;\n  align-items: center; }\n  @media only screen and (max-width: 62.5em) {\n    .project-single__text {\n      padding: 4rem 0 6rem; } }\n  @media only screen and (max-width: 56.25em) {\n    .project-single__text {\n      font-size: 1.8rem; } }\n  @media only screen and (max-width: 37.5em) {\n    .project-single__text {\n      font-size: 2.5rem; } }\n\n.project-single__technologies {\n  position: relative;\n  max-height: 30%;\n  display: flex;\n  flex-wrap: wrap; }\n  .project-single__technologies--row {\n    width: 20%; }\n    @media only screen and (max-width: 62.5em) {\n      .project-single__technologies--row {\n        width: 33.333%; } }\n    @media only screen and (max-width: 37.5em) {\n      .project-single__technologies--row {\n        width: 50%; } }\n\n.project-single__footer {\n  display: flex;\n  justify-content: flex-end; }\n\n.button-fa {\n  width: 3.7rem;\n  height: 3.7rem;\n  font-size: 3rem;\n  color: #17303a;\n  background: #96d4c6;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: all 0.3s; }\n  @media only screen and (max-width: 37.5em) {\n    .button-fa {\n      width: 4.5rem;\n      height: 4.5rem;\n      font-size: 3.6rem; } }\n  .button-fa:hover {\n    transform: translateY(-3px); }\n  .button-fa:active {\n    transform: translateY(3px); }\n  .button-fa:hover, .button-fa:active {\n    cursor: pointer;\n    background: #17303a;\n    color: #96d4c6; }\n\n@keyframes bouncing-loader {\n  to {\n    opacity: 0.4;\n    transform: translate3d(0, -1rem, 0); } }\n\n.bouncing-loader {\n  display: flex;\n  justify-content: center; }\n  .bouncing-loader > div {\n    width: 2rem;\n    height: 2rem;\n    margin: 3rem 0.2rem;\n    background: #8385aa;\n    border-radius: 50%;\n    animation: bouncing-loader 0.6s infinite alternate; }\n  .bouncing-loader > div:nth-child(2) {\n    animation-delay: 0.2s; }\n  .bouncing-loader > div:nth-child(3) {\n    animation-delay: 0.4s; }\n\n.footer {\n  min-height: 10vh;\n  font-size: 1.6rem;\n  letter-spacing: 0.2rem;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center; }\n  @media only screen and (max-width: 37.5em) {\n    .footer {\n      font-size: 2rem; } }\n\n.not-found {\n  min-height: 80vh;\n  display: flex;\n  justify-content: center;\n  align-items: center; }\n  .not-found__container {\n    display: flex;\n    flex-direction: column; }\n  .not-found__heading {\n    text-align: center;\n    font-weight: 500;\n    font-size: 4rem; }\n    .not-found__heading--1 {\n      color: #ff7730;\n      letter-spacing: 0.2rem; }\n    .not-found__heading--link {\n      color: #aaa;\n      text-decoration: none; }\n      .not-found__heading--link:hover {\n        color: #96d4c6; }\n  .not-found__figure {\n    width: 80%;\n    margin: auto; }\n  .not-found__img {\n    width: 100%; }\n", "",{"version":3,"sources":["webpack://./src/sass/main.scss","webpack://./src/sass/_base.scss","webpack://./src/sass/_typography.scss","webpack://./src/sass/_app.scss","webpack://./src/sass/_grid-points.scss","webpack://./src/sass/_blured-screen.scss","webpack://./src/sass/_back-screen.scss","webpack://./src/sass/_home.scss","webpack://./src/sass/_navigation.scss","webpack://./src/sass/_my-logo.scss","webpack://./src/sass/_contact.scss","webpack://./src/sass/_avatar.scss","webpack://./src/sass/_form.scss","webpack://./src/sass/_btn.scss","webpack://./src/sass/_grid-points-about.scss","webpack://./src/sass/_about-me.scss","webpack://./src/sass/_skills.scss","webpack://./src/sass/_projects.scss","webpack://./src/sass/_project-single.scss","webpack://./src/sass/_button-fa.scss","webpack://./src/sass/_bouncing-loader.scss","webpack://./src/sass/_footer.scss","webpack://./src/sass/_not-found.scss"],"names":[],"mappings":"AAAA,gBAAgB;AC+BhB;;;EAGE,SAAS;EACT,UAAU;EACV,mBAAmB,EAAA;;AAGrB;EACE,2BAA2B,EAAA;;AAG7B;EACE,sBAAsB;EACtB,gBAAgB;EAkBhB,gCA7CgC;EAgDhC,mBAAmB;EAAE,8BAAA;EAMlB,+BAAA;EACH,gEAAgE,EAAA;EA1BhE;IAJF;MAKI,cAAc,EAAA,EA0BjB;EAvBC;IARF;MASI,cAAc,EAAA,EAsBjB;EAnBC;IAZF;MAaI,gBAAgB,EAAA,EAkBnB;;AAED;EACE,kBAAkB;EAClB,gBAAgB,EAAA;EAIhB;IANF;MAOI,kBAAkB,EAAA,EAErB;;AAED;EACE,yBAvFqB;EAwFrB,cAnF2B,EAAA;;AAsF7B;EACE,UAAU;EACV,UAAU,EAAA;;AAGZ;EACE,UAAU;EACV,iCAAiC,EAAA;;ACnGnC;EACE,sBAAsB;EACtB,gCDgBgC;ECfhC,gBAAgB,EAAA;;AAGlB;EAEE,iBAAiB;EACjB,cDD0B;ECE1B,cAAc,EAAA;EACd;IACE,gBAAgB,EAAA;;AAIpB;EAEE,eAAe;EAEf,cAAc,EAAA;EACd;IACE,cDdwB,EAAA;ECgB1B;IACE,cDduB,EAAA;;ACkB3B;EAEE,iBAAiB;EACjB,yBAAyB,EAAA;EACzB;IACE,cD1BwB,EAAA;EC4B1B;IACE,cD1BuB,EAAA;EC4BzB;IAVF;MAWI,eAAe,EAAA,EAElB;;AAED;EAEE,iBAAiB,EAAA;EACjB;IACE,cDxCwB,EAAA;EC0C1B;IACE,cDxCuB,EAAA;;AC4C3B;EAEE,kBAAkB;EAClB,UAAU;EACV,UAAU;EACV,aAAa;EACb,eAAe,EAAA;;AC7DjB;EACE,kBAAkB;EAClB,WAAW;EACX,iBAAiB;EACjB,cFI0B,EAAA;;AGR5B;EACE,aAAa,EAAA;;AAGf;EACE,mBAAmB;EAAE,8BAAA;EAKlB,+BAAA;EACH,uDAIC;EAAE,qEAAA,EAAsE;;AAG3E;EACE,kBAAkB;EAClB,aAAa,EAAA;EAEb;IACE,kBAAkB;IAClB,WAAW;IACX,UAAU;IACV,8BAA8B,EAAA;IAE9B;MANF;QAOI,YAAY;QACZ,WAAW;QACX,eAAe,EAAA,EAOlB;IAJC;MAZF;QAaI,YAAY;QACZ,WAAW,EAAA,EAEd;EAED;IACE,oBAAoB;IACpB,UAAU;IACV,WAAW;IACX,YAAY;IACZ,UAAU;IACV,kBAAkB;IAElB,wFAQC;YARD,gFAQC;IACD,0CHxDmB,EAAA;IG0DnB;MAnBF;QAoBI,WAAW;QACX,UAAU,EAAA,EAkBb;IAfC;MAxBF;QAyBI,YAAY;QACZ,WAAW,EAAA,EAad;IAVC;MACE,qBAAqB;MACrB,oBAAoB;MACpB,wCAAwC;MACxC,gBAAgB;MAChB,uBAAuB;MACvB,cH1EiB;MG2EjB,+EACmC,EAAA;;AC7EzC;EACE,WAAW;EACX,aAAa;EAEb,eAAe;EACf,MAAM;EACN,OAAO;EAEP,oCJMgB;EILhB,cAAc;EAEd,uBAAuB;EACvB,mBAAmB;EAEnB,oBAAoB,EAAA;EAGW;IAjBjC;MAkBI,mCAAmC;MACnC,2BAA2B;MAC3B,oCJNc,EAAA,EImCjB;EA1BC;IAIE,UAAU;IACV,0CJdc;IIed,kBAAkB;IAElB,wBAAwB;IACxB,wBAAwB;IACxB,sCAAsC,EAAA;IAVvC;MAEG,eAAe,EAAA;IAFlB;MAaG,WAAW;MACX,YAAY;MACZ,kBAAkB,EAAA;MAClB;QAhBH;UAiBK,WAAW;UACX,YAAY;UACZ,wBAAwB,EAAA,EAK3B;EAJG;IApBL;MAqBO,uBAAuB,EAAA,EAG5B;;AAIL;EACE;IACE,YAAY,EAAA;EAEd;IACE,YAAY,EAAA;EAEd;IACE,YAAY,EAAA;EAEd;IACE,YAAY,EAAA;EAEd;IACE,YAAY,EAAA,EAAA;;ACjEhB;EACE,WAAW;EACX,gBAAgB,EAAA;;ACFlB;EACE,WAAW;EACX,YAAY;EACZ,aAAa,EAAA;;AAGX;EANJ;IAOM,gBAAgB,EAAA,EAyIrB;EArIC;IAXF;MAYI,kBAAkB;MAClB,cAAc,EAAA,EAmIjB;EAlIG;IAdJ;MAeM,gBAAgB,EAAA,EAiIrB;EA7HC;IACE,UAAU;IACV,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,sBAAsB,EAAA;IACtB;MANF;QAOI,mBAAmB;QACnB,8BAA8B;QAC9B,qBAAqB,EAAA,EAwCxB;IAtCC;MACE,mBAAmB,EAAA;MACnB;QAFF;UAGI,mBAAmB,EAAA,EAEtB;IAED;MACE,qBAAqB,EAAA;IAIrB;MADF;QAEI,kBAAkB,EAAA,EAErB;IAGC;MADF;QAEI,kCAAkC;QAClC,WAAW;QACX,mBAAmB;QACnB,kBAAkB;QAClB,SAAS;QACT,6DAAqD;gBAArD,qDAAqD;QACrD,YAAY,EAAA,EAEf;IAGC;MADF;QAEI,YAAY,EAAA,EAEf;IAED;MA9CF;QA+CI,WAAW,EAAA,EAEd;EAED;IACE,kBAAkB,EAAA;IAClB;MAFF;QAGI,YAAY,EAAA,EAEf;EAED;IACE,kBAAkB;IAClB,SAAS;IACT,SAAS;IACT,WAAW,EAAA;IAEX;MANF;QAOI,SAAS;QACT,SAAS,EAAA,EAMZ;IAHC;MAXF;QAYI,aAAa,EAAA,EAEhB;EAED;IACE,0DAAkD;YAAlD,kDAAkD;IAClD,UAAU;IACV,yBAAyB,EAAA;IACzB;MAJF;QAKI,uBAAe;gBAAf,eAAe;QACf,wBAAwB;QACxB,YAAY;QACZ,WAAW,EAAA,EAYd;IApBA;MAYG,sBAAsB;MACtB,WAAW,EAAA;MACX;QAdH;UAeK,iBAAiB;UACjB,wBAAwB;UACxB,YAAY,EAAA,EAEf;EAGH;IACE,gBAAgB;IAChB,aAAa;IACb,8BAA8B;IAC9B,qBAAqB;IACrB,UAAU,EAAA;IACV;MANF;QAOI,UAAU,EAAA,EAqBb;IAlBC;MAVF;QAWI,UAAU,EAAA,EAiBb;IAdC;MAdF;QAeI,YAAY;QACZ,WAAW;QACX,aAAa;QACb,sBAAsB;QACtB,sBAAsB;QACtB,eAAe;QACf,qBAAqB,EAAA,EAOxB;IA5BA;;MA0BG,qBAAqB,EAAA;;AC7I3B;EACE,gBAAgB;EAChB,mBAAmB;EACnB,aAAa;EACb,mBAAmB,EAAA;EAEnB;IACE,UAAU;IACV,aAAa;IACb,mBAAmB,EAAA;IACnB;MAJF;QAKI,UAAU,EAAA,EASb;IAPC;MAPF;QAQI,UAAU,EAAA,EAMb;IAJC;MAVF;QAWI,WAAW;QACX,cAAc,EAAA,EAEjB;EAED;IACE,gBAAgB;IAChB,UAAU;IACV,aAAa;IACb,uBAAuB,EAAA;IAJxB;MAOG,iBAAiB;MACjB,oBAAoB,EAAA;MACpB;QATH;UAUK,eAAe,EAAA,EAElB;IAZF;MAeG,iBAAiB;MACjB,+BAA+B;MAC/B,0BAA0B,EAAA;IAjB7B;MAqBG,iBAAiB;MACjB,0BAA0B,EAAA;;AAKhC;EACE,gBAAgB;EAChB,qBAAqB;EACrB,wBAAwB;EACxB,+BAA+B,EAAA;;AAGjC;EACE,iBAAiB;EACjB,2BAA2B;EAC3B,+BAA+B;EAC/B,0BAA0B,EAAA;;AC5D5B;EACE,WAAW;EACX,YAAY;EACZ,qBAAqB;EACrB,mBRHqB;EQIrB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,cAAsB;EACtB,gBAAgB;EAChB,eAAe;EAEf,2CAA2C;EAE3C,iBAAiB;EACjB,sBAAsB;EACtB,yBAAyB;EACzB,qBAAqB;EAErB,oBAAoB,EAAA;EAnBtB;IAsBI,eAAe;IACf,mBRjByB;IQkBzB,cRvBmB,EAAA;IQDvB;MA0BM,oBAAoB,EAAA;;AC1B1B;EAEE,aAAa;EACb,gBAAgB,EAAA;EAEhB;IALF;MAUI,8BAA8B;MAC9B,mBAAmB;MACnB,6BAA6B,EAAA;MAZjC;QAOM,gBAAgB;QAChB,WAAW,EAAA,EACZ;EAaH;IACE,UAAU;IACV,aAAa;IACb,uBAAuB;IACvB,mBAAmB,EAAA;EAInB;IACE,UAAU;IACV,aAAa;IACb,8BAA8B;IAC9B,mBAAmB,EAAA;EAIvB;IACE,aAAa;IACb,WAAW;IACX,eAAe;IACf,aAAa;IACb,uBAAuB;IACvB,mBAAmB,EAAA;IACnB;MAPF;QAQI,eAAe,EAAA,EAElB;EAED;IACE,uBAAkB;IAAlB,kBAAkB;IAClB,kBAAkB,EAAA;IAElB;MACE,aAAa;MACb,iBAAiB,EAAA;MAEjB;QAJF;UAKI,eAAe,EAAA,EAElB;IAED;MACE,kBAAkB;MAClB,QAAQ;MACR,SAAS;MACT,sBAAsB;MACtB,eAAe,EAAA;MACf;QANF;UAOI,eAAe,EAAA,EAElB;;ACxEL;EACE,YAAY;EACZ,aAAa;EACb,kBAAkB;EAClB,2CAA2C;EAC3C,gDAAgD,EAAA;EALlD;IAQI,WAAW;IACX,YAAY;IACZ,sBAAsB;IACtB,kBAAkB;IAClB,iBAAiB;IACjB,sBAAsB;IAEtB,qBAAqB,EAAA;;ACfzB;EACE,UAAU,EAAA;EACV;IAFF;MAGI,UAAU,EAAA,EAoDb;EAlDC;IALF;MAMI,WAAW,EAAA,EAiDd;EA9CC;IACE,mBAAmB,EAAA;EAGrB;IACE,WAAW;IACX,iBAAiB;IACjB,oBAAoB;IACpB,cAAc;IACd,oBAAoB;IACpB,0CXlBmB;IWmBnB,YAAY;IACZ,qBAAqB;IACrB,oCAAoC;IACpC,cAAc;IACd,oBAAoB,EAAA;IAXrB;MAcG,aAAa;MACb,0CXdY;MWeZ,gCX5BiB,EAAA;IWYpB;MAoBG,gCX7BwB,EAAA;IWS3B;MAwBG,cXpCiB,EAAA;EWwCrB;IACE,iBAAiB;IACjB,gBAAgB;IAChB,iBAAiB;IACjB,kBAAkB;IAClB,cAAc;IACd,oBAAoB,EAAA;EAGtB;IACE,UAAU;IACV,kBAAkB;IAClB,4BAA4B,EAAA;;AAIhC;EACE,aAAa,EAAA;;AC1Df;EACE,qBAAqB;EACrB,aAAa;EACb,SAAS;EACT,iBAAiB;EACjB,cZC2B;EYA3B,iBAAiB;EACjB,oBAAoB,EAAA;EACpB;IACE,mBZRmB,EAAA;IYOpB;MAGG,eAAe;MACf,mBZNuB;MYOvB,cZZiB;MYajB,8BAA8B;MAC9B,0CZDY,EAAA;IYNf;MAWG,aAAa;MACb,8BAA8B;MAC9B,4CZPY,EAAA;;AadlB;EACE,kBAAkB;EAClB,aAAa,EAAA;EAEb;IACE,kBAAkB;IAClB,UAAU;IACV,QAAQ,EAAA;EAGV;IACE,kBAAkB;IAClB,oBAAoB;IACpB,UAAU;IACV,WAAW;IACX,SAAS;IACT,OAAO;IACP,qFAQC;YARD,6EAQC;IACD,0CbzBmB,EAAA;;AcDvB;EACE,gBAAgB;EAChB,aAAa;EACb,6BAA6B,EAAA;EAC7B;IAJF;MAKI,8BAA8B,EAAA,EAiFjC;EA/EC;IAPF;MAQI,sBAAsB;MACtB,mBAAmB,EAAA,EA6EtB;EA1EC;IACE,kBAAkB,EAAA;IAClB;MAFF;QAGI,iBAAiB;QACjB,kBAAkB,EAAA,EAErB;EAED;IACE,QAAQ;IAER,gBAAgB,EAAA;EAGlB;IACE,UAAU;IAcV,eAAe,EAAA;IAbf;MAFF;QAGI,YAAY;QACZ,kBAAkB,EAAA,EAerB;IAbC;MANF;QAOI,UAAU;QACV,eAAe;QACf,gBAAgB,EAAA,EAUnB;IARC;MAXF;QAYI,UAAU,EAAA,EAOb;IAnBA;MAiBG,mBAAmB,EAAA;EAIvB;IACE,cd/CmB;IcgDnB,iBAAiB;IACjB,gBAAgB;IAChB,sBAAsB;IACtB,mBAAmB,EAAA;IALpB;MAQG,mBAAmB,EAAA;IARtB;MAYG,iBAAiB,EAAA;MAEjB;QAdH;UAeK,eAAe,EAAA,EAKlB;MAHC;QAjBH;UAkBK,YAAY,EAAA,EAEf;IAED;MAtBF;QAuBI,iBAAiB,EAAA,EAUpB;IAPC;MA1BF;QA2BI,iBAAiB,EAAA,EAMpB;IAjCA;MA+BG,eAAe,EAAA;EAInB;IACE,aAAa;IACb,yBAAyB,EAAA;;ACpF7B;EACE,cfAqB;EeCrB,iBAAiB,EAAA;EAFnB;IAKI,eAAe,EAAA;EALnB;IASI,mBAAmB,EAAA;EAGrB;IACE,aAAa;IACb,eAAe,EAAA;EAGjB;IACE,UAAU;IACV,mBAAmB;IACnB,aAAa;IACb,uBAAuB;IACvB,mBAAmB,EAAA;IACnB;MANF;QAOI,eAAe,EAAA,EAMlB;IAHC;MAVF;QAWI,UAAU,EAAA,EAEb;EAED;IACE,aAAa;IACb,cAAc;IACd,WAAW;IACX,aAAa;IACb,sBAAsB;IACtB,mBAAmB,EAAA;EAGrB;IACE,cAAc;IACd,mBAAmB;IACnB,UAAU,EAAA;EAGZ;IACE,WAAW,EAAA;;AChDf;EACE,aAAa,EAAA;EAEb;IAHF;MAII,sBAAsB,EAAA,EAoCzB;EAjCC;IACE,kBAAkB,EAAA;IAClB;MACE,OAAO;MAEP,gBAAgB,EAAA;MAEhB;QALF;UAMI,aAAa;UACb,uBAAuB;UACvB,mBAAmB,EAAA,EAEtB;EAGH;IACE,WAAW;IACX,kBAAkB,EAAA;IAClB;MAHF;QAII,eAAe;QACf,gBAAgB;QAChB,aAAa;QACb,uBAAuB;QACvB,mBAAmB,EAAA,EAEtB;EAED;IACE,WAAW;IACX,aAAa;IACb,uBAAuB;IACvB,mBAAmB,EAAA;;AAIvB;EACE,kBAAkB;EAClB,aAAa,EAAA;EAEb;IACE,kBAAkB;IAClB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,QAAQ;IACR,SAAS;IACT,gCAAgC;IAChC,WAAW;IACX,YAAY,EAAA;EAGd;IACE,UAAU;IACV,gBAAgB,EAAA;IAFjB;MAIG,qBAAqB,EAAA;EAIzB;IACE,aAAa;IACb,mBAAmB,EAAA;IAFpB;MAKG,cAAc;MACd,qBAAqB;MACrB,qBAAqB,EAAA;MAPxB;QASK,eAAe,EAAA;QACf;UAVL;YAWO,iBAAiB,EAAA,EAKpB;QAHC;UAbL;YAcO,iBAAiB,EAAA,EAEpB;IAhBJ;MAoBG,qBAAqB,EAAA;MApBxB;;QAuBK,chBxFe,EAAA;IgBiEpB;MA2BG,mBAAmB,EAAA;EAIvB;IACE,YAAS;IACT,sBAAsB;IACtB,eAAe;IACf,kBAAkB,EAAA;EAGpB;IACE,iBAAiB;IACjB,chBlGwB,EAAA;IgBmGxB;MAHF;QAII,iBAAiB,EAAA,EAKpB;IAHC;MANF;QAOI,iBAAiB,EAAA,EAEpB;;AAGH;EACE,qBAAqB,EAAA;EADvB;;IAII,chBvHmB,EAAA;;AiBDvB;EAEI,iBAAiB,EAAA;;AAEnB;EACE,iBAAiB;EACjB,aAAa;EACb,8BAA8B;EAC9B,mBAAmB,EAAA;EACnB;IACE,kBAAkB;IAElB,SAAS;IAET,iBAAiB;IACjB,gBAAgB,EAAA;;AAGpB;EACE,gBAAgB;EAChB,aAAa,EAAA;EAFd;IAIG,oBAAoB,EAAA;;AAIvB;EAEG,qBAAqB,EAAA;;AAIzB;EACE,kBAAkB,EAAA;EADnB;IAGG,gBAAgB,EAAA;;AAIpB;EACE,WAAW;EACX,aAAa,EAAA;EACb;IAHF;MAII,sBAAsB;MACtB,mBAAmB,EAAA,EAgDtB;EArDA;IAQG,mBAAmB;IACnB,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IAEnB,kBAAkB,EAAA;IAdrB;MAiBK,eAAe,EAAA;IAjBpB;MAqBK,UAAU;MACV,gCAAgC,EAAA;IAtBrC;MA0BK,mBAAmB;MACnB,iCAAiC,EAAA;IA3BtC;MA8BK,mBAAmB;MACnB,WAAW;MACX,aAAa;MACb,iBAAiB;MACjB,uFACsC,EAAA;EAnC3C;IAyCK,QAAQ,EAAA;IACR;MA1CL;QA2CO,YAAY,EAAA,EAEf;EA7CJ;IA+CK,yBAAyB,EAAA;IACzB;MAhDL;QAiDO,oBAAoB,EAAA,EAEvB;;AAIL;EACE,cjBvFwB;EiBwFxB,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,yBAAyB;EACzB,iBAAiB;EACjB,gBAAgB;EAChB,kBAAkB;EAClB,UAAU;EACV,oBAAoB,EAAA;;AAGtB;EACE,yBAAyB;EACzB,gBAAgB;EAChB,iBAAiB;EACjB,sBAAsB;EACtB,WAAW;EACX,cjBjHmB;EiBkHnB,mBAAmB;EACnB,aAAa;EACb,mBAAmB,EAAA;EAEnB;IAXF;MAYI,oBAAoB,EAAA,EAUvB;EAPC;IAfF;MAgBI,iBAAiB,EAAA,EAMpB;EAHC;IAnBF;MAoBI,iBAAiB,EAAA,EAEpB;;AAED;EACE,kBAAkB;EAClB,eAAe;EACf,aAAa;EACb,eAAe,EAAA;EAEf;IACE,UAAU,EAAA;IACV;MAFF;QAGI,cAAc,EAAA,EAKjB;IAHC;MALF;QAMI,UAAU,EAAA,EAEb;;AAGH;EACE,aAAa;EACb,yBAAyB,EAAA;;ACvJ7B;EACE,aAAa;EACb,cAAc;EACd,eAAe;EACf,clBE2B;EkBD3B,mBlBJqB;EkBKrB,2CAA2C;EAE3C,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EAEnB,oBAAoB,EAAA;EAEpB;IAdF;MAeI,aAAa;MACb,cAAc;MACd,iBAAiB,EAAA,EAiBpB;EAlCD;IAqBI,2BAA2B,EAAA;EArB/B;IAyBI,0BAA0B,EAAA;EAzB9B;IA8BI,eAAe;IACf,mBlBzByB;IkB0BzB,clB/BmB,EAAA;;AmBDvB;EACE;IACE,YAAY;IACZ,mCAAmC,EAAA,EAAA;;AAIvC;EACE,aAAa;EACb,uBAAuB,EAAA;EAFzB;IAII,WAAW;IACX,YAAY;IACZ,mBAAmB;IACnB,mBAAmB;IACnB,kBAAkB;IAClB,kDAAkD,EAAA;EATtD;IAaI,qBAAqB,EAAA;EAbzB;IAiBI,qBAAqB,EAAA;;ACxBzB;EACE,gBAAgB;EAChB,iBAAiB;EACjB,sBAAsB;EACtB,kBAAkB;EAClB,aAAa;EACb,uBAAuB;EACvB,mBAAmB,EAAA;EACnB;IARF;MASI,eAAe,EAAA,EAElB;;ACXD;EACE,gBAAgB;EAChB,aAAa;EACb,uBAAuB;EACvB,mBAAmB,EAAA;EAEnB;IACE,aAAa;IACb,sBAAsB,EAAA;EAGxB;IACE,kBAAkB;IAClB,gBAAgB;IAChB,eAAe,EAAA;IACf;MACE,crBZwB;MqBaxB,sBAAsB,EAAA;IAGxB;MACE,WrBZmB;MqBanB,qBAAqB,EAAA;MAFtB;QAIG,crBvBe,EAAA;EqB4BrB;IACE,UAAU;IACV,YAAY,EAAA;EAGd;IACE,WAAW,EAAA","sourcesContent":["@import \"base\";\n@import \"fonts\";\n@import \"typography\";\n\n@import \"app\";\n@import \"grid-points\";\n@import \"blured-screen\";\n@import \"back-screen\";\n@import \"home\";\n@import \"navigation\";\n@import \"my-logo\";\n@import \"contact\";\n@import \"avatar\";\n@import \"form\";\n@import \"btn\";\n@import \"grid-points-about\";\n@import \"about-me\";\n@import \"skills\";\n@import \"projects\";\n@import \"project-single\";\n@import \"button-fa\";\n@import \"bouncing-loader\";\n@import \"footer\";\n@import \"not-found\";\n","// COLOR VARIABLES\n$color-primary: #96d4c6;\n// $color-primary: #93f6ca;\n\n$color-secondary-dark: #ff7730;\n\n$color-tertiary-dark: #17303a;\n\n$color-grey-light-1: #f9f7f6;\n$color-grey-light-2: #aaa;\n\n$color-grey-dark-1: #54483a;\n$color-grey-dark-2: #6d5d4b;\n\n$color-black: #000;\n$color-white: #fff;\n\n// FONT VARIABLES\n$font-primary: \"Inter\", sans-serif;\n$font-icon: \"The Nautigal\", cursive;\n\n// RESPONSIVE BREAKPOINTS\n$bp-bigest: 112.5em; // 1800px\n$bp-largest: 74.375em; // 1190px\n$bp-large: 62.5em; // 1000px\n$bp-large-medium: 56.25em; // 900px\n$bp-medium: 50em; // 800px\n$bp-medium-small: 43.75em; // 700px\n$bp-small: 37.5em; // 600px\n$bp-xs-small: 25em; // 400px\n\n*,\n*:before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: inherit;\n}\n\nbody {\n  overscroll-behavior-y: none;\n}\n\nhtml {\n  box-sizing: border-box;\n  font-size: 62.5%;\n\n  @media only screen and(min-width: $bp-bigest) {\n    font-size: 75%;\n  }\n\n  @media only screen and(max-width: $bp-largest) {\n    font-size: 50%;\n  }\n\n  @media only screen and(max-width: $bp-small) {\n    font-size: 37.5%;\n  }\n\n  // @media only screen and(max-width: $bp-xs-small) {\n  //   font-size: 31.25%;\n  // }\n\n  font-family: $font-primary;\n\n  // background: #121314;\n  background: #0f2027; /* fallback for old browsers */\n  background: -webkit-linear-gradient(\n    to left,\n    #2c5364,\n    #203a43,\n    #0f2027\n  ); /* Chrome 10-25, Safari 5.1-6 */\n  background: linear-gradient(to right, #2c5364, #203a43, #0f2027);\n}\n\n.wrapper {\n  padding: 2rem 4rem;\n  min-height: 80vh;\n\n  @media only screen and(max-width: $bp-small) {\n  }\n  @media only screen and(max-width: $bp-xs-small) {\n    padding: 2rem 2rem;\n  }\n}\n\n::selection {\n  background-color: $color-primary;\n  color: $color-tertiary-dark;\n}\n\n.fade-enter {\n  opacity: 0;\n  z-index: 1;\n}\n\n.fade-enter.fade-enter-active {\n  opacity: 1;\n  transition: opacity 250ms ease-in;\n}\n","%heading {\n  letter-spacing: 0.3rem;\n  font-family: $font-primary;\n  font-weight: 400;\n}\n\n.heading-1 {\n  @extend %heading;\n  font-size: 4.5rem;\n  color: $color-grey-light-1;\n  line-height: 1;\n  &--bold {\n    font-weight: 600;\n  }\n}\n\n.heading-2 {\n  @extend %heading;\n  font-size: 4rem;\n  // font-style: italic;\n  line-height: 1;\n  &--light {\n    color: $color-grey-light-1;\n  }\n  &--dark {\n    color: $color-grey-dark-1;\n  }\n}\n\n.heading-3 {\n  @extend %heading;\n  font-size: 1.6rem;\n  text-transform: uppercase;\n  &--light {\n    color: $color-grey-light-1;\n  }\n  &--dark {\n    color: $color-grey-dark-1;\n  }\n  @media only screen and(max-width: $bp-small) {\n    font-size: 2rem;\n  }\n}\n\n.heading-4 {\n  @extend %heading;\n  font-size: 1.9rem;\n  &--light {\n    color: $color-grey-light-1;\n  }\n  &--dark {\n    color: $color-grey-dark-1;\n  }\n}\n\n.heading-back {\n  @extend %heading;\n  position: absolute;\n  top: -6rem;\n  left: 0rem;\n  opacity: 0.15;\n  font-size: 4rem;\n  // white-space: nowrap;\n}\n",".app {\n  position: relative;\n  width: 100%;\n  min-height: 100vh;\n  color: $color-grey-light-1;\n}\n",".grid-points {\n  display: flex;\n}\n\n.container-grid-points {\n  background: #c31432; /* fallback for old browsers */\n  background: -webkit-linear-gradient(\n    to right,\n    #240b36,\n    #c31432\n  ); /* Chrome 10-25, Safari 5.1-6 */\n  background: linear-gradient(\n    to right,\n    #240b36,\n    #c31432\n  ); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n}\n\n.grid-points-contact {\n  position: relative;\n  display: flex;\n\n  &__picture {\n    position: absolute;\n    bottom: 50%;\n    right: 50%;\n    transform: translate(50%, 50%);\n\n    @media only screen and(max-width: $bp-large) {\n      bottom: 2rem;\n      right: 2rem;\n      transform: none;\n    }\n\n    @media only screen and(max-width: $bp-medium) {\n      bottom: 0rem;\n      right: 0rem;\n    }\n  }\n\n  &__message {\n    padding: 2rem 2rem 0;\n    width: 75%;\n    height: 47%;\n    left: -15rem;\n    top: -6rem;\n    position: absolute;\n\n    clip-path: polygon(\n      0% 0%,\n      100% 0%,\n      100% 75%,\n      75% 75%,\n      75% 100%,\n      50% 75%,\n      0% 75%\n    );\n    background-color: rgba($color-primary, 0.6);\n\n    @media only screen and(max-width: $bp-large) {\n      left: -1rem;\n      top: -1rem;\n    }\n\n    @media only screen and(max-width: $bp-medium) {\n      left: 0.4rem;\n      top: 0.4rem;\n    }\n\n    &--box {\n      border-radius: 0.6rem;\n      padding: 1rem 1.4rem;\n      background-color: rgba(23, 48, 58, 0.85);\n      line-height: 1.5;\n      letter-spacing: 0.08rem;\n      color: $color-primary;\n      box-shadow: rgba(0, 0, 0, 0.3) 0px 19px 38px,\n        rgba(0, 0, 0, 0.22) 0px 15px 12px;\n    }\n  }\n}\n",".blured-screen {\n  width: 100%;\n  height: 100vh;\n\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  background-color: rgba($color-black, 0.8);\n  z-index: 10000;\n\n  justify-content: center;\n  align-items: center;\n\n  transition: all 0.3s;\n\n  @supports (-webkit-backdrop-filter: blur(10px)) or\n    (backdrop-filter: blur(10px)) {\n    -webkit-backdrop-filter: blur(10px);\n    backdrop-filter: blur(10px);\n    background-color: rgba($color-black, 0.3);\n  }\n\n  &__content {\n    &:hover {\n      cursor: pointer;\n    }\n    width: 80%;\n    box-shadow: 0 2rem 4rem rgba($color-black, 0.2);\n    border-radius: 3px;\n\n    animation-name: grow-box;\n    animation-duration: 0.4s;\n    animation-timing-function: ease-in-out;\n\n    & img {\n      width: 100%;\n      height: 100%;\n      border-radius: 3px;\n      @media only screen and(max-width: $bp-large-medium) {\n        width: 100%;\n        height: 50vh;\n        transform: rotate(90deg);\n        @media (orientation: landscape) {\n          transform: rotate(0deg);\n        }\n      }\n    }\n  }\n}\n\n@keyframes grow-box {\n  0% {\n    opacity: 0.2;\n  }\n  25% {\n    opacity: 0.4;\n  }\n  50% {\n    opacity: 0.6;\n  }\n  75% {\n    opacity: 0.8;\n  }\n  100% {\n    opacity: 0.9;\n  }\n}\n",".back-screen {\n  width: 100%;\n  min-height: 80vh;\n}\n",".home {\n  width: 100%;\n  height: 80vh;\n  display: flex;\n\n  @media only screen and(max-width: $bp-large-medium) {\n    @media (orientation: landscape) {\n      margin: 4rem 0 0;\n    }\n  }\n\n  @media only screen and(max-width: $bp-small) {\n    position: relative;\n    display: block;\n    @media (orientation: landscape) {\n      margin: 1.5rem 0;\n    }\n  }\n\n  &__box {\n    width: 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    @media only screen and(max-width: $bp-small) {\n      flex-direction: row;\n      justify-content: space-between;\n      align-items: flex-end;\n    }\n    &--headings > :not(:last-child) {\n      margin-bottom: 5rem;\n      @media only screen and(max-width: $bp-small) {\n        margin-bottom: 3rem;\n      }\n    }\n\n    &--headings div > :not(:last-child) {\n      margin-bottom: 1.8rem;\n    }\n\n    &--headings div {\n      @media only screen and(max-width: $bp-small) {\n        padding-left: 3rem;\n      }\n    }\n\n    &--headings {\n      @media only screen and(max-width: $bp-small) {\n        background: rgba(30, 66, 80, 0.85);\n        height: 30%;\n        padding-right: 1rem;\n        position: absolute;\n        bottom: 0;\n        clip-path: polygon(0 40%, 100% 0%, 100% 100%, 0 100%);\n        z-index: 500;\n      }\n    }\n\n    &--image {\n      @media only screen and(max-width: $bp-small) {\n        height: 100%;\n      }\n    }\n\n    @media only screen and(max-width: $bp-small) {\n      width: 100%;\n    }\n  }\n\n  &__points-container {\n    position: relative;\n    @media only screen and(max-width: $bp-small) {\n      height: 100%;\n    }\n  }\n\n  &__points {\n    position: absolute;\n    top: -20%;\n    right: 9%;\n    z-index: -1;\n\n    @media only screen and(max-width: $bp-medium) {\n      top: -25%;\n      right: 6%;\n    }\n\n    @media only screen and(max-width: $bp-small) {\n      display: none;\n    }\n  }\n\n  &__figure {\n    clip-path: polygon(0 0, 100% 0%, 100% 100%, 0 85%);\n    width: 80%;\n    transform: rotateY(11deg);\n    @media only screen and(max-width: $bp-small) {\n      clip-path: none;\n      transform: rotateY(0deg);\n      height: 100%;\n      width: 100%;\n    }\n\n    & img {\n      filter: grayscale(50%);\n      width: 100%;\n      @media only screen and(max-width: $bp-small) {\n        object-fit: cover;\n        object-position: 15% 50%;\n        height: 100%;\n      }\n    }\n  }\n\n  &__icons {\n    list-style: none;\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-end;\n    width: 25%;\n    @media only screen and(max-width: $bp-large) {\n      width: 30%;\n    }\n\n    @media only screen and(max-width: $bp-medium) {\n      width: 40%;\n    }\n\n    @media only screen and(max-width: $bp-small) {\n      width: unset;\n      height: 80%;\n      display: flex;\n      flex-direction: column;\n      padding-bottom: 1.5rem;\n      text-align: end;\n      padding-right: 2.5rem;\n    }\n\n    & li a:link,\n    & li a:visited {\n      text-decoration: none;\n    }\n  }\n}\n",".navigation {\n  min-height: 10vh;\n  padding-top: 0.5rem;\n  display: flex;\n  align-items: center;\n\n  &__list {\n    width: 50%;\n    display: flex;\n    align-items: center;\n    @media only screen and(max-width: $bp-large-medium) {\n      width: 70%;\n    }\n    @media only screen and(max-width: $bp-medium-small) {\n      width: 85%;\n    }\n    @media only screen and(max-width: $bp-small) {\n      width: 100%;\n      margin-left: 0;\n    }\n  }\n\n  &__item {\n    list-style: none;\n    width: 25%;\n    display: flex;\n    justify-content: center;\n\n    & a {\n      font-size: 1.6rem;\n      transition: all 0.2s;\n      @media only screen and(max-width: $bp-largest) {\n        font-size: 2rem;\n      }\n    }\n\n    & a:hover {\n      font-weight: bold;\n      color: rgba(255, 255, 255, 0.8);\n      text-decoration: underline;\n    }\n\n    & a:active {\n      font-weight: bold;\n      transform: translateY(3px);\n    }\n  }\n}\n\n.inactive {\n  font-weight: 500;\n  text-decoration: none;\n  transform: translateY(0);\n  color: rgba(255, 255, 255, 0.6);\n}\n\n.active {\n  font-weight: bold;\n  transform: translateY(-3px);\n  color: rgba(255, 255, 255, 0.8);\n  text-decoration: underline;\n}\n",".my-logo {\n  width: 6rem;\n  height: 6rem;\n  border-radius: 0.6rem;\n  background: $color-primary;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: rgb(46, 41, 41);\n  font-weight: 400;\n  font-size: 4rem;\n\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n\n  user-select: none;\n  -moz-user-select: none;\n  -webkit-user-select: none;\n  -ms-user-select: none;\n\n  transition: all 0.2s;\n\n  &:hover {\n    cursor: pointer;\n    background: $color-tertiary-dark;\n    color: $color-primary;\n    & i {\n      transition: all 0.2s;\n    }\n  }\n}\n",".contact {\n  //   padding: 2rem 4rem;\n  display: flex;\n  min-height: 60vh;\n\n  @media only screen and(max-width: $bp-medium) {\n    & > div {\n      margin-top: 3rem;\n      width: 100%;\n    }\n    flex-direction: column-reverse;\n    align-items: center;\n    justify-content: space-evenly;\n  }\n\n  // @media only screen and(max-width: $bp-small) {\n  //   padding: 0;\n  //   & > div {\n  //     margin-top: 7rem;\n  //     width: 100%;\n  //   }}\n\n  &__profile {\n    width: 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  &__box {\n    &--1 {\n      width: 50%;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n  }\n\n  &__form-container {\n    padding: 2rem;\n    width: 100%;\n    min-height: 75%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    @media only screen and(max-width: $bp-xs-small) {\n      padding: 2rem 0;\n    }\n  }\n\n  &__heading {\n    width: fit-content;\n    position: relative;\n    // white-space: nowrap;\n    &--back {\n      opacity: 0.05;\n      font-size: 6.8rem;\n      // white-space: nowrap;\n      @media only screen and(max-width: $bp-largest) {\n        font-size: 7rem;\n      }\n    }\n\n    &--front {\n      position: absolute;\n      top: 30%;\n      left: 10%;\n      letter-spacing: 0.3rem;\n      font-size: 3rem;\n      @media only screen and(max-width: $bp-largest) {\n        font-size: 4rem;\n      }\n    }\n  }\n}\n",".avatar {\n  width: 25rem;\n  height: 25rem;\n  border-radius: 50%;\n  border: 25px solid rgba(255, 255, 255, 0.1);\n  box-shadow: 0 0 0 25px rgba(255, 255, 255, 0.05);\n\n  & img {\n    width: 100%;\n    height: 100%;\n    filter: grayscale(50%);\n    border-radius: 50%;\n    object-fit: cover;\n    object-position: 50% 0;\n    -webkit-transform: scaleX(-1);\n    transform: scaleX(-1);\n  }\n}\n",".form {\n  width: 60%;\n  @media only screen and(max-width: $bp-largest) {\n    width: 80%;\n  }\n  @media only screen and(max-width: $bp-medium) {\n    width: 100%;\n  }\n\n  &__group:not(:last-child) {\n    margin-bottom: 2rem;\n  }\n\n  &__input {\n    width: 100%;\n    font-size: 1.5rem;\n    font-family: inherit;\n    color: inherit;\n    padding: 1.5rem 2rem;\n    background-color: rgba($color-primary, 0.3);\n    border: none;\n    border-radius: 0.6rem;\n    border-bottom: 3px solid transparent;\n    display: block;\n    transition: all 0.3s;\n\n    &:focus {\n      outline: none;\n      box-shadow: 0 1rem 2rem rgba($color-black, 0.1);\n      border-bottom: 3px solid $color-primary;\n    }\n\n    &:focus:invalid {\n      border-bottom: 3px solid $color-secondary-dark;\n    }\n\n    &::-webkit-input-placeholder {\n      color: $color-primary;\n    }\n  }\n\n  &__label {\n    font-size: 1.2rem;\n    font-weight: 700;\n    margin-left: 2rem;\n    margin-top: 0.7rem;\n    display: block;\n    transition: all 0.3s;\n  }\n\n  &__input:placeholder-shown + &__label {\n    opacity: 0;\n    visibility: hidden;\n    transform: translateY(-4rem);\n  }\n}\n\ntextarea {\n  height: 10rem;\n}\n",".btn {\n  border-radius: 0.6rem;\n  padding: 1rem;\n  border: 0;\n  font-weight: bold;\n  color: $color-tertiary-dark;\n  font-size: 1.6rem;\n  transition: all 0.2s;\n  &--green {\n    background: $color-primary;\n    &:hover {\n      cursor: pointer;\n      background: $color-tertiary-dark;\n      color: $color-primary;\n      transform: translateY(-0.3rem);\n      box-shadow: 0 1rem 2rem rgba($color-black, 0.2);\n    }\n    &:active,\n    &:focus {\n      outline: none;\n      transform: translateY(-0.1rem);\n      box-shadow: 0 0.5rem 1rem rgba($color-black, 0.2);\n    }\n  }\n}\n",".grid-points-about {\n  position: relative;\n  display: flex;\n\n  &__picture {\n    position: absolute;\n    bottom: 1%;\n    left: 1%;\n  }\n\n  &__message {\n    position: absolute;\n    padding: 2rem 2rem 0;\n    width: 50%;\n    height: 50%;\n    right: 1%;\n    top: 1%;\n    clip-path: polygon(\n      0 0,\n      100% 0,\n      100% 75%,\n      50% 75%,\n      25% 100%,\n      25% 75%,\n      0% 75%\n    );\n    background-color: rgba($color-primary, 0.6);\n\n    @media only screen and(max-width: $bp-large) {\n    }\n  }\n}\n",".about-me {\n  min-height: 60vh;\n  display: flex;\n  justify-content: space-around;\n  @media only screen and(max-width: $bp-large-medium) {\n    justify-content: space-between;\n  }\n  @media only screen and(max-width: $bp-medium) {\n    flex-direction: column;\n    align-items: center;\n  }\n\n  &__picture {\n    margin-top: 3.5rem;\n    @media only screen and(max-width: $bp-medium) {\n      margin-left: auto;\n      margin-right: auto;\n    }\n  }\n\n  &__points {\n    top: 10%;\n    position: -webkit-sticky;\n    position: sticky;\n  }\n\n  &__story {\n    width: 50%;\n    @media only screen and(max-width: $bp-large-medium) {\n      width: unset;\n      padding-left: 1rem;\n    }\n    @media only screen and(max-width: $bp-medium) {\n      width: 80%;\n      padding-left: 0;\n      margin-top: 5rem;\n    }\n    @media only screen and(max-width: $bp-small) {\n      width: 95%;\n    }\n\n    padding: 2rem 0;\n    & > :not(:last-child) {\n      margin-bottom: 5rem;\n    }\n  }\n\n  &__text {\n    color: $color-primary;\n    font-size: 1.6rem;\n    line-height: 1.5;\n    letter-spacing: 0.1rem;\n    text-align: justify;\n\n    & > :not(:last-child) {\n      margin-bottom: 2rem;\n    }\n\n    & p {\n      padding: 0 2.5rem;\n\n      @media only screen and(min-width: $bp-bigest) {\n        padding: 0 7rem;\n      }\n      @media only screen and(max-width: $bp-largest) {\n        padding: 0 0;\n      }\n    }\n\n    @media only screen and(max-width: $bp-largest) {\n      font-size: 1.8rem;\n    }\n\n    @media only screen and(max-width: $bp-small) {\n      font-size: 2.5rem;\n    }\n\n    h1 {\n      font-size: 3rem;\n    }\n  }\n\n  &__footer {\n    display: flex;\n    justify-content: flex-end;\n  }\n}\n",".skills {\n  color: $color-primary;\n  font-size: 1.6rem;\n\n  h1 {\n    font-size: 3rem;\n  }\n\n  & > :not(:last-child) {\n    margin-bottom: 3rem;\n  }\n\n  &__logos-container {\n    display: flex;\n    flex-wrap: wrap;\n  }\n\n  &__row {\n    width: 25%;\n    margin-bottom: 3rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    @media only screen and(max-width: $bp-largest) {\n      width: 33.3333%;\n    }\n\n    @media only screen and(max-width: $bp-xs-small) {\n      width: 50%;\n    }\n  }\n\n  &__card {\n    padding: 1rem;\n    margin: 0 auto;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  &__figure {\n    margin: 0 auto;\n    margin-bottom: 1rem;\n    width: 25%;\n  }\n\n  &__image {\n    width: 100%;\n  }\n}\n",".projects {\n  display: flex;\n\n  @media only screen and(max-width: $bp-large-medium) {\n    flex-direction: column;\n  }\n\n  &__names {\n    margin-top: 3.5rem;\n    &--points {\n      top: 3%;\n      position: -webkit-sticky;\n      position: sticky;\n\n      @media only screen and(max-width: $bp-large-medium) {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      }\n    }\n  }\n\n  &__description {\n    width: 100%;\n    padding: 2rem 5rem;\n    @media only screen and(max-width: $bp-large-medium) {\n      padding: 2rem 0;\n      min-height: 30vh;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n  }\n\n  &__index {\n    height: 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n}\n\n.grid-points-projects {\n  position: relative;\n  display: flex;\n\n  &__back {\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 100%;\n    height: 100%;\n  }\n\n  &__list {\n    width: 90%;\n    list-style: none;\n    & > :not(:last-child) {\n      margin-bottom: 3.5rem;\n    }\n  }\n\n  &__item {\n    display: flex;\n    align-items: center;\n\n    & a {\n      color: inherit;\n      text-decoration: none;\n      transition: all 0.27s;\n      & h3 {\n        font-size: 2rem;\n        @media only screen and(max-width: $bp-largest) {\n          font-size: 2.5rem;\n        }\n        @media only screen and(max-width: $bp-small) {\n          font-size: 2.7rem;\n        }\n      }\n    }\n\n    & a:hover {\n      transform: scale(1.1);\n      h3,\n      h4 {\n        color: rgba($color-primary, 1);\n      }\n    }\n    & a:active {\n      transform: scale(1);\n    }\n  }\n\n  &__item::before {\n    content: \"•\";\n    padding-bottom: 0.9rem;\n    font-size: 2rem;\n    margin-right: 3rem;\n  }\n\n  &__sentence {\n    font-size: 1.2rem;\n    color: $color-grey-light-1;\n    @media only screen and(max-width: $bp-largest) {\n      font-size: 1.5rem;\n    }\n    @media only screen and(max-width: $bp-largest) {\n      font-size: 1.6rem;\n    }\n  }\n}\n\n.active-project {\n  transform: scale(1.1);\n  & h3,\n  h4 {\n    color: $color-primary;\n  }\n}\n",".project-single {\n  & > :not(:first-child) {\n    margin-top: 12rem;\n  }\n  &__head {\n    padding: 1.5rem 0;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    &--subheading {\n      position: absolute;\n      // bottom: -1.5rem;\n      left: 10%;\n      // white-space: nowrap;\n      font-size: 1.6rem;\n      font-weight: 500;\n    }\n  }\n  &__list {\n    list-style: none;\n    display: flex;\n    & > :not(:last-child) {\n      margin-right: 0.7rem;\n    }\n  }\n\n  &__item {\n    & a {\n      text-decoration: none;\n    }\n  }\n\n  &__body {\n    position: relative;\n    & > :not(:first-child) {\n      margin-top: 3rem;\n    }\n  }\n\n  &__card {\n    width: 100%;\n    display: flex;\n    @media only screen and(max-width: $bp-large) {\n      flex-direction: column;\n      align-items: center;\n    }\n    & figure {\n      border-radius: 2rem;\n      width: 35rem;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n\n      position: relative;\n\n      &:hover {\n        cursor: pointer;\n      }\n\n      &:hover .project-single__caption {\n        opacity: 1;\n        transform: translate(-50%, -50%);\n      }\n\n      &:hover .project-single__img {\n        transform: scale(1);\n        filter: blur(3px) brightness(80%);\n      }\n      & img {\n        border-radius: 2rem;\n        width: 100%;\n        height: 20rem;\n        object-fit: cover;\n        box-shadow: rgba(0, 0, 0, 0.1) 0px 10px 15px -3px,\n          rgba(0, 0, 0, 0.05) 0px 4px 6px -2px;\n      }\n    }\n\n    &:nth-of-type(odd) {\n      & figure {\n        order: 2;\n        @media only screen and(max-width: $bp-large) {\n          order: unset;\n        }\n      }\n      .project-single__text {\n        padding: 2rem 5rem 2rem 0;\n        @media only screen and(max-width: $bp-large) {\n          padding: 4rem 0 6rem;\n        }\n      }\n    }\n  }\n\n  &__caption {\n    color: $color-grey-light-1;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    text-transform: uppercase;\n    font-size: 1.8rem;\n    font-weight: 700;\n    text-align: center;\n    opacity: 0;\n    transition: all 0.5s;\n  }\n\n  &__text {\n    padding: 2rem 0 2rem 5rem;\n    line-height: 1.5;\n    font-size: 1.6rem;\n    letter-spacing: 0.1rem;\n    width: 100%;\n    color: $color-primary;\n    text-align: justify;\n    display: flex;\n    align-items: center;\n\n    @media only screen and(max-width: $bp-large) {\n      padding: 4rem 0 6rem;\n    }\n\n    @media only screen and(max-width: $bp-large-medium) {\n      font-size: 1.8rem;\n    }\n\n    @media only screen and(max-width: $bp-small) {\n      font-size: 2.5rem;\n    }\n  }\n\n  &__technologies {\n    position: relative;\n    max-height: 30%;\n    display: flex;\n    flex-wrap: wrap;\n\n    &--row {\n      width: 20%;\n      @media only screen and(max-width: $bp-large) {\n        width: 33.333%;\n      }\n      @media only screen and(max-width: $bp-small) {\n        width: 50%;\n      }\n    }\n  }\n\n  &__footer {\n    display: flex;\n    justify-content: flex-end;\n  }\n}\n",".button-fa {\n  width: 3.7rem;\n  height: 3.7rem;\n  font-size: 3rem;\n  color: $color-tertiary-dark;\n  background: $color-primary;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  transition: all 0.3s;\n\n  @media only screen and(max-width: $bp-small) {\n    width: 4.5rem;\n    height: 4.5rem;\n    font-size: 3.6rem;\n  }\n\n  &:hover {\n    transform: translateY(-3px);\n  }\n\n  &:active {\n    transform: translateY(3px);\n  }\n\n  &:hover,\n  &:active {\n    cursor: pointer;\n    background: $color-tertiary-dark;\n    color: $color-primary;\n  }\n}\n","@keyframes bouncing-loader {\n  to {\n    opacity: 0.4;\n    transform: translate3d(0, -1rem, 0);\n  }\n}\n\n.bouncing-loader {\n  display: flex;\n  justify-content: center;\n  & > div {\n    width: 2rem;\n    height: 2rem;\n    margin: 3rem 0.2rem;\n    background: #8385aa;\n    border-radius: 50%;\n    animation: bouncing-loader 0.6s infinite alternate;\n  }\n\n  & > div:nth-child(2) {\n    animation-delay: 0.2s;\n  }\n\n  & > div:nth-child(3) {\n    animation-delay: 0.4s;\n  }\n}\n",".footer {\n  min-height: 10vh;\n  font-size: 1.6rem;\n  letter-spacing: 0.2rem;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  @media only screen and(max-width: $bp-small) {\n    font-size: 2rem;\n  }\n}\n",".not-found {\n  min-height: 80vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &__container {\n    display: flex;\n    flex-direction: column;\n  }\n\n  &__heading {\n    text-align: center;\n    font-weight: 500;\n    font-size: 4rem;\n    &--1 {\n      color: $color-secondary-dark;\n      letter-spacing: 0.2rem;\n    }\n\n    &--link {\n      color: $color-grey-light-2;\n      text-decoration: none;\n      &:hover {\n        color: $color-primary;\n      }\n    }\n  }\n\n  &__figure {\n    width: 80%;\n    margin: auto;\n  }\n\n  &__img {\n    width: 100%;\n  }\n}\n"],"sourceRoot":""}]);
// Exports
___CSS_LOADER_EXPORT___.locals = {};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";


var stylesInDOM = [];

function getIndexByIdentifier(identifier) {
  var result = -1;

  for (var i = 0; i < stylesInDOM.length; i++) {
    if (stylesInDOM[i].identifier === identifier) {
      result = i;
      break;
    }
  }

  return result;
}

function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];

  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var indexByIdentifier = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3],
      supports: item[4],
      layer: item[5]
    };

    if (indexByIdentifier !== -1) {
      stylesInDOM[indexByIdentifier].references++;
      stylesInDOM[indexByIdentifier].updater(obj);
    } else {
      var updater = addElementStyle(obj, options);
      options.byIndex = i;
      stylesInDOM.splice(i, 0, {
        identifier: identifier,
        updater: updater,
        references: 1
      });
    }

    identifiers.push(identifier);
  }

  return identifiers;
}

function addElementStyle(obj, options) {
  var api = options.domAPI(options);
  api.update(obj);

  var updater = function updater(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {
        return;
      }

      api.update(obj = newObj);
    } else {
      api.remove();
    }
  };

  return updater;
}

module.exports = function (list, options) {
  options = options || {};
  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];

    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDOM[index].references--;
    }

    var newLastIdentifiers = modulesToDom(newList, options);

    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];

      var _index = getIndexByIdentifier(_identifier);

      if (stylesInDOM[_index].references === 0) {
        stylesInDOM[_index].updater();

        stylesInDOM.splice(_index, 1);
      }
    }

    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

"use strict";


var memo = {};
/* istanbul ignore next  */

function getTarget(target) {
  if (typeof memo[target] === "undefined") {
    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself

    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
      try {
        // This will throw an exception if access to iframe is blocked
        // due to cross-origin restrictions
        styleTarget = styleTarget.contentDocument.head;
      } catch (e) {
        // istanbul ignore next
        styleTarget = null;
      }
    }

    memo[target] = styleTarget;
  }

  return memo[target];
}
/* istanbul ignore next  */


function insertBySelector(insert, style) {
  var target = getTarget(insert);

  if (!target) {
    throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
  }

  target.appendChild(style);
}

module.exports = insertBySelector;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function insertStyleElement(options) {
  var element = document.createElement("style");
  options.setAttributes(element, options.attributes);
  options.insert(element, options.options);
  return element;
}

module.exports = insertStyleElement;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


/* istanbul ignore next  */
function setAttributesWithoutAttributes(styleElement) {
  var nonce =  true ? __webpack_require__.nc : 0;

  if (nonce) {
    styleElement.setAttribute("nonce", nonce);
  }
}

module.exports = setAttributesWithoutAttributes;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function apply(styleElement, options, obj) {
  var css = "";

  if (obj.supports) {
    css += "@supports (".concat(obj.supports, ") {");
  }

  if (obj.media) {
    css += "@media ".concat(obj.media, " {");
  }

  var needLayer = typeof obj.layer !== "undefined";

  if (needLayer) {
    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");
  }

  css += obj.css;

  if (needLayer) {
    css += "}";
  }

  if (obj.media) {
    css += "}";
  }

  if (obj.supports) {
    css += "}";
  }

  var sourceMap = obj.sourceMap;

  if (sourceMap && typeof btoa !== "undefined") {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  } // For old IE

  /* istanbul ignore if  */


  options.styleTagTransform(css, styleElement, options.options);
}

function removeStyleElement(styleElement) {
  // istanbul ignore if
  if (styleElement.parentNode === null) {
    return false;
  }

  styleElement.parentNode.removeChild(styleElement);
}
/* istanbul ignore next  */


function domAPI(options) {
  var styleElement = options.insertStyleElement(options);
  return {
    update: function update(obj) {
      apply(styleElement, options, obj);
    },
    remove: function remove() {
      removeStyleElement(styleElement);
    }
  };
}

module.exports = domAPI;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function styleTagTransform(css, styleElement) {
  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css;
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild);
    }

    styleElement.appendChild(document.createTextNode(css));
  }
}

module.exports = styleTagTransform;

/***/ }),

/***/ "./node_modules/@fortawesome/fontawesome-free/css/all.min.css":
/*!********************************************************************!*\
  !*** ./node_modules/@fortawesome/fontawesome-free/css/all.min.css ***!
  \********************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _css_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_5_use_1_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_5_use_2_source_map_loader_dist_cjs_js_all_min_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../css-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[5].use[1]!../../../postcss-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[5].use[2]!../../../source-map-loader/dist/cjs.js!./all.min.css */ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[5].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[5].use[2]!./node_modules/source-map-loader/dist/cjs.js!./node_modules/@fortawesome/fontawesome-free/css/all.min.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_5_use_1_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_5_use_2_source_map_loader_dist_cjs_js_all_min_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);


if (true) {
  if (!_css_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_5_use_1_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_5_use_2_source_map_loader_dist_cjs_js_all_min_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals || module.hot.invalidate) {
    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {
  if (!a && b || a && !b) {
    return false;
  }

  var p;

  for (p in a) {
    if (isNamedExport && p === "default") {
      // eslint-disable-next-line no-continue
      continue;
    }

    if (a[p] !== b[p]) {
      return false;
    }
  }

  for (p in b) {
    if (isNamedExport && p === "default") {
      // eslint-disable-next-line no-continue
      continue;
    }

    if (!a[p]) {
      return false;
    }
  }

  return true;
};
    var isNamedExport = !_css_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_5_use_1_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_5_use_2_source_map_loader_dist_cjs_js_all_min_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals;
    var oldLocals = isNamedExport ? _css_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_5_use_1_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_5_use_2_source_map_loader_dist_cjs_js_all_min_css__WEBPACK_IMPORTED_MODULE_6__ : _css_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_5_use_1_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_5_use_2_source_map_loader_dist_cjs_js_all_min_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals;

    module.hot.accept(
      /*! !!../../../css-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[5].use[1]!../../../postcss-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[5].use[2]!../../../source-map-loader/dist/cjs.js!./all.min.css */ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[5].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[5].use[2]!./node_modules/source-map-loader/dist/cjs.js!./node_modules/@fortawesome/fontawesome-free/css/all.min.css",
      __WEBPACK_OUTDATED_DEPENDENCIES__ => { /* harmony import */ _css_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_5_use_1_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_5_use_2_source_map_loader_dist_cjs_js_all_min_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../css-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[5].use[1]!../../../postcss-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[5].use[2]!../../../source-map-loader/dist/cjs.js!./all.min.css */ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[5].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[5].use[2]!./node_modules/source-map-loader/dist/cjs.js!./node_modules/@fortawesome/fontawesome-free/css/all.min.css");
(function () {
        if (!isEqualLocals(oldLocals, isNamedExport ? _css_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_5_use_1_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_5_use_2_source_map_loader_dist_cjs_js_all_min_css__WEBPACK_IMPORTED_MODULE_6__ : _css_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_5_use_1_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_5_use_2_source_map_loader_dist_cjs_js_all_min_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals, isNamedExport)) {
                module.hot.invalidate();

                return;
              }

              oldLocals = isNamedExport ? _css_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_5_use_1_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_5_use_2_source_map_loader_dist_cjs_js_all_min_css__WEBPACK_IMPORTED_MODULE_6__ : _css_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_5_use_1_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_5_use_2_source_map_loader_dist_cjs_js_all_min_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals;

              update(_css_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_5_use_1_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_5_use_2_source_map_loader_dist_cjs_js_all_min_css__WEBPACK_IMPORTED_MODULE_6__["default"]);
      })(__WEBPACK_OUTDATED_DEPENDENCIES__); }
    )
  }

  module.hot.dispose(function() {
    update();
  });
}



       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_5_use_1_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_5_use_2_source_map_loader_dist_cjs_js_all_min_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _css_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_5_use_1_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_5_use_2_source_map_loader_dist_cjs_js_all_min_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _css_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_5_use_1_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_5_use_2_source_map_loader_dist_cjs_js_all_min_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "./src/sass/main.scss":
/*!****************************!*\
  !*** ./src/sass/main.scss ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_1_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_2_node_modules_resolve_url_loader_index_js_ruleSet_1_rules_1_oneOf_7_use_3_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_4_main_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[7].use[1]!../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[7].use[2]!../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].oneOf[7].use[3]!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[7].use[4]!./main.scss */ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[7].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[7].use[2]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].oneOf[7].use[3]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[7].use[4]!./src/sass/main.scss");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_1_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_2_node_modules_resolve_url_loader_index_js_ruleSet_1_rules_1_oneOf_7_use_3_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_4_main_scss__WEBPACK_IMPORTED_MODULE_6__["default"], options);


if (true) {
  if (!_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_1_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_2_node_modules_resolve_url_loader_index_js_ruleSet_1_rules_1_oneOf_7_use_3_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_4_main_scss__WEBPACK_IMPORTED_MODULE_6__["default"].locals || module.hot.invalidate) {
    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {
  if (!a && b || a && !b) {
    return false;
  }

  var p;

  for (p in a) {
    if (isNamedExport && p === "default") {
      // eslint-disable-next-line no-continue
      continue;
    }

    if (a[p] !== b[p]) {
      return false;
    }
  }

  for (p in b) {
    if (isNamedExport && p === "default") {
      // eslint-disable-next-line no-continue
      continue;
    }

    if (!a[p]) {
      return false;
    }
  }

  return true;
};
    var isNamedExport = !_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_1_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_2_node_modules_resolve_url_loader_index_js_ruleSet_1_rules_1_oneOf_7_use_3_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_4_main_scss__WEBPACK_IMPORTED_MODULE_6__["default"].locals;
    var oldLocals = isNamedExport ? _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_1_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_2_node_modules_resolve_url_loader_index_js_ruleSet_1_rules_1_oneOf_7_use_3_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_4_main_scss__WEBPACK_IMPORTED_MODULE_6__ : _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_1_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_2_node_modules_resolve_url_loader_index_js_ruleSet_1_rules_1_oneOf_7_use_3_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_4_main_scss__WEBPACK_IMPORTED_MODULE_6__["default"].locals;

    module.hot.accept(
      /*! !!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[7].use[1]!../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[7].use[2]!../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].oneOf[7].use[3]!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[7].use[4]!./main.scss */ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[7].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[7].use[2]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].oneOf[7].use[3]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[7].use[4]!./src/sass/main.scss",
      __WEBPACK_OUTDATED_DEPENDENCIES__ => { /* harmony import */ _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_1_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_2_node_modules_resolve_url_loader_index_js_ruleSet_1_rules_1_oneOf_7_use_3_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_4_main_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[7].use[1]!../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[7].use[2]!../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].oneOf[7].use[3]!../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[7].use[4]!./main.scss */ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[7].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[7].use[2]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].oneOf[7].use[3]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].oneOf[7].use[4]!./src/sass/main.scss");
(function () {
        if (!isEqualLocals(oldLocals, isNamedExport ? _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_1_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_2_node_modules_resolve_url_loader_index_js_ruleSet_1_rules_1_oneOf_7_use_3_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_4_main_scss__WEBPACK_IMPORTED_MODULE_6__ : _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_1_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_2_node_modules_resolve_url_loader_index_js_ruleSet_1_rules_1_oneOf_7_use_3_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_4_main_scss__WEBPACK_IMPORTED_MODULE_6__["default"].locals, isNamedExport)) {
                module.hot.invalidate();

                return;
              }

              oldLocals = isNamedExport ? _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_1_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_2_node_modules_resolve_url_loader_index_js_ruleSet_1_rules_1_oneOf_7_use_3_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_4_main_scss__WEBPACK_IMPORTED_MODULE_6__ : _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_1_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_2_node_modules_resolve_url_loader_index_js_ruleSet_1_rules_1_oneOf_7_use_3_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_4_main_scss__WEBPACK_IMPORTED_MODULE_6__["default"].locals;

              update(_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_1_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_2_node_modules_resolve_url_loader_index_js_ruleSet_1_rules_1_oneOf_7_use_3_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_4_main_scss__WEBPACK_IMPORTED_MODULE_6__["default"]);
      })(__WEBPACK_OUTDATED_DEPENDENCIES__); }
    )
  }

  module.hot.dispose(function() {
    update();
  });
}



       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_1_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_2_node_modules_resolve_url_loader_index_js_ruleSet_1_rules_1_oneOf_7_use_3_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_4_main_scss__WEBPACK_IMPORTED_MODULE_6__["default"] && _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_1_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_2_node_modules_resolve_url_loader_index_js_ruleSet_1_rules_1_oneOf_7_use_3_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_4_main_scss__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_1_node_modules_postcss_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_2_node_modules_resolve_url_loader_index_js_ruleSet_1_rules_1_oneOf_7_use_3_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_1_oneOf_7_use_4_main_scss__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "./node_modules/@fortawesome/fontawesome-free/webfonts/fa-brands-400.eot":
/*!*******************************************************************************!*\
  !*** ./node_modules/@fortawesome/fontawesome-free/webfonts/fa-brands-400.eot ***!
  \*******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/fa-brands-400.23f19bb08961f37aaf69.eot";

/***/ }),

/***/ "./node_modules/@fortawesome/fontawesome-free/webfonts/fa-brands-400.svg":
/*!*******************************************************************************!*\
  !*** ./node_modules/@fortawesome/fontawesome-free/webfonts/fa-brands-400.svg ***!
  \*******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/fa-brands-400.2f517e09eb2ca6650ff5.svg";

/***/ }),

/***/ "./node_modules/@fortawesome/fontawesome-free/webfonts/fa-brands-400.ttf":
/*!*******************************************************************************!*\
  !*** ./node_modules/@fortawesome/fontawesome-free/webfonts/fa-brands-400.ttf ***!
  \*******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/fa-brands-400.527940b104eb2ea366c8.ttf";

/***/ }),

/***/ "./node_modules/@fortawesome/fontawesome-free/webfonts/fa-brands-400.woff":
/*!********************************************************************************!*\
  !*** ./node_modules/@fortawesome/fontawesome-free/webfonts/fa-brands-400.woff ***!
  \********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/fa-brands-400.2285773e6b4b172f07d9.woff";

/***/ }),

/***/ "./node_modules/@fortawesome/fontawesome-free/webfonts/fa-brands-400.woff2":
/*!*********************************************************************************!*\
  !*** ./node_modules/@fortawesome/fontawesome-free/webfonts/fa-brands-400.woff2 ***!
  \*********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/fa-brands-400.d878b0a6a1144760244f.woff2";

/***/ }),

/***/ "./node_modules/@fortawesome/fontawesome-free/webfonts/fa-regular-400.eot":
/*!********************************************************************************!*\
  !*** ./node_modules/@fortawesome/fontawesome-free/webfonts/fa-regular-400.eot ***!
  \********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/fa-regular-400.77206a6bb316fa0aded5.eot";

/***/ }),

/***/ "./node_modules/@fortawesome/fontawesome-free/webfonts/fa-regular-400.svg":
/*!********************************************************************************!*\
  !*** ./node_modules/@fortawesome/fontawesome-free/webfonts/fa-regular-400.svg ***!
  \********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/fa-regular-400.4689f52cc96215721344.svg";

/***/ }),

/***/ "./node_modules/@fortawesome/fontawesome-free/webfonts/fa-regular-400.ttf":
/*!********************************************************************************!*\
  !*** ./node_modules/@fortawesome/fontawesome-free/webfonts/fa-regular-400.ttf ***!
  \********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/fa-regular-400.491974d108fe4002b2aa.ttf";

/***/ }),

/***/ "./node_modules/@fortawesome/fontawesome-free/webfonts/fa-regular-400.woff":
/*!*********************************************************************************!*\
  !*** ./node_modules/@fortawesome/fontawesome-free/webfonts/fa-regular-400.woff ***!
  \*********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/fa-regular-400.bb58e57c48a3e911f15f.woff";

/***/ }),

/***/ "./node_modules/@fortawesome/fontawesome-free/webfonts/fa-regular-400.woff2":
/*!**********************************************************************************!*\
  !*** ./node_modules/@fortawesome/fontawesome-free/webfonts/fa-regular-400.woff2 ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/fa-regular-400.7a3337626410ca2f4071.woff2";

/***/ }),

/***/ "./node_modules/@fortawesome/fontawesome-free/webfonts/fa-solid-900.eot":
/*!******************************************************************************!*\
  !*** ./node_modules/@fortawesome/fontawesome-free/webfonts/fa-solid-900.eot ***!
  \******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/fa-solid-900.9bbb245e67a133f6e486.eot";

/***/ }),

/***/ "./node_modules/@fortawesome/fontawesome-free/webfonts/fa-solid-900.svg":
/*!******************************************************************************!*\
  !*** ./node_modules/@fortawesome/fontawesome-free/webfonts/fa-solid-900.svg ***!
  \******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/fa-solid-900.7a8b4f130182d19a2d7c.svg";

/***/ }),

/***/ "./node_modules/@fortawesome/fontawesome-free/webfonts/fa-solid-900.ttf":
/*!******************************************************************************!*\
  !*** ./node_modules/@fortawesome/fontawesome-free/webfonts/fa-solid-900.ttf ***!
  \******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/fa-solid-900.be9ee23c0c6390141475.ttf";

/***/ }),

/***/ "./node_modules/@fortawesome/fontawesome-free/webfonts/fa-solid-900.woff":
/*!*******************************************************************************!*\
  !*** ./node_modules/@fortawesome/fontawesome-free/webfonts/fa-solid-900.woff ***!
  \*******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/fa-solid-900.eeccf4f66002c6f2ba24.woff";

/***/ }),

/***/ "./node_modules/@fortawesome/fontawesome-free/webfonts/fa-solid-900.woff2":
/*!********************************************************************************!*\
  !*** ./node_modules/@fortawesome/fontawesome-free/webfonts/fa-solid-900.woff2 ***!
  \********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/fa-solid-900.1551f4f60c37af51121f.woff2";

/***/ }),

/***/ "./src/images/erwerk-pictures/erwerk_1.png":
/*!*************************************************!*\
  !*** ./src/images/erwerk-pictures/erwerk_1.png ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/erwerk_1.43a6fa0a1ed6eee57e41.png";

/***/ }),

/***/ "./src/images/erwerk-pictures/erwerk_2.png":
/*!*************************************************!*\
  !*** ./src/images/erwerk-pictures/erwerk_2.png ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/erwerk_2.8a644714a53e1975ba4c.png";

/***/ }),

/***/ "./src/images/erwerk-pictures/erwerk_3.png":
/*!*************************************************!*\
  !*** ./src/images/erwerk-pictures/erwerk_3.png ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/erwerk_3.af949aa11a96d2388461.png";

/***/ }),

/***/ "./src/images/land-scape.jpg":
/*!***********************************!*\
  !*** ./src/images/land-scape.jpg ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/land-scape.ccfbbd3b3550e2c16183.jpg";

/***/ }),

/***/ "./src/images/nord-kapp.jpeg":
/*!***********************************!*\
  !*** ./src/images/nord-kapp.jpeg ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/nord-kapp.82d58e78da0f9239cdd1.jpeg";

/***/ }),

/***/ "./src/images/phaser-pictures/gameOver.png":
/*!*************************************************!*\
  !*** ./src/images/phaser-pictures/gameOver.png ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/gameOver.384c1565acf59119c3e6.png";

/***/ }),

/***/ "./src/images/phaser-pictures/gameStarts.png":
/*!***************************************************!*\
  !*** ./src/images/phaser-pictures/gameStarts.png ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/gameStarts.26cf4053115b06ae4d7b.png";

/***/ }),

/***/ "./src/images/phaser-pictures/phaser_3.png":
/*!*************************************************!*\
  !*** ./src/images/phaser-pictures/phaser_3.png ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/phaser_3.4eaa4f33bf47ab99b556.png";

/***/ }),

/***/ "./src/images/portrait.jpg":
/*!*********************************!*\
  !*** ./src/images/portrait.jpg ***!
  \*********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/portrait.62bfda3fcbb80812054e.jpg";

/***/ }),

/***/ "./src/images/quiz-pictures/quiz_1.png":
/*!*********************************************!*\
  !*** ./src/images/quiz-pictures/quiz_1.png ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/quiz_1.aab087d7a4730783827d.png";

/***/ }),

/***/ "./src/images/quiz-pictures/quiz_2.png":
/*!*********************************************!*\
  !*** ./src/images/quiz-pictures/quiz_2.png ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/quiz_2.f90cdc5815520c99ed92.png";

/***/ }),

/***/ "./src/images/quiz-pictures/quiz_3.png":
/*!*********************************************!*\
  !*** ./src/images/quiz-pictures/quiz_3.png ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/quiz_3.1268be00401f431bb5ba.png";

/***/ }),

/***/ "./src/images/quiz-pictures/quiz_4.png":
/*!*********************************************!*\
  !*** ./src/images/quiz-pictures/quiz_4.png ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/quiz_4.1e60fdf41f7733b84c39.png";

/***/ }),

/***/ "./src/images/sta-ber-pictures/sta-ber1.png":
/*!**************************************************!*\
  !*** ./src/images/sta-ber-pictures/sta-ber1.png ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/sta-ber1.c24ce52ea4cb8c48a42c.png";

/***/ }),

/***/ "./src/images/sta-ber-pictures/sta-ber2.png":
/*!**************************************************!*\
  !*** ./src/images/sta-ber-pictures/sta-ber2.png ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/sta-ber2.32009cea1e61d1c197e4.png";

/***/ }),

/***/ "./src/images/sta-ber-pictures/sta-ber3.png":
/*!**************************************************!*\
  !*** ./src/images/sta-ber-pictures/sta-ber3.png ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/sta-ber3.f15aa5a7e4f9943d283b.png";

/***/ }),

/***/ "./src/images/sta-ber-pictures/sta-ber4.png":
/*!**************************************************!*\
  !*** ./src/images/sta-ber-pictures/sta-ber4.png ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/sta-ber4.bdc866a6bfe112643ba1.png";

/***/ }),

/***/ "./src/images/sta-ber-pictures/sta-ber5.png":
/*!**************************************************!*\
  !*** ./src/images/sta-ber-pictures/sta-ber5.png ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/sta-ber5.4cd48e4e456c13c68c58.png";

/***/ }),

/***/ "./src/images/sta-ber-pictures/sta-ber6.png":
/*!**************************************************!*\
  !*** ./src/images/sta-ber-pictures/sta-ber6.png ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "static/media/sta-ber6.06f5b0dcb2f44710a048.png";

/***/ }),

/***/ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/client/ReactRefreshEntry.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@pmmmwh/react-refresh-webpack-plugin/client/ReactRefreshEntry.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

/* global __react_refresh_library__ */
const safeThis = __webpack_require__(/*! core-js-pure/features/global-this.js */ "./node_modules/core-js-pure/features/global-this.js");

const RefreshRuntime = __webpack_require__(/*! react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

if (true) {
  if (typeof safeThis !== 'undefined') {
    var $RefreshInjected$ = '__reactRefreshInjected'; // Namespace the injected flag (if necessary) for monorepo compatibility

    if (false) {} // Only inject the runtime if it hasn't been injected


    if (!safeThis[$RefreshInjected$]) {
      // Inject refresh runtime into global scope
      RefreshRuntime.injectIntoGlobalHook(safeThis); // Mark the runtime as injected to prevent double-injection

      safeThis[$RefreshInjected$] = true;
    }
  }
}

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/esm/extends.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/extends.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _extends)
/* harmony export */ });
function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			if (cachedModule.error !== undefined) throw cachedModule.error;
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		try {
/******/ 			var execOptions = { id: moduleId, module: module, factory: __webpack_modules__[moduleId], require: __webpack_require__ };
/******/ 			__webpack_require__.i.forEach(function(handler) { handler(execOptions); });
/******/ 			module = execOptions.module;
/******/ 			execOptions.factory.call(module.exports, module, module.exports, execOptions.require);
/******/ 		} catch(e) {
/******/ 			module.error = e;
/******/ 			throw e;
/******/ 		}
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = __webpack_module_cache__;
/******/ 	
/******/ 	// expose the module execution interceptor
/******/ 	__webpack_require__.i = [];
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript update chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference all chunks
/******/ 		__webpack_require__.hu = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + "." + __webpack_require__.h() + ".hot-update.js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get update manifest filename */
/******/ 	(() => {
/******/ 		__webpack_require__.hmrF = () => ("main." + __webpack_require__.h() + ".hot-update.json");
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/getFullHash */
/******/ 	(() => {
/******/ 		__webpack_require__.h = () => ("83cdee9c8795f4a99779")
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	(() => {
/******/ 		var inProgress = {};
/******/ 		var dataWebpackPrefix = "new_portfolio:";
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = (url, done, key, chunkId) => {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url || s.getAttribute("data-webpack") == dataWebpackPrefix + key) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.setAttribute("data-webpack", dataWebpackPrefix + key);
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = (prev, event) => {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach((fn) => (fn(event)));
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			;
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hot module replacement */
/******/ 	(() => {
/******/ 		var currentModuleData = {};
/******/ 		var installedModules = __webpack_require__.c;
/******/ 		
/******/ 		// module and require creation
/******/ 		var currentChildModule;
/******/ 		var currentParents = [];
/******/ 		
/******/ 		// status
/******/ 		var registeredStatusHandlers = [];
/******/ 		var currentStatus = "idle";
/******/ 		
/******/ 		// while downloading
/******/ 		var blockingPromises;
/******/ 		
/******/ 		// The update info
/******/ 		var currentUpdateApplyHandlers;
/******/ 		var queuedInvalidatedModules;
/******/ 		
/******/ 		// eslint-disable-next-line no-unused-vars
/******/ 		__webpack_require__.hmrD = currentModuleData;
/******/ 		
/******/ 		__webpack_require__.i.push(function (options) {
/******/ 			var module = options.module;
/******/ 			var require = createRequire(options.require, options.id);
/******/ 			module.hot = createModuleHotObject(options.id, module);
/******/ 			module.parents = currentParents;
/******/ 			module.children = [];
/******/ 			currentParents = [];
/******/ 			options.require = require;
/******/ 		});
/******/ 		
/******/ 		__webpack_require__.hmrC = {};
/******/ 		__webpack_require__.hmrI = {};
/******/ 		
/******/ 		function createRequire(require, moduleId) {
/******/ 			var me = installedModules[moduleId];
/******/ 			if (!me) return require;
/******/ 			var fn = function (request) {
/******/ 				if (me.hot.active) {
/******/ 					if (installedModules[request]) {
/******/ 						var parents = installedModules[request].parents;
/******/ 						if (parents.indexOf(moduleId) === -1) {
/******/ 							parents.push(moduleId);
/******/ 						}
/******/ 					} else {
/******/ 						currentParents = [moduleId];
/******/ 						currentChildModule = request;
/******/ 					}
/******/ 					if (me.children.indexOf(request) === -1) {
/******/ 						me.children.push(request);
/******/ 					}
/******/ 				} else {
/******/ 					console.warn(
/******/ 						"[HMR] unexpected require(" +
/******/ 							request +
/******/ 							") from disposed module " +
/******/ 							moduleId
/******/ 					);
/******/ 					currentParents = [];
/******/ 				}
/******/ 				return require(request);
/******/ 			};
/******/ 			var createPropertyDescriptor = function (name) {
/******/ 				return {
/******/ 					configurable: true,
/******/ 					enumerable: true,
/******/ 					get: function () {
/******/ 						return require[name];
/******/ 					},
/******/ 					set: function (value) {
/******/ 						require[name] = value;
/******/ 					}
/******/ 				};
/******/ 			};
/******/ 			for (var name in require) {
/******/ 				if (Object.prototype.hasOwnProperty.call(require, name) && name !== "e") {
/******/ 					Object.defineProperty(fn, name, createPropertyDescriptor(name));
/******/ 				}
/******/ 			}
/******/ 			fn.e = function (chunkId) {
/******/ 				return trackBlockingPromise(require.e(chunkId));
/******/ 			};
/******/ 			return fn;
/******/ 		}
/******/ 		
/******/ 		function createModuleHotObject(moduleId, me) {
/******/ 			var _main = currentChildModule !== moduleId;
/******/ 			var hot = {
/******/ 				// private stuff
/******/ 				_acceptedDependencies: {},
/******/ 				_acceptedErrorHandlers: {},
/******/ 				_declinedDependencies: {},
/******/ 				_selfAccepted: false,
/******/ 				_selfDeclined: false,
/******/ 				_selfInvalidated: false,
/******/ 				_disposeHandlers: [],
/******/ 				_main: _main,
/******/ 				_requireSelf: function () {
/******/ 					currentParents = me.parents.slice();
/******/ 					currentChildModule = _main ? undefined : moduleId;
/******/ 					__webpack_require__(moduleId);
/******/ 				},
/******/ 		
/******/ 				// Module API
/******/ 				active: true,
/******/ 				accept: function (dep, callback, errorHandler) {
/******/ 					if (dep === undefined) hot._selfAccepted = true;
/******/ 					else if (typeof dep === "function") hot._selfAccepted = dep;
/******/ 					else if (typeof dep === "object" && dep !== null) {
/******/ 						for (var i = 0; i < dep.length; i++) {
/******/ 							hot._acceptedDependencies[dep[i]] = callback || function () {};
/******/ 							hot._acceptedErrorHandlers[dep[i]] = errorHandler;
/******/ 						}
/******/ 					} else {
/******/ 						hot._acceptedDependencies[dep] = callback || function () {};
/******/ 						hot._acceptedErrorHandlers[dep] = errorHandler;
/******/ 					}
/******/ 				},
/******/ 				decline: function (dep) {
/******/ 					if (dep === undefined) hot._selfDeclined = true;
/******/ 					else if (typeof dep === "object" && dep !== null)
/******/ 						for (var i = 0; i < dep.length; i++)
/******/ 							hot._declinedDependencies[dep[i]] = true;
/******/ 					else hot._declinedDependencies[dep] = true;
/******/ 				},
/******/ 				dispose: function (callback) {
/******/ 					hot._disposeHandlers.push(callback);
/******/ 				},
/******/ 				addDisposeHandler: function (callback) {
/******/ 					hot._disposeHandlers.push(callback);
/******/ 				},
/******/ 				removeDisposeHandler: function (callback) {
/******/ 					var idx = hot._disposeHandlers.indexOf(callback);
/******/ 					if (idx >= 0) hot._disposeHandlers.splice(idx, 1);
/******/ 				},
/******/ 				invalidate: function () {
/******/ 					this._selfInvalidated = true;
/******/ 					switch (currentStatus) {
/******/ 						case "idle":
/******/ 							currentUpdateApplyHandlers = [];
/******/ 							Object.keys(__webpack_require__.hmrI).forEach(function (key) {
/******/ 								__webpack_require__.hmrI[key](
/******/ 									moduleId,
/******/ 									currentUpdateApplyHandlers
/******/ 								);
/******/ 							});
/******/ 							setStatus("ready");
/******/ 							break;
/******/ 						case "ready":
/******/ 							Object.keys(__webpack_require__.hmrI).forEach(function (key) {
/******/ 								__webpack_require__.hmrI[key](
/******/ 									moduleId,
/******/ 									currentUpdateApplyHandlers
/******/ 								);
/******/ 							});
/******/ 							break;
/******/ 						case "prepare":
/******/ 						case "check":
/******/ 						case "dispose":
/******/ 						case "apply":
/******/ 							(queuedInvalidatedModules = queuedInvalidatedModules || []).push(
/******/ 								moduleId
/******/ 							);
/******/ 							break;
/******/ 						default:
/******/ 							// ignore requests in error states
/******/ 							break;
/******/ 					}
/******/ 				},
/******/ 		
/******/ 				// Management API
/******/ 				check: hotCheck,
/******/ 				apply: hotApply,
/******/ 				status: function (l) {
/******/ 					if (!l) return currentStatus;
/******/ 					registeredStatusHandlers.push(l);
/******/ 				},
/******/ 				addStatusHandler: function (l) {
/******/ 					registeredStatusHandlers.push(l);
/******/ 				},
/******/ 				removeStatusHandler: function (l) {
/******/ 					var idx = registeredStatusHandlers.indexOf(l);
/******/ 					if (idx >= 0) registeredStatusHandlers.splice(idx, 1);
/******/ 				},
/******/ 		
/******/ 				//inherit from previous dispose call
/******/ 				data: currentModuleData[moduleId]
/******/ 			};
/******/ 			currentChildModule = undefined;
/******/ 			return hot;
/******/ 		}
/******/ 		
/******/ 		function setStatus(newStatus) {
/******/ 			currentStatus = newStatus;
/******/ 			var results = [];
/******/ 		
/******/ 			for (var i = 0; i < registeredStatusHandlers.length; i++)
/******/ 				results[i] = registeredStatusHandlers[i].call(null, newStatus);
/******/ 		
/******/ 			return Promise.all(results);
/******/ 		}
/******/ 		
/******/ 		function trackBlockingPromise(promise) {
/******/ 			switch (currentStatus) {
/******/ 				case "ready":
/******/ 					setStatus("prepare");
/******/ 					blockingPromises.push(promise);
/******/ 					waitForBlockingPromises(function () {
/******/ 						return setStatus("ready");
/******/ 					});
/******/ 					return promise;
/******/ 				case "prepare":
/******/ 					blockingPromises.push(promise);
/******/ 					return promise;
/******/ 				default:
/******/ 					return promise;
/******/ 			}
/******/ 		}
/******/ 		
/******/ 		function waitForBlockingPromises(fn) {
/******/ 			if (blockingPromises.length === 0) return fn();
/******/ 			var blocker = blockingPromises;
/******/ 			blockingPromises = [];
/******/ 			return Promise.all(blocker).then(function () {
/******/ 				return waitForBlockingPromises(fn);
/******/ 			});
/******/ 		}
/******/ 		
/******/ 		function hotCheck(applyOnUpdate) {
/******/ 			if (currentStatus !== "idle") {
/******/ 				throw new Error("check() is only allowed in idle status");
/******/ 			}
/******/ 			return setStatus("check")
/******/ 				.then(__webpack_require__.hmrM)
/******/ 				.then(function (update) {
/******/ 					if (!update) {
/******/ 						return setStatus(applyInvalidatedModules() ? "ready" : "idle").then(
/******/ 							function () {
/******/ 								return null;
/******/ 							}
/******/ 						);
/******/ 					}
/******/ 		
/******/ 					return setStatus("prepare").then(function () {
/******/ 						var updatedModules = [];
/******/ 						blockingPromises = [];
/******/ 						currentUpdateApplyHandlers = [];
/******/ 		
/******/ 						return Promise.all(
/******/ 							Object.keys(__webpack_require__.hmrC).reduce(function (
/******/ 								promises,
/******/ 								key
/******/ 							) {
/******/ 								__webpack_require__.hmrC[key](
/******/ 									update.c,
/******/ 									update.r,
/******/ 									update.m,
/******/ 									promises,
/******/ 									currentUpdateApplyHandlers,
/******/ 									updatedModules
/******/ 								);
/******/ 								return promises;
/******/ 							},
/******/ 							[])
/******/ 						).then(function () {
/******/ 							return waitForBlockingPromises(function () {
/******/ 								if (applyOnUpdate) {
/******/ 									return internalApply(applyOnUpdate);
/******/ 								} else {
/******/ 									return setStatus("ready").then(function () {
/******/ 										return updatedModules;
/******/ 									});
/******/ 								}
/******/ 							});
/******/ 						});
/******/ 					});
/******/ 				});
/******/ 		}
/******/ 		
/******/ 		function hotApply(options) {
/******/ 			if (currentStatus !== "ready") {
/******/ 				return Promise.resolve().then(function () {
/******/ 					throw new Error("apply() is only allowed in ready status");
/******/ 				});
/******/ 			}
/******/ 			return internalApply(options);
/******/ 		}
/******/ 		
/******/ 		function internalApply(options) {
/******/ 			options = options || {};
/******/ 		
/******/ 			applyInvalidatedModules();
/******/ 		
/******/ 			var results = currentUpdateApplyHandlers.map(function (handler) {
/******/ 				return handler(options);
/******/ 			});
/******/ 			currentUpdateApplyHandlers = undefined;
/******/ 		
/******/ 			var errors = results
/******/ 				.map(function (r) {
/******/ 					return r.error;
/******/ 				})
/******/ 				.filter(Boolean);
/******/ 		
/******/ 			if (errors.length > 0) {
/******/ 				return setStatus("abort").then(function () {
/******/ 					throw errors[0];
/******/ 				});
/******/ 			}
/******/ 		
/******/ 			// Now in "dispose" phase
/******/ 			var disposePromise = setStatus("dispose");
/******/ 		
/******/ 			results.forEach(function (result) {
/******/ 				if (result.dispose) result.dispose();
/******/ 			});
/******/ 		
/******/ 			// Now in "apply" phase
/******/ 			var applyPromise = setStatus("apply");
/******/ 		
/******/ 			var error;
/******/ 			var reportError = function (err) {
/******/ 				if (!error) error = err;
/******/ 			};
/******/ 		
/******/ 			var outdatedModules = [];
/******/ 			results.forEach(function (result) {
/******/ 				if (result.apply) {
/******/ 					var modules = result.apply(reportError);
/******/ 					if (modules) {
/******/ 						for (var i = 0; i < modules.length; i++) {
/******/ 							outdatedModules.push(modules[i]);
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 			});
/******/ 		
/******/ 			return Promise.all([disposePromise, applyPromise]).then(function () {
/******/ 				// handle errors in accept handlers and self accepted module load
/******/ 				if (error) {
/******/ 					return setStatus("fail").then(function () {
/******/ 						throw error;
/******/ 					});
/******/ 				}
/******/ 		
/******/ 				if (queuedInvalidatedModules) {
/******/ 					return internalApply(options).then(function (list) {
/******/ 						outdatedModules.forEach(function (moduleId) {
/******/ 							if (list.indexOf(moduleId) < 0) list.push(moduleId);
/******/ 						});
/******/ 						return list;
/******/ 					});
/******/ 				}
/******/ 		
/******/ 				return setStatus("idle").then(function () {
/******/ 					return outdatedModules;
/******/ 				});
/******/ 			});
/******/ 		}
/******/ 		
/******/ 		function applyInvalidatedModules() {
/******/ 			if (queuedInvalidatedModules) {
/******/ 				if (!currentUpdateApplyHandlers) currentUpdateApplyHandlers = [];
/******/ 				Object.keys(__webpack_require__.hmrI).forEach(function (key) {
/******/ 					queuedInvalidatedModules.forEach(function (moduleId) {
/******/ 						__webpack_require__.hmrI[key](
/******/ 							moduleId,
/******/ 							currentUpdateApplyHandlers
/******/ 						);
/******/ 					});
/******/ 				});
/******/ 				queuedInvalidatedModules = undefined;
/******/ 				return true;
/******/ 			}
/******/ 		}
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		__webpack_require__.p = "/";
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/react refresh */
/******/ 	(() => {
/******/ 		__webpack_require__.i.push((options) => {
/******/ 			const originalFactory = options.factory;
/******/ 			options.factory = function (moduleObject, moduleExports, webpackRequire) {
/******/ 				__webpack_require__.$Refresh$.setup(options.id);
/******/ 				try {
/******/ 					originalFactory.call(this, moduleObject, moduleExports, webpackRequire);
/******/ 				} finally {
/******/ 					if (typeof Promise !== 'undefined' && moduleObject.exports instanceof Promise) {
/******/ 						options.module.exports = options.module.exports.then(
/******/ 							(result) => {
/******/ 								__webpack_require__.$Refresh$.cleanup(options.id);
/******/ 								return result;
/******/ 							},
/******/ 							(reason) => {
/******/ 								__webpack_require__.$Refresh$.cleanup(options.id);
/******/ 								return Promise.reject(reason);
/******/ 							}
/******/ 						);
/******/ 					} else {
/******/ 						__webpack_require__.$Refresh$.cleanup(options.id)
/******/ 					}
/******/ 				}
/******/ 			};
/******/ 		})
/******/ 		
/******/ 		__webpack_require__.$Refresh$ = {
/******/ 			register: () => (undefined),
/******/ 			signature: () => ((type) => (type)),
/******/ 			runtime: {
/******/ 				createSignatureFunctionForTransform: () => ((type) => (type)),
/******/ 				register: () => (undefined)
/******/ 			},
/******/ 			setup: (currentModuleId) => {
/******/ 				const prevModuleId = __webpack_require__.$Refresh$.moduleId;
/******/ 				const prevRegister = __webpack_require__.$Refresh$.register;
/******/ 				const prevSignature = __webpack_require__.$Refresh$.signature;
/******/ 				const prevCleanup = __webpack_require__.$Refresh$.cleanup;
/******/ 		
/******/ 				__webpack_require__.$Refresh$.moduleId = currentModuleId;
/******/ 		
/******/ 				__webpack_require__.$Refresh$.register = (type, id) => {
/******/ 					const typeId = currentModuleId + " " + id;
/******/ 					__webpack_require__.$Refresh$.runtime.register(type, typeId);
/******/ 				}
/******/ 		
/******/ 				__webpack_require__.$Refresh$.signature = () => (__webpack_require__.$Refresh$.runtime.createSignatureFunctionForTransform());
/******/ 		
/******/ 				__webpack_require__.$Refresh$.cleanup = (cleanupModuleId) => {
/******/ 					if (currentModuleId === cleanupModuleId) {
/******/ 						__webpack_require__.$Refresh$.moduleId = prevModuleId;
/******/ 						__webpack_require__.$Refresh$.register = prevRegister;
/******/ 						__webpack_require__.$Refresh$.signature = prevSignature;
/******/ 						__webpack_require__.$Refresh$.cleanup = prevCleanup;
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		__webpack_require__.b = document.baseURI || self.location.href;
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = __webpack_require__.hmrS_jsonp = __webpack_require__.hmrS_jsonp || {
/******/ 			"main": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		var currentUpdatedModulesList;
/******/ 		var waitingUpdateResolves = {};
/******/ 		function loadUpdateChunk(chunkId) {
/******/ 			return new Promise((resolve, reject) => {
/******/ 				waitingUpdateResolves[chunkId] = resolve;
/******/ 				// start update chunk loading
/******/ 				var url = __webpack_require__.p + __webpack_require__.hu(chunkId);
/******/ 				// create error before stack unwound to get useful stacktrace later
/******/ 				var error = new Error();
/******/ 				var loadingEnded = (event) => {
/******/ 					if(waitingUpdateResolves[chunkId]) {
/******/ 						waitingUpdateResolves[chunkId] = undefined
/******/ 						var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 						var realSrc = event && event.target && event.target.src;
/******/ 						error.message = 'Loading hot update chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 						error.name = 'ChunkLoadError';
/******/ 						error.type = errorType;
/******/ 						error.request = realSrc;
/******/ 						reject(error);
/******/ 					}
/******/ 				};
/******/ 				__webpack_require__.l(url, loadingEnded);
/******/ 			});
/******/ 		}
/******/ 		
/******/ 		globalThis["webpackHotUpdatenew_portfolio"] = (chunkId, moreModules, runtime) => {
/******/ 			for(var moduleId in moreModules) {
/******/ 				if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 					currentUpdate[moduleId] = moreModules[moduleId];
/******/ 					if(currentUpdatedModulesList) currentUpdatedModulesList.push(moduleId);
/******/ 				}
/******/ 			}
/******/ 			if(runtime) currentUpdateRuntime.push(runtime);
/******/ 			if(waitingUpdateResolves[chunkId]) {
/******/ 				waitingUpdateResolves[chunkId]();
/******/ 				waitingUpdateResolves[chunkId] = undefined;
/******/ 			}
/******/ 		};
/******/ 		
/******/ 		var currentUpdateChunks;
/******/ 		var currentUpdate;
/******/ 		var currentUpdateRemovedChunks;
/******/ 		var currentUpdateRuntime;
/******/ 		function applyHandler(options) {
/******/ 			if (__webpack_require__.f) delete __webpack_require__.f.jsonpHmr;
/******/ 			currentUpdateChunks = undefined;
/******/ 			function getAffectedModuleEffects(updateModuleId) {
/******/ 				var outdatedModules = [updateModuleId];
/******/ 				var outdatedDependencies = {};
/******/ 		
/******/ 				var queue = outdatedModules.map(function (id) {
/******/ 					return {
/******/ 						chain: [id],
/******/ 						id: id
/******/ 					};
/******/ 				});
/******/ 				while (queue.length > 0) {
/******/ 					var queueItem = queue.pop();
/******/ 					var moduleId = queueItem.id;
/******/ 					var chain = queueItem.chain;
/******/ 					var module = __webpack_require__.c[moduleId];
/******/ 					if (
/******/ 						!module ||
/******/ 						(module.hot._selfAccepted && !module.hot._selfInvalidated)
/******/ 					)
/******/ 						continue;
/******/ 					if (module.hot._selfDeclined) {
/******/ 						return {
/******/ 							type: "self-declined",
/******/ 							chain: chain,
/******/ 							moduleId: moduleId
/******/ 						};
/******/ 					}
/******/ 					if (module.hot._main) {
/******/ 						return {
/******/ 							type: "unaccepted",
/******/ 							chain: chain,
/******/ 							moduleId: moduleId
/******/ 						};
/******/ 					}
/******/ 					for (var i = 0; i < module.parents.length; i++) {
/******/ 						var parentId = module.parents[i];
/******/ 						var parent = __webpack_require__.c[parentId];
/******/ 						if (!parent) continue;
/******/ 						if (parent.hot._declinedDependencies[moduleId]) {
/******/ 							return {
/******/ 								type: "declined",
/******/ 								chain: chain.concat([parentId]),
/******/ 								moduleId: moduleId,
/******/ 								parentId: parentId
/******/ 							};
/******/ 						}
/******/ 						if (outdatedModules.indexOf(parentId) !== -1) continue;
/******/ 						if (parent.hot._acceptedDependencies[moduleId]) {
/******/ 							if (!outdatedDependencies[parentId])
/******/ 								outdatedDependencies[parentId] = [];
/******/ 							addAllToSet(outdatedDependencies[parentId], [moduleId]);
/******/ 							continue;
/******/ 						}
/******/ 						delete outdatedDependencies[parentId];
/******/ 						outdatedModules.push(parentId);
/******/ 						queue.push({
/******/ 							chain: chain.concat([parentId]),
/******/ 							id: parentId
/******/ 						});
/******/ 					}
/******/ 				}
/******/ 		
/******/ 				return {
/******/ 					type: "accepted",
/******/ 					moduleId: updateModuleId,
/******/ 					outdatedModules: outdatedModules,
/******/ 					outdatedDependencies: outdatedDependencies
/******/ 				};
/******/ 			}
/******/ 		
/******/ 			function addAllToSet(a, b) {
/******/ 				for (var i = 0; i < b.length; i++) {
/******/ 					var item = b[i];
/******/ 					if (a.indexOf(item) === -1) a.push(item);
/******/ 				}
/******/ 			}
/******/ 		
/******/ 			// at begin all updates modules are outdated
/******/ 			// the "outdated" status can propagate to parents if they don't accept the children
/******/ 			var outdatedDependencies = {};
/******/ 			var outdatedModules = [];
/******/ 			var appliedUpdate = {};
/******/ 		
/******/ 			var warnUnexpectedRequire = function warnUnexpectedRequire(module) {
/******/ 				console.warn(
/******/ 					"[HMR] unexpected require(" + module.id + ") to disposed module"
/******/ 				);
/******/ 			};
/******/ 		
/******/ 			for (var moduleId in currentUpdate) {
/******/ 				if (__webpack_require__.o(currentUpdate, moduleId)) {
/******/ 					var newModuleFactory = currentUpdate[moduleId];
/******/ 					/** @type {TODO} */
/******/ 					var result;
/******/ 					if (newModuleFactory) {
/******/ 						result = getAffectedModuleEffects(moduleId);
/******/ 					} else {
/******/ 						result = {
/******/ 							type: "disposed",
/******/ 							moduleId: moduleId
/******/ 						};
/******/ 					}
/******/ 					/** @type {Error|false} */
/******/ 					var abortError = false;
/******/ 					var doApply = false;
/******/ 					var doDispose = false;
/******/ 					var chainInfo = "";
/******/ 					if (result.chain) {
/******/ 						chainInfo = "\nUpdate propagation: " + result.chain.join(" -> ");
/******/ 					}
/******/ 					switch (result.type) {
/******/ 						case "self-declined":
/******/ 							if (options.onDeclined) options.onDeclined(result);
/******/ 							if (!options.ignoreDeclined)
/******/ 								abortError = new Error(
/******/ 									"Aborted because of self decline: " +
/******/ 										result.moduleId +
/******/ 										chainInfo
/******/ 								);
/******/ 							break;
/******/ 						case "declined":
/******/ 							if (options.onDeclined) options.onDeclined(result);
/******/ 							if (!options.ignoreDeclined)
/******/ 								abortError = new Error(
/******/ 									"Aborted because of declined dependency: " +
/******/ 										result.moduleId +
/******/ 										" in " +
/******/ 										result.parentId +
/******/ 										chainInfo
/******/ 								);
/******/ 							break;
/******/ 						case "unaccepted":
/******/ 							if (options.onUnaccepted) options.onUnaccepted(result);
/******/ 							if (!options.ignoreUnaccepted)
/******/ 								abortError = new Error(
/******/ 									"Aborted because " + moduleId + " is not accepted" + chainInfo
/******/ 								);
/******/ 							break;
/******/ 						case "accepted":
/******/ 							if (options.onAccepted) options.onAccepted(result);
/******/ 							doApply = true;
/******/ 							break;
/******/ 						case "disposed":
/******/ 							if (options.onDisposed) options.onDisposed(result);
/******/ 							doDispose = true;
/******/ 							break;
/******/ 						default:
/******/ 							throw new Error("Unexception type " + result.type);
/******/ 					}
/******/ 					if (abortError) {
/******/ 						return {
/******/ 							error: abortError
/******/ 						};
/******/ 					}
/******/ 					if (doApply) {
/******/ 						appliedUpdate[moduleId] = newModuleFactory;
/******/ 						addAllToSet(outdatedModules, result.outdatedModules);
/******/ 						for (moduleId in result.outdatedDependencies) {
/******/ 							if (__webpack_require__.o(result.outdatedDependencies, moduleId)) {
/******/ 								if (!outdatedDependencies[moduleId])
/******/ 									outdatedDependencies[moduleId] = [];
/******/ 								addAllToSet(
/******/ 									outdatedDependencies[moduleId],
/******/ 									result.outdatedDependencies[moduleId]
/******/ 								);
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 					if (doDispose) {
/******/ 						addAllToSet(outdatedModules, [result.moduleId]);
/******/ 						appliedUpdate[moduleId] = warnUnexpectedRequire;
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 			currentUpdate = undefined;
/******/ 		
/******/ 			// Store self accepted outdated modules to require them later by the module system
/******/ 			var outdatedSelfAcceptedModules = [];
/******/ 			for (var j = 0; j < outdatedModules.length; j++) {
/******/ 				var outdatedModuleId = outdatedModules[j];
/******/ 				var module = __webpack_require__.c[outdatedModuleId];
/******/ 				if (
/******/ 					module &&
/******/ 					(module.hot._selfAccepted || module.hot._main) &&
/******/ 					// removed self-accepted modules should not be required
/******/ 					appliedUpdate[outdatedModuleId] !== warnUnexpectedRequire &&
/******/ 					// when called invalidate self-accepting is not possible
/******/ 					!module.hot._selfInvalidated
/******/ 				) {
/******/ 					outdatedSelfAcceptedModules.push({
/******/ 						module: outdatedModuleId,
/******/ 						require: module.hot._requireSelf,
/******/ 						errorHandler: module.hot._selfAccepted
/******/ 					});
/******/ 				}
/******/ 			}
/******/ 		
/******/ 			var moduleOutdatedDependencies;
/******/ 		
/******/ 			return {
/******/ 				dispose: function () {
/******/ 					currentUpdateRemovedChunks.forEach(function (chunkId) {
/******/ 						delete installedChunks[chunkId];
/******/ 					});
/******/ 					currentUpdateRemovedChunks = undefined;
/******/ 		
/******/ 					var idx;
/******/ 					var queue = outdatedModules.slice();
/******/ 					while (queue.length > 0) {
/******/ 						var moduleId = queue.pop();
/******/ 						var module = __webpack_require__.c[moduleId];
/******/ 						if (!module) continue;
/******/ 		
/******/ 						var data = {};
/******/ 		
/******/ 						// Call dispose handlers
/******/ 						var disposeHandlers = module.hot._disposeHandlers;
/******/ 						for (j = 0; j < disposeHandlers.length; j++) {
/******/ 							disposeHandlers[j].call(null, data);
/******/ 						}
/******/ 						__webpack_require__.hmrD[moduleId] = data;
/******/ 		
/******/ 						// disable module (this disables requires from this module)
/******/ 						module.hot.active = false;
/******/ 		
/******/ 						// remove module from cache
/******/ 						delete __webpack_require__.c[moduleId];
/******/ 		
/******/ 						// when disposing there is no need to call dispose handler
/******/ 						delete outdatedDependencies[moduleId];
/******/ 		
/******/ 						// remove "parents" references from all children
/******/ 						for (j = 0; j < module.children.length; j++) {
/******/ 							var child = __webpack_require__.c[module.children[j]];
/******/ 							if (!child) continue;
/******/ 							idx = child.parents.indexOf(moduleId);
/******/ 							if (idx >= 0) {
/******/ 								child.parents.splice(idx, 1);
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					// remove outdated dependency from module children
/******/ 					var dependency;
/******/ 					for (var outdatedModuleId in outdatedDependencies) {
/******/ 						if (__webpack_require__.o(outdatedDependencies, outdatedModuleId)) {
/******/ 							module = __webpack_require__.c[outdatedModuleId];
/******/ 							if (module) {
/******/ 								moduleOutdatedDependencies =
/******/ 									outdatedDependencies[outdatedModuleId];
/******/ 								for (j = 0; j < moduleOutdatedDependencies.length; j++) {
/******/ 									dependency = moduleOutdatedDependencies[j];
/******/ 									idx = module.children.indexOf(dependency);
/******/ 									if (idx >= 0) module.children.splice(idx, 1);
/******/ 								}
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 				},
/******/ 				apply: function (reportError) {
/******/ 					// insert new code
/******/ 					for (var updateModuleId in appliedUpdate) {
/******/ 						if (__webpack_require__.o(appliedUpdate, updateModuleId)) {
/******/ 							__webpack_require__.m[updateModuleId] = appliedUpdate[updateModuleId];
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					// run new runtime modules
/******/ 					for (var i = 0; i < currentUpdateRuntime.length; i++) {
/******/ 						currentUpdateRuntime[i](__webpack_require__);
/******/ 					}
/******/ 		
/******/ 					// call accept handlers
/******/ 					for (var outdatedModuleId in outdatedDependencies) {
/******/ 						if (__webpack_require__.o(outdatedDependencies, outdatedModuleId)) {
/******/ 							var module = __webpack_require__.c[outdatedModuleId];
/******/ 							if (module) {
/******/ 								moduleOutdatedDependencies =
/******/ 									outdatedDependencies[outdatedModuleId];
/******/ 								var callbacks = [];
/******/ 								var errorHandlers = [];
/******/ 								var dependenciesForCallbacks = [];
/******/ 								for (var j = 0; j < moduleOutdatedDependencies.length; j++) {
/******/ 									var dependency = moduleOutdatedDependencies[j];
/******/ 									var acceptCallback =
/******/ 										module.hot._acceptedDependencies[dependency];
/******/ 									var errorHandler =
/******/ 										module.hot._acceptedErrorHandlers[dependency];
/******/ 									if (acceptCallback) {
/******/ 										if (callbacks.indexOf(acceptCallback) !== -1) continue;
/******/ 										callbacks.push(acceptCallback);
/******/ 										errorHandlers.push(errorHandler);
/******/ 										dependenciesForCallbacks.push(dependency);
/******/ 									}
/******/ 								}
/******/ 								for (var k = 0; k < callbacks.length; k++) {
/******/ 									try {
/******/ 										callbacks[k].call(null, moduleOutdatedDependencies);
/******/ 									} catch (err) {
/******/ 										if (typeof errorHandlers[k] === "function") {
/******/ 											try {
/******/ 												errorHandlers[k](err, {
/******/ 													moduleId: outdatedModuleId,
/******/ 													dependencyId: dependenciesForCallbacks[k]
/******/ 												});
/******/ 											} catch (err2) {
/******/ 												if (options.onErrored) {
/******/ 													options.onErrored({
/******/ 														type: "accept-error-handler-errored",
/******/ 														moduleId: outdatedModuleId,
/******/ 														dependencyId: dependenciesForCallbacks[k],
/******/ 														error: err2,
/******/ 														originalError: err
/******/ 													});
/******/ 												}
/******/ 												if (!options.ignoreErrored) {
/******/ 													reportError(err2);
/******/ 													reportError(err);
/******/ 												}
/******/ 											}
/******/ 										} else {
/******/ 											if (options.onErrored) {
/******/ 												options.onErrored({
/******/ 													type: "accept-errored",
/******/ 													moduleId: outdatedModuleId,
/******/ 													dependencyId: dependenciesForCallbacks[k],
/******/ 													error: err
/******/ 												});
/******/ 											}
/******/ 											if (!options.ignoreErrored) {
/******/ 												reportError(err);
/******/ 											}
/******/ 										}
/******/ 									}
/******/ 								}
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					// Load self accepted modules
/******/ 					for (var o = 0; o < outdatedSelfAcceptedModules.length; o++) {
/******/ 						var item = outdatedSelfAcceptedModules[o];
/******/ 						var moduleId = item.module;
/******/ 						try {
/******/ 							item.require(moduleId);
/******/ 						} catch (err) {
/******/ 							if (typeof item.errorHandler === "function") {
/******/ 								try {
/******/ 									item.errorHandler(err, {
/******/ 										moduleId: moduleId,
/******/ 										module: __webpack_require__.c[moduleId]
/******/ 									});
/******/ 								} catch (err2) {
/******/ 									if (options.onErrored) {
/******/ 										options.onErrored({
/******/ 											type: "self-accept-error-handler-errored",
/******/ 											moduleId: moduleId,
/******/ 											error: err2,
/******/ 											originalError: err
/******/ 										});
/******/ 									}
/******/ 									if (!options.ignoreErrored) {
/******/ 										reportError(err2);
/******/ 										reportError(err);
/******/ 									}
/******/ 								}
/******/ 							} else {
/******/ 								if (options.onErrored) {
/******/ 									options.onErrored({
/******/ 										type: "self-accept-errored",
/******/ 										moduleId: moduleId,
/******/ 										error: err
/******/ 									});
/******/ 								}
/******/ 								if (!options.ignoreErrored) {
/******/ 									reportError(err);
/******/ 								}
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					return outdatedModules;
/******/ 				}
/******/ 			};
/******/ 		}
/******/ 		__webpack_require__.hmrI.jsonp = function (moduleId, applyHandlers) {
/******/ 			if (!currentUpdate) {
/******/ 				currentUpdate = {};
/******/ 				currentUpdateRuntime = [];
/******/ 				currentUpdateRemovedChunks = [];
/******/ 				applyHandlers.push(applyHandler);
/******/ 			}
/******/ 			if (!__webpack_require__.o(currentUpdate, moduleId)) {
/******/ 				currentUpdate[moduleId] = __webpack_require__.m[moduleId];
/******/ 			}
/******/ 		};
/******/ 		__webpack_require__.hmrC.jsonp = function (
/******/ 			chunkIds,
/******/ 			removedChunks,
/******/ 			removedModules,
/******/ 			promises,
/******/ 			applyHandlers,
/******/ 			updatedModulesList
/******/ 		) {
/******/ 			applyHandlers.push(applyHandler);
/******/ 			currentUpdateChunks = {};
/******/ 			currentUpdateRemovedChunks = removedChunks;
/******/ 			currentUpdate = removedModules.reduce(function (obj, key) {
/******/ 				obj[key] = false;
/******/ 				return obj;
/******/ 			}, {});
/******/ 			currentUpdateRuntime = [];
/******/ 			chunkIds.forEach(function (chunkId) {
/******/ 				if (
/******/ 					__webpack_require__.o(installedChunks, chunkId) &&
/******/ 					installedChunks[chunkId] !== undefined
/******/ 				) {
/******/ 					promises.push(loadUpdateChunk(chunkId, updatedModulesList));
/******/ 					currentUpdateChunks[chunkId] = true;
/******/ 				}
/******/ 			});
/******/ 			if (__webpack_require__.f) {
/******/ 				__webpack_require__.f.jsonpHmr = function (chunkId, promises) {
/******/ 					if (
/******/ 						currentUpdateChunks &&
/******/ 						!__webpack_require__.o(currentUpdateChunks, chunkId) &&
/******/ 						__webpack_require__.o(installedChunks, chunkId) &&
/******/ 						installedChunks[chunkId] !== undefined
/******/ 					) {
/******/ 						promises.push(loadUpdateChunk(chunkId));
/******/ 						currentUpdateChunks[chunkId] = true;
/******/ 					}
/******/ 				};
/******/ 			}
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.hmrM = () => {
/******/ 			if (typeof fetch === "undefined") throw new Error("No browser support: need fetch API");
/******/ 			return fetch(__webpack_require__.p + __webpack_require__.hmrF()).then((response) => {
/******/ 				if(response.status === 404) return; // no update available
/******/ 				if(!response.ok) throw new Error("Failed to fetch update manifest " + response.statusText);
/******/ 				return response.json();
/******/ 			});
/******/ 		};
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// no jsonp function
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// module cache are used so entry inlining is disabled
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	__webpack_require__("./node_modules/@pmmmwh/react-refresh-webpack-plugin/client/ReactRefreshEntry.js");
/******/ 	__webpack_require__("./node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=3000&pathname=%2Fws&logging=none&reconnect=10");
/******/ 	__webpack_require__("./node_modules/webpack/hot/dev-server.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;
//# sourceMappingURL=bundle.js.map